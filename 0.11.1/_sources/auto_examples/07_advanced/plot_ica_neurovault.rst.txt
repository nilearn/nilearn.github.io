
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/07_advanced/plot_ica_neurovault.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_07_advanced_plot_ica_neurovault.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_07_advanced_plot_ica_neurovault.py:


NeuroVault cross-study ICA maps
===============================

This example shows how to download statistical maps from
NeuroVault, label them with NeuroSynth terms,
and compute :term:`ICA` components across all the maps.

See :func:`~nilearn.datasets.fetch_neurovault`
documentation for more details.

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Ben Cipollini

    Ported from code authored by Chris Filo Gorgolewski, Gael Varoquaux
    https://github.com/NeuroVault/neurovault_analysis

.. GENERATED FROM PYTHON SOURCE LINES 23-33

.. code-block:: Python


    import numpy as np
    from scipy import stats
    from sklearn.decomposition import FastICA

    from nilearn import plotting
    from nilearn.datasets import fetch_neurovault, load_mni152_brain_mask
    from nilearn.image import smooth_img
    from nilearn.maskers import NiftiMasker








.. GENERATED FROM PYTHON SOURCE LINES 34-36

Get image and term data
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 36-63

.. code-block:: Python


    # Download images
    # Here by default we only download 80 images to save time,
    # but for better results I recommend using at least 200.
    print(
        "Fetching Neurovault images; "
        "if you haven't downloaded any Neurovault data before "
        "this will take several minutes."
    )
    nv_data = fetch_neurovault(max_images=30, fetch_neurosynth_words=True)

    images = nv_data["images"]
    term_weights = nv_data["word_frequencies"]
    vocabulary = nv_data["vocabulary"]
    if term_weights is None:
        term_weights = np.ones((len(images), 2))
        vocabulary = np.asarray(["Neurosynth is down", "Please try again later"])

    # Clean and report term scores
    term_weights[term_weights < 0] = 0
    total_scores = np.mean(term_weights, axis=0)

    print("\nTop 10 neurosynth terms from downloaded images:\n")

    for term_idx in np.argsort(total_scores)[-10:][::-1]:
        print(vocabulary[term_idx])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Fetching Neurovault images; if you haven't downloaded any Neurovault data before this will take several minutes.
    [get_dataset_dir] Dataset found in /home/remi/nilearn_data/neurovault
    [fetch_neurovault] Reading local neurovault data.
    [fetch_neurovault] Already fetched 1 image
    [fetch_neurovault] Already fetched 2 images
    [fetch_neurovault] Already fetched 3 images
    [fetch_neurovault] Already fetched 4 images
    [fetch_neurovault] Already fetched 5 images
    [fetch_neurovault] Already fetched 6 images
    [fetch_neurovault] Already fetched 7 images
    [fetch_neurovault] Already fetched 8 images
    [fetch_neurovault] Already fetched 9 images
    [fetch_neurovault] Already fetched 10 images
    [fetch_neurovault] Already fetched 11 images
    [fetch_neurovault] Already fetched 12 images
    [fetch_neurovault] Already fetched 13 images
    [fetch_neurovault] Already fetched 14 images
    [fetch_neurovault] Already fetched 15 images
    [fetch_neurovault] Already fetched 16 images
    [fetch_neurovault] Already fetched 17 images
    [fetch_neurovault] Already fetched 18 images
    [fetch_neurovault] Already fetched 19 images
    [fetch_neurovault] Already fetched 20 images
    [fetch_neurovault] Already fetched 21 images
    [fetch_neurovault] Already fetched 22 images
    [fetch_neurovault] Already fetched 23 images
    [fetch_neurovault] Already fetched 24 images
    [fetch_neurovault] Already fetched 25 images
    [fetch_neurovault] Already fetched 26 images
    [fetch_neurovault] Already fetched 27 images
    [fetch_neurovault] Already fetched 28 images
    [fetch_neurovault] Already fetched 29 images
    [fetch_neurovault] Already fetched 30 images
    [fetch_neurovault] 30 images found on local disk.
    [neurosynth_words_vectorized] Computing word features.
    [neurosynth_words_vectorized] Computing word features done; vocabulary size: 1307

    Top 10 neurosynth terms from downloaded images:

    superior temporal
    auditory
    task
    planum temporale
    temporale
    planum
    superior
    anterior insula
    parietal
    posterior superior




.. GENERATED FROM PYTHON SOURCE LINES 64-66

Reshape and mask images
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 66-98

.. code-block:: Python


    print("\nReshaping and masking images.\n")

    mask_img = load_mni152_brain_mask(resolution=2)
    masker = NiftiMasker(mask_img=mask_img, memory="nilearn_cache", memory_level=1)
    masker = masker.fit()

    # Images may fail to be transformed, and are of different shapes,
    # so we need to transform one-by-one and keep track of failures.
    X = []
    is_usable = np.ones((len(images),), dtype=bool)

    for index, image_path in enumerate(images):
        # load image and remove nan and inf values.
        # applying smooth_img to an image with fwhm=None simply cleans up
        # non-finite values but otherwise doesn't modify the image.
        image = smooth_img(image_path, fwhm=None)
        try:
            X.append(masker.transform(image))
        except Exception as e:
            meta = nv_data["images_meta"][index]
            print(
                f"Failed to mask/reshape image: id: {meta.get('id')}; "
                f"name: '{meta.get('name')}'; "
                f"collection: {meta.get('collection_id')}; error: {e}"
            )
            is_usable[index] = False

    # Now reshape list into 2D matrix, and remove failed images from terms
    X = np.vstack(X)
    term_weights = term_weights[is_usable, :]





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Reshaping and masking images.

    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images
    /home/remi/github/nilearn/nilearn_doc_build/.tox/doc/lib/python3.9/site-packages/nilearn/maskers/nifti_masker.py:114: UserWarning:

    imgs are being resampled to the mask_img resolution. This process is memory intensive. You might want to provide a target_affine that is equal to the affine of the imgs or resample the mask beforehand to save memory and computation time.

    [NiftiMasker.wrapped] Resampling images




.. GENERATED FROM PYTHON SOURCE LINES 99-101

Run :term:`ICA` and map components to terms
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 101-113

.. code-block:: Python


    print("Running ICA; may take time...")
    # We use a very small number of components as we have downloaded only 80
    # images. For better results, increase the number of images downloaded
    # and the number of components
    n_components = 8
    fast_ica = FastICA(n_components=n_components, random_state=0)
    ica_maps = fast_ica.fit_transform(X.T).T

    term_weights_for_components = np.dot(fast_ica.components_, term_weights)
    print("Done, plotting results.")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Running ICA; may take time...
    Done, plotting results.




.. GENERATED FROM PYTHON SOURCE LINES 114-116

Generate figures
----------------

.. GENERATED FROM PYTHON SOURCE LINES 116-134

.. code-block:: Python


    for index, (ic_map, ic_terms) in enumerate(
        zip(ica_maps, term_weights_for_components)
    ):
        if -ic_map.min() > ic_map.max():
            # Flip the map's sign for prettiness
            ic_map = -ic_map
            ic_terms = -ic_terms

        ic_threshold = stats.scoreatpercentile(np.abs(ic_map), 90)
        ic_img = masker.inverse_transform(ic_map)
        important_terms = vocabulary[np.argsort(ic_terms)[-3:]]
        title = f"IC{int(index)}  {', '.join(important_terms[::-1])}"

        plotting.plot_stat_map(
            ic_img, threshold=ic_threshold, colorbar=False, title=title
        )




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_001.png
         :alt: plot ica neurovault
         :srcset: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_002.png
         :alt: plot ica neurovault
         :srcset: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_003.png
         :alt: plot ica neurovault
         :srcset: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_004.png
         :alt: plot ica neurovault
         :srcset: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_005.png
         :alt: plot ica neurovault
         :srcset: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_006.png
         :alt: plot ica neurovault
         :srcset: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_006.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_007.png
         :alt: plot ica neurovault
         :srcset: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_007.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_008.png
         :alt: plot ica neurovault
         :srcset: /auto_examples/07_advanced/images/sphx_glr_plot_ica_neurovault_008.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 135-138

As we can see, some of the components capture cognitive or neurological
maps, while other capture noise in the database. More data, better
filtering, and better cognitive labels would give better maps

.. GENERATED FROM PYTHON SOURCE LINES 138-141

.. code-block:: Python


    # Done.
    plotting.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 31.437 seconds)

**Estimated memory usage:**  299 MB


.. _sphx_glr_download_auto_examples_07_advanced_plot_ica_neurovault.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/0.11.1?urlpath=lab/tree/notebooks/auto_examples/07_advanced/plot_ica_neurovault.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_ica_neurovault.ipynb <plot_ica_neurovault.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_ica_neurovault.py <plot_ica_neurovault.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_ica_neurovault.zip <plot_ica_neurovault.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
