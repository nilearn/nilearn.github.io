
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/04_glm_first_level/plot_bids_features.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_04_glm_first_level_plot_bids_features.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_04_glm_first_level_plot_bids_features.py:


First level analysis of a complete BIDS dataset from openneuro
==============================================================


Full step-by-step example of fitting a :term:`GLM`
to perform a first level analysis in an openneuro :term:`BIDS` dataset.
We demonstrate how :term:`BIDS`
derivatives can be exploited to perform a simple one subject analysis with
minimal code. Details about the :term:`BIDS` standard are available at
`https://bids.neuroimaging.io/ <https://bids.neuroimaging.io/>`_.
We also demonstrate how to download individual groups of files from the
Openneuro s3 bucket.

More specifically:

1. Download an :term:`fMRI` :term:`BIDS` dataset
   with derivatives from openneuro.
2. Extract first level model objects automatically
   from the :term:`BIDS` dataset.
3. Demonstrate Quality assurance of Nilearn estimation against available FSL.
   estimation in the openneuro dataset.
4. Display contrast plot and uncorrected first level statistics table report.

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: Python


    from nilearn import plotting








.. GENERATED FROM PYTHON SOURCE LINES 29-36

Fetch openneuro :term:`BIDS` dataset
------------------------------------
We download one subject from the stopsignal task
in the ds000030 V4 :term:`BIDS` dataset available in openneuro.
This dataset contains the necessary information to run a statistical analysis
using Nilearn. The dataset also contains statistical results from a previous
FSL analysis that we can employ for comparison with the Nilearn estimation.

.. GENERATED FROM PYTHON SOURCE LINES 36-65

.. code-block:: Python

    from nilearn.datasets import (
        fetch_ds000030_urls,
        fetch_openneuro_dataset,
        select_from_index,
    )

    _, urls = fetch_ds000030_urls()

    exclusion_patterns = [
        "*group*",
        "*phenotype*",
        "*mriqc*",
        "*parameter_plots*",
        "*physio_plots*",
        "*space-fsaverage*",
        "*space-T1w*",
        "*dwi*",
        "*beh*",
        "*task-bart*",
        "*task-rest*",
        "*task-scap*",
        "*task-task*",
    ]
    urls = select_from_index(
        urls, exclusion_filters=exclusion_patterns, n_subjects=1
    )

    data_dir, _ = fetch_openneuro_dataset(urls=urls)








.. GENERATED FROM PYTHON SOURCE LINES 66-78

Obtain FirstLevelModel objects automatically and fit arguments
--------------------------------------------------------------
From the dataset directory we automatically obtain FirstLevelModel objects
with their subject_id filled from the :term:`BIDS` dataset.
Moreover we obtain,
for each model, the list of run images and their respective events and
confound regressors. Those are inferred from the confounds.tsv files
available in the :term:`BIDS` dataset.
To get the first level models we have to specify the dataset directory,
the task_label and the space_label as specified in the file names.
We also have to provide the folder with the desired derivatives, that in this
case were produced by the :term:`fMRIPrep` :term:`BIDS` app.

.. GENERATED FROM PYTHON SOURCE LINES 78-97

.. code-block:: Python

    from nilearn.glm.first_level import first_level_from_bids

    task_label = "stopsignal"
    space_label = "MNI152NLin2009cAsym"
    derivatives_folder = "derivatives/fmriprep"
    (
        models,
        models_run_imgs,
        models_events,
        models_confounds,
    ) = first_level_from_bids(
        data_dir,
        task_label,
        space_label,
        smoothing_fwhm=5.0,
        derivatives_folder=derivatives_folder,
        n_jobs=2,
    )








.. GENERATED FROM PYTHON SOURCE LINES 98-99

Access the model and model arguments of the subject and process events.

.. GENERATED FROM PYTHON SOURCE LINES 99-125

.. code-block:: Python


    model, imgs, events, confounds = (
        models[0],
        models_run_imgs[0],
        models_events[0],
        models_confounds[0],
    )
    subject = f"sub-{model.subject_label}"
    model.minimize_memory = False  # override default

    from pathlib import Path

    from nilearn.interfaces.fsl import get_design_from_fslmat

    fsl_design_matrix_path = (
        Path(data_dir)
        / "derivatives"
        / "task"
        / subject
        / "stopsignal.feat"
        / "design.mat"
    )
    design_matrix = get_design_from_fslmat(
        fsl_design_matrix_path, column_names=None
    )








.. GENERATED FROM PYTHON SOURCE LINES 126-129

We identify the columns of the Go and StopSuccess conditions of the
design matrix inferred from the FSL file, to use them later for contrast
definition.

.. GENERATED FROM PYTHON SOURCE LINES 129-136

.. code-block:: Python

    design_columns = [
        f"cond_{int(i):02}" for i in range(len(design_matrix.columns))
    ]
    design_columns[0] = "Go"
    design_columns[4] = "StopSuccess"
    design_matrix.columns = design_columns








.. GENERATED FROM PYTHON SOURCE LINES 137-140

First level model estimation (one subject)
------------------------------------------
We fit the first level model for one subject.

.. GENERATED FROM PYTHON SOURCE LINES 140-142

.. code-block:: Python

    model.fit(imgs, design_matrices=[design_matrix])






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-container-id-6 {
      /* Definition of color scheme common for light and dark mode */
      --sklearn-color-text: black;
      --sklearn-color-line: gray;
      /* Definition of color scheme for unfitted estimators */
      --sklearn-color-unfitted-level-0: #fff5e6;
      --sklearn-color-unfitted-level-1: #f6e4d2;
      --sklearn-color-unfitted-level-2: #ffe0b3;
      --sklearn-color-unfitted-level-3: chocolate;
      /* Definition of color scheme for fitted estimators */
      --sklearn-color-fitted-level-0: #f0f8ff;
      --sklearn-color-fitted-level-1: #d4ebff;
      --sklearn-color-fitted-level-2: #b3dbfd;
      --sklearn-color-fitted-level-3: cornflowerblue;

      /* Specific color for light theme */
      --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
      --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));
      --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
      --sklearn-color-icon: #696969;

      @media (prefers-color-scheme: dark) {
        /* Redefinition of color scheme for dark theme */
        --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
        --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));
        --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
        --sklearn-color-icon: #878787;
      }
    }

    #sk-container-id-6 {
      color: var(--sklearn-color-text);
    }

    #sk-container-id-6 pre {
      padding: 0;
    }

    #sk-container-id-6 input.sk-hidden--visually {
      border: 0;
      clip: rect(1px 1px 1px 1px);
      clip: rect(1px, 1px, 1px, 1px);
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px;
    }

    #sk-container-id-6 div.sk-dashed-wrapped {
      border: 1px dashed var(--sklearn-color-line);
      margin: 0 0.4em 0.5em 0.4em;
      box-sizing: border-box;
      padding-bottom: 0.4em;
      background-color: var(--sklearn-color-background);
    }

    #sk-container-id-6 div.sk-container {
      /* jupyter's `normalize.less` sets `[hidden] { display: none; }`
         but bootstrap.min.css set `[hidden] { display: none !important; }`
         so we also need the `!important` here to be able to override the
         default hidden behavior on the sphinx rendered scikit-learn.org.
         See: https://github.com/scikit-learn/scikit-learn/issues/21755 */
      display: inline-block !important;
      position: relative;
    }

    #sk-container-id-6 div.sk-text-repr-fallback {
      display: none;
    }

    div.sk-parallel-item,
    div.sk-serial,
    div.sk-item {
      /* draw centered vertical line to link estimators */
      background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));
      background-size: 2px 100%;
      background-repeat: no-repeat;
      background-position: center center;
    }

    /* Parallel-specific style estimator block */

    #sk-container-id-6 div.sk-parallel-item::after {
      content: "";
      width: 100%;
      border-bottom: 2px solid var(--sklearn-color-text-on-default-background);
      flex-grow: 1;
    }

    #sk-container-id-6 div.sk-parallel {
      display: flex;
      align-items: stretch;
      justify-content: center;
      background-color: var(--sklearn-color-background);
      position: relative;
    }

    #sk-container-id-6 div.sk-parallel-item {
      display: flex;
      flex-direction: column;
    }

    #sk-container-id-6 div.sk-parallel-item:first-child::after {
      align-self: flex-end;
      width: 50%;
    }

    #sk-container-id-6 div.sk-parallel-item:last-child::after {
      align-self: flex-start;
      width: 50%;
    }

    #sk-container-id-6 div.sk-parallel-item:only-child::after {
      width: 0;
    }

    /* Serial-specific style estimator block */

    #sk-container-id-6 div.sk-serial {
      display: flex;
      flex-direction: column;
      align-items: center;
      background-color: var(--sklearn-color-background);
      padding-right: 1em;
      padding-left: 1em;
    }


    /* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is
    clickable and can be expanded/collapsed.
    - Pipeline and ColumnTransformer use this feature and define the default style
    - Estimators will overwrite some part of the style using the `sk-estimator` class
    */

    /* Pipeline and ColumnTransformer style (default) */

    #sk-container-id-6 div.sk-toggleable {
      /* Default theme specific background. It is overwritten whether we have a
      specific estimator or a Pipeline/ColumnTransformer */
      background-color: var(--sklearn-color-background);
    }

    /* Toggleable label */
    #sk-container-id-6 label.sk-toggleable__label {
      cursor: pointer;
      display: block;
      width: 100%;
      margin-bottom: 0;
      padding: 0.5em;
      box-sizing: border-box;
      text-align: center;
    }

    #sk-container-id-6 label.sk-toggleable__label-arrow:before {
      /* Arrow on the left of the label */
      content: "▸";
      float: left;
      margin-right: 0.25em;
      color: var(--sklearn-color-icon);
    }

    #sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {
      color: var(--sklearn-color-text);
    }

    /* Toggleable content - dropdown */

    #sk-container-id-6 div.sk-toggleable__content {
      max-height: 0;
      max-width: 0;
      overflow: hidden;
      text-align: left;
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-0);
    }

    #sk-container-id-6 div.sk-toggleable__content.fitted {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-0);
    }

    #sk-container-id-6 div.sk-toggleable__content pre {
      margin: 0.2em;
      border-radius: 0.25em;
      color: var(--sklearn-color-text);
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-0);
    }

    #sk-container-id-6 div.sk-toggleable__content.fitted pre {
      /* unfitted */
      background-color: var(--sklearn-color-fitted-level-0);
    }

    #sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {
      /* Expand drop-down */
      max-height: 200px;
      max-width: 100%;
      overflow: auto;
    }

    #sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {
      content: "▾";
    }

    /* Pipeline/ColumnTransformer-specific style */

    #sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {
      color: var(--sklearn-color-text);
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    #sk-container-id-6 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
      background-color: var(--sklearn-color-fitted-level-2);
    }

    /* Estimator-specific style */

    /* Colorize estimator box */
    #sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    #sk-container-id-6 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-2);
    }

    #sk-container-id-6 div.sk-label label.sk-toggleable__label,
    #sk-container-id-6 div.sk-label label {
      /* The background is the default theme color */
      color: var(--sklearn-color-text-on-default-background);
    }

    /* On hover, darken the color of the background */
    #sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {
      color: var(--sklearn-color-text);
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    /* Label box, darken color on hover, fitted */
    #sk-container-id-6 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {
      color: var(--sklearn-color-text);
      background-color: var(--sklearn-color-fitted-level-2);
    }

    /* Estimator label */

    #sk-container-id-6 div.sk-label label {
      font-family: monospace;
      font-weight: bold;
      display: inline-block;
      line-height: 1.2em;
    }

    #sk-container-id-6 div.sk-label-container {
      text-align: center;
    }

    /* Estimator-specific */
    #sk-container-id-6 div.sk-estimator {
      font-family: monospace;
      border: 1px dotted var(--sklearn-color-border-box);
      border-radius: 0.25em;
      box-sizing: border-box;
      margin-bottom: 0.5em;
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-0);
    }

    #sk-container-id-6 div.sk-estimator.fitted {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-0);
    }

    /* on hover */
    #sk-container-id-6 div.sk-estimator:hover {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    #sk-container-id-6 div.sk-estimator.fitted:hover {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-2);
    }

    /* Specification for estimator info (e.g. "i" and "?") */

    /* Common style for "i" and "?" */

    .sk-estimator-doc-link,
    a:link.sk-estimator-doc-link,
    a:visited.sk-estimator-doc-link {
      float: right;
      font-size: smaller;
      line-height: 1em;
      font-family: monospace;
      background-color: var(--sklearn-color-background);
      border-radius: 1em;
      height: 1em;
      width: 1em;
      text-decoration: none !important;
      margin-left: 1ex;
      /* unfitted */
      border: var(--sklearn-color-unfitted-level-1) 1pt solid;
      color: var(--sklearn-color-unfitted-level-1);
    }

    .sk-estimator-doc-link.fitted,
    a:link.sk-estimator-doc-link.fitted,
    a:visited.sk-estimator-doc-link.fitted {
      /* fitted */
      border: var(--sklearn-color-fitted-level-1) 1pt solid;
      color: var(--sklearn-color-fitted-level-1);
    }

    /* On hover */
    div.sk-estimator:hover .sk-estimator-doc-link:hover,
    .sk-estimator-doc-link:hover,
    div.sk-label-container:hover .sk-estimator-doc-link:hover,
    .sk-estimator-doc-link:hover {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-3);
      color: var(--sklearn-color-background);
      text-decoration: none;
    }

    div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,
    .sk-estimator-doc-link.fitted:hover,
    div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,
    .sk-estimator-doc-link.fitted:hover {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-3);
      color: var(--sklearn-color-background);
      text-decoration: none;
    }

    /* Span, style for the box shown on hovering the info icon */
    .sk-estimator-doc-link span {
      display: none;
      z-index: 9999;
      position: relative;
      font-weight: normal;
      right: .2ex;
      padding: .5ex;
      margin: .5ex;
      width: min-content;
      min-width: 20ex;
      max-width: 50ex;
      color: var(--sklearn-color-text);
      box-shadow: 2pt 2pt 4pt #999;
      /* unfitted */
      background: var(--sklearn-color-unfitted-level-0);
      border: .5pt solid var(--sklearn-color-unfitted-level-3);
    }

    .sk-estimator-doc-link.fitted span {
      /* fitted */
      background: var(--sklearn-color-fitted-level-0);
      border: var(--sklearn-color-fitted-level-3);
    }

    .sk-estimator-doc-link:hover span {
      display: block;
    }

    /* "?"-specific style due to the `<a>` HTML tag */

    #sk-container-id-6 a.estimator_doc_link {
      float: right;
      font-size: 1rem;
      line-height: 1em;
      font-family: monospace;
      background-color: var(--sklearn-color-background);
      border-radius: 1rem;
      height: 1rem;
      width: 1rem;
      text-decoration: none;
      /* unfitted */
      color: var(--sklearn-color-unfitted-level-1);
      border: var(--sklearn-color-unfitted-level-1) 1pt solid;
    }

    #sk-container-id-6 a.estimator_doc_link.fitted {
      /* fitted */
      border: var(--sklearn-color-fitted-level-1) 1pt solid;
      color: var(--sklearn-color-fitted-level-1);
    }

    /* On hover */
    #sk-container-id-6 a.estimator_doc_link:hover {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-3);
      color: var(--sklearn-color-background);
      text-decoration: none;
    }

    #sk-container-id-6 a.estimator_doc_link.fitted:hover {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-3);
    }
    </style><div id="sk-container-id-6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>FirstLevelModel(minimize_memory=False, n_jobs=2, smoothing_fwhm=5.0,
                    subject_label=&#x27;10159&#x27;, t_r=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item"><div class="sk-estimator fitted sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-6" type="checkbox" checked><label for="sk-estimator-id-6" class="sk-toggleable__label fitted sk-toggleable__label-arrow fitted">&nbsp;FirstLevelModel<span class="sk-estimator-doc-link fitted">i<span>Fitted</span></span></label><div class="sk-toggleable__content fitted"><pre>FirstLevelModel(minimize_memory=False, n_jobs=2, smoothing_fwhm=5.0,
                    subject_label=&#x27;10159&#x27;, t_r=2)</pre></div> </div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 143-145

Then we compute the StopSuccess - Go contrast. We can use the column names
of the design matrix.

.. GENERATED FROM PYTHON SOURCE LINES 145-147

.. code-block:: Python

    z_map = model.compute_contrast("StopSuccess - Go")








.. GENERATED FROM PYTHON SOURCE LINES 148-150

We show the agreement between the Nilearn estimation and the FSL estimation
available in the dataset.

.. GENERATED FROM PYTHON SOURCE LINES 150-190

.. code-block:: Python

    import nibabel as nib

    fsl_z_map = nib.load(
        Path(data_dir)
        / "derivatives"
        / "task"
        / subject
        / "stopsignal.feat"
        / "stats"
        / "zstat12.nii.gz"
    )

    import matplotlib.pyplot as plt
    from scipy.stats import norm

    plotting.plot_glass_brain(
        z_map,
        colorbar=True,
        threshold=norm.isf(0.001),
        title='Nilearn Z map of "StopSuccess - Go" (unc p<0.001)',
        plot_abs=False,
        display_mode="ortho",
    )
    plotting.plot_glass_brain(
        fsl_z_map,
        colorbar=True,
        threshold=norm.isf(0.001),
        title='FSL Z map of "StopSuccess - Go" (unc p<0.001)',
        plot_abs=False,
        display_mode="ortho",
    )
    plt.show()

    from nilearn.plotting import plot_img_comparison

    plot_img_comparison(
        [z_map], [fsl_z_map], model.masker_, ref_label="Nilearn", src_label="FSL"
    )
    plt.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_001.png
         :alt: plot bids features
         :srcset: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_002.png
         :alt: plot bids features
         :srcset: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_003.png
         :alt: Histogram of imgs values
         :srcset: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_003.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 191-194

Simple statistical report of thresholded contrast
-------------------------------------------------
We display the :term:`contrast` plot and table with cluster information.

.. GENERATED FROM PYTHON SOURCE LINES 194-207

.. code-block:: Python

    from nilearn.plotting import plot_contrast_matrix

    plot_contrast_matrix("StopSuccess - Go", design_matrix)
    plotting.plot_glass_brain(
        z_map,
        colorbar=True,
        threshold=norm.isf(0.001),
        plot_abs=False,
        display_mode="z",
        figure=plt.figure(figsize=(4, 4)),
    )
    plt.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_004.png
         :alt: plot bids features
         :srcset: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_005.png
         :alt: plot bids features
         :srcset: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_005.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 208-210

We can get a latex table from a Pandas Dataframe for display and publication
purposes

.. GENERATED FROM PYTHON SOURCE LINES 210-215

.. code-block:: Python

    from nilearn.reporting import get_clusters_table

    table = get_clusters_table(z_map, norm.isf(0.001), 10)
    print(table.to_latex())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    \begin{tabular}{llrrrrl}
    \toprule
     & Cluster ID & X & Y & Z & Peak Stat & Cluster Size (mm3) \\
    \midrule
    0 & 1 & -66.000000 & -45.000000 & 22.000000 & 5.307532 & 6300 \\
    1 & 1a & -66.000000 & -33.000000 & 18.000000 & 4.668929 &  \\
    2 & 1b & -48.000000 & -36.000000 & 14.000000 & 4.534376 &  \\
    3 & 1c & -57.000000 & -48.000000 & 10.000000 & 4.254210 &  \\
    4 & 2 & -42.000000 & 15.000000 & 26.000000 & 4.918703 & 2520 \\
    5 & 2a & -51.000000 & 9.000000 & 34.000000 & 4.715845 &  \\
    6 & 2b & -42.000000 & 9.000000 & 30.000000 & 4.683343 &  \\
    7 & 2c & -57.000000 & 12.000000 & 38.000000 & 4.587956 &  \\
    8 & 3 & 57.000000 & -27.000000 & 2.000000 & 4.692869 & 504 \\
    9 & 3a & 66.000000 & -27.000000 & 2.000000 & 3.664250 &  \\
    10 & 4 & 42.000000 & 9.000000 & 34.000000 & 4.461193 & 540 \\
    11 & 5 & 6.000000 & 18.000000 & 34.000000 & 4.257986 & 2520 \\
    12 & 5a & -3.000000 & 15.000000 & 46.000000 & 4.078390 &  \\
    13 & 5b & 0.000000 & 0.000000 & 38.000000 & 3.815609 &  \\
    14 & 5c & 3.000000 & 9.000000 & 50.000000 & 3.798387 &  \\
    15 & 6 & 6.000000 & 6.000000 & 54.000000 & 4.208105 & 468 \\
    16 & 6a & 6.000000 & 3.000000 & 62.000000 & 3.348351 &  \\
    17 & 7 & -45.000000 & 21.000000 & 2.000000 & 4.190472 & 504 \\
    18 & 7a & -54.000000 & 21.000000 & 6.000000 & 3.385929 &  \\
    19 & 8 & 45.000000 & -21.000000 & 42.000000 & 4.163956 & 432 \\
    20 & 9 & 63.000000 & -24.000000 & 30.000000 & 4.079389 & 360 \\
    21 & 10 & -12.000000 & 6.000000 & 6.000000 & 4.056165 & 792 \\
    22 & 10a & -9.000000 & -3.000000 & 10.000000 & 3.726486 &  \\
    23 & 10b & -9.000000 & 6.000000 & 14.000000 & 3.710553 &  \\
    24 & 11 & -27.000000 & 45.000000 & 18.000000 & 4.043724 & 432 \\
    25 & 12 & 3.000000 & -24.000000 & 30.000000 & 3.950054 & 360 \\
    26 & 13 & 12.000000 & -72.000000 & 22.000000 & 3.937283 & 360 \\
    27 & 14 & 33.000000 & 42.000000 & 34.000000 & 3.906274 & 756 \\
    28 & 14a & 30.000000 & 45.000000 & 26.000000 & 3.882906 &  \\
    29 & 15 & 51.000000 & -30.000000 & 14.000000 & 3.776293 & 648 \\
    \bottomrule
    \end{tabular}





.. GENERATED FROM PYTHON SOURCE LINES 216-220

Generating a report
-------------------
Using the computed FirstLevelModel and :term:`contrast` information,
we can quickly create a summary report.

.. GENERATED FROM PYTHON SOURCE LINES 220-227

.. code-block:: Python

    from nilearn.reporting import make_glm_report

    report = make_glm_report(
        model=model,
        contrasts="StopSuccess - Go",
    )








.. GENERATED FROM PYTHON SOURCE LINES 228-229

We have several ways to access the report:

.. GENERATED FROM PYTHON SOURCE LINES 229-240

.. code-block:: Python


    # report  # This report can be viewed in a notebook
    # report.open_in_browser()

    # or we can save as an html file
    from pathlib import Path

    output_dir = Path.cwd() / "results" / "plot_bids_features"
    output_dir.mkdir(exist_ok=True, parents=True)
    # report.save_as_html(output_dir / 'report.html')








.. GENERATED FROM PYTHON SOURCE LINES 241-243

Saving model outputs to disk
----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 243-253

.. code-block:: Python

    from nilearn.interfaces.bids import save_glm_to_bids

    save_glm_to_bids(
        model,
        contrasts="StopSuccess - Go",
        contrast_types={"StopSuccess - Go": "t"},
        out_dir=output_dir / "derivatives" / "nilearn_glm",
        prefix=f"{subject}_task-stopsignal",
    )




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_006.png
         :alt: plot bids features
         :srcset: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_006.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_007.png
         :alt: plot bids features
         :srcset: /auto_examples/04_glm_first_level/images/sphx_glr_plot_bids_features_007.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/remi/github/nilearn/nilearn/env/lib/python3.11/site-packages/nilearn/interfaces/bids/glm.py:52: UserWarning:

    Contrast name "StopSuccess - Go" changed to "stopsuccessMinusGo"

    Extracting and saving residuals
    Extracting and saving r_square




.. GENERATED FROM PYTHON SOURCE LINES 254-255

View the generated files

.. GENERATED FROM PYTHON SOURCE LINES 255-257

.. code-block:: Python

    files = sorted(list((output_dir / "derivatives" / "nilearn_glm").glob("*")))
    print("\n".join([str(x.relative_to(output_dir)) for x in files]))




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    derivatives/nilearn_glm/dataset_description.json
    derivatives/nilearn_glm/sub-10159_task-stopsignal_contrast-stopsuccessMinusGo_design.svg
    derivatives/nilearn_glm/sub-10159_task-stopsignal_contrast-stopsuccessMinusGo_stat-effect_statmap.nii.gz
    derivatives/nilearn_glm/sub-10159_task-stopsignal_contrast-stopsuccessMinusGo_stat-p_statmap.nii.gz
    derivatives/nilearn_glm/sub-10159_task-stopsignal_contrast-stopsuccessMinusGo_stat-t_statmap.nii.gz
    derivatives/nilearn_glm/sub-10159_task-stopsignal_contrast-stopsuccessMinusGo_stat-variance_statmap.nii.gz
    derivatives/nilearn_glm/sub-10159_task-stopsignal_contrast-stopsuccessMinusGo_stat-z_statmap.nii.gz
    derivatives/nilearn_glm/sub-10159_task-stopsignal_design.svg
    derivatives/nilearn_glm/sub-10159_task-stopsignal_design.tsv
    derivatives/nilearn_glm/sub-10159_task-stopsignal_stat-errorts_statmap.nii.gz
    derivatives/nilearn_glm/sub-10159_task-stopsignal_stat-rSquare_statmap.nii.gz
    derivatives/nilearn_glm/sub-10159_task-stopsignal_statmap.json





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 5.792 seconds)

**Estimated memory usage:**  582 MB


.. _sphx_glr_download_auto_examples_04_glm_first_level_plot_bids_features.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/0.10.3?urlpath=lab/tree/notebooks/auto_examples/04_glm_first_level/plot_bids_features.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_bids_features.ipynb <plot_bids_features.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_bids_features.py <plot_bids_features.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
