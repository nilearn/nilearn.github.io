
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/05_glm_second_level/plot_oasis.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_05_glm_second_level_plot_oasis.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_05_glm_second_level_plot_oasis.py:

Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging, sex and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

VBM analysis of aging
---------------------

We run a standard GLM analysis to study the association between age
and gray matter density from the VBM data. We use only 100 subjects
from the OASIS dataset to limit the memory usage.

Note that more power would be obtained from using a larger sample of subjects.

.. GENERATED FROM PYTHON SOURCE LINES 23-31

.. code-block:: default

    # Authors: Bertrand Thirion, <bertrand.thirion@inria.fr>, July 2018
    #          Elvis Dhomatob, <elvis.dohmatob@inria.fr>, Apr. 2014
    #          Virgile Fritsch, <virgile.fritsch@inria.fr>, Apr 2014
    #          Gael Varoquaux, Apr 2014


    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 32-34

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 34-42

.. code-block:: default


    from nilearn import datasets
    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars['age'].astype(float)








.. GENERATED FROM PYTHON SOURCE LINES 43-44

Sex is encoded as 'M' or 'F'. Hence, we make it a binary variable.

.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: default

    sex = oasis_dataset.ext_vars['mf'] == 'F'








.. GENERATED FROM PYTHON SOURCE LINES 47-48

Print basic information on the dataset.

.. GENERATED FROM PYTHON SOURCE LINES 48-53

.. code-block:: default

    print('First gray-matter anatomy image (3D) is located at: %s' %
          oasis_dataset.gray_matter_maps[0])  # 3D data
    print('First white-matter anatomy image (3D) is located at: %s' %
          oasis_dataset.white_matter_maps[0])  # 3D data





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/nicolas/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/nicolas/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get a mask image: A mask of the  cortex of the ICBM template.

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: default

    gm_mask = datasets.fetch_icbm152_brain_gm_mask()








.. GENERATED FROM PYTHON SOURCE LINES 58-59

Resample the images, since this mask has a different resolution.

.. GENERATED FROM PYTHON SOURCE LINES 59-63

.. code-block:: default

    from nilearn.image import resample_to_img
    mask_img = resample_to_img(
        gm_mask, gray_matter_map_filenames[0], interpolation='nearest')








.. GENERATED FROM PYTHON SOURCE LINES 64-69

Analyse data
------------

First, we create an adequate design matrix with three columns: 'age',
'sex', 'intercept'.

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: default

    import pandas as pd
    import numpy as np
    intercept = np.ones(n_subjects)
    design_matrix = pd.DataFrame(np.vstack((age, sex, intercept)).T,
                                 columns=['age', 'sex', 'intercept'])








.. GENERATED FROM PYTHON SOURCE LINES 76-77

Let's plot the design matrix.

.. GENERATED FROM PYTHON SOURCE LINES 77-83

.. code-block:: default

    from nilearn.plotting import plot_design_matrix

    ax = plot_design_matrix(design_matrix)
    ax.set_title('Second level design matrix', fontsize=12)
    ax.set_ylabel('maps')




.. image-sg:: /auto_examples/05_glm_second_level/images/sphx_glr_plot_oasis_001.png
   :alt: Second level design matrix
   :srcset: /auto_examples/05_glm_second_level/images/sphx_glr_plot_oasis_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Text(29.000000000000007, 0.5, 'maps')



.. GENERATED FROM PYTHON SOURCE LINES 84-86

Next, we specify and fit the second-level model when loading the data and
also smooth a little bit to improve statistical behavior.

.. GENERATED FROM PYTHON SOURCE LINES 86-92

.. code-block:: default


    from nilearn.glm.second_level import SecondLevelModel
    second_level_model = SecondLevelModel(smoothing_fwhm=2.0, mask_img=mask_img)
    second_level_model.fit(gray_matter_map_filenames,
                           design_matrix=design_matrix)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    SecondLevelModel(mask_img=<nibabel.nifti1.Nifti1Image object at 0x7fa50d4fc1c0>,
                     smoothing_fwhm=2.0)



.. GENERATED FROM PYTHON SOURCE LINES 93-95

Estimating the contrast is very simple. We can just provide the column
name of the design matrix.

.. GENERATED FROM PYTHON SOURCE LINES 95-98

.. code-block:: default

    z_map = second_level_model.compute_contrast(second_level_contrast=[1, 0, 0],
                                                output_type='z_score')








.. GENERATED FROM PYTHON SOURCE LINES 99-100

We threshold the second level contrast at uncorrected p < 0.001 and plot it.

.. GENERATED FROM PYTHON SOURCE LINES 100-112

.. code-block:: default

    from nilearn import plotting
    from nilearn.glm import threshold_stats_img
    _, threshold = threshold_stats_img(
        z_map, alpha=.05, height_control='fdr')
    print('The FDR=.05-corrected threshold is: %.3g' % threshold)

    display = plotting.plot_stat_map(
        z_map, threshold=threshold, colorbar=True, display_mode='z',
        cut_coords=[-4, 26],
        title='age effect on grey matter density (FDR = .05)')
    plotting.show()




.. image-sg:: /auto_examples/05_glm_second_level/images/sphx_glr_plot_oasis_002.png
   :alt: plot oasis
   :srcset: /auto_examples/05_glm_second_level/images/sphx_glr_plot_oasis_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    The FDR=.05-corrected threshold is: 2.4




.. GENERATED FROM PYTHON SOURCE LINES 113-115

We can also study the effect of sex by computing the contrast, thresholding
it and plot the resulting map.

.. GENERATED FROM PYTHON SOURCE LINES 115-124

.. code-block:: default


    z_map = second_level_model.compute_contrast(second_level_contrast='sex',
                                                output_type='z_score')
    _, threshold = threshold_stats_img(
        z_map, alpha=.05, height_control='fdr')
    plotting.plot_stat_map(
        z_map, threshold=threshold, colorbar=True,
        title='sex effect on grey matter density (FDR = .05)')




.. image-sg:: /auto_examples/05_glm_second_level/images/sphx_glr_plot_oasis_003.png
   :alt: plot oasis
   :srcset: /auto_examples/05_glm_second_level/images/sphx_glr_plot_oasis_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <nilearn.plotting.displays._slicers.OrthoSlicer object at 0x7fa4fc7b0df0>



.. GENERATED FROM PYTHON SOURCE LINES 125-127

Note that there does not seem to be any significant effect of sex on
grey matter density on that dataset.

.. GENERATED FROM PYTHON SOURCE LINES 129-135

Generating a report
-------------------
It can be useful to quickly generate a
portable, ready-to-view report with most of the pertinent information.
This is easy to do if you have a fitted model and the list of contrasts,
which we do here.

.. GENERATED FROM PYTHON SOURCE LINES 135-144

.. code-block:: default


    from nilearn.reporting import make_glm_report

    icbm152_2009 = datasets.fetch_icbm152_2009()
    report = make_glm_report(model=second_level_model,
                             contrasts=['age', 'sex'],
                             bg_img=icbm152_2009['t1'],
                             )








.. GENERATED FROM PYTHON SOURCE LINES 145-146

We have several ways to access the report:

.. GENERATED FROM PYTHON SOURCE LINES 146-150

.. code-block:: default


    # report  # This report can be viewed in a notebook
    # report.save_as_html('report.html')
    # report.open_in_browser()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  36.563 seconds)

**Estimated memory usage:**  1010 MB


.. _sphx_glr_download_auto_examples_05_glm_second_level_plot_oasis.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/nilearn/nilearn.github.io/main?filepath=examples/auto_examples/05_glm_second_level/plot_oasis.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_oasis.py <plot_oasis.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_oasis.ipynb <plot_oasis.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
