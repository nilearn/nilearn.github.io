Search.setIndex({"alltitles": {"0.1.0": [[122, null], [162, "id6347"]], "0.1.1": [[123, null], [162, "id6179"]], "0.1.2": [[124, null], [162, "id6011"]], "0.1.3": [[125, null], [162, "id5842"]], "0.1.4": [[126, null], [162, "id5674"]], "0.10.0": [[127, null], [162, "id1367"]], "0.10.1": [[128, null], [162, "id1193"]], "0.10.1rc1": [[128, "rc1"], [162, "rc1"]], "0.10.2": [[129, null], [162, "id1021"]], "0.10.3": [[130, null], [162, "id849"]], "0.10.4": [[131, null], [162, "id678"]], "0.11.0": [[132, null], [162, "id507"]], "0.11.1": [[133, null], [162, "id337"]], "0.12.0": [[134, null], [162, "id167"]], "0.12.1.dev": [[160, null], [162, "dev"]], "0.2.0": [[135, null], [162, "id5502"]], "0.2.1": [[136, null], [162, "v0-2-1"]], "0.2.2": [[137, null], [162, "id5328"]], "0.2.3": [[138, null], [162, "id5160"]], "0.2.4": [[139, null], [162, "id4991"]], "0.2.5": [[140, "id2"], [162, "id4822"]], "0.2.5.1": [[140, null], [162, "id4818"]], "0.2.6": [[141, null], [162, "id4648"]], "0.3.0": [[142, null], [162, "id4473"]], "0.3.0 beta": [[142, "beta"], [162, "id4477"]], "0.3.1": [[143, null], [162, "id4302"]], "0.4.0": [[144, null], [162, "id4130"]], "0.4.1": [[145, null], [162, "id3961"]], "0.4.2": [[146, null], [162, "id3792"]], "0.5.0": [[147, null], [162, "id3608"]], "0.5.0 alpha": [[147, "alpha"], [162, "alpha"]], "0.5.0 beta": [[147, "beta"], [162, "beta"]], "0.5.0 rc": [[147, "rc"], [162, "id3612"]], "0.5.1": [[148, null], [162, "id3437"]], "0.5.2": [[149, null], [162, "id3267"]], "0.6.0": [[150, null], [162, "id3082"]], "0.6.0a0": [[150, "a0"], [162, "a0"]], "0.6.0b0": [[150, "b0"], [162, "b0"]], "0.6.0rc": [[150, "rc"], [162, "rc"]], "0.6.1": [[151, null], [162, "id2912"]], "0.6.2": [[152, null], [162, "id2742"]], "0.7.0": [[153, null], [162, "id2570"]], "0.7.1": [[154, null], [162, "id2399"]], "0.8.0": [[155, null], [162, "id2227"]], "0.8.1": [[156, null], [162, "id2055"]], "0.9.0": [[157, null], [162, "id1883"]], "0.9.1": [[158, null], [162, "id1713"]], "0.9.2": [[159, null], [162, "id1539"]], "3D Plots of connectomes": [[494, "d-plots-of-connectomes"]], "3D Plots of markers": [[494, "d-plots-of-markers"]], "3D Plots of statistical maps or atlases on the cortical surface": [[494, "d-plots-of-statistical-maps-or-atlases-on-the-cortical-surface"]], "3D and 4D niimgs: handling and visualizing": [[2, null]], "3D visualization in a web browser": [[10, "d-visualization-in-a-web-browser"], [23, "d-visualization-in-a-web-browser"], [55, "d-visualization-in-a-web-browser"], [57, "d-visualization-in-a-web-browser"], [61, "d-visualization-in-a-web-browser"]], "A few definitions": [[170, "a-few-definitions"]], "A first contrast estimation and plotting": [[68, "a-first-contrast-estimation-and-plotting"]], "A first estimator": [[170, "a-first-estimator"]], "A first step: looking at our data": [[4, "a-first-step-looking-at-our-data"]], "A function to generate data": [[47, "a-function-to-generate-data"]], "A functional connectome: a graph of interactions": [[165, "a-functional-connectome-a-graph-of-interactions"]], "A functional connectome: extracting coordinates of regions": [[165, "a-functional-connectome-extracting-coordinates-of-regions"]], "A introduction tutorial to fMRI decoding": [[3, null]], "A primer on BOLD-fMRI data analysis": [[180, "a-primer-on-bold-fmri-data-analysis"]], "A short demo of the surface images & maskers": [[114, null]], "A simple function to plot slices": [[47, "a-simple-function-to-plot-slices"]], "AAL atlas": [[198, null]], "ABIDE PCP dataset": [[196, null]], "ADHD": [[479, "adhd"]], "ADHD dataset": [[199, null]], "ANOVA pipeline with Decoder object": [[31, "anova-pipeline-with-decoder-object"], [36, "anova-pipeline-with-decoder-object"]], "API References": [[483, null]], "API changes summary": [[135, "api-changes-summary"], [162, "api-changes-summary"]], "APIs of nilearn objects": [[178, "apis-of-nilearn-objects"]], "Access": [[196, "access"], [197, "access"], [198, "access"], [199, "access"], [200, "access"], [201, "access"], [203, "access"], [204, "access"], [205, "access"], [206, "access"], [207, "access"], [208, "access"], [209, "access"], [210, "access"], [211, "access"], [212, "access"], [213, "access"], [214, "access"], [216, "access"], [217, "access"], [218, "access"], [219, "access"], [220, "access"], [221, "access"], [222, "access"], [223, "access"], [224, "access"], [226, "access"], [227, "access"], [228, "access"], [229, "access"], [230, "access"], [231, "access"], [232, "access"], [233, "access"], [234, "access"], [235, "access"], [236, "access"]], "Accessing individual volumes in 4D images": [[190, "accessing-individual-volumes-in-4d-images"]], "Adding a time derivative to the design": [[68, "adding-a-time-derivative-to-the-design"]], "Adding atlases and datasets": [[178, "adding-atlases-and-datasets"]], "Adding overlays, edges, contours, contour fillings, markers, scale bar": [[494, "adding-overlays-edges-contours-contour-fillings-markers-scale-bar"]], "Additional cases": [[178, "additional-cases"]], "Adjust the sample locations": [[25, "adjust-the-sample-locations"]], "Advanced decoding using scikit learn": [[101, null]], "Advanced statistical analysis of brain images": [[100, null], [116, "advanced-statistical-analysis-of-brain-images"]], "Advanced usage: manual pipelines and scaling up": [[119, null]], "Advanced: Design philosophy of \u201cMaskers\u201d": [[191, null]], "Advanced: scikit-learn Pipelines": [[191, null]], "After mask computation: extracting time series": [[91, "after-mask-computation-extracting-time-series"]], "Aggregate beta maps from the LSA model based on condition": [[103, "aggregate-beta-maps-from-the-lsa-model-based-on-condition"]], "Allen 2011 atlas": [[200, null]], "An alternative to ICA: Dictionary learning": [[169, "an-alternative-to-ica-dictionary-learning"]], "An exercise to go further": [[47, "an-exercise-to-go-further"]], "An introduction to GLMs in fMRI statistical analysis": [[180, null]], "An introduction to decoding": [[170, null]], "Analysis of an fMRI dataset with a Finite Impule Response (FIR) model": [[67, null]], "Analyze data": [[77, "analyze-data"]], "Analyzing fMRI using GLMs": [[181, null]], "And now display the corresponding graph": [[55, "and-now-display-the-corresponding-graph"], [55, "id1"], [57, "and-now-display-the-corresponding-graph"]], "Annotate plots: annotate": [[16, "annotate-plots-annotate"]], "Answer questions": [[178, "answer-questions"]], "Applications of beta series": [[103, "applications-of-beta-series"]], "Apply CanICA on the data": [[51, "apply-canica-on-the-data"]], "Applying a mask": [[120, "applying-a-mask"]], "Applying a scikit-learn machine learning method": [[120, "applying-a-scikit-learn-machine-learning-method"]], "Applying clustering": [[167, "applying-clustering"]], "Applying the mask to extract the corresponding time series": [[27, "applying-the-mask-to-extract-the-corresponding-time-series"]], "Atlases": [[193, "atlases"]], "Automatically computing a mask": [[120, "automatically-computing-a-mask"]], "Available Colormaps": [[494, "available-colormaps"]], "Available documentation for Nilearn": [[498, null]], "Axes": [[488, "axes"]], "BASC multiscale atlas": [[201, null]], "BIDS dataset first and second level analysis": [[104, null]], "BIDS features": [[479, "bids-features"]], "BIDS language localizer": [[202, null]], "Bagging several models": [[171, "bagging-several-models"]], "Basic Atlas plotting": [[11, null]], "Basic nilearn example: manipulating and looking at data": [[4, null]], "Basic numerics and plotting with Python": [[5, null]], "Basic tutorials": [[1, null], [116, "basic-tutorials"]], "Benefits": [[26, null]], "Beta-Series Modeling for Task-Based Functional Connectivity and Decoding": [[103, null]], "Bootstrap Analysis of Stable Clusters": [[201, "bootstrap-analysis-of-stable-clusters"]], "Bounds on alpha": [[177, "bounds-on-alpha"]], "Brain mapping with mass univariate": [[45, "brain-mapping-with-mass-univariate"]], "Brain maps using Dictionary learning": [[168, "brain-maps-using-dictionary-learning"]], "Brain parcellations": [[165, "brain-parcellations"]], "Brain parcellations with Hierarchical KMeans Clustering": [[52, "brain-parcellations-with-hierarchical-kmeans-clustering"]], "Brain parcellations with KMeans Clustering": [[52, "brain-parcellations-with-kmeans-clustering"]], "Brain parcellations with ReNA Clustering": [[52, "brain-parcellations-with-rena-clustering"]], "Brain parcellations with Ward Clustering": [[52, "brain-parcellations-with-ward-clustering"]], "Brainomics Localizer": [[203, null]], "Breaking an atlas of labels in separated regions": [[88, null]], "Bug fixes": [[135, "bug-fixes"], [138, "bug-fixes"], [145, "bug-fixes"], [162, "bug-fixes"], [162, "id5161"], [162, "id5506"]], "Build a mask from this statistical map (Improving the quality of the mask)": [[96, "build-a-mask-from-this-statistical-map-improving-the-quality-of-the-mask"]], "Build a mesh (of a cylinder)": [[25, "build-a-mesh-of-a-cylinder"]], "Build a proper event structure for each run": [[35, "build-a-proper-event-structure-for-each-run"]], "Build a statistical test to find voxels of interest": [[96, "build-a-statistical-test-to-find-voxels-of-interest"]], "Build and deploy the documentation manually": [[187, "build-and-deploy-the-documentation-manually"]], "Build and display a correlation matrix": [[57, "build-and-display-a-correlation-matrix"]], "Build of stable docs": [[187, "build-of-stable-docs"]], "Build the decoders, using scikit-learn": [[37, "build-the-decoders-using-scikit-learn"]], "Build the decoding pipeline": [[35, "build-the-decoding-pipeline"]], "Build the distributions and upload them to Pypi": [[187, "build-the-distributions-and-upload-them-to-pypi"]], "Building documentation": [[178, "building-documentation"]], "Building the encoding models": [[43, "building-the-encoding-models"]], "Building your own neuroimaging machine-learning pipeline": [[120, null]], "CHANGES": [[150, "changes"], [162, "id3086"]], "CIRCLE_CI_TOKEN": [[163, null]], "Calculate and Plot F-test": [[71, "calculate-and-plot-f-test"]], "Calculate and plot contrast": [[71, "calculate-and-plot-contrast"]], "Calculating seed-based functional connectivity": [[24, "calculating-seed-based-functional-connectivity"]], "Changelog": [[122, "changelog"], [123, "changelog"], [124, "changelog"], [125, "changelog"], [135, "changelog"], [136, "changelog"], [138, "changelog"], [162, "changelog"], [162, "id5335"], [162, "id5503"], [162, "id5843"], [162, "id6012"], [162, "id6180"], [162, "id6348"], [178, "changelog"]], "Changes": [[127, "changes"], [128, "changes"], [128, "id4"], [129, "changes"], [130, "changes"], [131, "changes"], [132, "changes"], [134, "changes"], [137, "changes"], [139, "changes"], [140, "changes"], [141, "changes"], [142, "changes"], [142, "id2"], [143, "changes"], [144, "changes"], [145, "changes"], [146, "changes"], [147, "changes"], [147, "id3"], [147, "id6"], [147, "id10"], [148, "changes"], [150, "id3"], [150, "id7"], [150, "id11"], [152, "changes"], [153, "changes"], [155, "changes"], [156, "changes"], [157, "changes"], [158, "changes"], [159, "changes"], [160, "changes"], [162, "changes"], [162, "id170"], [162, "id511"], [162, "id682"], [162, "id854"], [162, "id1026"], [162, "id1197"], [162, "id1200"], [162, "id1372"], [162, "id1546"], [162, "id1716"], [162, "id1888"], [162, "id2060"], [162, "id2232"], [162, "id2575"], [162, "id2745"], [162, "id3089"], [162, "id3094"], [162, "id3098"], [162, "id3439"], [162, "id3611"], [162, "id3615"], [162, "id3620"], [162, "id3624"], [162, "id3793"], [162, "id3963"], [162, "id4134"], [162, "id4304"], [162, "id4474"], [162, "id4479"], [162, "id4651"], [162, "id4819"], [162, "id4993"], [162, "id5332"]], "Changing the drift model": [[68, "changing-the-drift-model"]], "Changing the feature selection": [[101, "changing-the-feature-selection"]], "Changing the hemodynamic response model": [[68, "changing-the-hemodynamic-response-model"]], "Changing the prediction engine": [[101, "changing-the-prediction-engine"]], "Check installation": [[495, "check-installation"]], "Choice of the prediction accuracy measure": [[170, "choice-of-the-prediction-accuracy-measure"]], "Choosing a good cross-validation strategy": [[170, "choosing-a-good-cross-validation-strategy"]], "Choosing colormaps": [[13, "choosing-colormaps"]], "Choosing the right model for your analysis": [[103, null]], "Choosing the right predictive model for neuroimaging": [[171, null]], "Circle-CI workflows": [[163, "circle-ci-workflows"]], "Citing nilearn": [[0, "citing-nilearn"]], "Citing scikit-learn": [[0, "citing-scikit-learn"]], "Classes": [[192, "classes"], [194, "classes"], [195, "classes"], [481, "classes"], [481, "id1"], [481, "id3"], [485, "classes"], [488, "classes"], [490, "classes"], [491, "classes"], [493, "classes"]], "Classification of age groups using functional connectivity": [[54, null]], "Classification: two classes or multi-class": [[171, "classification-two-classes-or-multi-class"]], "Classifier": [[175, "classifier"]], "Closing policy": [[187, "closing-policy"]], "Clustering methods to learn a brain parcellation from fMRI": [[52, null]], "Clustering to parcellate the brain in regions": [[167, null]], "Code": [[172, null], [172, null], [190, null]], "Code examples": [[132, null], [162, null], [494, null]], "Code of Conduct": [[178, "code-of-conduct"]], "Coding Style": [[178, "coding-style"]], "Colormaps in Nilearn": [[13, null]], "Common data preparation steps: smoothing, filtering, resampling": [[191, "common-data-preparation-steps-smoothing-filtering-resampling"]], "Compare CanICA to dictionary learning": [[51, "compare-canica-to-dictionary-learning"]], "Compare Hierarchical Kmeans clusters with those from Kmeans": [[52, "compare-hierarchical-kmeans-clusters-with-those-from-kmeans"]], "Compare run-specific and fixed effects contrasts": [[73, "compare-run-specific-and-fixed-effects-contrasts"]], "Compare the results": [[41, "compare-the-results"]], "Compare the three modeling approaches": [[103, "compare-the-three-modeling-approaches"]], "Comparing connectomes on different reference atlases": [[50, null]], "Comparing images": [[488, "module-nilearn.plotting.img_comparison"]], "Comparing the different approaches on simulated data": [[164, "comparing-the-different-approaches-on-simulated-data"]], "Comparing the means of 2 images": [[87, null]], "Comparing to massively univariate analysis: F_score or SPM": [[175, "comparing-to-massively-univariate-analysis-f-score-or-spm"]], "Comparing transparent and opaque thresholding": [[26, "comparing-transparent-and-opaque-thresholding"]], "Compressed representation": [[167, "compressed-representation"]], "Compressed representation of ReNA clustering": [[52, "compressed-representation-of-rena-clustering"]], "Compressed representation of Ward clustering": [[52, "compressed-representation-of-ward-clustering"]], "Computation times": [[8, null], [29, null], [48, null], [62, null], [75, null], [84, null], [99, null], [115, null], [117, null], [496, null]], "Compute a range of contrasts across both runs": [[73, "compute-a-range-of-contrasts-across-both-runs"]], "Compute and display a correlation matrix": [[59, "compute-and-display-a-correlation-matrix"]], "Compute and resample a mask": [[91, "compute-and-resample-a-mask"]], "Compute correlation coefficients": [[53, "compute-correlation-coefficients"]], "Compute fixed effects statistics using preprocessed data of both runs": [[73, "compute-fixed-effects-statistics-using-preprocessed-data-of-both-runs"]], "Compute partial correlation matrix": [[61, "compute-partial-correlation-matrix"]], "Compute prediction scores with different values of screening percentile": [[36, "compute-prediction-scores-with-different-values-of-screening-percentile"]], "Compute statistics": [[112, "compute-statistics"]], "Compute the sparse inverse covariance": [[55, "compute-the-sparse-inverse-covariance"]], "Compute within spheres averaged time-series": [[61, "compute-within-spheres-averaged-time-series"]], "Computing a Region of Interest (ROI) mask manually": [[96, null]], "Computing a connectome with sparse inverse covariance": [[55, null]], "Computing a mask from raw EPI data": [[91, "computing-a-mask-from-raw-epi-data"]], "Computing a mask from the background": [[91, "computing-a-mask-from-the-background"]], "Computing and applying spatial masks": [[190, "computing-and-applying-spatial-masks"]], "Computing contrasts": [[179, "computing-contrasts"]], "Computing functional connectivity matrices": [[168, "computing-functional-connectivity-matrices"]], "Computing group-sparse precision matrices": [[56, "computing-group-sparse-precision-matrices"]], "Computing the mask from the MNI template": [[91, "computing-the-mask-from-the-mni-template"]], "Conclusion": [[68, "conclusion"], [111, "conclusion"]], "Connectivity structure estimation on simulated data": [[60, null]], "Connectivity with a surface atlas and SurfaceLabelsMasker": [[114, "connectivity-with-a-surface-atlas-and-surfacelabelsmasker"]], "Connectome extracted from Dosenbach\u2019s atlas": [[61, "connectome-extracted-from-dosenbach-s-atlas"]], "Connectome extraction: inverse covariance for direct connections": [[164, null]], "Content": [[196, "content"], [197, "content"], [198, "content"], [199, "content"], [200, "content"], [201, "content"], [203, "content"], [204, "content"], [205, "content"], [206, "content"], [207, "content"], [208, "content"], [209, "content"], [210, "content"], [211, "content"], [212, "content"], [213, "content"], [214, "content"], [215, null], [216, "content"], [217, "content"], [218, "content"], [219, "content"], [220, "content"], [221, "content"], [222, "content"], [223, "content"], [224, "content"], [225, "content"], [226, "content"], [227, "content"], [228, "content"], [229, "content"], [230, "content"], [231, "content"], [232, "content"], [233, "content"], [234, "content"], [235, "content"], [236, "content"]], "Continuous integration": [[163, null], [178, "continuous-integration"]], "Contour projections in both hemispheres": [[15, "contour-projections-in-both-hemispheres"]], "Contours and with fillings": [[15, "contours-and-with-fillings"]], "Contribute code": [[178, "contribute-code"]], "Contributing": [[178, null], [178, "id5"]], "Contribution Guidelines": [[178, "contribution-guidelines"]], "Contributors": [[135, "contributors"], [137, "contributors"], [140, "contributors"], [144, "contributors"], [147, "contributors"], [147, "id7"], [147, "id11"], [148, "contributors"], [149, "contributors"], [150, "contributors"], [150, "id9"], [150, "id13"], [151, "contributors"], [152, "contributors"], [162, "contributors"], [162, "id2915"], [162, "id3091"], [162, "id3096"], [162, "id3100"], [162, "id3270"], [162, "id3441"], [162, "id3616"], [162, "id3621"], [162, "id3625"], [162, "id4135"], [162, "id4824"], [162, "id5333"], [162, "id5507"]], "Control via commit message": [[163, null], [163, null], [163, null]], "Controlling how the mask is computed from the data": [[191, "controlling-how-the-mask-is-computed-from-the-data"]], "Controlling the contrast of the background when plotting": [[18, null]], "Convert the multi-class labels to binary labels": [[41, "convert-the-multi-class-labels-to-binary-labels"]], "Coordinates of Default Mode Network": [[61, "coordinates-of-default-mode-network"]], "Copying headers from input images with math_img": [[105, null]], "Core developers": [[0, "core-developers"]], "Correlation between regressors": [[66, "correlation-between-regressors"]], "Cortical surface-based searchlight decoding": [[39, null]], "Craddock 2012 atlas": [[204, null]], "Create a large fMRI image": [[111, "create-a-large-fmri-image"]], "Create a second level design matrix": [[80, "create-a-second-level-design-matrix"]], "Create a set of binary masks": [[111, "create-a-set-of-binary-masks"]], "Create a simple experimental paradigm": [[80, "create-a-simple-experimental-paradigm"]], "Create data": [[47, "create-data"]], "Create design matrices": [[66, "create-design-matrices"]], "Creating a surface image": [[7, "creating-a-surface-image"]], "Cross validation": [[175, "cross-validation"]], "Cross-validation": [[170, "cross-validation"]], "Cross-validation algorithm": [[177, "cross-validation-algorithm"]], "Cross-validation with scikit-learn": [[101, "cross-validation-with-scikit-learn"], [173, "cross-validation-with-scikit-learn"]], "Cross-validation with the decoder": [[3, "cross-validation-with-the-decoder"]], "Custom data loading: loading only the first 100 time points": [[191, "custom-data-loading-loading-only-the-first-100-time-points"]], "Data": [[7, "data"]], "Data Usage Agreement": [[227, null], [285, null]], "Data fetcher": [[23, "data-fetcher"]], "Data format": [[7, "data-format"]], "Data loading and preprocessing": [[120, "data-loading-and-preprocessing"]], "Data loading: movie-watching data": [[167, "data-loading-movie-watching-data"]], "Dataset caching": [[163, "dataset-caching"]], "Dataset formatting: data shape": [[189, null]], "Datasets descriptions": [[193, "datasets-descriptions"]], "Decode via the Decoder": [[41, "decode-via-the-decoder"]], "Decoding and MVPA: predicting from brain images": [[174, null]], "Decoding and predicting from brain images": [[30, null], [116, "decoding-and-predicting-from-brain-images"]], "Decoding made easy": [[170, "decoding-made-easy"]], "Decoding of a dataset after GLM fit for signal extraction": [[35, null]], "Decoding on simulated data": [[173, null]], "Decoding on the different masks": [[34, "decoding-on-the-different-masks"]], "Decoding performance increase on Haxby dataset": [[172, "decoding-performance-increase-on-haxby-dataset"]], "Decoding with ANOVA + SVM: face vs house in the Haxby dataset": [[31, null]], "Decoding with FREM: face vs house vs chair object recognition": [[33, null]], "Decoding with Support Vector Machine": [[3, "decoding-with-support-vector-machine"]], "Decoding with a scikit-learn Pipeline": [[114, "decoding-with-a-scikit-learn-pipeline"]], "Decoding without a mask: Anova-SVM": [[170, "decoding-without-a-mask-anova-svm"]], "Decoding without a mask: Anova-SVM in scikit-lean": [[101, "decoding-without-a-mask-anova-svm-in-scikit-lean"]], "Decoding without a mask: Anova-SVM using scikit-learn": [[173, "decoding-without-a-mask-anova-svm-using-scikit-learn"]], "Decreasing memory used when loading Nifti images": [[189, null]], "Default Mode Network extraction of ADHD dataset": [[64, null]], "Define parameters": [[66, "define-parameters"]], "Define stimulus parameters and response models": [[69, "define-stimulus-parameters-and-response-models"]], "Define the LSA model": [[103, "define-the-lsa-model"]], "Define the LSS models": [[103, "define-the-lss-models"]], "Define the standard model": [[103, "define-the-standard-model"]], "Demo glass brain plotting": [[15, "demo-glass-brain-plotting"]], "Dependencies": [[495, "dependencies"]], "Deriving a label-based mask": [[12, "deriving-a-label-based-mask"]], "Deriving a mask": [[12, "deriving-a-mask"]], "Deriving spatial maps from group fMRI data using ICA and Dictionary Learning": [[51, null]], "Description": [[177, "description"]], "Design matrix: event-based and time series-based": [[179, "design-matrix-event-based-and-time-series-based"]], "Destrieux atlas": [[205, null]], "Destrieux parcellation on inflated surface with different views": [[23, "destrieux-parcellation-on-inflated-surface-with-different-views"]], "Destrieux parcellation on pial surface": [[23, "destrieux-parcellation-on-pial-surface"]], "Destrieux parcellation with custom view: explicitly set angle": [[23, "destrieux-parcellation-with-custom-view-explicitly-set-angle"]], "Detecting voxels with significant effects": [[6, "detecting-voxels-with-significant-effects"]], "Deterministic atlases": [[193, "deterministic-atlases"]], "Development": [[495, "development"]], "Development version": [[495, "development-version"]], "DiFuMo atlas": [[207, null]], "Difference in meanings between different toolboxes": [[182, null]], "Different classifiers in decoding the Haxby dataset": [[32, null]], "Different connectivity modes": [[88, "different-connectivity-modes"]], "Different display modes": [[494, "different-display-modes"]], "Different linear models": [[171, "different-linear-models"]], "Different masking strategies": [[191, "different-masking-strategies"]], "Different plotting functions": [[494, "different-plotting-functions"]], "Different projections for the left and right hemispheres": [[15, "different-projections-for-the-left-and-right-hemispheres"]], "Dimension reduction with feature selection": [[170, "dimension-reduction-with-feature-selection"]], "Disclaimer": [[197, "disclaimer"]], "Display ROI on surface": [[24, "display-roi-on-surface"]], "Display connectome": [[61, "display-connectome"]], "Display connectome from surface parcellation": [[23, "display-connectome-from-surface-parcellation"]], "Display objects returned by plotting functions": [[16, "display-objects-returned-by-plotting-functions"]], "Display object\u2019s features": [[16, "display-object-s-features"]], "Display outlines of the regions of interest on top of a statistical map": [[10, "display-outlines-of-the-regions-of-interest-on-top-of-a-statistical-map"]], "Display spheres summary report": [[61, "display-spheres-summary-report"]], "Display subject t_maps": [[81, "display-subject-t-maps"]], "Display the connectome matrix": [[55, "display-the-connectome-matrix"]], "Display the sparse inverse covariance": [[55, "display-the-sparse-inverse-covariance"]], "Display time series": [[61, "display-time-series"]], "Displaying or saving to an image file": [[494, "displaying-or-saving-to-an-image-file"]], "Displaying results": [[56, "displaying-results"]], "Documentation": [[178, "documentation"]], "Documentation build and deploy": [[163, "documentation-build-and-deploy"]], "Documentation style": [[178, "documentation-style"]], "Dosenbach 2010 atlas": [[208, null]], "Download a brain development fMRI dataset and turn it to a data matrix": [[52, "download-a-brain-development-fmri-dataset-and-turn-it-to-a-data-matrix"]], "Downloading statistical maps from the Neurovault repository": [[121, null]], "Downloading the data": [[120, "downloading-the-data"]], "Downloading tutorial datasets from Internet": [[2, "downloading-tutorial-datasets-from-internet"]], "Drop-in Hours": [[495, "drop-in-hours"]], "Duality gap": [[177, "duality-gap"]], "Dummy estimator": [[101, "dummy-estimator"]], "ENHANCEMENTS": [[147, "enhancements"], [150, "enhancements"], [151, "enhancements"], [152, "enhancements"], [162, "id2743"], [162, "id2913"], [162, "id3085"], [162, "id3610"]], "Empirical comparisons": [[172, "empirical-comparisons"]], "Encoding models for visual stimuli from Miyawaki et al. 2008": [[43, null]], "Enhancements": [[127, "enhancements"], [128, "enhancements"], [128, "id3"], [129, "enhancements"], [130, "enhancements"], [131, "enhancements"], [132, "enhancements"], [133, "enhancements"], [134, "enhancements"], [135, "enhancements"], [137, "enhancements"], [141, "enhancements"], [142, "enhancements"], [142, "id4"], [143, "enhancements"], [144, "enhancements"], [145, "enhancements"], [147, "id2"], [147, "id5"], [147, "id9"], [154, "enhancements"], [155, "enhancements"], [156, "enhancements"], [157, "enhancements"], [158, "enhancements"], [159, "enhancements"], [160, "enhancements"], [162, "enhancements"], [162, "id169"], [162, "id340"], [162, "id510"], [162, "id681"], [162, "id853"], [162, "id1025"], [162, "id1196"], [162, "id1199"], [162, "id1371"], [162, "id1545"], [162, "id1715"], [162, "id1887"], [162, "id2059"], [162, "id2231"], [162, "id2403"], [162, "id3614"], [162, "id3618"], [162, "id3623"], [162, "id3962"], [162, "id4132"], [162, "id4306"], [162, "id4476"], [162, "id4481"], [162, "id4650"], [162, "id5330"], [162, "id5505"]], "Estimate contrasts": [[64, "estimate-contrasts"], [70, "estimate-contrasts"]], "Estimate correlations": [[61, "estimate-correlations"]], "Estimate second level model": [[78, "estimate-second-level-model"], [79, "estimate-second-level-model"], [81, "estimate-second-level-model"]], "Estimate second level models": [[82, "estimate-second-level-models"]], "Estimated Attributes": [[178, "estimated-attributes"]], "Estimating receptive fields": [[43, "estimating-receptive-fields"]], "Event-based": [[179, "event-based"]], "Example": [[190, null]], "Example code": [[167, null], [175, null]], "Example of MRI response functions": [[69, null]], "Example of generic design in second-level models": [[79, null]], "Example of pattern recognition on simulated data": [[47, null]], "Example of second level design matrix": [[80, null]], "Example of surface-based first-level analysis": [[70, null]], "Example use of TV-L1 SpaceNet": [[42, "example-use-of-tv-l1-spacenet"]], "Examples": [[116, null], [190, null], [191, null], [191, null], [191, null], [191, null], [191, null], [191, null]], "Examples nifti masker reports": [[480, null]], "Examples of GLM reports": [[479, null]], "Examples of design matrices": [[66, null]], "Examples surface masker reports": [[480, "examples-surface-masker-reports"]], "Examples to better understand the NiftiMasker": [[191, null]], "Examples using Neurovault": [[121, "examples-using-neurovault"]], "Examples using nilearn.connectome.ConnectivityMeasure": [[238, "examples-using-nilearn-connectome-connectivitymeasure"]], "Examples using nilearn.connectome.GroupSparseCovarianceCV": [[240, "examples-using-nilearn-connectome-groupsparsecovariancecv"]], "Examples using nilearn.datasets.fetch_adhd": [[247, "examples-using-nilearn-datasets-fetch-adhd"]], "Examples using nilearn.datasets.fetch_atlas_allen_2011": [[249, "examples-using-nilearn-datasets-fetch-atlas-allen-2011"]], "Examples using nilearn.datasets.fetch_atlas_basc_multiscale_2015": [[250, "examples-using-nilearn-datasets-fetch-atlas-basc-multiscale-2015"]], "Examples using nilearn.datasets.fetch_atlas_destrieux_2009": [[252, "examples-using-nilearn-datasets-fetch-atlas-destrieux-2009"]], "Examples using nilearn.datasets.fetch_atlas_difumo": [[253, "examples-using-nilearn-datasets-fetch-atlas-difumo"]], "Examples using nilearn.datasets.fetch_atlas_harvard_oxford": [[254, "examples-using-nilearn-datasets-fetch-atlas-harvard-oxford"]], "Examples using nilearn.datasets.fetch_atlas_juelich": [[255, "examples-using-nilearn-datasets-fetch-atlas-juelich"]], "Examples using nilearn.datasets.fetch_atlas_msdl": [[256, "examples-using-nilearn-datasets-fetch-atlas-msdl"]], "Examples using nilearn.datasets.fetch_atlas_smith_2009": [[259, "examples-using-nilearn-datasets-fetch-atlas-smith-2009"]], "Examples using nilearn.datasets.fetch_atlas_surf_destrieux": [[260, "examples-using-nilearn-datasets-fetch-atlas-surf-destrieux"]], "Examples using nilearn.datasets.fetch_atlas_yeo_2011": [[262, "examples-using-nilearn-datasets-fetch-atlas-yeo-2011"]], "Examples using nilearn.datasets.fetch_coords_dosenbach_2010": [[264, "examples-using-nilearn-datasets-fetch-coords-dosenbach-2010"]], "Examples using nilearn.datasets.fetch_coords_power_2011": [[265, "examples-using-nilearn-datasets-fetch-coords-power-2011"]], "Examples using nilearn.datasets.fetch_development_fmri": [[267, "examples-using-nilearn-datasets-fetch-development-fmri"]], "Examples using nilearn.datasets.fetch_ds000030_urls": [[268, "examples-using-nilearn-datasets-fetch-ds000030-urls"]], "Examples using nilearn.datasets.fetch_fiac_first_level": [[269, "examples-using-nilearn-datasets-fetch-fiac-first-level"]], "Examples using nilearn.datasets.fetch_haxby": [[270, "examples-using-nilearn-datasets-fetch-haxby"]], "Examples using nilearn.datasets.fetch_icbm152_2009": [[271, "examples-using-nilearn-datasets-fetch-icbm152-2009"]], "Examples using nilearn.datasets.fetch_icbm152_brain_gm_mask": [[272, "examples-using-nilearn-datasets-fetch-icbm152-brain-gm-mask"]], "Examples using nilearn.datasets.fetch_language_localizer_demo_dataset": [[273, "examples-using-nilearn-datasets-fetch-language-localizer-demo-dataset"]], "Examples using nilearn.datasets.fetch_localizer_button_task": [[274, "examples-using-nilearn-datasets-fetch-localizer-button-task"]], "Examples using nilearn.datasets.fetch_localizer_calculation_task": [[275, "examples-using-nilearn-datasets-fetch-localizer-calculation-task"]], "Examples using nilearn.datasets.fetch_localizer_contrasts": [[276, "examples-using-nilearn-datasets-fetch-localizer-contrasts"]], "Examples using nilearn.datasets.fetch_localizer_first_level": [[277, "examples-using-nilearn-datasets-fetch-localizer-first-level"]], "Examples using nilearn.datasets.fetch_megatrawls_netmats": [[278, "examples-using-nilearn-datasets-fetch-megatrawls-netmats"]], "Examples using nilearn.datasets.fetch_mixed_gambles": [[279, "examples-using-nilearn-datasets-fetch-mixed-gambles"]], "Examples using nilearn.datasets.fetch_miyawaki2008": [[280, "examples-using-nilearn-datasets-fetch-miyawaki2008"]], "Examples using nilearn.datasets.fetch_neurovault": [[281, "examples-using-nilearn-datasets-fetch-neurovault"]], "Examples using nilearn.datasets.fetch_neurovault_auditory_computation_task": [[282, "examples-using-nilearn-datasets-fetch-neurovault-auditory-computation-task"]], "Examples using nilearn.datasets.fetch_neurovault_ids": [[283, "examples-using-nilearn-datasets-fetch-neurovault-ids"]], "Examples using nilearn.datasets.fetch_oasis_vbm": [[285, "examples-using-nilearn-datasets-fetch-oasis-vbm"]], "Examples using nilearn.datasets.fetch_openneuro_dataset": [[286, "examples-using-nilearn-datasets-fetch-openneuro-dataset"]], "Examples using nilearn.datasets.fetch_spm_auditory": [[287, "examples-using-nilearn-datasets-fetch-spm-auditory"]], "Examples using nilearn.datasets.fetch_spm_multimodal_fmri": [[288, "examples-using-nilearn-datasets-fetch-spm-multimodal-fmri"]], "Examples using nilearn.datasets.get_data_dirs": [[291, "examples-using-nilearn-datasets-get-data-dirs"]], "Examples using nilearn.datasets.load_fsaverage": [[292, "examples-using-nilearn-datasets-load-fsaverage"]], "Examples using nilearn.datasets.load_fsaverage_data": [[293, "examples-using-nilearn-datasets-load-fsaverage-data"]], "Examples using nilearn.datasets.load_mni152_brain_mask": [[294, "examples-using-nilearn-datasets-load-mni152-brain-mask"]], "Examples using nilearn.datasets.load_mni152_gm_mask": [[295, "examples-using-nilearn-datasets-load-mni152-gm-mask"]], "Examples using nilearn.datasets.load_mni152_template": [[297, "examples-using-nilearn-datasets-load-mni152-template"]], "Examples using nilearn.datasets.load_mni152_wm_mask": [[298, "examples-using-nilearn-datasets-load-mni152-wm-mask"]], "Examples using nilearn.datasets.load_nki": [[300, "examples-using-nilearn-datasets-load-nki"]], "Examples using nilearn.datasets.load_sample_motor_activation_image": [[301, "examples-using-nilearn-datasets-load-sample-motor-activation-image"]], "Examples using nilearn.datasets.select_from_index": [[303, "examples-using-nilearn-datasets-select-from-index"]], "Examples using nilearn.decoding.Decoder": [[304, "examples-using-nilearn-decoding-decoder"]], "Examples using nilearn.decoding.DecoderRegressor": [[305, "examples-using-nilearn-decoding-decoderregressor"]], "Examples using nilearn.decoding.FREMClassifier": [[306, "examples-using-nilearn-decoding-fremclassifier"]], "Examples using nilearn.decoding.FREMRegressor": [[307, "examples-using-nilearn-decoding-fremregressor"]], "Examples using nilearn.decoding.SearchLight": [[308, "examples-using-nilearn-decoding-searchlight"]], "Examples using nilearn.decoding.SpaceNetRegressor": [[310, "examples-using-nilearn-decoding-spacenetregressor"]], "Examples using nilearn.decomposition.CanICA": [[311, "examples-using-nilearn-decomposition-canica"]], "Examples using nilearn.decomposition.DictLearning": [[312, "examples-using-nilearn-decomposition-dictlearning"]], "Examples using nilearn.glm.cluster_level_inference": [[321, "examples-using-nilearn-glm-cluster-level-inference"]], "Examples using nilearn.glm.compute_fixed_effects": [[323, "examples-using-nilearn-glm-compute-fixed-effects"]], "Examples using nilearn.glm.first_level.FirstLevelModel": [[326, "examples-using-nilearn-glm-first-level-firstlevelmodel"]], "Examples using nilearn.glm.first_level.compute_regressor": [[328, "examples-using-nilearn-glm-first-level-compute-regressor"]], "Examples using nilearn.glm.first_level.first_level_from_bids": [[329, "examples-using-nilearn-glm-first-level-first-level-from-bids"]], "Examples using nilearn.glm.first_level.make_first_level_design_matrix": [[333, "examples-using-nilearn-glm-first-level-make-first-level-design-matrix"]], "Examples using nilearn.glm.second_level.SecondLevelModel": [[339, "examples-using-nilearn-glm-second-level-secondlevelmodel"]], "Examples using nilearn.glm.second_level.make_second_level_design_matrix": [[340, "examples-using-nilearn-glm-second-level-make-second-level-design-matrix"]], "Examples using nilearn.glm.second_level.non_parametric_inference": [[341, "examples-using-nilearn-glm-second-level-non-parametric-inference"]], "Examples using nilearn.glm.threshold_stats_img": [[342, "examples-using-nilearn-glm-threshold-stats-img"]], "Examples using nilearn.image.clean_img": [[344, "examples-using-nilearn-image-clean-img"]], "Examples using nilearn.image.concat_imgs": [[345, "examples-using-nilearn-image-concat-imgs"]], "Examples using nilearn.image.coord_transform": [[346, "examples-using-nilearn-image-coord-transform"]], "Examples using nilearn.image.get_data": [[349, "examples-using-nilearn-image-get-data"]], "Examples using nilearn.image.high_variance_confounds": [[350, "examples-using-nilearn-image-high-variance-confounds"]], "Examples using nilearn.image.index_img": [[351, "examples-using-nilearn-image-index-img"]], "Examples using nilearn.image.iter_img": [[352, "examples-using-nilearn-image-iter-img"]], "Examples using nilearn.image.load_img": [[354, "examples-using-nilearn-image-load-img"]], "Examples using nilearn.image.math_img": [[355, "examples-using-nilearn-image-math-img"]], "Examples using nilearn.image.mean_img": [[356, "examples-using-nilearn-image-mean-img"]], "Examples using nilearn.image.new_img_like": [[357, "examples-using-nilearn-image-new-img-like"]], "Examples using nilearn.image.resample_img": [[359, "examples-using-nilearn-image-resample-img"]], "Examples using nilearn.image.resample_to_img": [[360, "examples-using-nilearn-image-resample-to-img"]], "Examples using nilearn.image.smooth_img": [[361, "examples-using-nilearn-image-smooth-img"]], "Examples using nilearn.image.threshold_img": [[363, "examples-using-nilearn-image-threshold-img"]], "Examples using nilearn.interfaces.bids.save_glm_to_bids": [[366, "examples-using-nilearn-interfaces-bids-save-glm-to-bids"]], "Examples using nilearn.interfaces.fmriprep.load_confounds": [[367, "examples-using-nilearn-interfaces-fmriprep-load-confounds"]], "Examples using nilearn.interfaces.fmriprep.load_confounds_strategy": [[368, "examples-using-nilearn-interfaces-fmriprep-load-confounds-strategy"]], "Examples using nilearn.interfaces.fsl.get_design_from_fslmat": [[369, "examples-using-nilearn-interfaces-fsl-get-design-from-fslmat"]], "Examples using nilearn.maskers.BaseMasker": [[370, "examples-using-nilearn-maskers-basemasker"]], "Examples using nilearn.maskers.MultiNiftiLabelsMasker": [[371, "examples-using-nilearn-maskers-multiniftilabelsmasker"]], "Examples using nilearn.maskers.MultiNiftiMapsMasker": [[372, "examples-using-nilearn-maskers-multiniftimapsmasker"]], "Examples using nilearn.maskers.MultiNiftiMasker": [[373, "examples-using-nilearn-maskers-multiniftimasker"]], "Examples using nilearn.maskers.NiftiLabelsMasker": [[374, "examples-using-nilearn-maskers-niftilabelsmasker"]], "Examples using nilearn.maskers.NiftiMapsMasker": [[375, "examples-using-nilearn-maskers-niftimapsmasker"]], "Examples using nilearn.maskers.NiftiMasker": [[376, "examples-using-nilearn-maskers-niftimasker"]], "Examples using nilearn.maskers.NiftiSpheresMasker": [[377, "examples-using-nilearn-maskers-niftispheresmasker"]], "Examples using nilearn.maskers.SurfaceLabelsMasker": [[378, "examples-using-nilearn-maskers-surfacelabelsmasker"]], "Examples using nilearn.maskers.SurfaceMasker": [[380, "examples-using-nilearn-maskers-surfacemasker"]], "Examples using nilearn.masking.apply_mask": [[381, "examples-using-nilearn-masking-apply-mask"]], "Examples using nilearn.masking.compute_epi_mask": [[384, "examples-using-nilearn-masking-compute-epi-mask"]], "Examples using nilearn.masking.unmask": [[389, "examples-using-nilearn-masking-unmask"]], "Examples using nilearn.mass_univariate.permuted_ols": [[390, "examples-using-nilearn-mass-univariate-permuted-ols"]], "Examples using nilearn.plotting.displays.LProjector": [[395, "examples-using-nilearn-plotting-displays-lprojector"]], "Examples using nilearn.plotting.displays.LRProjector": [[396, "examples-using-nilearn-plotting-displays-lrprojector"]], "Examples using nilearn.plotting.displays.LYRProjector": [[397, "examples-using-nilearn-plotting-displays-lyrprojector"]], "Examples using nilearn.plotting.displays.LYRZProjector": [[398, "examples-using-nilearn-plotting-displays-lyrzprojector"]], "Examples using nilearn.plotting.displays.LZRProjector": [[399, "examples-using-nilearn-plotting-displays-lzrprojector"]], "Examples using nilearn.plotting.displays.LZRYProjector": [[400, "examples-using-nilearn-plotting-displays-lzryprojector"]], "Examples using nilearn.plotting.displays.MosaicSlicer": [[401, "examples-using-nilearn-plotting-displays-mosaicslicer"]], "Examples using nilearn.plotting.displays.OrthoProjector": [[402, "examples-using-nilearn-plotting-displays-orthoprojector"]], "Examples using nilearn.plotting.displays.OrthoSlicer": [[403, "examples-using-nilearn-plotting-displays-orthoslicer"]], "Examples using nilearn.plotting.displays.PlotlySurfaceFigure": [[404, "examples-using-nilearn-plotting-displays-plotlysurfacefigure"]], "Examples using nilearn.plotting.displays.RProjector": [[405, "examples-using-nilearn-plotting-displays-rprojector"]], "Examples using nilearn.plotting.displays.TiledSlicer": [[406, "examples-using-nilearn-plotting-displays-tiledslicer"]], "Examples using nilearn.plotting.displays.XProjector": [[407, "examples-using-nilearn-plotting-displays-xprojector"]], "Examples using nilearn.plotting.displays.XSlicer": [[408, "examples-using-nilearn-plotting-displays-xslicer"]], "Examples using nilearn.plotting.displays.XZProjector": [[409, "examples-using-nilearn-plotting-displays-xzprojector"]], "Examples using nilearn.plotting.displays.XZSlicer": [[410, "examples-using-nilearn-plotting-displays-xzslicer"]], "Examples using nilearn.plotting.displays.YProjector": [[411, "examples-using-nilearn-plotting-displays-yprojector"]], "Examples using nilearn.plotting.displays.YSlicer": [[412, "examples-using-nilearn-plotting-displays-yslicer"]], "Examples using nilearn.plotting.displays.YXProjector": [[413, "examples-using-nilearn-plotting-displays-yxprojector"]], "Examples using nilearn.plotting.displays.YXSlicer": [[414, "examples-using-nilearn-plotting-displays-yxslicer"]], "Examples using nilearn.plotting.displays.YZProjector": [[415, "examples-using-nilearn-plotting-displays-yzprojector"]], "Examples using nilearn.plotting.displays.YZSlicer": [[416, "examples-using-nilearn-plotting-displays-yzslicer"]], "Examples using nilearn.plotting.displays.ZProjector": [[417, "examples-using-nilearn-plotting-displays-zprojector"]], "Examples using nilearn.plotting.displays.ZSlicer": [[418, "examples-using-nilearn-plotting-displays-zslicer"]], "Examples using nilearn.plotting.find_parcellation_cut_coords": [[422, "examples-using-nilearn-plotting-find-parcellation-cut-coords"]], "Examples using nilearn.plotting.find_probabilistic_atlas_cut_coords": [[423, "examples-using-nilearn-plotting-find-probabilistic-atlas-cut-coords"]], "Examples using nilearn.plotting.find_xyz_cut_coords": [[424, "examples-using-nilearn-plotting-find-xyz-cut-coords"]], "Examples using nilearn.plotting.plot_anat": [[427, "examples-using-nilearn-plotting-plot-anat"]], "Examples using nilearn.plotting.plot_carpet": [[428, "examples-using-nilearn-plotting-plot-carpet"]], "Examples using nilearn.plotting.plot_connectome": [[429, "examples-using-nilearn-plotting-plot-connectome"]], "Examples using nilearn.plotting.plot_contrast_matrix": [[430, "examples-using-nilearn-plotting-plot-contrast-matrix"]], "Examples using nilearn.plotting.plot_design_matrix": [[431, "examples-using-nilearn-plotting-plot-design-matrix"]], "Examples using nilearn.plotting.plot_design_matrix_correlation": [[432, "examples-using-nilearn-plotting-plot-design-matrix-correlation"]], "Examples using nilearn.plotting.plot_epi": [[433, "examples-using-nilearn-plotting-plot-epi"]], "Examples using nilearn.plotting.plot_event": [[434, "examples-using-nilearn-plotting-plot-event"]], "Examples using nilearn.plotting.plot_glass_brain": [[435, "examples-using-nilearn-plotting-plot-glass-brain"]], "Examples using nilearn.plotting.plot_img": [[436, "examples-using-nilearn-plotting-plot-img"]], "Examples using nilearn.plotting.plot_img_on_surf": [[437, "examples-using-nilearn-plotting-plot-img-on-surf"]], "Examples using nilearn.plotting.plot_markers": [[438, "examples-using-nilearn-plotting-plot-markers"]], "Examples using nilearn.plotting.plot_matrix": [[439, "examples-using-nilearn-plotting-plot-matrix"]], "Examples using nilearn.plotting.plot_prob_atlas": [[440, "examples-using-nilearn-plotting-plot-prob-atlas"]], "Examples using nilearn.plotting.plot_roi": [[441, "examples-using-nilearn-plotting-plot-roi"]], "Examples using nilearn.plotting.plot_stat_map": [[442, "examples-using-nilearn-plotting-plot-stat-map"]], "Examples using nilearn.plotting.plot_surf": [[443, "examples-using-nilearn-plotting-plot-surf"]], "Examples using nilearn.plotting.plot_surf_contours": [[444, "examples-using-nilearn-plotting-plot-surf-contours"]], "Examples using nilearn.plotting.plot_surf_roi": [[445, "examples-using-nilearn-plotting-plot-surf-roi"]], "Examples using nilearn.plotting.plot_surf_stat_map": [[446, "examples-using-nilearn-plotting-plot-surf-stat-map"]], "Examples using nilearn.plotting.show": [[447, "examples-using-nilearn-plotting-show"]], "Examples using nilearn.plotting.view_connectome": [[448, "examples-using-nilearn-plotting-view-connectome"]], "Examples using nilearn.plotting.view_img": [[449, "examples-using-nilearn-plotting-view-img"]], "Examples using nilearn.plotting.view_img_on_surf": [[450, "examples-using-nilearn-plotting-view-img-on-surf"]], "Examples using nilearn.plotting.view_surf": [[452, "examples-using-nilearn-plotting-view-surf"]], "Examples using nilearn.regions.Parcellations": [[454, "examples-using-nilearn-regions-parcellations"]], "Examples using nilearn.regions.RegionExtractor": [[456, "examples-using-nilearn-regions-regionextractor"]], "Examples using nilearn.regions.connected_label_regions": [[457, "examples-using-nilearn-regions-connected-label-regions"]], "Examples using nilearn.regions.connected_regions": [[458, "examples-using-nilearn-regions-connected-regions"]], "Examples using nilearn.reporting.HTMLReport": [[464, "examples-using-nilearn-reporting-htmlreport"]], "Examples using nilearn.reporting.get_clusters_table": [[465, "examples-using-nilearn-reporting-get-clusters-table"]], "Examples using nilearn.surface.FileMesh": [[470, "examples-using-nilearn-surface-filemesh"]], "Examples using nilearn.surface.InMemoryMesh": [[471, "examples-using-nilearn-surface-inmemorymesh"]], "Examples using nilearn.surface.PolyData": [[472, "examples-using-nilearn-surface-polydata"]], "Examples using nilearn.surface.PolyMesh": [[473, "examples-using-nilearn-surface-polymesh"]], "Examples using nilearn.surface.SurfaceImage": [[474, "examples-using-nilearn-surface-surfaceimage"]], "Examples using nilearn.surface.SurfaceMesh": [[475, "examples-using-nilearn-surface-surfacemesh"]], "Examples using nilearn.surface.vol_to_surf": [[478, "examples-using-nilearn-surface-vol-to-surf"]], "Execution time": [[177, "execution-time"]], "Exercise": [[191, null]], "Exercise: computing connectivity in tangent space": [[164, null]], "Exercise: computing sparse inverse covariance": [[164, null]], "Exercise: computing the correlation matrix of rest fmri": [[164, null], [165, null]], "Exercise: correlation matrix of rest fMRI on probabilistic atlas": [[165, null]], "Extra mask parameters: opening, cutoff\u2026": [[191, "extra-mask-parameters-opening-cutoff"]], "Extract coordinates on Yeo atlas - parcellations": [[50, "extract-coordinates-on-yeo-atlas-parcellations"]], "Extract functional networks with Dictionary learning": [[53, "extract-functional-networks-with-dictionary-learning"]], "Extract regions from networks": [[53, "extract-regions-from-networks"]], "Extract signals and compute a connectivity matrix without confounds removal": [[59, "extract-signals-and-compute-a-connectivity-matrix-without-confounds-removal"]], "Extract signals on a parcellation defined by labels": [[59, "extract-signals-on-a-parcellation-defined-by-labels"]], "Extract signals on spheres and plot a connectome": [[61, null]], "Extract signals on spheres from an atlas": [[61, "extract-signals-on-spheres-from-an-atlas"]], "Extract subjects variabilities around a group connectivity": [[54, "extract-subjects-variabilities-around-a-group-connectivity"]], "Extract the largest clusters": [[71, "extract-the-largest-clusters"]], "Extract the seed region\u2019s time course": [[64, "extract-the-seed-region-s-time-course"]], "Extract the time series": [[57, "extract-the-time-series"]], "Extract time series": [[55, "extract-time-series"]], "Extracting a brain mask": [[27, "extracting-a-brain-mask"], [190, "extracting-a-brain-mask"]], "Extracting functional brain networks: ICA and related": [[169, null]], "Extracting predicted time series and residuals": [[179, "extracting-predicted-time-series-and-residuals"]], "Extracting region signals": [[56, "extracting-region-signals"]], "Extracting signals from a brain parcellation": [[59, null]], "Extracting signals from a probabilistic atlas": [[165, "extracting-signals-from-a-probabilistic-atlas"]], "Extracting signals from brain regions using the NiftiLabelsMasker": [[93, null]], "Extracting signals of a probabilistic atlas of functional regions": [[57, null]], "Extracting signals on a parcellation": [[165, "extracting-signals-on-a-parcellation"]], "Extracting the seed time series with masker": [[24, "extracting-the-seed-time-series-with-masker"]], "Extracting times series to build a functional connectome": [[165, null]], "Extraction of signals from regions for multiple subjects: MultiNiftiMasker, MultiNiftiLabelsMasker, MultiNiftiMapsMasker": [[191, "extraction-of-signals-from-regions-for-multiple-subjects-multiniftimasker-multiniftilabelsmasker-multiniftimapsmasker"]], "Extraction of signals from regions: NiftiLabelsMasker, NiftiMapsMasker": [[191, "extraction-of-signals-from-regions-niftilabelsmasker-niftimapsmasker"]], "Extraction of signals from seeds: NiftiSpheresMasker": [[191, "extraction-of-signals-from-seeds-niftispheresmasker"]], "Extraction of signals from surface images SurfaceMasker, SurfaceLabelsMasker, SurfaceMapsMasker": [[191, "extraction-of-signals-from-surface-images-surfacemasker-surfacelabelsmasker-surfacemapsmasker"]], "Extracts signal from sphere around DMN seeds": [[61, "extracts-signal-from-sphere-around-dmn-seeds"]], "F-scores computation": [[38, "f-scores-computation"]], "FIAC": [[479, "fiac"]], "FIXES": [[150, "fixes"], [162, "id3087"]], "FMRIB Software Library (FSL)": [[182, "fmrib-software-library-fsl"]], "FREM on Jimura et al \u201cmixed gambles\u201d dataset": [[42, null]], "FREM pipeline": [[172, "frem-pipeline"]], "FREM: fast ensembling of regularized models for robust decoding": [[172, null]], "Feature extraction: from fMRI volumes to a data matrix": [[3, "feature-extraction-from-fmri-volumes-to-a-data-matrix"]], "Feature selection": [[41, "feature-selection"]], "Featured examples": [[185, "featured-examples"]], "Fetch and inspect the data": [[72, "fetch-and-inspect-the-data"]], "Fetch brain development functional datasets": [[53, "fetch-brain-development-functional-datasets"]], "Fetch data": [[27, "fetch-data"]], "Fetch dataset": [[78, "fetch-dataset"], [81, "fetch-dataset"], [82, "fetch-dataset"]], "Fetch example BIDS dataset": [[104, "fetch-example-bids-dataset"], [113, "fetch-example-bids-dataset"]], "Fetch example Haxby dataset": [[35, "fetch-example-haxby-dataset"]], "Fetch images for \u201csuccessful stop minus go\u201d-like protocols.": [[112, "fetch-images-for-successful-stop-minus-go-like-protocols"]], "Fetch openneuro BIDS dataset": [[65, "fetch-openneuro-bids-dataset"]], "Fetching Probabilistic atlas - MSDL atlas": [[21, "fetching-probabilistic-atlas-msdl-atlas"]], "Fetching data from ADHD dataset": [[12, "fetching-data-from-adhd-dataset"]], "Fetching datasets": [[56, "fetching-datasets"]], "Fetching movie-watching based functional datasets": [[168, "fetching-movie-watching-based-functional-datasets"]], "Fetching open datasets from Internet": [[189, "fetching-open-datasets-from-internet"]], "Fetching the Megatrawls Network matrices": [[28, "fetching-the-megatrawls-network-matrices"]], "File name matching: \u201cglobbing\u201d and user path expansion": [[189, "file-name-matching-globbing-and-user-path-expansion"]], "File names and objects, 3D and 4D images": [[189, "file-names-and-objects-3d-and-4d-images"]], "Final script": [[170, null]], "Finding help": [[186, "finding-help"]], "First download the data": [[3, "first-download-the-data"], [101, "first-download-the-data"]], "First level analysis of a complete BIDS dataset from openneuro": [[65, null]], "First level model estimation": [[104, "first-level-model-estimation"]], "First level model estimation (one subject)": [[65, "first-level-model-estimation-one-subject"]], "First level models": [[179, null]], "First level report": [[479, "first-level-report"]], "First steps with nilearn": [[186, "first-steps-with-nilearn"]], "First we load the Miyawaki dataset": [[44, "first-we-load-the-miyawaki-dataset"]], "Fisher-z transformation and save nifti": [[58, "fisher-z-transformation-and-save-nifti"]], "Fit FREM": [[33, "fit-frem"], [42, "fit-frem"]], "Fit model": [[71, "fit-model"]], "Fit the Decoder and predict the responses": [[36, "fit-the-decoder-and-predict-the-responses"]], "Fit the SpaceNet and predict with it": [[46, "fit-the-spacenet-and-predict-with-it"]], "Fit the decoder and predict": [[31, "fit-the-decoder-and-predict"]], "Fit the model": [[72, "fit-the-model"]], "Fitting CanICA model with nilearn": [[169, "fitting-canica-model-with-nilearn"]], "Fitting a first level model": [[179, "fitting-a-first-level-model"]], "Fitting a second level model": [[183, "fitting-a-second-level-model"]], "Fixed effects analyses": [[182, null]], "Fixes": [[125, "fixes"], [127, "fixes"], [128, "fixes"], [128, "id2"], [129, "fixes"], [130, "fixes"], [131, "fixes"], [132, "fixes"], [133, "fixes"], [134, "fixes"], [137, "fixes"], [140, "fixes"], [141, "fixes"], [142, "fixes"], [142, "id3"], [143, "fixes"], [144, "fixes"], [146, "fixes"], [147, "fixes"], [148, "fixes"], [149, "fixes"], [150, "id4"], [150, "id8"], [150, "id12"], [151, "fixes"], [152, "fixes"], [153, "fixes"], [154, "fixes"], [155, "fixes"], [156, "fixes"], [157, "fixes"], [158, "fixes"], [159, "fixes"], [160, "fixes"], [162, "fixes"], [162, "id168"], [162, "id339"], [162, "id509"], [162, "id680"], [162, "id852"], [162, "id1024"], [162, "id1195"], [162, "id1198"], [162, "id1370"], [162, "id1544"], [162, "id1714"], [162, "id1886"], [162, "id2058"], [162, "id2230"], [162, "id2402"], [162, "id2574"], [162, "id2744"], [162, "id2914"], [162, "id3090"], [162, "id3095"], [162, "id3099"], [162, "id3269"], [162, "id3440"], [162, "id3619"], [162, "id3794"], [162, "id4133"], [162, "id4305"], [162, "id4475"], [162, "id4480"], [162, "id4649"], [162, "id4821"], [162, "id5331"], [162, "id5844"]], "Fixtures": [[178, "fixtures"]], "From neuroimaging volumes to data matrices: the masker objects": [[191, null]], "Full Example": [[164, null]], "Full code example": [[170, null]], "Full example": [[164, null], [164, null], [164, null], [165, null], [165, null]], "Functional connectivity": [[49, null], [116, "functional-connectivity"]], "Functional connectivity and resting state": [[166, null]], "Functional connectivity predicts age group": [[102, null]], "Functions": [[192, "functions"], [193, "functions"], [193, "id1"], [193, "id2"], [193, "id3"], [481, "functions"], [481, "id2"], [481, "id4"], [482, "functions"], [484, "functions"], [484, "id1"], [484, "id2"], [486, "functions"], [487, "functions"], [488, "functions"], [488, "id1"], [488, "id2"], [490, "functions"], [491, "functions"], [492, "functions"], [493, "functions"]], "Functions for data preparation and image transformation": [[190, "functions-for-data-preparation-and-image-transformation"]], "Funding": [[0, "funding"]], "Further Reading": [[175, null]], "Further reading": [[7, "further-reading"]], "GLM: First level analysis": [[63, null], [116, "glm-first-level-analysis"]], "GLM: Second level analysis": [[76, null], [116, "glm-second-level-analysis"]], "General bibliography": [[118, null]], "General functions": [[193, "general-functions"]], "General functions descriptions": [[193, "general-functions-descriptions"]], "Generate an events.tsv file for the NeuroSpin localizer task": [[74, null]], "Generate figures": [[107, "generate-figures"]], "Generating a report": [[35, "generating-a-report"], [64, "generating-a-report"], [73, "generating-a-report"]], "Generating new baseline figures for plotting tests": [[187, "generating-new-baseline-figures-for-plotting-tests"]], "Get image and term data": [[107, "get-image-and-term-data"]], "Get residuals": [[71, "get-residuals"]], "Get the locations from which vol_to_surf would draw its samples": [[25, "get-the-locations-from-which-vol-to-surf-would-draw-its-samples"]], "Getting the data": [[58, "getting-the-data"]], "GitHub Actions Specification": [[163, "github-actions-specification"]], "Github release": [[187, "github-release"]], "Glass brain plotting in nilearn": [[14, null]], "Glass brain plotting in nilearn (all options)": [[15, null]], "Glass brain plotting: Hemispheric sagittal cuts": [[14, "glass-brain-plotting-hemispheric-sagittal-cuts"]], "Glass brain plotting: black background": [[14, "glass-brain-plotting-black-background"]], "Glass brain plotting: whole brain sagittal cuts": [[14, "glass-brain-plotting-whole-brain-sagittal-cuts"]], "Globbing over multiple 3D volumes": [[4, "globbing-over-multiple-3d-volumes"]], "Glossary": [[184, null]], "Going further": [[120, "going-further"]], "Going further with scikit-learn": [[101, "going-further-with-scikit-learn"], [173, "going-further-with-scikit-learn"]], "Group Sparse inverse covariance for multi-subject connectome": [[56, null]], "Group level model": [[113, "group-level-model"]], "Group-sparse covariance estimation": [[177, null]], "Guidelines for HTML and CSS": [[178, "guidelines-for-html-and-css"]], "Guidelines for Private Functions": [[178, "guidelines-for-private-functions"]], "HIGHLIGHTS": [[127, "highlights"], [129, "highlights"], [130, "highlights"], [131, "highlights"], [132, "highlights"], [133, "highlights"], [134, "highlights"], [150, "highlights"], [153, "highlights"], [154, "highlights"], [155, "highlights"], [156, "highlights"], [157, "highlights"], [159, "highlights"], [162, "highlights"], [162, "id338"], [162, "id508"], [162, "id679"], [162, "id850"], [162, "id1022"], [162, "id1368"], [162, "id1540"], [162, "id1884"], [162, "id2056"], [162, "id2228"], [162, "id2400"], [162, "id2571"], [162, "id3083"]], "HRF models": [[179, "hrf-models"]], "Harvard Oxford atlas": [[216, null]], "Haxby dataset": [[217, null]], "Here we run the prediction: the decoding itself": [[44, "here-we-run-the-prediction-the-decoding-itself"]], "Highlights": [[126, "highlights"], [142, "highlights"], [143, "highlights"], [144, "highlights"], [147, "highlights"], [147, "id4"], [147, "id8"], [162, "id3613"], [162, "id3617"], [162, "id3622"], [162, "id4131"], [162, "id4303"], [162, "id4478"], [162, "id5675"]], "How do we decide what code goes in?": [[178, "how-do-we-decide-what-code-goes-in"]], "How to contribute a dataset fetcher": [[178, "how-to-contribute-a-dataset-fetcher"]], "How to contribute an atlas": [[178, "how-to-contribute-an-atlas"]], "How to contribute to nilearn": [[178, "how-to-contribute-to-nilearn"]], "How to get help?": [[178, "how-to-get-help"]], "How to help the project?": [[178, "how-to-help-the-project"]], "How to make a release?": [[187, "how-to-make-a-release"]], "Hyperparameter optimization": [[41, "hyperparameter-optimization"]], "ICBM 152 template": [[218, null]], "Image affines": [[189, null]], "Image operations: creating a ROI mask manually": [[190, "image-operations-creating-a-roi-mask-manually"]], "Image thresholded at -2 when two_sided=False": [[98, "id1"]], "Image thresholded at 2 when two_sided=False": [[98, "image-thresholded-at-2-when-two-sided-false"]], "Image thresholded at 2 when two_sided=True": [[98, "image-thresholded-at-2-when-two-sided-true"]], "Image thresholding": [[98, null]], "Image without threshold": [[98, "image-without-threshold"]], "Impact of plot parameters on visualization": [[10, "impact-of-plot-parameters-on-visualization"]], "Implementing a KFold loop": [[3, "implementing-a-kfold-loop"]], "Import modules": [[71, "import-modules"]], "Important links": [[495, "important-links"]], "Inference with massively univariate model": [[45, "inference-with-massively-univariate-model"]], "Initial estimate value": [[177, "initial-estimate-value"]], "Initialize and run the GLM": [[73, "initialize-and-run-the-glm"]], "Input and output: neuroimaging data representation": [[189, null]], "Inputing data: file names or image objects": [[189, "inputing-data-file-names-or-image-objects"]], "Inspecting the dataset": [[6, "inspecting-the-dataset"]], "Inspecting the model weights": [[3, "inspecting-the-model-weights"]], "Install": [[495, "install"]], "Installing": [[178, "installing"]], "Instantiate and run FirstLevelModel": [[35, "instantiate-and-run-firstlevelmodel"]], "Interacting with figures": [[488, "module-nilearn.plotting.displays"]], "Interactive plots": [[494, "interactive-plots"]], "Interactive visualization of statistical map slices": [[494, "interactive-visualization-of-statistical-map-slices"]], "Interpreting such components": [[169, "interpreting-such-components"]], "Intro to GLM Analysis: a single-run, single-subject fMRI dataset": [[6, null]], "Introduction": [[186, null]], "Inverse transform: unmasking data": [[191, "inverse-transform-unmasking-data"]], "Issues": [[187, "issues"]], "Iterate over fetched atlases to extract coordinates - probabilistic": [[50, "iterate-over-fetched-atlases-to-extract-coordinates-probabilistic"]], "Iterative grid search": [[177, "iterative-grid-search"]], "Juelich atlas": [[219, null]], "Known Issues": [[148, "known-issues"], [162, "known-issues"]], "Labels": [[187, "labels"]], "Latest release": [[495, "latest-release"]], "Learning with examples": [[186, "learning-with-examples"]], "Learning with the API references": [[186, "learning-with-the-api-references"]], "Let us quantify our prediction error": [[44, "let-us-quantify-our-prediction-error"]], "License": [[196, "license"], [198, "license"], [199, "license"], [200, "license"], [201, "license"], [203, "license"], [204, "license"], [205, "license"], [206, "license"], [207, "license"], [208, "license"], [209, "license"], [210, "license"], [211, "license"], [212, "license"], [213, "license"], [214, "license"], [216, "license"], [217, "license"], [218, "license"], [219, "license"], [220, "license"], [221, "license"], [222, "license"], [223, "license"], [224, "license"], [225, "license"], [226, "license"], [227, "license"], [228, "license"], [229, "license"], [230, "license"], [231, "license"], [232, "license"], [233, "license"], [234, "license"], [235, "license"], [236, "license"]], "Linking total and direct interactions at the group level": [[164, "linking-total-and-direct-interactions-at-the-group-level"]], "Load Haxby dataset": [[19, "load-haxby-dataset"], [38, "load-haxby-dataset"], [39, "load-haxby-dataset"], [106, "load-haxby-dataset"]], "Load Oasis dataset": [[45, "load-oasis-dataset"], [77, "load-oasis-dataset"]], "Load and prepare the data": [[34, "load-and-prepare-the-data"]], "Load atlases": [[50, "load-atlases"]], "Load brain development fMRI dataset": [[51, "load-brain-development-fmri-dataset"]], "Load brain development fMRI dataset and MSDL atlas": [[54, "load-brain-development-fmri-dataset-and-msdl-atlas"], [102, "load-brain-development-fmri-dataset-and-msdl-atlas"]], "Load confounds from file using a flexible strategy with fmriprep interface": [[59, "load-confounds-from-file-using-a-flexible-strategy-with-fmriprep-interface"]], "Load data": [[14, "load-data"]], "Load functional data": [[50, "load-functional-data"]], "Load probabilistic atlases - extracting coordinates on brain maps": [[50, "load-probabilistic-atlases-extracting-coordinates-on-brain-maps"]], "Load the Haxby data dataset": [[37, "load-the-haxby-data-dataset"]], "Load the Haxby dataset": [[33, "load-the-haxby-dataset"], [36, "load-the-haxby-dataset"], [41, "load-the-haxby-dataset"]], "Load the Oasis VBM dataset": [[46, "load-the-oasis-vbm-dataset"]], "Load the behavioral data": [[31, "load-the-behavioral-data"], [35, "load-the-behavioral-data"]], "Load the behavioral labels": [[3, "load-the-behavioral-labels"]], "Load the data": [[15, "load-the-data"]], "Load the data from the Jimura mixed-gamble experiment": [[42, "load-the-data-from-the-jimura-mixed-gamble-experiment"]], "Load the surface image": [[7, "load-the-surface-image"]], "Loading and plotting of a cortical surface atlas": [[23, null]], "Loading and preparing the data": [[170, "loading-and-preparing-the-data"]], "Loading non image data: experiment description": [[120, "loading-non-image-data-experiment-description"]], "Loading the data": [[32, "loading-the-data"], [43, "loading-the-data"], [96, "loading-the-data"]], "Loading the data into nilearn": [[170, "loading-the-data-into-nilearn"]], "Look-up table format": [[11, null]], "Looping on all volumes in a 4D file": [[2, "looping-on-all-volumes-in-a-4d-file"]], "Looping through selected volumes in a 4D file": [[2, "looping-through-selected-volumes-in-a-4d-file"]], "MSDL atlas": [[224, null]], "Machine learning applications to Neuroimaging": [[186, "machine-learning-applications-to-neuroimaging"]], "Maintenance": [[178, "maintenance"], [187, null]], "Making a surface plot of a 3D statistical map": [[10, null]], "Making interactive visualizations: view_img": [[17, "making-interactive-visualizations-view-img"]], "Manipulating brain image volumes": [[85, null], [116, "manipulating-brain-image-volumes"]], "Manipulating images: resampling, smoothing, masking, ROIs\u2026": [[190, null]], "Manipulation brain volumes with nilearn": [[188, null]], "Manually leaving out data": [[3, "manually-leaving-out-data"]], "Mapping the encoding scores on the brain": [[43, "mapping-the-encoding-scores-on-the-brain"]], "Mask data": [[106, "mask-data"]], "Mask the fMRI image using NiftiMasker": [[111, "mask-the-fmri-image-using-niftimasker"]], "Masking": [[68, "masking"], [175, "masking"]], "Masking and plotting surface images": [[114, "masking-and-plotting-surface-images"]], "Masking data: from 4D Nifti images to 2D data arrays": [[190, "masking-data-from-4d-nifti-images-to-2d-data-arrays"]], "Masking the data": [[101, "masking-the-data"]], "Masking the data: from 4D image to 2D array": [[120, "masking-the-data-from-4d-image-to-2d-array"]], "Masking using numpy indexing": [[111, "masking-using-numpy-indexing"]], "Masking using numpy indexing in parallel with shared memory": [[111, "masking-using-numpy-indexing-in-parallel-with-shared-memory"]], "Massively univariate analysis of a calculation task from the Localizer dataset": [[110, null]], "Massively univariate analysis of a motor task from the Localizer dataset": [[109, null]], "Massively univariate analysis of face vs house recognition": [[106, null]], "Maximum number of iterations": [[177, "maximum-number-of-iterations"]], "Measuring prediction performance": [[170, "measuring-prediction-performance"]], "Measuring prediction scores using cross-validation": [[3, "measuring-prediction-scores-using-cross-validation"]], "Measuring the chance level": [[101, "measuring-the-chance-level"], [173, "measuring-the-chance-level"]], "MegaTrawls Network Matrices HCP": [[197, null]], "Mesh": [[7, "mesh"]], "Mixed gambles statistical maps": [[222, null]], "Miyawaki 2008 dataset": [[223, null]], "Modifying dimensions in the formula": [[105, "modifying-dimensions-in-the-formula"]], "Modifying the stopping criterion": [[177, "modifying-the-stopping-criterion"]], "More plotting tools from nilearn": [[16, null]], "MosaicSlicer: Three views along multiple rows and columns": [[16, "mosaicslicer-three-views-along-multiple-rows-and-columns"]], "Motion-based scrubbing": [[59, "motion-based-scrubbing"]], "Multi-subject ICA: CanICA": [[169, "multi-subject-ica-canica"]], "MultiNiftiLabelsMasker Usage": [[191, "multiniftilabelsmasker-usage"]], "MultiNiftiMapsMasker Usage": [[191, "multiniftimapsmasker-usage"]], "MultiNiftiMasker Usage": [[191, "multiniftimasker-usage"]], "Multiple Comparisons": [[180, "multiple-comparisons"]], "Multiple comparisons correction": [[183, "multiple-comparisons-correction"]], "Multivariate decompositions: Independent component analysis of fMRI": [[108, null]], "NEW": [[127, "new"], [128, "new"], [129, "new"], [130, "new"], [147, "new"], [148, "new"], [149, "new"], [150, "new"], [150, "id2"], [150, "id5"], [150, "id10"], [153, "new"], [154, "new"], [155, "new"], [156, "new"], [157, "new"], [159, "new"], [160, "new"], [162, "new"], [162, "id851"], [162, "id1023"], [162, "id1194"], [162, "id1369"], [162, "id1542"], [162, "id1885"], [162, "id2057"], [162, "id2229"], [162, "id2401"], [162, "id2572"], [162, "id3084"], [162, "id3088"], [162, "id3092"], [162, "id3097"], [162, "id3268"], [162, "id3438"], [162, "id3609"]], "NKI enhanced surface dataset": [[226, null]], "Negating an image with math_img": [[92, null]], "Nested cross-validation": [[36, "nested-cross-validation"]], "NeuroImaging volumes visualization": [[27, null]], "NeuroVault cross-study ICA maps": [[107, null]], "NeuroVault meta-analysis of stop-go paradigm studies": [[112, null]], "Neurosynth annotations": [[121, "neurosynth-annotations"]], "Neurovault statistical maps": [[225, null]], "New": [[137, "new"], [139, "new"], [140, "new"], [140, "id3"], [162, "id4820"], [162, "id4823"], [162, "id4992"], [162, "id5329"]], "New features": [[135, "new-features"], [138, "new-features"], [162, "new-features"], [162, "id5504"]], "Nifti and Analyze data": [[189, "nifti-and-analyze-data"]], "Nifti labels masker": [[480, "nifti-labels-masker"]], "Nifti maps masker": [[480, "nifti-maps-masker"]], "Nifti masker": [[480, "nifti-masker"]], "Nifti sphere masker": [[480, "nifti-sphere-masker"]], "NiftiLabelsMasker Usage": [[191, "niftilabelsmasker-usage"]], "NiftiMapsMasker Usage": [[191, "niftimapsmasker-usage"]], "NiftiMasker: applying a mask to load time-series": [[191, "niftimasker-applying-a-mask-to-load-time-series"]], "Niimg-like objects": [[189, "niimg-like-objects"]], "Nilearn": [[185, null]], "Nilearn MNI template": [[218, null], [271, null], [272, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null]], "Nilearn data for examples": [[169, null]], "Nilearn plotting functions": [[17, "nilearn-plotting-functions"]], "Notes": [[196, "notes"], [197, "notes"], [198, "notes"], [199, "notes"], [200, "notes"], [202, "notes"], [203, "notes"], [204, "notes"], [205, "notes"], [206, "notes"], [207, "notes"], [208, "notes"], [209, "notes"], [210, "notes"], [211, "notes"], [212, "notes"], [213, "notes"], [214, "notes"], [216, "notes"], [217, "notes"], [218, "notes"], [219, "notes"], [220, "notes"], [221, "notes"], [222, "notes"], [223, "notes"], [224, "notes"], [225, "notes"], [226, "notes"], [227, "notes"], [228, "notes"], [229, "notes"], [230, "notes"], [231, "notes"], [232, "notes"], [233, "notes"], [234, "notes"], [235, "notes"], [236, "notes"]], "Now we compute cross-validation scores": [[37, "now-we-compute-cross-validation-scores"]], "Numerical stability": [[177, "numerical-stability"]], "OASIS volume based morphometry maps": [[227, null]], "Objective": [[169, "objective"]], "Obtain FirstLevelModel objects automatically and fit arguments": [[65, "obtain-firstlevelmodel-objects-automatically-and-fit-arguments"]], "Obtain automatically FirstLevelModel objects and fit arguments": [[104, "obtain-automatically-firstlevelmodel-objects-and-fit-arguments"]], "Obtain prediction scores via cross validation": [[31, "obtain-prediction-scores-via-cross-validation"]], "OrthoSlicer: Three views \u2018sagittal\u2019, \u2018coronal\u2019 and \u2018axial\u2019 with coordinates": [[16, "orthoslicer-three-views-sagittal-coronal-and-axial-with-coordinates"]], "Other contributors": [[0, "other-contributors"]], "Other probabilistic atlases accessible with nilearn": [[22, "other-probabilistic-atlases-accessible-with-nilearn"]], "Output": [[121, "output"]], "Overlay anatomical image as edges: add_edges": [[16, "overlay-anatomical-image-as-edges-add-edges"]], "PR Structure": [[178, "pr-structure"]], "Page summary": [[164, null], [165, null], [168, null], [169, null], [179, null], [182, null], [183, null]], "Parameter min_size": [[88, "parameter-min-size"]], "Parameter selection": [[164, null]], "Parametric modulation": [[66, "parametric-modulation"], [74, "parametric-modulation"]], "Pauli 2007 atlas": [[228, null]], "Perform first level analysis": [[64, "perform-first-level-analysis"], [70, "perform-first-level-analysis"]], "Perform massively univariate analysis with permuted OLS": [[106, "perform-massively-univariate-analysis-with-permuted-ols"]], "Perform the second level analysis": [[83, "perform-the-second-level-analysis"]], "Performance monitoring": [[178, "performance-monitoring"]], "Performing a simple decoding analysis": [[170, "performing-a-simple-decoding-analysis"]], "Performing an F-test": [[6, "performing-an-f-test"]], "Performing decoding with scikit-learn": [[101, "performing-decoding-with-scikit-learn"], [173, "performing-decoding-with-scikit-learn"]], "Performing the GLM analysis": [[6, "performing-the-glm-analysis"]], "Performing the seed-to-voxel correlation analysis": [[58, "performing-the-seed-to-voxel-correlation-analysis"]], "Permutation test": [[101, "permutation-test"]], "Plot 3D image for comparison": [[10, "plot-3d-image-for-comparison"]], "Plot Haxby masks": [[19, null]], "Plot R-squared": [[71, "plot-r-squared"]], "Plot a confusion matrix": [[37, "plot-a-confusion-matrix"]], "Plot a directed connectome - asymmetric connectivity measure": [[50, "plot-a-directed-connectome-asymmetric-connectivity-measure"]], "Plot barplots of the prediction scores": [[37, "plot-barplots-of-the-prediction-scores"]], "Plot confusion matrix": [[33, "plot-confusion-matrix"]], "Plot connectivity matrix": [[114, "plot-connectivity-matrix"]], "Plot distribution of residuals": [[71, "plot-distribution-of-residuals"]], "Plot matplotlib color maps": [[13, "plot-matplotlib-color-maps"], [13, "id1"]], "Plot matrix, graph, and strength": [[61, "plot-matrix-graph-and-strength"]], "Plot multiple views of the 3D volume on a surface": [[10, "plot-multiple-views-of-the-3d-volume-on-a-surface"]], "Plot predicted and actual time series for 6 most significant clusters": [[71, "plot-predicted-and-actual-time-series-for-6-most-significant-clusters"]], "Plot regions extracted for only one specific network": [[53, "plot-regions-extracted-for-only-one-specific-network"]], "Plot resulting connectomes": [[53, "plot-resulting-connectomes"]], "Plot the combined z maps": [[112, "plot-the-combined-z-maps"]], "Plot the masks": [[19, "plot-the-masks"]], "Plot the mesh and the sample locations": [[25, "plot-the-mesh-and-the-sample-locations"]], "Plot the outline of a mask: add_contours": [[16, "plot-the-outline-of-a-mask-add-contours"]], "Plot the prediction scores using matplotlib": [[36, "plot-the-prediction-scores-using-matplotlib"]], "Plot the results": [[82, "plot-the-results"]], "Plot the surface image": [[10, "plot-the-surface-image"]], "Plot thresholded z scores map": [[6, "plot-thresholded-z-scores-map"]], "Plot with higher-resolution mesh": [[10, "plot-with-higher-resolution-mesh"]], "Plotting": [[488, "module-nilearn.plotting"]], "Plotting EPI image: plot_epi": [[17, "plotting-epi-image-plot-epi"]], "Plotting ROIs (here the mask): plot_roi": [[17, "plotting-rois-here-the-mask-plot-roi"]], "Plotting anatomical images: plot_anat": [[17, "plotting-anatomical-images-plot-anat"]], "Plotting brain images": [[494, null]], "Plotting images with transparent thresholding": [[26, null]], "Plotting seeds: add_markers": [[16, "plotting-seeds-add-markers"]], "Plotting statistical maps in a glass brain: plot_glass_brain": [[17, "plotting-statistical-maps-in-a-glass-brain-plot-glass-brain"]], "Plotting statistical maps: plot_stat_map": [[17, "plotting-statistical-maps-plot-stat-map"]], "Plotting the SVM weights": [[3, "plotting-the-svm-weights"]], "Plotting the seed-to-voxel correlation map": [[58, "plotting-the-seed-to-voxel-correlation-map"]], "Plotting the surface image": [[7, "plotting-the-surface-image"]], "Plotting threshold set to 1": [[17, "plotting-threshold-set-to-1"]], "Plotting threshold set to 1 with vmax=0": [[17, "plotting-threshold-set-to-1-with-vmax-0"]], "Plotting threshold set to 1 with vmin=0": [[17, "plotting-threshold-set-to-1-with-vmin-0"]], "Plotting tools in nilearn": [[17, null]], "Plotting with decrease of contrast in background image with dim=.5": [[18, "plotting-with-decrease-of-contrast-in-background-image-with-dim-5"]], "Plotting with enhancement of background image with dim=-.5": [[18, "plotting-with-enhancement-of-background-image-with-dim-5"]], "Plotting with more decrease in contrast with dim=1": [[18, "plotting-with-more-decrease-in-contrast-with-dim-1"]], "Plotting with no change of contrast in background image with dim=0": [[18, "plotting-with-no-change-of-contrast-in-background-image-with-dim-0"]], "Plotting without threshold": [[17, "plotting-without-threshold"]], "Post-release": [[187, "post-release"]], "Power 2011 atlas": [[229, null]], "Pre-commit": [[178, "pre-commit"]], "Predicted time series and residuals": [[71, null]], "Prediction accuracy at chance using simple strategies": [[170, "prediction-accuracy-at-chance-using-simple-strategies"]], "Predictions: regression, classification and multi-class": [[171, "predictions-regression-classification-and-multi-class"]], "Predictive modeling analysis: VBM bio-markers of aging?": [[45, "predictive-modeling-analysis-vbm-bio-markers-of-aging"]], "Prepare code for the release": [[187, "prepare-code-for-the-release"]], "Prepare data and analysis parameters": [[64, "prepare-data-and-analysis-parameters"], [70, "prepare-data-and-analysis-parameters"], [103, "prepare-data-and-analysis-parameters"]], "Prepare masks": [[38, "prepare-masks"]], "Prepare some images for a simple t test": [[83, "prepare-some-images-for-a-simple-t-test"]], "Prepare the documentation for the release": [[187, "prepare-the-documentation-for-the-release"]], "Prepare the fMRI data": [[37, "prepare-the-fmri-data"]], "Prepare the release": [[187, "prepare-the-release"]], "Preparing the data": [[175, "preparing-the-data"]], "Preprocess data": [[45, "preprocess-data"]], "Preprocessed datasets": [[193, "preprocessed-datasets"]], "Preprocessing": [[41, "preprocessing"], [201, "preprocessing"]], "Principle of cross-validation": [[177, "principle-of-cross-validation"]], "Principle of the Searchlight": [[175, "principle-of-the-searchlight"]], "Probabilistic atlases": [[165, "probabilistic-atlases"], [193, "probabilistic-atlases"]], "Producing single subject maps of seed-to-voxel correlation": [[58, null]], "Project Organization": [[187, "project-organization"]], "Project the fMRI image to the surface": [[70, "project-the-fmri-image-to-the-surface"]], "Projectors": [[488, "projectors"]], "Pull Requests": [[187, "pull-requests"]], "Putting it all together": [[170, null]], "Python globbing": [[189, null]], "Quick sanity check on fit arguments": [[104, "quick-sanity-check-on-fit-arguments"]], "Quickstart": [[495, null]], "ROI-based decoding analysis in Haxby et al. dataset": [[34, null]], "ROI-to-ROI correlations of children": [[54, "roi-to-roi-correlations-of-children"]], "Reading CSV with pandas": [[189, null]], "Recommendation": [[178, null], [178, null]], "Reconstruction of visual stimuli from Miyawaki et al. 2008": [[44, null]], "Reference": [[164, null], [164, null], [164, null], [164, null], [167, null]], "References": [[3, "references"], [23, "references"], [24, "references"], [26, "references"], [33, "references"], [34, "references"], [39, "references"], [40, "references"], [43, "references"], [44, "references"], [47, "references"], [51, "references"], [52, "references"], [54, "references"], [59, "references"], [61, "references"], [74, "references"], [78, "references"], [101, "references"], [102, "references"], [103, "references"], [106, "references"], [121, "references"], [164, null], [164, "references"], [165, null], [165, null], [165, "references"], [167, "references"], [168, null], [168, "references"], [169, null], [169, null], [169, "references"], [170, "references"], [171, "references"], [172, "references"], [175, "references"], [176, "references"], [177, "references"], [184, "references"], [186, "references"], [196, "references"], [197, "references"], [198, "references"], [199, "references"], [200, "references"], [201, "references"], [203, "references"], [204, "references"], [205, "references"], [206, "references"], [207, "references"], [208, "references"], [209, "references"], [210, "references"], [211, "references"], [212, "references"], [213, "references"], [214, "references"], [216, "references"], [217, "references"], [218, "references"], [219, "references"], [220, "references"], [221, "references"], [222, "references"], [223, "references"], [224, "references"], [225, "references"], [226, "references"], [227, "references"], [228, "references"], [229, "references"], [230, "references"], [231, "references"], [232, "references"], [233, "references"], [234, "references"], [235, "references"], [236, "references"]], "Region Extraction for better brain parcellations": [[168, null]], "Region Extraction using a t-statistical map (3D)": [[90, null]], "Region Extraction with Dictionary learning maps": [[168, "region-extraction-with-dictionary-learning-maps"]], "Region signals extraction": [[54, "region-signals-extraction"]], "Regions Extraction of Default Mode Networks using Smith Atlas": [[89, null]], "Regions definition": [[191, "regions-definition"]], "Regions extraction using dictionary learning and functional connectomes": [[53, null]], "Regression": [[171, "regression"]], "Relabeling the atlas into separated regions": [[88, "relabeling-the-atlas-into-separated-regions"]], "Related example": [[176, "related-example"]], "Removing confounds": [[68, "removing-confounds"]], "Report bugs or discuss enhancement ideas": [[178, "report-bugs-or-discuss-enhancement-ideas"]], "Resample an image to a template": [[95, null]], "Resampling images": [[190, "resampling-images"]], "Resampling one image to match another one": [[190, "resampling-one-image-to-match-another-one"]], "Resampling to a specific target affine, shape, or resolution": [[190, "resampling-to-a-specific-target-affine-shape-or-resolution"]], "Resampling: resizing and changing resolutions of images": [[191, "resampling-resizing-and-changing-resolutions-of-images"]], "Reshape and mask images": [[107, "reshape-and-mask-images"]], "Restrict the analysis to cats and faces": [[3, "restrict-the-analysis-to-cats-and-faces"]], "Restrict to faces and houses": [[38, "restrict-to-faces-and-houses"], [39, "restrict-to-faces-and-houses"], [106, "restrict-to-faces-and-houses"]], "Retrieve and load the fMRI data from the Haxby study": [[3, "retrieve-and-load-the-fmri-data-from-the-haxby-study"], [101, "retrieve-and-load-the-fmri-data-from-the-haxby-study"]], "Retrieve the atlas and the data": [[55, "retrieve-the-atlas-and-the-data"], [57, "retrieve-the-atlas-and-the-data"], [59, "retrieve-the-atlas-and-the-data"]], "Retrieve the brain development fMRI dataset": [[61, "retrieve-the-brain-development-fmri-dataset"]], "Retrieve the data: the localizer dataset with contrast maps": [[18, "retrieve-the-data-the-localizer-dataset-with-contrast-maps"]], "Retrieve the files of the Haxby dataset": [[31, "retrieve-the-files-of-the-haxby-dataset"]], "Retrieving multiscale group brain parcellations": [[20, "retrieving-multiscale-group-brain-parcellations"]], "Retrieving the atlas data": [[11, "retrieving-the-atlas-data"]], "Retrieving the data": [[6, "retrieving-the-data"], [24, "retrieving-the-data"], [68, "retrieving-the-data"]], "Review Pull Requests": [[178, "review-pull-requests"]], "Run ICA and map components to terms": [[107, "run-ica-and-map-components-to-terms"]], "Run different estimators": [[47, "run-different-estimators"]], "Run the GLM on data from each run": [[35, "run-the-glm-on-data-from-each-run"]], "Run the estimators": [[47, "run-the-estimators"]], "Running a basic model": [[68, "running-a-basic-model"]], "Running scikit-learn functions for more control on the analysis": [[173, null]], "SPM auditory dataset": [[233, null]], "SPM multimodal dataset": [[234, null]], "Sample and plot response functions": [[69, "sample-and-plot-response-functions"]], "Sample the 3D data around each node of the mesh": [[10, "sample-the-3d-data-around-each-node-of-the-mesh"]], "Save plots to a file: savefig": [[16, "save-plots-to-a-file-savefig"]], "Save the surface image": [[7, "save-the-surface-image"]], "Saving model outputs to disk": [[65, "saving-model-outputs-to-disk"], [77, "saving-model-outputs-to-disk"]], "Saving results to a file": [[4, "saving-results-to-a-file"]], "Schaefer 2018 atlas": [[230, null]], "Scope of the project": [[178, "scope-of-the-project"]], "Score function": [[175, "score-function"]], "Searchlight": [[175, "id6"]], "Searchlight : finding voxels containing information": [[175, null]], "Searchlight analysis of face vs house recognition": [[38, null]], "Searchlight computation": [[38, "searchlight-computation"], [39, "searchlight-computation"]], "Second level model estimation": [[104, "second-level-model-estimation"]], "Second level models": [[183, null]], "Second level report": [[479, "second-level-report"]], "Second-level fMRI model: one sample test": [[81, null]], "Second-level fMRI model: true positive proportion in clusters": [[78, null]], "Second-level fMRI model: two-sample test, unpaired and paired": [[82, null]], "See Also": [[210, "see-also"], [211, "see-also"], [212, "see-also"], [213, "see-also"], [214, "see-also"], [215, "see-also"], [218, "see-also"]], "Seed-based connectivity on the surface": [[24, null]], "Seeding": [[178, "seeding"]], "Seitzman 2018 atlas": [[231, null]], "Selection filters": [[121, "selection-filters"]], "Set up the GLM": [[73, "set-up-the-glm"]], "Setting a parameter by cross-validation": [[36, null]], "Setting estimator parameters": [[171, "setting-estimator-parameters"], [173, "setting-estimator-parameters"]], "Setting up the searchlight": [[175, "setting-up-the-searchlight"]], "Setting up your environment": [[178, "setting-up-your-environment"]], "Show stimuli of Haxby et al. dataset": [[40, null]], "Show the design matrices for the first few trials": [[103, "show-the-design-matrices-for-the-first-few-trials"]], "Simple example of NiftiMasker use": [[94, null]], "Simple example of two-runs fMRI model fitting": [[73, null]], "Simple image manipulation: smoothing": [[4, "simple-image-manipulation-smoothing"]], "Simple statistical report of thresholded contrast": [[65, "simple-statistical-report-of-thresholded-contrast"]], "Single-subject data (two runs) in native space": [[72, null]], "Slicers": [[488, "slicers"]], "Smith 2009 atlas": [[232, null]], "Smoothing": [[68, "smoothing"], [191, "smoothing"]], "Smoothing an image": [[97, null]], "SpaceNet: decoding with spatial structure for better maps": [[176, null]], "Sparse inverse covariance for functional connectomes": [[164, "sparse-inverse-covariance-for-functional-connectomes"]], "Sparse inverse covariance on multiple subjects": [[164, "sparse-inverse-covariance-on-multiple-subjects"]], "Spatial regularization of decoding maps on mixed gambles study": [[172, "spatial-regularization-of-decoding-maps-on-mixed-gambles-study"]], "Special case: resampling to a given voxel size": [[190, null]], "Specific images or collections": [[121, "specific-images-or-collections"]], "Specifying the experimental paradigm": [[6, "specifying-the-experimental-paradigm"]], "Sphere radius": [[175, "sphere-radius"]], "Statistical Parametric Mapping (SPM)": [[182, "statistical-parametric-mapping-spm"]], "Statistical maps/derivatives": [[193, "statistical-maps-derivatives"]], "Statistical maps/derivatives descriptions": [[193, "statistical-maps-derivatives-descriptions"]], "Statistical significance testing": [[6, "statistical-significance-testing"]], "Statistical testing of a second-level analysis": [[83, null]], "Stopping criteria": [[177, "stopping-criteria"]], "Stopping criterion": [[177, "stopping-criterion"]], "Studying partial correlations": [[54, "studying-partial-correlations"]], "Subject level models": [[113, "subject-level-models"]], "Surface API": [[132, "surface-api"], [162, "surface-api"]], "Surface BOLD response": [[39, "surface-bold-response"]], "Surface GLM": [[479, "surface-glm"], [479, "id1"]], "Surface labels masker": [[480, "surface-labels-masker"]], "Surface maps masker": [[480, "surface-maps-masker"]], "Surface masker": [[480, "surface-masker"]], "Surface plotting": [[494, "surface-plotting"]], "Surface-based analysis": [[179, "surface-based-analysis"]], "Surface-based dataset first and second level analysis of a dataset": [[113, null]], "Synthetic dataset": [[177, "synthetic-dataset"]], "Table of contents": [[497, "table-of-contents"]], "Talairach atlas": [[235, null]], "Team": [[0, null]], "Technical details": [[197, null], [278, null]], "Technical point: Illustration of the volume to surface sampling schemes": [[25, null]], "Templates": [[193, "templates"]], "Templates descriptions": [[193, "templates-descriptions"]], "Temporal Filtering and confound removal": [[191, "temporal-filtering-and-confound-removal"]], "Terms and conditions": [[197, null], [278, null]], "Tests": [[178, "tests"]], "Text files: phenotype or behavior": [[189, "text-files-phenotype-or-behavior"]], "The Haxby 2001 experiment": [[170, "the-haxby-2001-experiment"]], "The SpaceNet decoder": [[176, "the-spacenet-decoder"]], "The concept of \u201cmasker\u201d objects": [[191, "the-concept-of-masker-objects"]], "The haxby dataset: different multi-class strategies": [[37, null]], "The impact of global signal removal": [[59, "the-impact-of-global-signal-removal"]], "The noise model: ar(1), ols, or higher order ar?": [[68, "the-noise-model-ar-1-ols-or-higher-order-ar"]], "The original Yeo atlas": [[88, "the-original-yeo-atlas"]], "Then we prepare and mask the data": [[44, "then-we-prepare-and-mask-the-data"]], "Thresholding plots": [[17, "thresholding-plots"]], "Thresholding statistical maps": [[183, "thresholding-statistical-maps"]], "TiledSlicer: Three views in 2x2 fashion": [[16, "tiledslicer-three-views-in-2x2-fashion"]], "Time series extraction": [[58, "time-series-extraction"]], "Time series-based": [[179, "time-series-based"]], "Time-series from a brain parcellation or \u201cMaxProb\u201d atlas": [[165, "time-series-from-a-brain-parcellation-or-maxprob-atlas"]], "Time-series from a probabilistic atlas": [[165, "time-series-from-a-probabilistic-atlas"]], "Train and cross-validate via an Scikit-Learn pipeline": [[41, "train-and-cross-validate-via-an-scikit-learn-pipeline"]], "Training the decoder": [[32, "training-the-decoder"]], "Transparent masking of part of the data": [[26, "transparent-masking-of-part-of-the-data"]], "Transparent thresholding and contours": [[26, "transparent-thresholding-and-contours"]], "Transparent thresholding on GLM results": [[26, "transparent-thresholding-on-glm-results"]], "Transparent thresholding with other functions": [[26, "transparent-thresholding-with-other-functions"]], "Tuning cross-validation parameters": [[101, "tuning-cross-validation-parameters"]], "Turning the weights into a nifti image": [[3, "turning-the-weights-into-a-nifti-image"]], "Understanding Decoder": [[41, null]], "Understanding NiftiMasker and mask computation": [[91, null]], "Understanding neuroimaging data": [[189, "understanding-neuroimaging-data"]], "Understanding parameters of the first-level model": [[68, null]], "Unmasking (inverse_transform)": [[120, "unmasking-inverse-transform"]], "Use an atlas and choose regions to outline": [[10, "use-an-atlas-and-choose-regions-to-outline"]], "Use clean_args instead!": [[371, null], [372, null], [373, null], [374, null], [375, null], [376, null], [377, null]], "User guide": [[497, null]], "Using and visualizing the resulting parcellation": [[167, "using-and-visualizing-the-resulting-parcellation"]], "Using any other model in the pipeline": [[173, "using-any-other-model-in-the-pipeline"]], "Using nilearn for the first time": [[186, "using-nilearn-for-the-first-time"]], "Using predefined strategies": [[59, "using-predefined-strategies"]], "Using scikit-learn estimators": [[173, "using-scikit-learn-estimators"]], "Using the decoder": [[114, "using-the-decoder"]], "Using tox": [[187, "using-tox"]], "VBM analysis of aging": [[77, "vbm-analysis-of-aging"]], "Validating results": [[168, "validating-results"]], "Variation of norm of estimate": [[177, "variation-of-norm-of-estimate"]], "View results": [[77, "view-results"]], "View the results": [[72, "view-the-results"]], "Viewing results": [[24, "viewing-results"]], "Visualization": [[23, "visualization"], [27, "visualization"], [28, "visualization"], [32, "visualization"], [38, "visualization"], [39, "visualization"], [45, "visualization"], [106, "visualization"], [175, "visualization"]], "Visualization of Dictionary learning maps": [[168, "visualization-of-dictionary-learning-maps"]], "Visualization of FREM weights": [[33, "visualization-of-frem-weights"]], "Visualization of Region Extraction results": [[168, "visualization-of-region-extraction-results"]], "Visualization of affine resamplings": [[86, null]], "Visualization of brain images": [[9, null], [116, "visualization-of-brain-images"]], "Visualization of functional connectivity matrices": [[168, "visualization-of-functional-connectivity-matrices"]], "Visualize FREM weights": [[42, "visualize-frem-weights"]], "Visualize results": [[65, "visualize-results"]], "Visualize the ANOVA + SVC\u2019s discriminating weights": [[101, "visualize-the-anova-svc-s-discriminating-weights"]], "Visualize the data": [[112, "visualize-the-data"]], "Visualize the decoding maps and quality of predictions": [[46, "visualize-the-decoding-maps-and-quality-of-predictions"]], "Visualize the quality of predictions": [[45, "visualize-the-quality-of-predictions"]], "Visualize the results": [[31, "visualize-the-results"], [83, "visualize-the-results"]], "Visualize: Brain parcellations (Hierarchical KMeans)": [[52, "visualize-brain-parcellations-hierarchical-kmeans"]], "Visualize: Brain parcellations (KMeans)": [[52, "visualize-brain-parcellations-kmeans"]], "Visualize: Brain parcellations (ReNA)": [[52, "visualize-brain-parcellations-rena"]], "Visualize: Brain parcellations (Ward)": [[52, "visualize-brain-parcellations-ward"]], "Visualizing 4D probabilistic atlas maps": [[22, null]], "Visualizing Megatrawls Network Matrices from Human Connectome Project": [[28, null]], "Visualizing a 3D file": [[2, "visualizing-a-3d-file"]], "Visualizing a probabilistic atlas with plot_prob_atlas": [[21, "visualizing-a-probabilistic-atlas-with-plot-prob-atlas"]], "Visualizing a probabilistic atlas with plot_stat_map and add_overlay object": [[21, "visualizing-a-probabilistic-atlas-with-plot-stat-map-and-add-overlay-object"]], "Visualizing a probabilistic atlas: the default mode in the MSDL atlas": [[21, null]], "Visualizing an atlas with its own colormap": [[11, "visualizing-an-atlas-with-its-own-colormap"]], "Visualizing brain parcellations": [[20, "visualizing-brain-parcellations"]], "Visualizing global patterns over time": [[12, "visualizing-global-patterns-over-time"]], "Visualizing global patterns with a carpet plot": [[12, null]], "Visualizing global patterns, separated by tissue type": [[12, "visualizing-global-patterns-separated-by-tissue-type"]], "Visualizing multiscale functional brain parcellations": [[20, null]], "Visualizing one volume in a 4D file": [[2, "visualizing-one-volume-in-a-4d-file"]], "Visualizing results": [[120, "visualizing-results"], [169, "visualizing-results"]], "Visualizing the Harvard-Oxford atlas": [[11, "visualizing-the-harvard-oxford-atlas"]], "Visualizing the Harvard-Oxford atlas with contours": [[11, "visualizing-the-harvard-oxford-atlas-with-contours"]], "Visualizing the Juelich atlas": [[11, "visualizing-the-juelich-atlas"]], "Visualizing the Juelich atlas with contours": [[11, "visualizing-the-juelich-atlas-with-contours"]], "Visualizing the computed mask": [[191, "visualizing-the-computed-mask"]], "Visualizing the decoder\u2019s weights": [[170, "visualizing-the-decoder-s-weights"]], "Visualizing the fMRI volume": [[3, "visualizing-the-fmri-volume"]], "Visualizing the face vs house map": [[32, "visualizing-the-face-vs-house-map"]], "Visualizing the parcellation": [[167, "visualizing-the-parcellation"]], "Visualizing the results": [[170, "visualizing-the-results"]], "Visualizing without a colorbar on the right side": [[17, "visualizing-without-a-colorbar-on-the-right-side"]], "Volume GLM": [[479, "volume-glm"]], "Volume censoring": [[68, "volume-censoring"]], "Voxel based morphometry": [[183, "voxel-based-morphometry"]], "Voxel-Based Morphometry on OASIS dataset": [[77, null]], "Voxel-Based Morphometry on Oasis dataset": [[45, null]], "Voxel-Based Morphometry on Oasis dataset with Space-Net prior": [[46, null]], "Warm restart": [[177, "warm-restart"]], "We define our prediction function": [[44, "we-define-our-prediction-function"]], "We make a simple bar plot to summarize the results": [[34, "we-make-a-simple-bar-plot-to-summarize-the-results"]], "What do we mean by a run?": [[180, null]], "What is a surface image?": [[7, "what-is-a-surface-image"]], "What is fMRI ?": [[180, "what-is-fmri"]], "What is nilearn?": [[186, "what-is-nilearn"]], "What is the chance level accuracy?": [[3, "what-is-the-chance-level-accuracy"]], "What kind of connectivity is most powerful for classification?": [[54, "what-kind-of-connectivity-is-most-powerful-for-classification"], [102, "what-kind-of-connectivity-is-most-powerful-for-classification"]], "What\u2019s new": [[162, null]], "Which clustering to use": [[167, null]], "Who makes decisions": [[178, "who-makes-decisions"]], "Working with Surface images": [[7, null]], "Working with long time series fMRI images": [[111, null]], "XSlicer: Single view \u2018sagittal\u2019 with only two slices": [[16, "xslicer-single-view-sagittal-with-only-two-slices"]], "XZSlicer: Two views \u2018sagittal\u2019 and \u2018axial\u2019 with given coordinates": [[16, "xzslicer-two-views-sagittal-and-axial-with-given-coordinates"]], "YSlicer: Single view \u2018coronal\u2019 with single cut": [[16, "yslicer-single-view-coronal-with-single-cut"]], "YXSlicer: Two views \u2018coronal\u2019 and \u2018sagittal\u2019 with coordinates": [[16, "yxslicer-two-views-coronal-and-sagittal-with-coordinates"]], "YZSlicer: Two views \u2018coronal\u2019 and \u2018axial\u2019 with coordinates": [[16, "yzslicer-two-views-coronal-and-axial-with-coordinates"]], "Yeo 2011 atlas": [[236, null]], "ZSlicer: Single view \u2018axial\u2019 with number of cuts=5": [[16, "zslicer-single-view-axial-with-number-of-cuts-5"]], "`dtype` argument": [[191, null]], "assign.yml": [[163, "assign-yml"]], "auto-comment.yml": [[163, "auto-comment-yml"]], "benchmark.yml": [[163, "benchmark-yml"]], "build-docs.yml": [[163, "build-docs-yml"]], "check_gha_workflow.yml": [[163, "check-gha-workflow-yml"]], "circle_artifacts.yml": [[163, "circle-artifacts-yml"]], "development fMRI dataset": [[206, null]], "fMRI data modeling": [[180, "fmri-data-modeling"]], "fMRI statistical analysis": [[180, "fmri-statistical-analysis"]], "fMRI: using beta maps of a first-level analysis": [[170, null]], "fiac first level dataset": [[209, null]], "fsaverage template": [[210, null]], "fsaverage3 template": [[211, null]], "fsaverage4 template": [[212, null]], "fsaverage5 template": [[213, null]], "fsaverage6 template": [[214, null]], "language localizer demo dataset": [[220, null]], "linkcheck.yml": [[163, "linkcheck-yml"]], "localizer first level dataset": [[221, null]], "nightly_dependencies.yml": [[163, "nightly-dependencies-yml"]], "nilearn": [[495, "nilearn"]], "nilearn.connectome.ConnectivityMeasure": [[238, null]], "nilearn.connectome.GroupSparseCovariance": [[239, null]], "nilearn.connectome.GroupSparseCovarianceCV": [[240, null]], "nilearn.connectome.cov_to_corr": [[241, null]], "nilearn.connectome.group_sparse_covariance": [[242, null]], "nilearn.connectome.prec_to_partial": [[243, null]], "nilearn.connectome.sym_matrix_to_vec": [[244, null]], "nilearn.connectome.vec_to_sym_matrix": [[245, null]], "nilearn.connectome: Functional Connectivity": [[192, null]], "nilearn.datasets.fetch_abide_pcp": [[246, null]], "nilearn.datasets.fetch_adhd": [[247, null]], "nilearn.datasets.fetch_atlas_aal": [[248, null]], "nilearn.datasets.fetch_atlas_allen_2011": [[249, null]], "nilearn.datasets.fetch_atlas_basc_multiscale_2015": [[250, null]], "nilearn.datasets.fetch_atlas_craddock_2012": [[251, null]], "nilearn.datasets.fetch_atlas_destrieux_2009": [[252, null]], "nilearn.datasets.fetch_atlas_difumo": [[253, null]], "nilearn.datasets.fetch_atlas_harvard_oxford": [[254, null]], "nilearn.datasets.fetch_atlas_juelich": [[255, null]], "nilearn.datasets.fetch_atlas_msdl": [[256, null]], "nilearn.datasets.fetch_atlas_pauli_2017": [[257, null]], "nilearn.datasets.fetch_atlas_schaefer_2018": [[258, null]], "nilearn.datasets.fetch_atlas_smith_2009": [[259, null]], "nilearn.datasets.fetch_atlas_surf_destrieux": [[260, null]], "nilearn.datasets.fetch_atlas_talairach": [[261, null]], "nilearn.datasets.fetch_atlas_yeo_2011": [[262, null]], "nilearn.datasets.fetch_bids_langloc_dataset": [[263, null]], "nilearn.datasets.fetch_coords_dosenbach_2010": [[264, null]], "nilearn.datasets.fetch_coords_power_2011": [[265, null]], "nilearn.datasets.fetch_coords_seitzman_2018": [[266, null]], "nilearn.datasets.fetch_development_fmri": [[267, null]], "nilearn.datasets.fetch_ds000030_urls": [[268, null]], "nilearn.datasets.fetch_fiac_first_level": [[269, null]], "nilearn.datasets.fetch_haxby": [[270, null]], "nilearn.datasets.fetch_icbm152_2009": [[271, null]], "nilearn.datasets.fetch_icbm152_brain_gm_mask": [[272, null]], "nilearn.datasets.fetch_language_localizer_demo_dataset": [[273, null]], "nilearn.datasets.fetch_localizer_button_task": [[274, null]], "nilearn.datasets.fetch_localizer_calculation_task": [[275, null]], "nilearn.datasets.fetch_localizer_contrasts": [[276, null]], "nilearn.datasets.fetch_localizer_first_level": [[277, null]], "nilearn.datasets.fetch_megatrawls_netmats": [[278, null]], "nilearn.datasets.fetch_mixed_gambles": [[279, null]], "nilearn.datasets.fetch_miyawaki2008": [[280, null]], "nilearn.datasets.fetch_neurovault": [[281, null]], "nilearn.datasets.fetch_neurovault_auditory_computation_task": [[282, null]], "nilearn.datasets.fetch_neurovault_ids": [[283, null]], "nilearn.datasets.fetch_neurovault_motor_task": [[284, null]], "nilearn.datasets.fetch_oasis_vbm": [[285, null]], "nilearn.datasets.fetch_openneuro_dataset": [[286, null]], "nilearn.datasets.fetch_spm_auditory": [[287, null]], "nilearn.datasets.fetch_spm_multimodal_fmri": [[288, null]], "nilearn.datasets.fetch_surf_fsaverage": [[289, null]], "nilearn.datasets.fetch_surf_nki_enhanced": [[290, null]], "nilearn.datasets.get_data_dirs": [[291, null]], "nilearn.datasets.load_fsaverage": [[292, null]], "nilearn.datasets.load_fsaverage_data": [[293, null]], "nilearn.datasets.load_mni152_brain_mask": [[294, null]], "nilearn.datasets.load_mni152_gm_mask": [[295, null]], "nilearn.datasets.load_mni152_gm_template": [[296, null]], "nilearn.datasets.load_mni152_template": [[297, null]], "nilearn.datasets.load_mni152_wm_mask": [[298, null]], "nilearn.datasets.load_mni152_wm_template": [[299, null]], "nilearn.datasets.load_nki": [[300, null]], "nilearn.datasets.load_sample_motor_activation_image": [[301, null]], "nilearn.datasets.patch_openneuro_dataset": [[302, null]], "nilearn.datasets.select_from_index": [[303, null]], "nilearn.datasets: Automatic Dataset Fetching": [[193, null]], "nilearn.decoding.Decoder": [[304, null]], "nilearn.decoding.DecoderRegressor": [[305, null]], "nilearn.decoding.FREMClassifier": [[306, null]], "nilearn.decoding.FREMRegressor": [[307, null]], "nilearn.decoding.SearchLight": [[308, null]], "nilearn.decoding.SpaceNetClassifier": [[309, null]], "nilearn.decoding.SpaceNetRegressor": [[310, null]], "nilearn.decoding: Decoding": [[194, null]], "nilearn.decomposition.CanICA": [[311, null]], "nilearn.decomposition.DictLearning": [[312, null]], "nilearn.decomposition: Multivariate Decompositions": [[195, null]], "nilearn.glm.ARModel": [[313, null]], "nilearn.glm.Contrast": [[314, null]], "nilearn.glm.FContrastResults": [[315, null]], "nilearn.glm.LikelihoodModelResults": [[316, null]], "nilearn.glm.OLSModel": [[317, null]], "nilearn.glm.RegressionResults": [[318, null]], "nilearn.glm.SimpleRegressionResults": [[319, null]], "nilearn.glm.TContrastResults": [[320, null]], "nilearn.glm.cluster_level_inference": [[321, null]], "nilearn.glm.compute_contrast": [[322, null]], "nilearn.glm.compute_fixed_effects": [[323, null]], "nilearn.glm.expression_to_contrast_vector": [[324, null]], "nilearn.glm.fdr_threshold": [[325, null]], "nilearn.glm.first_level": [[481, "module-nilearn.glm.first_level"]], "nilearn.glm.first_level.FirstLevelModel": [[326, null]], "nilearn.glm.first_level.check_design_matrix": [[327, null]], "nilearn.glm.first_level.compute_regressor": [[328, null]], "nilearn.glm.first_level.first_level_from_bids": [[329, null]], "nilearn.glm.first_level.glover_dispersion_derivative": [[330, null]], "nilearn.glm.first_level.glover_hrf": [[331, null]], "nilearn.glm.first_level.glover_time_derivative": [[332, null]], "nilearn.glm.first_level.make_first_level_design_matrix": [[333, null]], "nilearn.glm.first_level.mean_scaling": [[334, null]], "nilearn.glm.first_level.run_glm": [[335, null]], "nilearn.glm.first_level.spm_dispersion_derivative": [[336, null]], "nilearn.glm.first_level.spm_hrf": [[337, null]], "nilearn.glm.first_level.spm_time_derivative": [[338, null]], "nilearn.glm.second_level": [[481, "module-nilearn.glm.second_level"]], "nilearn.glm.second_level.SecondLevelModel": [[339, null]], "nilearn.glm.second_level.make_second_level_design_matrix": [[340, null]], "nilearn.glm.second_level.non_parametric_inference": [[341, null]], "nilearn.glm.threshold_stats_img": [[342, null]], "nilearn.glm: Generalized Linear Models": [[481, null]], "nilearn.image.binarize_img": [[343, null]], "nilearn.image.clean_img": [[344, null]], "nilearn.image.concat_imgs": [[345, null]], "nilearn.image.coord_transform": [[346, null]], "nilearn.image.copy_img": [[347, null]], "nilearn.image.crop_img": [[348, null]], "nilearn.image.get_data": [[349, null]], "nilearn.image.high_variance_confounds": [[350, null]], "nilearn.image.index_img": [[351, null]], "nilearn.image.iter_img": [[352, null]], "nilearn.image.largest_connected_component_img": [[353, null]], "nilearn.image.load_img": [[354, null]], "nilearn.image.math_img": [[355, null]], "nilearn.image.mean_img": [[356, null]], "nilearn.image.new_img_like": [[357, null]], "nilearn.image.reorder_img": [[358, null]], "nilearn.image.resample_img": [[359, null]], "nilearn.image.resample_to_img": [[360, null]], "nilearn.image.smooth_img": [[361, null]], "nilearn.image.swap_img_hemispheres": [[362, null]], "nilearn.image.threshold_img": [[363, null]], "nilearn.image: Image Processing and Resampling Utilities": [[482, null]], "nilearn.interfaces.bids": [[484, "module-nilearn.interfaces.bids"]], "nilearn.interfaces.bids.get_bids_files": [[364, null]], "nilearn.interfaces.bids.parse_bids_filename": [[365, null]], "nilearn.interfaces.bids.save_glm_to_bids": [[366, null]], "nilearn.interfaces.fmriprep": [[484, "module-nilearn.interfaces.fmriprep"]], "nilearn.interfaces.fmriprep.load_confounds": [[367, null]], "nilearn.interfaces.fmriprep.load_confounds_strategy": [[368, null]], "nilearn.interfaces.fsl": [[484, "module-nilearn.interfaces.fsl"]], "nilearn.interfaces.fsl.get_design_from_fslmat": [[369, null]], "nilearn.interfaces: Loading components from interfaces": [[484, null]], "nilearn.maskers.BaseMasker": [[370, null]], "nilearn.maskers.MultiNiftiLabelsMasker": [[371, null]], "nilearn.maskers.MultiNiftiMapsMasker": [[372, null]], "nilearn.maskers.MultiNiftiMasker": [[373, null]], "nilearn.maskers.NiftiLabelsMasker": [[374, null]], "nilearn.maskers.NiftiMapsMasker": [[375, null]], "nilearn.maskers.NiftiMasker": [[376, null]], "nilearn.maskers.NiftiSpheresMasker": [[377, null]], "nilearn.maskers.SurfaceLabelsMasker": [[378, null]], "nilearn.maskers.SurfaceMapsMasker": [[379, null]], "nilearn.maskers.SurfaceMasker": [[380, null]], "nilearn.maskers: Extracting Signals from Brain Images": [[485, null]], "nilearn.masking.apply_mask": [[381, null]], "nilearn.masking.compute_background_mask": [[382, null]], "nilearn.masking.compute_brain_mask": [[383, null]], "nilearn.masking.compute_epi_mask": [[384, null]], "nilearn.masking.compute_multi_background_mask": [[385, null]], "nilearn.masking.compute_multi_brain_mask": [[386, null]], "nilearn.masking.compute_multi_epi_mask": [[387, null]], "nilearn.masking.intersect_masks": [[388, null]], "nilearn.masking.unmask": [[389, null]], "nilearn.masking: Data Masking Utilities": [[486, null]], "nilearn.mass_univariate.permuted_ols": [[390, null]], "nilearn.mass_univariate: Mass-Univariate Analysis": [[487, null]], "nilearn.plotting.displays.BaseAxes": [[391, null]], "nilearn.plotting.displays.BaseSlicer": [[392, null]], "nilearn.plotting.displays.CutAxes": [[393, null]], "nilearn.plotting.displays.GlassBrainAxes": [[394, null]], "nilearn.plotting.displays.LProjector": [[395, null]], "nilearn.plotting.displays.LRProjector": [[396, null]], "nilearn.plotting.displays.LYRProjector": [[397, null]], "nilearn.plotting.displays.LYRZProjector": [[398, null]], "nilearn.plotting.displays.LZRProjector": [[399, null]], "nilearn.plotting.displays.LZRYProjector": [[400, null]], "nilearn.plotting.displays.MosaicSlicer": [[401, null]], "nilearn.plotting.displays.OrthoProjector": [[402, null]], "nilearn.plotting.displays.OrthoSlicer": [[403, null]], "nilearn.plotting.displays.PlotlySurfaceFigure": [[404, null]], "nilearn.plotting.displays.RProjector": [[405, null]], "nilearn.plotting.displays.TiledSlicer": [[406, null]], "nilearn.plotting.displays.XProjector": [[407, null]], "nilearn.plotting.displays.XSlicer": [[408, null]], "nilearn.plotting.displays.XZProjector": [[409, null]], "nilearn.plotting.displays.XZSlicer": [[410, null]], "nilearn.plotting.displays.YProjector": [[411, null]], "nilearn.plotting.displays.YSlicer": [[412, null]], "nilearn.plotting.displays.YXProjector": [[413, null]], "nilearn.plotting.displays.YXSlicer": [[414, null]], "nilearn.plotting.displays.YZProjector": [[415, null]], "nilearn.plotting.displays.YZSlicer": [[416, null]], "nilearn.plotting.displays.ZProjector": [[417, null]], "nilearn.plotting.displays.ZSlicer": [[418, null]], "nilearn.plotting.displays.get_projector": [[419, null]], "nilearn.plotting.displays.get_slicer": [[420, null]], "nilearn.plotting.find_cut_slices": [[421, null]], "nilearn.plotting.find_parcellation_cut_coords": [[422, null]], "nilearn.plotting.find_probabilistic_atlas_cut_coords": [[423, null]], "nilearn.plotting.find_xyz_cut_coords": [[424, null]], "nilearn.plotting.img_comparison.plot_bland_altman": [[425, null]], "nilearn.plotting.img_comparison.plot_img_comparison": [[426, null]], "nilearn.plotting.plot_anat": [[427, null]], "nilearn.plotting.plot_carpet": [[428, null]], "nilearn.plotting.plot_connectome": [[429, null]], "nilearn.plotting.plot_contrast_matrix": [[430, null]], "nilearn.plotting.plot_design_matrix": [[431, null]], "nilearn.plotting.plot_design_matrix_correlation": [[432, null]], "nilearn.plotting.plot_epi": [[433, null]], "nilearn.plotting.plot_event": [[434, null]], "nilearn.plotting.plot_glass_brain": [[435, null]], "nilearn.plotting.plot_img": [[436, null]], "nilearn.plotting.plot_img_on_surf": [[437, null]], "nilearn.plotting.plot_markers": [[438, null]], "nilearn.plotting.plot_matrix": [[439, null]], "nilearn.plotting.plot_prob_atlas": [[440, null]], "nilearn.plotting.plot_roi": [[441, null]], "nilearn.plotting.plot_stat_map": [[442, null]], "nilearn.plotting.plot_surf": [[443, null]], "nilearn.plotting.plot_surf_contours": [[444, null]], "nilearn.plotting.plot_surf_roi": [[445, null]], "nilearn.plotting.plot_surf_stat_map": [[446, null]], "nilearn.plotting.show": [[447, null]], "nilearn.plotting.view_connectome": [[448, null]], "nilearn.plotting.view_img": [[449, null]], "nilearn.plotting.view_img_on_surf": [[450, null]], "nilearn.plotting.view_markers": [[451, null]], "nilearn.plotting.view_surf": [[452, null]], "nilearn.plotting: Plotting Brain Data": [[488, null]], "nilearn.regions.HierarchicalKMeans": [[453, null]], "nilearn.regions.Parcellations": [[454, null]], "nilearn.regions.ReNA": [[455, null]], "nilearn.regions.RegionExtractor": [[456, null]], "nilearn.regions.connected_label_regions": [[457, null]], "nilearn.regions.connected_regions": [[458, null]], "nilearn.regions.img_to_signals_labels": [[459, null]], "nilearn.regions.img_to_signals_maps": [[460, null]], "nilearn.regions.recursive_neighbor_agglomeration": [[461, null]], "nilearn.regions.signals_to_img_labels": [[462, null]], "nilearn.regions.signals_to_img_maps": [[463, null]], "nilearn.regions: Operating on Regions": [[490, null]], "nilearn.reporting.HTMLReport": [[464, null]], "nilearn.reporting.get_clusters_table": [[465, null]], "nilearn.reporting.make_glm_report": [[466, null]], "nilearn.reporting: Reporting Functions": [[491, null]], "nilearn.signal.butterworth": [[467, null]], "nilearn.signal.clean": [[468, null]], "nilearn.signal.high_variance_confounds": [[469, null]], "nilearn.signal: Preprocessing Time Series": [[492, null]], "nilearn.surface.FileMesh": [[470, null]], "nilearn.surface.InMemoryMesh": [[471, null]], "nilearn.surface.PolyData": [[472, null]], "nilearn.surface.PolyMesh": [[473, null]], "nilearn.surface.SurfaceImage": [[474, null]], "nilearn.surface.SurfaceMesh": [[475, null]], "nilearn.surface.load_surf_data": [[476, null]], "nilearn.surface.load_surf_mesh": [[477, null]], "nilearn.surface.vol_to_surf": [[478, null]], "nilearn.surface: Manipulating Surface Data": [[493, null]], "nilearn_data: Where is the downloaded data stored?": [[189, null]], "plot_surf_stat_map: Surface plot using a surface map and a cortical mesh": [[494, "plot-surf-stat-map-surface-plot-using-a-surface-map-and-a-cortical-mesh"]], "scipy >= 0.14.0 compatibility": [[290, null]], "sourcery.yml": [[163, "sourcery-yml"]], "test_atlases.yml": [[163, "test-atlases-yml"]], "test_with_free_threaded_python.yml": [[163, "test-with-free-threaded-python-yml"]], "test_with_tox.yml": [[163, "test-with-tox-yml"]], "testing_install.yml": [[163, "testing-install-yml"]], "testing_minimum.yml": [[163, "testing-minimum-yml"]], "trigger_hosting_on_pr.yml": [[163, "trigger-hosting-on-pr-yml"]], "update_authors.yml": [[163, "update-authors-yml"]], "view_img_on_surf: Surface plot using a 3D statistical map": [[494, "view-img-on-surf-surface-plot-using-a-3d-statistical-map"]], "view_surf: Surface plot using a surface map and a cortical mesh": [[494, "view-surf-surface-plot-using-a-surface-map-and-a-cortical-mesh"]], "\u201cOpaque\u201d thresholding": [[26, "opaque-thresholding"]], "\u201cTransparent\u201d thresholding": [[26, "transparent-thresholding"]]}, "docnames": ["authors", "auto_examples/00_tutorials/index", "auto_examples/00_tutorials/plot_3d_and_4d_niimg", "auto_examples/00_tutorials/plot_decoding_tutorial", "auto_examples/00_tutorials/plot_nilearn_101", "auto_examples/00_tutorials/plot_python_101", "auto_examples/00_tutorials/plot_single_subject_single_run", "auto_examples/00_tutorials/plot_surface_101", "auto_examples/00_tutorials/sg_execution_times", "auto_examples/01_plotting/index", "auto_examples/01_plotting/plot_3d_map_to_surface_projection", "auto_examples/01_plotting/plot_atlas", "auto_examples/01_plotting/plot_carpet", "auto_examples/01_plotting/plot_colormaps", "auto_examples/01_plotting/plot_demo_glass_brain", "auto_examples/01_plotting/plot_demo_glass_brain_extensive", "auto_examples/01_plotting/plot_demo_more_plotting", "auto_examples/01_plotting/plot_demo_plotting", "auto_examples/01_plotting/plot_dim_plotting", "auto_examples/01_plotting/plot_haxby_masks", "auto_examples/01_plotting/plot_multiscale_parcellations", "auto_examples/01_plotting/plot_overlay", "auto_examples/01_plotting/plot_prob_atlas", "auto_examples/01_plotting/plot_surf_atlas", "auto_examples/01_plotting/plot_surf_stat_map", "auto_examples/01_plotting/plot_surface_projection_strategies", "auto_examples/01_plotting/plot_transparency", "auto_examples/01_plotting/plot_visualization", "auto_examples/01_plotting/plot_visualize_megatrawls_netmats", "auto_examples/01_plotting/sg_execution_times", "auto_examples/02_decoding/index", "auto_examples/02_decoding/plot_haxby_anova_svm", "auto_examples/02_decoding/plot_haxby_different_estimators", "auto_examples/02_decoding/plot_haxby_frem", "auto_examples/02_decoding/plot_haxby_full_analysis", "auto_examples/02_decoding/plot_haxby_glm_decoding", "auto_examples/02_decoding/plot_haxby_grid_search", "auto_examples/02_decoding/plot_haxby_multiclass", "auto_examples/02_decoding/plot_haxby_searchlight", "auto_examples/02_decoding/plot_haxby_searchlight_surface", "auto_examples/02_decoding/plot_haxby_stimuli", "auto_examples/02_decoding/plot_haxby_understand_decoder", "auto_examples/02_decoding/plot_mixed_gambles_frem", "auto_examples/02_decoding/plot_miyawaki_encoding", "auto_examples/02_decoding/plot_miyawaki_reconstruction", "auto_examples/02_decoding/plot_oasis_vbm", "auto_examples/02_decoding/plot_oasis_vbm_space_net", "auto_examples/02_decoding/plot_simulated_data", "auto_examples/02_decoding/sg_execution_times", "auto_examples/03_connectivity/index", "auto_examples/03_connectivity/plot_atlas_comparison", "auto_examples/03_connectivity/plot_compare_decomposition", "auto_examples/03_connectivity/plot_data_driven_parcellations", "auto_examples/03_connectivity/plot_extract_regions_dictlearning_maps", "auto_examples/03_connectivity/plot_group_level_connectivity", "auto_examples/03_connectivity/plot_inverse_covariance_connectome", "auto_examples/03_connectivity/plot_multi_subject_connectome", "auto_examples/03_connectivity/plot_probabilistic_atlas_extraction", "auto_examples/03_connectivity/plot_seed_to_voxel_correlation", "auto_examples/03_connectivity/plot_signal_extraction", "auto_examples/03_connectivity/plot_simulated_connectome", "auto_examples/03_connectivity/plot_sphere_based_connectome", "auto_examples/03_connectivity/sg_execution_times", "auto_examples/04_glm_first_level/index", "auto_examples/04_glm_first_level/plot_adhd_dmn", "auto_examples/04_glm_first_level/plot_bids_features", "auto_examples/04_glm_first_level/plot_design_matrix", "auto_examples/04_glm_first_level/plot_fir_model", "auto_examples/04_glm_first_level/plot_first_level_details", "auto_examples/04_glm_first_level/plot_hrf", "auto_examples/04_glm_first_level/plot_localizer_surface_analysis", "auto_examples/04_glm_first_level/plot_predictions_residuals", "auto_examples/04_glm_first_level/plot_spm_multimodal_faces", "auto_examples/04_glm_first_level/plot_two_runs_model", "auto_examples/04_glm_first_level/plot_write_events_file", "auto_examples/04_glm_first_level/sg_execution_times", "auto_examples/05_glm_second_level/index", "auto_examples/05_glm_second_level/plot_oasis", "auto_examples/05_glm_second_level/plot_proportion_activated_voxels", "auto_examples/05_glm_second_level/plot_second_level_association_test", "auto_examples/05_glm_second_level/plot_second_level_design_matrix", "auto_examples/05_glm_second_level/plot_second_level_one_sample_test", "auto_examples/05_glm_second_level/plot_second_level_two_sample_test", "auto_examples/05_glm_second_level/plot_thresholding", "auto_examples/05_glm_second_level/sg_execution_times", "auto_examples/06_manipulating_images/index", "auto_examples/06_manipulating_images/plot_affine_transformation", "auto_examples/06_manipulating_images/plot_compare_mean_image", "auto_examples/06_manipulating_images/plot_extract_regions_labels_image", "auto_examples/06_manipulating_images/plot_extract_rois_smith_atlas", "auto_examples/06_manipulating_images/plot_extract_rois_statistical_maps", "auto_examples/06_manipulating_images/plot_mask_computation", "auto_examples/06_manipulating_images/plot_negate_image", "auto_examples/06_manipulating_images/plot_nifti_labels_simple", "auto_examples/06_manipulating_images/plot_nifti_simple", "auto_examples/06_manipulating_images/plot_resample_to_template", "auto_examples/06_manipulating_images/plot_roi_extraction", "auto_examples/06_manipulating_images/plot_smooth_mean_image", "auto_examples/06_manipulating_images/plot_threshold_image", "auto_examples/06_manipulating_images/sg_execution_times", "auto_examples/07_advanced/index", "auto_examples/07_advanced/plot_advanced_decoding_scikit", "auto_examples/07_advanced/plot_age_group_prediction_cross_val", "auto_examples/07_advanced/plot_beta_series", "auto_examples/07_advanced/plot_bids_analysis", "auto_examples/07_advanced/plot_copy_headers_math_img", "auto_examples/07_advanced/plot_haxby_mass_univariate", "auto_examples/07_advanced/plot_ica_neurovault", "auto_examples/07_advanced/plot_ica_resting_state", "auto_examples/07_advanced/plot_localizer_mass_univariate_methods", "auto_examples/07_advanced/plot_localizer_simple_analysis", "auto_examples/07_advanced/plot_mask_large_fmri", "auto_examples/07_advanced/plot_neurovault_meta_analysis", "auto_examples/07_advanced/plot_surface_bids_analysis", "auto_examples/07_advanced/plot_surface_image_and_maskers", "auto_examples/07_advanced/sg_execution_times", "auto_examples/index", "auto_examples/sg_execution_times", "bibliography", "building_blocks/index", "building_blocks/manual_pipeline", "building_blocks/neurovault", "changes/0.1.0", "changes/0.1.1", "changes/0.1.2", "changes/0.1.3", "changes/0.1.4", "changes/0.10.0", "changes/0.10.1", "changes/0.10.2", "changes/0.10.3", "changes/0.10.4", "changes/0.11.0", "changes/0.11.1", "changes/0.12.0", "changes/0.2.0", "changes/0.2.1", "changes/0.2.2", "changes/0.2.3", "changes/0.2.4", "changes/0.2.5", "changes/0.2.6", "changes/0.3.0", "changes/0.3.1", "changes/0.4.0", "changes/0.4.1", "changes/0.4.2", "changes/0.5.0", "changes/0.5.1", "changes/0.5.2", "changes/0.6.0", "changes/0.6.1", "changes/0.6.2", "changes/0.7.0", "changes/0.7.1", "changes/0.8.0", "changes/0.8.1", "changes/0.9.0", "changes/0.9.1", "changes/0.9.2", "changes/latest", "changes/names", "changes/whats_new", "ci", "connectivity/connectome_extraction", "connectivity/functional_connectomes", "connectivity/index", "connectivity/parcellating", "connectivity/region_extraction", "connectivity/resting_state_networks", "decoding/decoding_intro", "decoding/estimator_choice", "decoding/frem", "decoding/going_further", "decoding/index", "decoding/searchlight", "decoding/space_net", "developers/group_sparse_covariance", "development", "glm/first_level_model", "glm/glm_intro", "glm/index", "glm/meaning_difference", "glm/second_level_model", "glossary", "index", "introduction", "maintenance", "manipulating_images/index", "manipulating_images/input_output", "manipulating_images/manipulating_images", "manipulating_images/masker_objects", "modules/connectome", "modules/datasets", "modules/decoding", "modules/decomposition", "modules/description/ABIDE_pcp", "modules/description/Megatrawls", "modules/description/aal", "modules/description/adhd", "modules/description/allen_rsn_2011", "modules/description/basc_multiscale_2015", "modules/description/bids_langloc", "modules/description/brainomics_localizer", "modules/description/craddock_2012", "modules/description/destrieux_surface", "modules/description/development_fmri", "modules/description/difumo_atlases", "modules/description/dosenbach_2010", "modules/description/fiac", "modules/description/fsaverage", "modules/description/fsaverage3", "modules/description/fsaverage4", "modules/description/fsaverage5", "modules/description/fsaverage6", "modules/description/fsaverage_content", "modules/description/harvard_oxford", "modules/description/haxby2001", "modules/description/icbm152_2009", "modules/description/juelich", "modules/description/language_localizer_demo", "modules/description/localizer_first_level", "modules/description/mixed_gambles", "modules/description/miyawaki2008", "modules/description/msdl_atlas", "modules/description/neurovault", "modules/description/nki_enhanced_surface", "modules/description/oasis1", "modules/description/pauli_2017", "modules/description/power_2011", "modules/description/schaefer_2018", "modules/description/seitzman_2018", "modules/description/smith_2009", "modules/description/spm_auditory", "modules/description/spm_multimodal", "modules/description/talairach_atlas", "modules/description/yeo_2011", "modules/deterministic_atlases", "modules/generated/nilearn.connectome.ConnectivityMeasure", "modules/generated/nilearn.connectome.GroupSparseCovariance", "modules/generated/nilearn.connectome.GroupSparseCovarianceCV", "modules/generated/nilearn.connectome.cov_to_corr", "modules/generated/nilearn.connectome.group_sparse_covariance", "modules/generated/nilearn.connectome.prec_to_partial", "modules/generated/nilearn.connectome.sym_matrix_to_vec", "modules/generated/nilearn.connectome.vec_to_sym_matrix", "modules/generated/nilearn.datasets.fetch_abide_pcp", "modules/generated/nilearn.datasets.fetch_adhd", "modules/generated/nilearn.datasets.fetch_atlas_aal", "modules/generated/nilearn.datasets.fetch_atlas_allen_2011", "modules/generated/nilearn.datasets.fetch_atlas_basc_multiscale_2015", "modules/generated/nilearn.datasets.fetch_atlas_craddock_2012", "modules/generated/nilearn.datasets.fetch_atlas_destrieux_2009", "modules/generated/nilearn.datasets.fetch_atlas_difumo", "modules/generated/nilearn.datasets.fetch_atlas_harvard_oxford", "modules/generated/nilearn.datasets.fetch_atlas_juelich", "modules/generated/nilearn.datasets.fetch_atlas_msdl", "modules/generated/nilearn.datasets.fetch_atlas_pauli_2017", "modules/generated/nilearn.datasets.fetch_atlas_schaefer_2018", "modules/generated/nilearn.datasets.fetch_atlas_smith_2009", "modules/generated/nilearn.datasets.fetch_atlas_surf_destrieux", "modules/generated/nilearn.datasets.fetch_atlas_talairach", "modules/generated/nilearn.datasets.fetch_atlas_yeo_2011", "modules/generated/nilearn.datasets.fetch_bids_langloc_dataset", "modules/generated/nilearn.datasets.fetch_coords_dosenbach_2010", "modules/generated/nilearn.datasets.fetch_coords_power_2011", "modules/generated/nilearn.datasets.fetch_coords_seitzman_2018", "modules/generated/nilearn.datasets.fetch_development_fmri", "modules/generated/nilearn.datasets.fetch_ds000030_urls", "modules/generated/nilearn.datasets.fetch_fiac_first_level", "modules/generated/nilearn.datasets.fetch_haxby", "modules/generated/nilearn.datasets.fetch_icbm152_2009", "modules/generated/nilearn.datasets.fetch_icbm152_brain_gm_mask", "modules/generated/nilearn.datasets.fetch_language_localizer_demo_dataset", "modules/generated/nilearn.datasets.fetch_localizer_button_task", "modules/generated/nilearn.datasets.fetch_localizer_calculation_task", "modules/generated/nilearn.datasets.fetch_localizer_contrasts", "modules/generated/nilearn.datasets.fetch_localizer_first_level", "modules/generated/nilearn.datasets.fetch_megatrawls_netmats", "modules/generated/nilearn.datasets.fetch_mixed_gambles", "modules/generated/nilearn.datasets.fetch_miyawaki2008", "modules/generated/nilearn.datasets.fetch_neurovault", "modules/generated/nilearn.datasets.fetch_neurovault_auditory_computation_task", "modules/generated/nilearn.datasets.fetch_neurovault_ids", "modules/generated/nilearn.datasets.fetch_neurovault_motor_task", "modules/generated/nilearn.datasets.fetch_oasis_vbm", "modules/generated/nilearn.datasets.fetch_openneuro_dataset", "modules/generated/nilearn.datasets.fetch_spm_auditory", "modules/generated/nilearn.datasets.fetch_spm_multimodal_fmri", "modules/generated/nilearn.datasets.fetch_surf_fsaverage", "modules/generated/nilearn.datasets.fetch_surf_nki_enhanced", "modules/generated/nilearn.datasets.get_data_dirs", "modules/generated/nilearn.datasets.load_fsaverage", "modules/generated/nilearn.datasets.load_fsaverage_data", "modules/generated/nilearn.datasets.load_mni152_brain_mask", "modules/generated/nilearn.datasets.load_mni152_gm_mask", "modules/generated/nilearn.datasets.load_mni152_gm_template", "modules/generated/nilearn.datasets.load_mni152_template", "modules/generated/nilearn.datasets.load_mni152_wm_mask", "modules/generated/nilearn.datasets.load_mni152_wm_template", "modules/generated/nilearn.datasets.load_nki", "modules/generated/nilearn.datasets.load_sample_motor_activation_image", "modules/generated/nilearn.datasets.patch_openneuro_dataset", "modules/generated/nilearn.datasets.select_from_index", "modules/generated/nilearn.decoding.Decoder", "modules/generated/nilearn.decoding.DecoderRegressor", "modules/generated/nilearn.decoding.FREMClassifier", "modules/generated/nilearn.decoding.FREMRegressor", "modules/generated/nilearn.decoding.SearchLight", "modules/generated/nilearn.decoding.SpaceNetClassifier", "modules/generated/nilearn.decoding.SpaceNetRegressor", "modules/generated/nilearn.decomposition.CanICA", "modules/generated/nilearn.decomposition.DictLearning", "modules/generated/nilearn.glm.ARModel", "modules/generated/nilearn.glm.Contrast", "modules/generated/nilearn.glm.FContrastResults", "modules/generated/nilearn.glm.LikelihoodModelResults", "modules/generated/nilearn.glm.OLSModel", "modules/generated/nilearn.glm.RegressionResults", "modules/generated/nilearn.glm.SimpleRegressionResults", "modules/generated/nilearn.glm.TContrastResults", "modules/generated/nilearn.glm.cluster_level_inference", "modules/generated/nilearn.glm.compute_contrast", "modules/generated/nilearn.glm.compute_fixed_effects", "modules/generated/nilearn.glm.expression_to_contrast_vector", "modules/generated/nilearn.glm.fdr_threshold", "modules/generated/nilearn.glm.first_level.FirstLevelModel", "modules/generated/nilearn.glm.first_level.check_design_matrix", "modules/generated/nilearn.glm.first_level.compute_regressor", "modules/generated/nilearn.glm.first_level.first_level_from_bids", "modules/generated/nilearn.glm.first_level.glover_dispersion_derivative", "modules/generated/nilearn.glm.first_level.glover_hrf", "modules/generated/nilearn.glm.first_level.glover_time_derivative", "modules/generated/nilearn.glm.first_level.make_first_level_design_matrix", "modules/generated/nilearn.glm.first_level.mean_scaling", "modules/generated/nilearn.glm.first_level.run_glm", "modules/generated/nilearn.glm.first_level.spm_dispersion_derivative", "modules/generated/nilearn.glm.first_level.spm_hrf", "modules/generated/nilearn.glm.first_level.spm_time_derivative", "modules/generated/nilearn.glm.second_level.SecondLevelModel", "modules/generated/nilearn.glm.second_level.make_second_level_design_matrix", "modules/generated/nilearn.glm.second_level.non_parametric_inference", "modules/generated/nilearn.glm.threshold_stats_img", "modules/generated/nilearn.image.binarize_img", "modules/generated/nilearn.image.clean_img", "modules/generated/nilearn.image.concat_imgs", "modules/generated/nilearn.image.coord_transform", "modules/generated/nilearn.image.copy_img", "modules/generated/nilearn.image.crop_img", "modules/generated/nilearn.image.get_data", "modules/generated/nilearn.image.high_variance_confounds", "modules/generated/nilearn.image.index_img", "modules/generated/nilearn.image.iter_img", "modules/generated/nilearn.image.largest_connected_component_img", "modules/generated/nilearn.image.load_img", "modules/generated/nilearn.image.math_img", "modules/generated/nilearn.image.mean_img", "modules/generated/nilearn.image.new_img_like", "modules/generated/nilearn.image.reorder_img", "modules/generated/nilearn.image.resample_img", "modules/generated/nilearn.image.resample_to_img", "modules/generated/nilearn.image.smooth_img", "modules/generated/nilearn.image.swap_img_hemispheres", "modules/generated/nilearn.image.threshold_img", "modules/generated/nilearn.interfaces.bids.get_bids_files", "modules/generated/nilearn.interfaces.bids.parse_bids_filename", "modules/generated/nilearn.interfaces.bids.save_glm_to_bids", "modules/generated/nilearn.interfaces.fmriprep.load_confounds", "modules/generated/nilearn.interfaces.fmriprep.load_confounds_strategy", "modules/generated/nilearn.interfaces.fsl.get_design_from_fslmat", "modules/generated/nilearn.maskers.BaseMasker", "modules/generated/nilearn.maskers.MultiNiftiLabelsMasker", "modules/generated/nilearn.maskers.MultiNiftiMapsMasker", "modules/generated/nilearn.maskers.MultiNiftiMasker", "modules/generated/nilearn.maskers.NiftiLabelsMasker", "modules/generated/nilearn.maskers.NiftiMapsMasker", "modules/generated/nilearn.maskers.NiftiMasker", "modules/generated/nilearn.maskers.NiftiSpheresMasker", "modules/generated/nilearn.maskers.SurfaceLabelsMasker", "modules/generated/nilearn.maskers.SurfaceMapsMasker", "modules/generated/nilearn.maskers.SurfaceMasker", "modules/generated/nilearn.masking.apply_mask", "modules/generated/nilearn.masking.compute_background_mask", "modules/generated/nilearn.masking.compute_brain_mask", "modules/generated/nilearn.masking.compute_epi_mask", "modules/generated/nilearn.masking.compute_multi_background_mask", "modules/generated/nilearn.masking.compute_multi_brain_mask", "modules/generated/nilearn.masking.compute_multi_epi_mask", "modules/generated/nilearn.masking.intersect_masks", "modules/generated/nilearn.masking.unmask", "modules/generated/nilearn.mass_univariate.permuted_ols", "modules/generated/nilearn.plotting.displays.BaseAxes", "modules/generated/nilearn.plotting.displays.BaseSlicer", "modules/generated/nilearn.plotting.displays.CutAxes", "modules/generated/nilearn.plotting.displays.GlassBrainAxes", "modules/generated/nilearn.plotting.displays.LProjector", "modules/generated/nilearn.plotting.displays.LRProjector", "modules/generated/nilearn.plotting.displays.LYRProjector", "modules/generated/nilearn.plotting.displays.LYRZProjector", "modules/generated/nilearn.plotting.displays.LZRProjector", "modules/generated/nilearn.plotting.displays.LZRYProjector", "modules/generated/nilearn.plotting.displays.MosaicSlicer", "modules/generated/nilearn.plotting.displays.OrthoProjector", "modules/generated/nilearn.plotting.displays.OrthoSlicer", "modules/generated/nilearn.plotting.displays.PlotlySurfaceFigure", "modules/generated/nilearn.plotting.displays.RProjector", "modules/generated/nilearn.plotting.displays.TiledSlicer", "modules/generated/nilearn.plotting.displays.XProjector", "modules/generated/nilearn.plotting.displays.XSlicer", "modules/generated/nilearn.plotting.displays.XZProjector", "modules/generated/nilearn.plotting.displays.XZSlicer", "modules/generated/nilearn.plotting.displays.YProjector", "modules/generated/nilearn.plotting.displays.YSlicer", "modules/generated/nilearn.plotting.displays.YXProjector", "modules/generated/nilearn.plotting.displays.YXSlicer", "modules/generated/nilearn.plotting.displays.YZProjector", "modules/generated/nilearn.plotting.displays.YZSlicer", "modules/generated/nilearn.plotting.displays.ZProjector", "modules/generated/nilearn.plotting.displays.ZSlicer", "modules/generated/nilearn.plotting.displays.get_projector", "modules/generated/nilearn.plotting.displays.get_slicer", "modules/generated/nilearn.plotting.find_cut_slices", "modules/generated/nilearn.plotting.find_parcellation_cut_coords", "modules/generated/nilearn.plotting.find_probabilistic_atlas_cut_coords", "modules/generated/nilearn.plotting.find_xyz_cut_coords", "modules/generated/nilearn.plotting.img_comparison.plot_bland_altman", "modules/generated/nilearn.plotting.img_comparison.plot_img_comparison", "modules/generated/nilearn.plotting.plot_anat", "modules/generated/nilearn.plotting.plot_carpet", "modules/generated/nilearn.plotting.plot_connectome", "modules/generated/nilearn.plotting.plot_contrast_matrix", "modules/generated/nilearn.plotting.plot_design_matrix", "modules/generated/nilearn.plotting.plot_design_matrix_correlation", "modules/generated/nilearn.plotting.plot_epi", "modules/generated/nilearn.plotting.plot_event", "modules/generated/nilearn.plotting.plot_glass_brain", "modules/generated/nilearn.plotting.plot_img", "modules/generated/nilearn.plotting.plot_img_on_surf", "modules/generated/nilearn.plotting.plot_markers", "modules/generated/nilearn.plotting.plot_matrix", "modules/generated/nilearn.plotting.plot_prob_atlas", "modules/generated/nilearn.plotting.plot_roi", "modules/generated/nilearn.plotting.plot_stat_map", "modules/generated/nilearn.plotting.plot_surf", "modules/generated/nilearn.plotting.plot_surf_contours", "modules/generated/nilearn.plotting.plot_surf_roi", "modules/generated/nilearn.plotting.plot_surf_stat_map", "modules/generated/nilearn.plotting.show", "modules/generated/nilearn.plotting.view_connectome", "modules/generated/nilearn.plotting.view_img", "modules/generated/nilearn.plotting.view_img_on_surf", "modules/generated/nilearn.plotting.view_markers", "modules/generated/nilearn.plotting.view_surf", "modules/generated/nilearn.regions.HierarchicalKMeans", "modules/generated/nilearn.regions.Parcellations", "modules/generated/nilearn.regions.ReNA", "modules/generated/nilearn.regions.RegionExtractor", "modules/generated/nilearn.regions.connected_label_regions", "modules/generated/nilearn.regions.connected_regions", "modules/generated/nilearn.regions.img_to_signals_labels", "modules/generated/nilearn.regions.img_to_signals_maps", "modules/generated/nilearn.regions.recursive_neighbor_agglomeration", "modules/generated/nilearn.regions.signals_to_img_labels", "modules/generated/nilearn.regions.signals_to_img_maps", "modules/generated/nilearn.reporting.HTMLReport", "modules/generated/nilearn.reporting.get_clusters_table", "modules/generated/nilearn.reporting.make_glm_report", "modules/generated/nilearn.signal.butterworth", "modules/generated/nilearn.signal.clean", "modules/generated/nilearn.signal.high_variance_confounds", "modules/generated/nilearn.surface.FileMesh", "modules/generated/nilearn.surface.InMemoryMesh", "modules/generated/nilearn.surface.PolyData", "modules/generated/nilearn.surface.PolyMesh", "modules/generated/nilearn.surface.SurfaceImage", "modules/generated/nilearn.surface.SurfaceMesh", "modules/generated/nilearn.surface.load_surf_data", "modules/generated/nilearn.surface.load_surf_mesh", "modules/generated/nilearn.surface.vol_to_surf", "modules/generated_reports/glm_reports_examples", "modules/generated_reports/masker_reports_examples", "modules/glm", "modules/image", "modules/index", "modules/interfaces", "modules/maskers", "modules/masking", "modules/mass_univariate", "modules/plotting", "modules/probabilistic_atlases", "modules/regions", "modules/reporting", "modules/signal", "modules/surface", "plotting/index", "quickstart", "sg_execution_times", "user_guide", "versions"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinxext.opengraph": 1}, "filenames": ["authors.rst", "auto_examples/00_tutorials/index.rst", "auto_examples/00_tutorials/plot_3d_and_4d_niimg.rst", "auto_examples/00_tutorials/plot_decoding_tutorial.rst", "auto_examples/00_tutorials/plot_nilearn_101.rst", "auto_examples/00_tutorials/plot_python_101.rst", "auto_examples/00_tutorials/plot_single_subject_single_run.rst", "auto_examples/00_tutorials/plot_surface_101.rst", "auto_examples/00_tutorials/sg_execution_times.rst", "auto_examples/01_plotting/index.rst", "auto_examples/01_plotting/plot_3d_map_to_surface_projection.rst", "auto_examples/01_plotting/plot_atlas.rst", "auto_examples/01_plotting/plot_carpet.rst", "auto_examples/01_plotting/plot_colormaps.rst", "auto_examples/01_plotting/plot_demo_glass_brain.rst", "auto_examples/01_plotting/plot_demo_glass_brain_extensive.rst", "auto_examples/01_plotting/plot_demo_more_plotting.rst", "auto_examples/01_plotting/plot_demo_plotting.rst", "auto_examples/01_plotting/plot_dim_plotting.rst", "auto_examples/01_plotting/plot_haxby_masks.rst", "auto_examples/01_plotting/plot_multiscale_parcellations.rst", "auto_examples/01_plotting/plot_overlay.rst", "auto_examples/01_plotting/plot_prob_atlas.rst", "auto_examples/01_plotting/plot_surf_atlas.rst", "auto_examples/01_plotting/plot_surf_stat_map.rst", "auto_examples/01_plotting/plot_surface_projection_strategies.rst", "auto_examples/01_plotting/plot_transparency.rst", "auto_examples/01_plotting/plot_visualization.rst", "auto_examples/01_plotting/plot_visualize_megatrawls_netmats.rst", "auto_examples/01_plotting/sg_execution_times.rst", "auto_examples/02_decoding/index.rst", "auto_examples/02_decoding/plot_haxby_anova_svm.rst", "auto_examples/02_decoding/plot_haxby_different_estimators.rst", "auto_examples/02_decoding/plot_haxby_frem.rst", "auto_examples/02_decoding/plot_haxby_full_analysis.rst", "auto_examples/02_decoding/plot_haxby_glm_decoding.rst", "auto_examples/02_decoding/plot_haxby_grid_search.rst", "auto_examples/02_decoding/plot_haxby_multiclass.rst", "auto_examples/02_decoding/plot_haxby_searchlight.rst", "auto_examples/02_decoding/plot_haxby_searchlight_surface.rst", "auto_examples/02_decoding/plot_haxby_stimuli.rst", "auto_examples/02_decoding/plot_haxby_understand_decoder.rst", "auto_examples/02_decoding/plot_mixed_gambles_frem.rst", "auto_examples/02_decoding/plot_miyawaki_encoding.rst", "auto_examples/02_decoding/plot_miyawaki_reconstruction.rst", "auto_examples/02_decoding/plot_oasis_vbm.rst", "auto_examples/02_decoding/plot_oasis_vbm_space_net.rst", "auto_examples/02_decoding/plot_simulated_data.rst", "auto_examples/02_decoding/sg_execution_times.rst", "auto_examples/03_connectivity/index.rst", "auto_examples/03_connectivity/plot_atlas_comparison.rst", "auto_examples/03_connectivity/plot_compare_decomposition.rst", "auto_examples/03_connectivity/plot_data_driven_parcellations.rst", "auto_examples/03_connectivity/plot_extract_regions_dictlearning_maps.rst", "auto_examples/03_connectivity/plot_group_level_connectivity.rst", "auto_examples/03_connectivity/plot_inverse_covariance_connectome.rst", "auto_examples/03_connectivity/plot_multi_subject_connectome.rst", "auto_examples/03_connectivity/plot_probabilistic_atlas_extraction.rst", "auto_examples/03_connectivity/plot_seed_to_voxel_correlation.rst", "auto_examples/03_connectivity/plot_signal_extraction.rst", "auto_examples/03_connectivity/plot_simulated_connectome.rst", "auto_examples/03_connectivity/plot_sphere_based_connectome.rst", "auto_examples/03_connectivity/sg_execution_times.rst", "auto_examples/04_glm_first_level/index.rst", "auto_examples/04_glm_first_level/plot_adhd_dmn.rst", "auto_examples/04_glm_first_level/plot_bids_features.rst", "auto_examples/04_glm_first_level/plot_design_matrix.rst", "auto_examples/04_glm_first_level/plot_fir_model.rst", "auto_examples/04_glm_first_level/plot_first_level_details.rst", "auto_examples/04_glm_first_level/plot_hrf.rst", "auto_examples/04_glm_first_level/plot_localizer_surface_analysis.rst", "auto_examples/04_glm_first_level/plot_predictions_residuals.rst", "auto_examples/04_glm_first_level/plot_spm_multimodal_faces.rst", "auto_examples/04_glm_first_level/plot_two_runs_model.rst", "auto_examples/04_glm_first_level/plot_write_events_file.rst", "auto_examples/04_glm_first_level/sg_execution_times.rst", "auto_examples/05_glm_second_level/index.rst", "auto_examples/05_glm_second_level/plot_oasis.rst", "auto_examples/05_glm_second_level/plot_proportion_activated_voxels.rst", "auto_examples/05_glm_second_level/plot_second_level_association_test.rst", "auto_examples/05_glm_second_level/plot_second_level_design_matrix.rst", "auto_examples/05_glm_second_level/plot_second_level_one_sample_test.rst", "auto_examples/05_glm_second_level/plot_second_level_two_sample_test.rst", "auto_examples/05_glm_second_level/plot_thresholding.rst", "auto_examples/05_glm_second_level/sg_execution_times.rst", "auto_examples/06_manipulating_images/index.rst", "auto_examples/06_manipulating_images/plot_affine_transformation.rst", "auto_examples/06_manipulating_images/plot_compare_mean_image.rst", "auto_examples/06_manipulating_images/plot_extract_regions_labels_image.rst", "auto_examples/06_manipulating_images/plot_extract_rois_smith_atlas.rst", "auto_examples/06_manipulating_images/plot_extract_rois_statistical_maps.rst", "auto_examples/06_manipulating_images/plot_mask_computation.rst", "auto_examples/06_manipulating_images/plot_negate_image.rst", "auto_examples/06_manipulating_images/plot_nifti_labels_simple.rst", "auto_examples/06_manipulating_images/plot_nifti_simple.rst", "auto_examples/06_manipulating_images/plot_resample_to_template.rst", "auto_examples/06_manipulating_images/plot_roi_extraction.rst", "auto_examples/06_manipulating_images/plot_smooth_mean_image.rst", "auto_examples/06_manipulating_images/plot_threshold_image.rst", "auto_examples/06_manipulating_images/sg_execution_times.rst", "auto_examples/07_advanced/index.rst", "auto_examples/07_advanced/plot_advanced_decoding_scikit.rst", "auto_examples/07_advanced/plot_age_group_prediction_cross_val.rst", "auto_examples/07_advanced/plot_beta_series.rst", "auto_examples/07_advanced/plot_bids_analysis.rst", "auto_examples/07_advanced/plot_copy_headers_math_img.rst", "auto_examples/07_advanced/plot_haxby_mass_univariate.rst", "auto_examples/07_advanced/plot_ica_neurovault.rst", "auto_examples/07_advanced/plot_ica_resting_state.rst", "auto_examples/07_advanced/plot_localizer_mass_univariate_methods.rst", "auto_examples/07_advanced/plot_localizer_simple_analysis.rst", "auto_examples/07_advanced/plot_mask_large_fmri.rst", "auto_examples/07_advanced/plot_neurovault_meta_analysis.rst", "auto_examples/07_advanced/plot_surface_bids_analysis.rst", "auto_examples/07_advanced/plot_surface_image_and_maskers.rst", "auto_examples/07_advanced/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/sg_execution_times.rst", "bibliography.rst", "building_blocks/index.rst", "building_blocks/manual_pipeline.rst", "building_blocks/neurovault.rst", "changes/0.1.0.rst", "changes/0.1.1.rst", "changes/0.1.2.rst", "changes/0.1.3.rst", "changes/0.1.4.rst", "changes/0.10.0.rst", "changes/0.10.1.rst", "changes/0.10.2.rst", "changes/0.10.3.rst", "changes/0.10.4.rst", "changes/0.11.0.rst", "changes/0.11.1.rst", "changes/0.12.0.rst", "changes/0.2.0.rst", "changes/0.2.1.rst", "changes/0.2.2.rst", "changes/0.2.3.rst", "changes/0.2.4.rst", "changes/0.2.5.rst", "changes/0.2.6.rst", "changes/0.3.0.rst", "changes/0.3.1.rst", "changes/0.4.0.rst", "changes/0.4.1.rst", "changes/0.4.2.rst", "changes/0.5.0.rst", "changes/0.5.1.rst", "changes/0.5.2.rst", "changes/0.6.0.rst", "changes/0.6.1.rst", "changes/0.6.2.rst", "changes/0.7.0.rst", "changes/0.7.1.rst", "changes/0.8.0.rst", "changes/0.8.1.rst", "changes/0.9.0.rst", "changes/0.9.1.rst", "changes/0.9.2.rst", "changes/latest.rst", "changes/names.rst", "changes/whats_new.rst", "ci.rst", "connectivity/connectome_extraction.rst", "connectivity/functional_connectomes.rst", "connectivity/index.rst", "connectivity/parcellating.rst", "connectivity/region_extraction.rst", "connectivity/resting_state_networks.rst", "decoding/decoding_intro.rst", "decoding/estimator_choice.rst", "decoding/frem.rst", "decoding/going_further.rst", "decoding/index.rst", "decoding/searchlight.rst", "decoding/space_net.rst", "developers/group_sparse_covariance.rst", "development.rst", "glm/first_level_model.rst", "glm/glm_intro.rst", "glm/index.rst", "glm/meaning_difference.rst", "glm/second_level_model.rst", "glossary.rst", "index.rst", "introduction.rst", "maintenance.rst", "manipulating_images/index.rst", "manipulating_images/input_output.rst", "manipulating_images/manipulating_images.rst", "manipulating_images/masker_objects.rst", "modules/connectome.rst", "modules/datasets.rst", "modules/decoding.rst", "modules/decomposition.rst", "modules/description/ABIDE_pcp.rst", "modules/description/Megatrawls.rst", "modules/description/aal.rst", "modules/description/adhd.rst", "modules/description/allen_rsn_2011.rst", "modules/description/basc_multiscale_2015.rst", "modules/description/bids_langloc.rst", "modules/description/brainomics_localizer.rst", "modules/description/craddock_2012.rst", "modules/description/destrieux_surface.rst", "modules/description/development_fmri.rst", "modules/description/difumo_atlases.rst", "modules/description/dosenbach_2010.rst", "modules/description/fiac.rst", "modules/description/fsaverage.rst", "modules/description/fsaverage3.rst", "modules/description/fsaverage4.rst", "modules/description/fsaverage5.rst", "modules/description/fsaverage6.rst", "modules/description/fsaverage_content.rst", "modules/description/harvard_oxford.rst", "modules/description/haxby2001.rst", "modules/description/icbm152_2009.rst", "modules/description/juelich.rst", "modules/description/language_localizer_demo.rst", "modules/description/localizer_first_level.rst", "modules/description/mixed_gambles.rst", "modules/description/miyawaki2008.rst", "modules/description/msdl_atlas.rst", "modules/description/neurovault.rst", "modules/description/nki_enhanced_surface.rst", "modules/description/oasis1.rst", "modules/description/pauli_2017.rst", "modules/description/power_2011.rst", "modules/description/schaefer_2018.rst", "modules/description/seitzman_2018.rst", "modules/description/smith_2009.rst", "modules/description/spm_auditory.rst", "modules/description/spm_multimodal.rst", "modules/description/talairach_atlas.rst", "modules/description/yeo_2011.rst", "modules/deterministic_atlases.md", "modules/generated/nilearn.connectome.ConnectivityMeasure.rst", "modules/generated/nilearn.connectome.GroupSparseCovariance.rst", "modules/generated/nilearn.connectome.GroupSparseCovarianceCV.rst", "modules/generated/nilearn.connectome.cov_to_corr.rst", "modules/generated/nilearn.connectome.group_sparse_covariance.rst", "modules/generated/nilearn.connectome.prec_to_partial.rst", "modules/generated/nilearn.connectome.sym_matrix_to_vec.rst", "modules/generated/nilearn.connectome.vec_to_sym_matrix.rst", "modules/generated/nilearn.datasets.fetch_abide_pcp.rst", "modules/generated/nilearn.datasets.fetch_adhd.rst", "modules/generated/nilearn.datasets.fetch_atlas_aal.rst", "modules/generated/nilearn.datasets.fetch_atlas_allen_2011.rst", "modules/generated/nilearn.datasets.fetch_atlas_basc_multiscale_2015.rst", "modules/generated/nilearn.datasets.fetch_atlas_craddock_2012.rst", "modules/generated/nilearn.datasets.fetch_atlas_destrieux_2009.rst", "modules/generated/nilearn.datasets.fetch_atlas_difumo.rst", "modules/generated/nilearn.datasets.fetch_atlas_harvard_oxford.rst", "modules/generated/nilearn.datasets.fetch_atlas_juelich.rst", "modules/generated/nilearn.datasets.fetch_atlas_msdl.rst", "modules/generated/nilearn.datasets.fetch_atlas_pauli_2017.rst", "modules/generated/nilearn.datasets.fetch_atlas_schaefer_2018.rst", "modules/generated/nilearn.datasets.fetch_atlas_smith_2009.rst", "modules/generated/nilearn.datasets.fetch_atlas_surf_destrieux.rst", "modules/generated/nilearn.datasets.fetch_atlas_talairach.rst", "modules/generated/nilearn.datasets.fetch_atlas_yeo_2011.rst", "modules/generated/nilearn.datasets.fetch_bids_langloc_dataset.rst", "modules/generated/nilearn.datasets.fetch_coords_dosenbach_2010.rst", "modules/generated/nilearn.datasets.fetch_coords_power_2011.rst", "modules/generated/nilearn.datasets.fetch_coords_seitzman_2018.rst", "modules/generated/nilearn.datasets.fetch_development_fmri.rst", "modules/generated/nilearn.datasets.fetch_ds000030_urls.rst", "modules/generated/nilearn.datasets.fetch_fiac_first_level.rst", "modules/generated/nilearn.datasets.fetch_haxby.rst", "modules/generated/nilearn.datasets.fetch_icbm152_2009.rst", "modules/generated/nilearn.datasets.fetch_icbm152_brain_gm_mask.rst", "modules/generated/nilearn.datasets.fetch_language_localizer_demo_dataset.rst", "modules/generated/nilearn.datasets.fetch_localizer_button_task.rst", "modules/generated/nilearn.datasets.fetch_localizer_calculation_task.rst", "modules/generated/nilearn.datasets.fetch_localizer_contrasts.rst", "modules/generated/nilearn.datasets.fetch_localizer_first_level.rst", "modules/generated/nilearn.datasets.fetch_megatrawls_netmats.rst", "modules/generated/nilearn.datasets.fetch_mixed_gambles.rst", "modules/generated/nilearn.datasets.fetch_miyawaki2008.rst", "modules/generated/nilearn.datasets.fetch_neurovault.rst", "modules/generated/nilearn.datasets.fetch_neurovault_auditory_computation_task.rst", "modules/generated/nilearn.datasets.fetch_neurovault_ids.rst", "modules/generated/nilearn.datasets.fetch_neurovault_motor_task.rst", "modules/generated/nilearn.datasets.fetch_oasis_vbm.rst", "modules/generated/nilearn.datasets.fetch_openneuro_dataset.rst", "modules/generated/nilearn.datasets.fetch_spm_auditory.rst", "modules/generated/nilearn.datasets.fetch_spm_multimodal_fmri.rst", "modules/generated/nilearn.datasets.fetch_surf_fsaverage.rst", "modules/generated/nilearn.datasets.fetch_surf_nki_enhanced.rst", "modules/generated/nilearn.datasets.get_data_dirs.rst", "modules/generated/nilearn.datasets.load_fsaverage.rst", "modules/generated/nilearn.datasets.load_fsaverage_data.rst", "modules/generated/nilearn.datasets.load_mni152_brain_mask.rst", "modules/generated/nilearn.datasets.load_mni152_gm_mask.rst", "modules/generated/nilearn.datasets.load_mni152_gm_template.rst", "modules/generated/nilearn.datasets.load_mni152_template.rst", "modules/generated/nilearn.datasets.load_mni152_wm_mask.rst", "modules/generated/nilearn.datasets.load_mni152_wm_template.rst", "modules/generated/nilearn.datasets.load_nki.rst", "modules/generated/nilearn.datasets.load_sample_motor_activation_image.rst", "modules/generated/nilearn.datasets.patch_openneuro_dataset.rst", "modules/generated/nilearn.datasets.select_from_index.rst", "modules/generated/nilearn.decoding.Decoder.rst", "modules/generated/nilearn.decoding.DecoderRegressor.rst", "modules/generated/nilearn.decoding.FREMClassifier.rst", "modules/generated/nilearn.decoding.FREMRegressor.rst", "modules/generated/nilearn.decoding.SearchLight.rst", "modules/generated/nilearn.decoding.SpaceNetClassifier.rst", "modules/generated/nilearn.decoding.SpaceNetRegressor.rst", "modules/generated/nilearn.decomposition.CanICA.rst", "modules/generated/nilearn.decomposition.DictLearning.rst", "modules/generated/nilearn.glm.ARModel.rst", "modules/generated/nilearn.glm.Contrast.rst", "modules/generated/nilearn.glm.FContrastResults.rst", "modules/generated/nilearn.glm.LikelihoodModelResults.rst", "modules/generated/nilearn.glm.OLSModel.rst", "modules/generated/nilearn.glm.RegressionResults.rst", "modules/generated/nilearn.glm.SimpleRegressionResults.rst", "modules/generated/nilearn.glm.TContrastResults.rst", "modules/generated/nilearn.glm.cluster_level_inference.rst", "modules/generated/nilearn.glm.compute_contrast.rst", "modules/generated/nilearn.glm.compute_fixed_effects.rst", "modules/generated/nilearn.glm.expression_to_contrast_vector.rst", "modules/generated/nilearn.glm.fdr_threshold.rst", "modules/generated/nilearn.glm.first_level.FirstLevelModel.rst", "modules/generated/nilearn.glm.first_level.check_design_matrix.rst", "modules/generated/nilearn.glm.first_level.compute_regressor.rst", "modules/generated/nilearn.glm.first_level.first_level_from_bids.rst", "modules/generated/nilearn.glm.first_level.glover_dispersion_derivative.rst", "modules/generated/nilearn.glm.first_level.glover_hrf.rst", "modules/generated/nilearn.glm.first_level.glover_time_derivative.rst", "modules/generated/nilearn.glm.first_level.make_first_level_design_matrix.rst", "modules/generated/nilearn.glm.first_level.mean_scaling.rst", "modules/generated/nilearn.glm.first_level.run_glm.rst", "modules/generated/nilearn.glm.first_level.spm_dispersion_derivative.rst", "modules/generated/nilearn.glm.first_level.spm_hrf.rst", "modules/generated/nilearn.glm.first_level.spm_time_derivative.rst", "modules/generated/nilearn.glm.second_level.SecondLevelModel.rst", "modules/generated/nilearn.glm.second_level.make_second_level_design_matrix.rst", "modules/generated/nilearn.glm.second_level.non_parametric_inference.rst", "modules/generated/nilearn.glm.threshold_stats_img.rst", "modules/generated/nilearn.image.binarize_img.rst", "modules/generated/nilearn.image.clean_img.rst", "modules/generated/nilearn.image.concat_imgs.rst", "modules/generated/nilearn.image.coord_transform.rst", "modules/generated/nilearn.image.copy_img.rst", "modules/generated/nilearn.image.crop_img.rst", "modules/generated/nilearn.image.get_data.rst", "modules/generated/nilearn.image.high_variance_confounds.rst", "modules/generated/nilearn.image.index_img.rst", "modules/generated/nilearn.image.iter_img.rst", "modules/generated/nilearn.image.largest_connected_component_img.rst", "modules/generated/nilearn.image.load_img.rst", "modules/generated/nilearn.image.math_img.rst", "modules/generated/nilearn.image.mean_img.rst", "modules/generated/nilearn.image.new_img_like.rst", "modules/generated/nilearn.image.reorder_img.rst", "modules/generated/nilearn.image.resample_img.rst", "modules/generated/nilearn.image.resample_to_img.rst", "modules/generated/nilearn.image.smooth_img.rst", "modules/generated/nilearn.image.swap_img_hemispheres.rst", "modules/generated/nilearn.image.threshold_img.rst", "modules/generated/nilearn.interfaces.bids.get_bids_files.rst", "modules/generated/nilearn.interfaces.bids.parse_bids_filename.rst", "modules/generated/nilearn.interfaces.bids.save_glm_to_bids.rst", "modules/generated/nilearn.interfaces.fmriprep.load_confounds.rst", "modules/generated/nilearn.interfaces.fmriprep.load_confounds_strategy.rst", "modules/generated/nilearn.interfaces.fsl.get_design_from_fslmat.rst", "modules/generated/nilearn.maskers.BaseMasker.rst", "modules/generated/nilearn.maskers.MultiNiftiLabelsMasker.rst", "modules/generated/nilearn.maskers.MultiNiftiMapsMasker.rst", "modules/generated/nilearn.maskers.MultiNiftiMasker.rst", "modules/generated/nilearn.maskers.NiftiLabelsMasker.rst", "modules/generated/nilearn.maskers.NiftiMapsMasker.rst", "modules/generated/nilearn.maskers.NiftiMasker.rst", "modules/generated/nilearn.maskers.NiftiSpheresMasker.rst", "modules/generated/nilearn.maskers.SurfaceLabelsMasker.rst", "modules/generated/nilearn.maskers.SurfaceMapsMasker.rst", "modules/generated/nilearn.maskers.SurfaceMasker.rst", "modules/generated/nilearn.masking.apply_mask.rst", "modules/generated/nilearn.masking.compute_background_mask.rst", "modules/generated/nilearn.masking.compute_brain_mask.rst", "modules/generated/nilearn.masking.compute_epi_mask.rst", "modules/generated/nilearn.masking.compute_multi_background_mask.rst", "modules/generated/nilearn.masking.compute_multi_brain_mask.rst", "modules/generated/nilearn.masking.compute_multi_epi_mask.rst", "modules/generated/nilearn.masking.intersect_masks.rst", "modules/generated/nilearn.masking.unmask.rst", "modules/generated/nilearn.mass_univariate.permuted_ols.rst", "modules/generated/nilearn.plotting.displays.BaseAxes.rst", "modules/generated/nilearn.plotting.displays.BaseSlicer.rst", "modules/generated/nilearn.plotting.displays.CutAxes.rst", "modules/generated/nilearn.plotting.displays.GlassBrainAxes.rst", "modules/generated/nilearn.plotting.displays.LProjector.rst", "modules/generated/nilearn.plotting.displays.LRProjector.rst", "modules/generated/nilearn.plotting.displays.LYRProjector.rst", "modules/generated/nilearn.plotting.displays.LYRZProjector.rst", "modules/generated/nilearn.plotting.displays.LZRProjector.rst", "modules/generated/nilearn.plotting.displays.LZRYProjector.rst", "modules/generated/nilearn.plotting.displays.MosaicSlicer.rst", "modules/generated/nilearn.plotting.displays.OrthoProjector.rst", "modules/generated/nilearn.plotting.displays.OrthoSlicer.rst", "modules/generated/nilearn.plotting.displays.PlotlySurfaceFigure.rst", "modules/generated/nilearn.plotting.displays.RProjector.rst", "modules/generated/nilearn.plotting.displays.TiledSlicer.rst", "modules/generated/nilearn.plotting.displays.XProjector.rst", "modules/generated/nilearn.plotting.displays.XSlicer.rst", "modules/generated/nilearn.plotting.displays.XZProjector.rst", "modules/generated/nilearn.plotting.displays.XZSlicer.rst", "modules/generated/nilearn.plotting.displays.YProjector.rst", "modules/generated/nilearn.plotting.displays.YSlicer.rst", "modules/generated/nilearn.plotting.displays.YXProjector.rst", "modules/generated/nilearn.plotting.displays.YXSlicer.rst", "modules/generated/nilearn.plotting.displays.YZProjector.rst", "modules/generated/nilearn.plotting.displays.YZSlicer.rst", "modules/generated/nilearn.plotting.displays.ZProjector.rst", "modules/generated/nilearn.plotting.displays.ZSlicer.rst", "modules/generated/nilearn.plotting.displays.get_projector.rst", "modules/generated/nilearn.plotting.displays.get_slicer.rst", "modules/generated/nilearn.plotting.find_cut_slices.rst", "modules/generated/nilearn.plotting.find_parcellation_cut_coords.rst", "modules/generated/nilearn.plotting.find_probabilistic_atlas_cut_coords.rst", "modules/generated/nilearn.plotting.find_xyz_cut_coords.rst", "modules/generated/nilearn.plotting.img_comparison.plot_bland_altman.rst", "modules/generated/nilearn.plotting.img_comparison.plot_img_comparison.rst", "modules/generated/nilearn.plotting.plot_anat.rst", "modules/generated/nilearn.plotting.plot_carpet.rst", "modules/generated/nilearn.plotting.plot_connectome.rst", "modules/generated/nilearn.plotting.plot_contrast_matrix.rst", "modules/generated/nilearn.plotting.plot_design_matrix.rst", "modules/generated/nilearn.plotting.plot_design_matrix_correlation.rst", "modules/generated/nilearn.plotting.plot_epi.rst", "modules/generated/nilearn.plotting.plot_event.rst", "modules/generated/nilearn.plotting.plot_glass_brain.rst", "modules/generated/nilearn.plotting.plot_img.rst", "modules/generated/nilearn.plotting.plot_img_on_surf.rst", "modules/generated/nilearn.plotting.plot_markers.rst", "modules/generated/nilearn.plotting.plot_matrix.rst", "modules/generated/nilearn.plotting.plot_prob_atlas.rst", "modules/generated/nilearn.plotting.plot_roi.rst", "modules/generated/nilearn.plotting.plot_stat_map.rst", "modules/generated/nilearn.plotting.plot_surf.rst", "modules/generated/nilearn.plotting.plot_surf_contours.rst", "modules/generated/nilearn.plotting.plot_surf_roi.rst", "modules/generated/nilearn.plotting.plot_surf_stat_map.rst", "modules/generated/nilearn.plotting.show.rst", "modules/generated/nilearn.plotting.view_connectome.rst", "modules/generated/nilearn.plotting.view_img.rst", "modules/generated/nilearn.plotting.view_img_on_surf.rst", "modules/generated/nilearn.plotting.view_markers.rst", "modules/generated/nilearn.plotting.view_surf.rst", "modules/generated/nilearn.regions.HierarchicalKMeans.rst", "modules/generated/nilearn.regions.Parcellations.rst", "modules/generated/nilearn.regions.ReNA.rst", "modules/generated/nilearn.regions.RegionExtractor.rst", "modules/generated/nilearn.regions.connected_label_regions.rst", "modules/generated/nilearn.regions.connected_regions.rst", "modules/generated/nilearn.regions.img_to_signals_labels.rst", "modules/generated/nilearn.regions.img_to_signals_maps.rst", "modules/generated/nilearn.regions.recursive_neighbor_agglomeration.rst", "modules/generated/nilearn.regions.signals_to_img_labels.rst", "modules/generated/nilearn.regions.signals_to_img_maps.rst", "modules/generated/nilearn.reporting.HTMLReport.rst", "modules/generated/nilearn.reporting.get_clusters_table.rst", "modules/generated/nilearn.reporting.make_glm_report.rst", "modules/generated/nilearn.signal.butterworth.rst", "modules/generated/nilearn.signal.clean.rst", "modules/generated/nilearn.signal.high_variance_confounds.rst", "modules/generated/nilearn.surface.FileMesh.rst", "modules/generated/nilearn.surface.InMemoryMesh.rst", "modules/generated/nilearn.surface.PolyData.rst", "modules/generated/nilearn.surface.PolyMesh.rst", "modules/generated/nilearn.surface.SurfaceImage.rst", "modules/generated/nilearn.surface.SurfaceMesh.rst", "modules/generated/nilearn.surface.load_surf_data.rst", "modules/generated/nilearn.surface.load_surf_mesh.rst", "modules/generated/nilearn.surface.vol_to_surf.rst", "modules/generated_reports/glm_reports_examples.rst", "modules/generated_reports/masker_reports_examples.rst", "modules/glm.rst", "modules/image.rst", "modules/index.rst", "modules/interfaces.rst", "modules/maskers.rst", "modules/masking.rst", "modules/mass_univariate.rst", "modules/plotting.rst", "modules/probabilistic_atlases.md", "modules/regions.rst", "modules/reporting.rst", "modules/signal.rst", "modules/surface.rst", "plotting/index.rst", "quickstart.md", "sg_execution_times.rst", "user_guide.rst", "versions.rst"], "indexentries": {"__init__() (nilearn.connectome.connectivitymeasure method)": [[238, "nilearn.connectome.ConnectivityMeasure.__init__", false]], "__init__() (nilearn.connectome.groupsparsecovariance method)": [[239, "nilearn.connectome.GroupSparseCovariance.__init__", false]], "__init__() (nilearn.connectome.groupsparsecovariancecv method)": [[240, "nilearn.connectome.GroupSparseCovarianceCV.__init__", false]], "__init__() (nilearn.decoding.decoder method)": [[304, "nilearn.decoding.Decoder.__init__", false]], "__init__() (nilearn.decoding.decoderregressor method)": [[305, "nilearn.decoding.DecoderRegressor.__init__", false]], "__init__() (nilearn.decoding.fremclassifier method)": [[306, "nilearn.decoding.FREMClassifier.__init__", false]], "__init__() (nilearn.decoding.fremregressor method)": [[307, "nilearn.decoding.FREMRegressor.__init__", false]], "__init__() (nilearn.decoding.searchlight method)": [[308, "nilearn.decoding.SearchLight.__init__", false]], "__init__() (nilearn.decoding.spacenetclassifier method)": [[309, "nilearn.decoding.SpaceNetClassifier.__init__", false]], "__init__() (nilearn.decoding.spacenetregressor method)": [[310, "nilearn.decoding.SpaceNetRegressor.__init__", false]], "__init__() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.__init__", false]], "__init__() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.__init__", false]], "__init__() (nilearn.glm.armodel method)": [[313, "nilearn.glm.ARModel.__init__", false]], "__init__() (nilearn.glm.contrast method)": [[314, "nilearn.glm.Contrast.__init__", false]], "__init__() (nilearn.glm.fcontrastresults method)": [[315, "nilearn.glm.FContrastResults.__init__", false]], "__init__() (nilearn.glm.first_level.firstlevelmodel method)": [[326, "nilearn.glm.first_level.FirstLevelModel.__init__", false]], "__init__() (nilearn.glm.likelihoodmodelresults method)": [[316, "nilearn.glm.LikelihoodModelResults.__init__", false]], "__init__() (nilearn.glm.olsmodel method)": [[317, "nilearn.glm.OLSModel.__init__", false]], "__init__() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.__init__", false]], "__init__() (nilearn.glm.second_level.secondlevelmodel method)": [[339, "nilearn.glm.second_level.SecondLevelModel.__init__", false]], "__init__() (nilearn.glm.simpleregressionresults method)": [[319, "nilearn.glm.SimpleRegressionResults.__init__", false]], "__init__() (nilearn.glm.tcontrastresults method)": [[320, "nilearn.glm.TContrastResults.__init__", false]], "__init__() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.__init__", false]], "__init__() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.__init__", false]], "__init__() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.__init__", false]], "__init__() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.__init__", false]], "__init__() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.__init__", false]], "__init__() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.__init__", false]], "__init__() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.__init__", false]], "__init__() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.__init__", false]], "__init__() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.__init__", false]], "__init__() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.__init__", false]], "__init__() (nilearn.plotting.displays.baseaxes method)": [[391, "nilearn.plotting.displays.BaseAxes.__init__", false]], "__init__() (nilearn.plotting.displays.baseslicer method)": [[392, "nilearn.plotting.displays.BaseSlicer.__init__", false]], "__init__() (nilearn.plotting.displays.cutaxes method)": [[393, "nilearn.plotting.displays.CutAxes.__init__", false]], "__init__() (nilearn.plotting.displays.glassbrainaxes method)": [[394, "nilearn.plotting.displays.GlassBrainAxes.__init__", false]], "__init__() (nilearn.plotting.displays.lprojector method)": [[395, "nilearn.plotting.displays.LProjector.__init__", false]], "__init__() (nilearn.plotting.displays.lrprojector method)": [[396, "nilearn.plotting.displays.LRProjector.__init__", false]], "__init__() (nilearn.plotting.displays.lyrprojector method)": [[397, "nilearn.plotting.displays.LYRProjector.__init__", false]], "__init__() (nilearn.plotting.displays.lyrzprojector method)": [[398, "nilearn.plotting.displays.LYRZProjector.__init__", false]], "__init__() (nilearn.plotting.displays.lzrprojector method)": [[399, "nilearn.plotting.displays.LZRProjector.__init__", false]], "__init__() (nilearn.plotting.displays.lzryprojector method)": [[400, "nilearn.plotting.displays.LZRYProjector.__init__", false]], "__init__() (nilearn.plotting.displays.mosaicslicer method)": [[401, "nilearn.plotting.displays.MosaicSlicer.__init__", false]], "__init__() (nilearn.plotting.displays.orthoprojector method)": [[402, "nilearn.plotting.displays.OrthoProjector.__init__", false]], "__init__() (nilearn.plotting.displays.orthoslicer method)": [[403, "nilearn.plotting.displays.OrthoSlicer.__init__", false]], "__init__() (nilearn.plotting.displays.plotlysurfacefigure method)": [[404, "nilearn.plotting.displays.PlotlySurfaceFigure.__init__", false]], "__init__() (nilearn.plotting.displays.rprojector method)": [[405, "nilearn.plotting.displays.RProjector.__init__", false]], "__init__() (nilearn.plotting.displays.tiledslicer method)": [[406, "nilearn.plotting.displays.TiledSlicer.__init__", false]], "__init__() (nilearn.plotting.displays.xprojector method)": [[407, "nilearn.plotting.displays.XProjector.__init__", false]], "__init__() (nilearn.plotting.displays.xslicer method)": [[408, "nilearn.plotting.displays.XSlicer.__init__", false]], "__init__() (nilearn.plotting.displays.xzprojector method)": [[409, "nilearn.plotting.displays.XZProjector.__init__", false]], "__init__() (nilearn.plotting.displays.xzslicer method)": [[410, "nilearn.plotting.displays.XZSlicer.__init__", false]], "__init__() (nilearn.plotting.displays.yprojector method)": [[411, "nilearn.plotting.displays.YProjector.__init__", false]], "__init__() (nilearn.plotting.displays.yslicer method)": [[412, "nilearn.plotting.displays.YSlicer.__init__", false]], "__init__() (nilearn.plotting.displays.yxprojector method)": [[413, "nilearn.plotting.displays.YXProjector.__init__", false]], "__init__() (nilearn.plotting.displays.yxslicer method)": [[414, "nilearn.plotting.displays.YXSlicer.__init__", false]], "__init__() (nilearn.plotting.displays.yzprojector method)": [[415, "nilearn.plotting.displays.YZProjector.__init__", false]], "__init__() (nilearn.plotting.displays.yzslicer method)": [[416, "nilearn.plotting.displays.YZSlicer.__init__", false]], "__init__() (nilearn.plotting.displays.zprojector method)": [[417, "nilearn.plotting.displays.ZProjector.__init__", false]], "__init__() (nilearn.plotting.displays.zslicer method)": [[418, "nilearn.plotting.displays.ZSlicer.__init__", false]], "__init__() (nilearn.regions.hierarchicalkmeans method)": [[453, "nilearn.regions.HierarchicalKMeans.__init__", false]], "__init__() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.__init__", false]], "__init__() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.__init__", false]], "__init__() (nilearn.regions.rena method)": [[455, "nilearn.regions.ReNA.__init__", false]], "__init__() (nilearn.reporting.htmlreport method)": [[464, "nilearn.reporting.HTMLReport.__init__", false]], "__init__() (nilearn.surface.filemesh method)": [[470, "nilearn.surface.FileMesh.__init__", false]], "__init__() (nilearn.surface.inmemorymesh method)": [[471, "nilearn.surface.InMemoryMesh.__init__", false]], "__init__() (nilearn.surface.polydata method)": [[472, "nilearn.surface.PolyData.__init__", false]], "__init__() (nilearn.surface.polymesh method)": [[473, "nilearn.surface.PolyMesh.__init__", false]], "__init__() (nilearn.surface.surfaceimage method)": [[474, "nilearn.surface.SurfaceImage.__init__", false]], "add_contours() (nilearn.plotting.displays.baseslicer method)": [[392, "nilearn.plotting.displays.BaseSlicer.add_contours", false]], "add_contours() (nilearn.plotting.displays.lprojector method)": [[395, "nilearn.plotting.displays.LProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.lrprojector method)": [[396, "nilearn.plotting.displays.LRProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.lyrprojector method)": [[397, "nilearn.plotting.displays.LYRProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.lyrzprojector method)": [[398, "nilearn.plotting.displays.LYRZProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.lzrprojector method)": [[399, "nilearn.plotting.displays.LZRProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.lzryprojector method)": [[400, "nilearn.plotting.displays.LZRYProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.mosaicslicer method)": [[401, "nilearn.plotting.displays.MosaicSlicer.add_contours", false]], "add_contours() (nilearn.plotting.displays.orthoprojector method)": [[402, "nilearn.plotting.displays.OrthoProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.orthoslicer method)": [[403, "nilearn.plotting.displays.OrthoSlicer.add_contours", false]], "add_contours() (nilearn.plotting.displays.plotlysurfacefigure method)": [[404, "nilearn.plotting.displays.PlotlySurfaceFigure.add_contours", false]], "add_contours() (nilearn.plotting.displays.rprojector method)": [[405, "nilearn.plotting.displays.RProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.tiledslicer method)": [[406, "nilearn.plotting.displays.TiledSlicer.add_contours", false]], "add_contours() (nilearn.plotting.displays.xprojector method)": [[407, "nilearn.plotting.displays.XProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.xslicer method)": [[408, "nilearn.plotting.displays.XSlicer.add_contours", false]], "add_contours() (nilearn.plotting.displays.xzprojector method)": [[409, "nilearn.plotting.displays.XZProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.xzslicer method)": [[410, "nilearn.plotting.displays.XZSlicer.add_contours", false]], "add_contours() (nilearn.plotting.displays.yprojector method)": [[411, "nilearn.plotting.displays.YProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.yslicer method)": [[412, "nilearn.plotting.displays.YSlicer.add_contours", false]], "add_contours() (nilearn.plotting.displays.yxprojector method)": [[413, "nilearn.plotting.displays.YXProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.yxslicer method)": [[414, "nilearn.plotting.displays.YXSlicer.add_contours", false]], "add_contours() (nilearn.plotting.displays.yzprojector method)": [[415, "nilearn.plotting.displays.YZProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.yzslicer method)": [[416, "nilearn.plotting.displays.YZSlicer.add_contours", false]], "add_contours() (nilearn.plotting.displays.zprojector method)": [[417, "nilearn.plotting.displays.ZProjector.add_contours", false]], "add_contours() (nilearn.plotting.displays.zslicer method)": [[418, "nilearn.plotting.displays.ZSlicer.add_contours", false]], "add_edges() (nilearn.plotting.displays.baseslicer method)": [[392, "nilearn.plotting.displays.BaseSlicer.add_edges", false]], "add_edges() (nilearn.plotting.displays.lprojector method)": [[395, "nilearn.plotting.displays.LProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.lrprojector method)": [[396, "nilearn.plotting.displays.LRProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.lyrprojector method)": [[397, "nilearn.plotting.displays.LYRProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.lyrzprojector method)": [[398, "nilearn.plotting.displays.LYRZProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.lzrprojector method)": [[399, "nilearn.plotting.displays.LZRProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.lzryprojector method)": [[400, "nilearn.plotting.displays.LZRYProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.mosaicslicer method)": [[401, "nilearn.plotting.displays.MosaicSlicer.add_edges", false]], "add_edges() (nilearn.plotting.displays.orthoprojector method)": [[402, "nilearn.plotting.displays.OrthoProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.orthoslicer method)": [[403, "nilearn.plotting.displays.OrthoSlicer.add_edges", false]], "add_edges() (nilearn.plotting.displays.rprojector method)": [[405, "nilearn.plotting.displays.RProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.tiledslicer method)": [[406, "nilearn.plotting.displays.TiledSlicer.add_edges", false]], "add_edges() (nilearn.plotting.displays.xprojector method)": [[407, "nilearn.plotting.displays.XProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.xslicer method)": [[408, "nilearn.plotting.displays.XSlicer.add_edges", false]], "add_edges() (nilearn.plotting.displays.xzprojector method)": [[409, "nilearn.plotting.displays.XZProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.xzslicer method)": [[410, "nilearn.plotting.displays.XZSlicer.add_edges", false]], "add_edges() (nilearn.plotting.displays.yprojector method)": [[411, "nilearn.plotting.displays.YProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.yslicer method)": [[412, "nilearn.plotting.displays.YSlicer.add_edges", false]], "add_edges() (nilearn.plotting.displays.yxprojector method)": [[413, "nilearn.plotting.displays.YXProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.yxslicer method)": [[414, "nilearn.plotting.displays.YXSlicer.add_edges", false]], "add_edges() (nilearn.plotting.displays.yzprojector method)": [[415, "nilearn.plotting.displays.YZProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.yzslicer method)": [[416, "nilearn.plotting.displays.YZSlicer.add_edges", false]], "add_edges() (nilearn.plotting.displays.zprojector method)": [[417, "nilearn.plotting.displays.ZProjector.add_edges", false]], "add_edges() (nilearn.plotting.displays.zslicer method)": [[418, "nilearn.plotting.displays.ZSlicer.add_edges", false]], "add_graph() (nilearn.plotting.displays.lprojector method)": [[395, "nilearn.plotting.displays.LProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.lrprojector method)": [[396, "nilearn.plotting.displays.LRProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.lyrprojector method)": [[397, "nilearn.plotting.displays.LYRProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.lyrzprojector method)": [[398, "nilearn.plotting.displays.LYRZProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.lzrprojector method)": [[399, "nilearn.plotting.displays.LZRProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.lzryprojector method)": [[400, "nilearn.plotting.displays.LZRYProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.orthoprojector method)": [[402, "nilearn.plotting.displays.OrthoProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.rprojector method)": [[405, "nilearn.plotting.displays.RProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.xprojector method)": [[407, "nilearn.plotting.displays.XProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.xzprojector method)": [[409, "nilearn.plotting.displays.XZProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.yprojector method)": [[411, "nilearn.plotting.displays.YProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.yxprojector method)": [[413, "nilearn.plotting.displays.YXProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.yzprojector method)": [[415, "nilearn.plotting.displays.YZProjector.add_graph", false]], "add_graph() (nilearn.plotting.displays.zprojector method)": [[417, "nilearn.plotting.displays.ZProjector.add_graph", false]], "add_markers() (nilearn.plotting.displays.baseslicer method)": [[392, "nilearn.plotting.displays.BaseSlicer.add_markers", false]], "add_markers() (nilearn.plotting.displays.lprojector method)": [[395, "nilearn.plotting.displays.LProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.lrprojector method)": [[396, "nilearn.plotting.displays.LRProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.lyrprojector method)": [[397, "nilearn.plotting.displays.LYRProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.lyrzprojector method)": [[398, "nilearn.plotting.displays.LYRZProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.lzrprojector method)": [[399, "nilearn.plotting.displays.LZRProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.lzryprojector method)": [[400, "nilearn.plotting.displays.LZRYProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.mosaicslicer method)": [[401, "nilearn.plotting.displays.MosaicSlicer.add_markers", false]], "add_markers() (nilearn.plotting.displays.orthoprojector method)": [[402, "nilearn.plotting.displays.OrthoProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.orthoslicer method)": [[403, "nilearn.plotting.displays.OrthoSlicer.add_markers", false]], "add_markers() (nilearn.plotting.displays.rprojector method)": [[405, "nilearn.plotting.displays.RProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.tiledslicer method)": [[406, "nilearn.plotting.displays.TiledSlicer.add_markers", false]], "add_markers() (nilearn.plotting.displays.xprojector method)": [[407, "nilearn.plotting.displays.XProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.xslicer method)": [[408, "nilearn.plotting.displays.XSlicer.add_markers", false]], "add_markers() (nilearn.plotting.displays.xzprojector method)": [[409, "nilearn.plotting.displays.XZProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.xzslicer method)": [[410, "nilearn.plotting.displays.XZSlicer.add_markers", false]], "add_markers() (nilearn.plotting.displays.yprojector method)": [[411, "nilearn.plotting.displays.YProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.yslicer method)": [[412, "nilearn.plotting.displays.YSlicer.add_markers", false]], "add_markers() (nilearn.plotting.displays.yxprojector method)": [[413, "nilearn.plotting.displays.YXProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.yxslicer method)": [[414, "nilearn.plotting.displays.YXSlicer.add_markers", false]], "add_markers() (nilearn.plotting.displays.yzprojector method)": [[415, "nilearn.plotting.displays.YZProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.yzslicer method)": [[416, "nilearn.plotting.displays.YZSlicer.add_markers", false]], "add_markers() (nilearn.plotting.displays.zprojector method)": [[417, "nilearn.plotting.displays.ZProjector.add_markers", false]], "add_markers() (nilearn.plotting.displays.zslicer method)": [[418, "nilearn.plotting.displays.ZSlicer.add_markers", false]], "add_object_bounds() (nilearn.plotting.displays.baseaxes method)": [[391, "nilearn.plotting.displays.BaseAxes.add_object_bounds", false]], "add_object_bounds() (nilearn.plotting.displays.cutaxes method)": [[393, "nilearn.plotting.displays.CutAxes.add_object_bounds", false]], "add_object_bounds() (nilearn.plotting.displays.glassbrainaxes method)": [[394, "nilearn.plotting.displays.GlassBrainAxes.add_object_bounds", false]], "add_overlay() (nilearn.plotting.displays.baseslicer method)": [[392, "nilearn.plotting.displays.BaseSlicer.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.lprojector method)": [[395, "nilearn.plotting.displays.LProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.lrprojector method)": [[396, "nilearn.plotting.displays.LRProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.lyrprojector method)": [[397, "nilearn.plotting.displays.LYRProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.lyrzprojector method)": [[398, "nilearn.plotting.displays.LYRZProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.lzrprojector method)": [[399, "nilearn.plotting.displays.LZRProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.lzryprojector method)": [[400, "nilearn.plotting.displays.LZRYProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.mosaicslicer method)": [[401, "nilearn.plotting.displays.MosaicSlicer.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.orthoprojector method)": [[402, "nilearn.plotting.displays.OrthoProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.orthoslicer method)": [[403, "nilearn.plotting.displays.OrthoSlicer.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.rprojector method)": [[405, "nilearn.plotting.displays.RProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.tiledslicer method)": [[406, "nilearn.plotting.displays.TiledSlicer.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.xprojector method)": [[407, "nilearn.plotting.displays.XProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.xslicer method)": [[408, "nilearn.plotting.displays.XSlicer.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.xzprojector method)": [[409, "nilearn.plotting.displays.XZProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.xzslicer method)": [[410, "nilearn.plotting.displays.XZSlicer.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.yprojector method)": [[411, "nilearn.plotting.displays.YProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.yslicer method)": [[412, "nilearn.plotting.displays.YSlicer.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.yxprojector method)": [[413, "nilearn.plotting.displays.YXProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.yxslicer method)": [[414, "nilearn.plotting.displays.YXSlicer.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.yzprojector method)": [[415, "nilearn.plotting.displays.YZProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.yzslicer method)": [[416, "nilearn.plotting.displays.YZSlicer.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.zprojector method)": [[417, "nilearn.plotting.displays.ZProjector.add_overlay", false]], "add_overlay() (nilearn.plotting.displays.zslicer method)": [[418, "nilearn.plotting.displays.ZSlicer.add_overlay", false]], "annotate() (nilearn.plotting.displays.baseslicer method)": [[392, "nilearn.plotting.displays.BaseSlicer.annotate", false]], "annotate() (nilearn.plotting.displays.lprojector method)": [[395, "nilearn.plotting.displays.LProjector.annotate", false]], "annotate() (nilearn.plotting.displays.lrprojector method)": [[396, "nilearn.plotting.displays.LRProjector.annotate", false]], "annotate() (nilearn.plotting.displays.lyrprojector method)": [[397, "nilearn.plotting.displays.LYRProjector.annotate", false]], "annotate() (nilearn.plotting.displays.lyrzprojector method)": [[398, "nilearn.plotting.displays.LYRZProjector.annotate", false]], "annotate() (nilearn.plotting.displays.lzrprojector method)": [[399, "nilearn.plotting.displays.LZRProjector.annotate", false]], "annotate() (nilearn.plotting.displays.lzryprojector method)": [[400, "nilearn.plotting.displays.LZRYProjector.annotate", false]], "annotate() (nilearn.plotting.displays.mosaicslicer method)": [[401, "nilearn.plotting.displays.MosaicSlicer.annotate", false]], "annotate() (nilearn.plotting.displays.orthoprojector method)": [[402, "nilearn.plotting.displays.OrthoProjector.annotate", false]], "annotate() (nilearn.plotting.displays.orthoslicer method)": [[403, "nilearn.plotting.displays.OrthoSlicer.annotate", false]], "annotate() (nilearn.plotting.displays.rprojector method)": [[405, "nilearn.plotting.displays.RProjector.annotate", false]], "annotate() (nilearn.plotting.displays.tiledslicer method)": [[406, "nilearn.plotting.displays.TiledSlicer.annotate", false]], "annotate() (nilearn.plotting.displays.xprojector method)": [[407, "nilearn.plotting.displays.XProjector.annotate", false]], "annotate() (nilearn.plotting.displays.xslicer method)": [[408, "nilearn.plotting.displays.XSlicer.annotate", false]], "annotate() (nilearn.plotting.displays.xzprojector method)": [[409, "nilearn.plotting.displays.XZProjector.annotate", false]], "annotate() (nilearn.plotting.displays.xzslicer method)": [[410, "nilearn.plotting.displays.XZSlicer.annotate", false]], "annotate() (nilearn.plotting.displays.yprojector method)": [[411, "nilearn.plotting.displays.YProjector.annotate", false]], "annotate() (nilearn.plotting.displays.yslicer method)": [[412, "nilearn.plotting.displays.YSlicer.annotate", false]], "annotate() (nilearn.plotting.displays.yxprojector method)": [[413, "nilearn.plotting.displays.YXProjector.annotate", false]], "annotate() (nilearn.plotting.displays.yxslicer method)": [[414, "nilearn.plotting.displays.YXSlicer.annotate", false]], "annotate() (nilearn.plotting.displays.yzprojector method)": [[415, "nilearn.plotting.displays.YZProjector.annotate", false]], "annotate() (nilearn.plotting.displays.yzslicer method)": [[416, "nilearn.plotting.displays.YZSlicer.annotate", false]], "annotate() (nilearn.plotting.displays.zprojector method)": [[417, "nilearn.plotting.displays.ZProjector.annotate", false]], "annotate() (nilearn.plotting.displays.zslicer method)": [[418, "nilearn.plotting.displays.ZSlicer.annotate", false]], "anova": [[184, "term-ANOVA", true]], "apply_mask() (in module nilearn.masking)": [[381, "nilearn.masking.apply_mask", false]], "armodel (class in nilearn.glm)": [[313, "nilearn.glm.ARModel", false]], "auc": [[184, "term-AUC", true]], "baseaxes (class in nilearn.plotting.displays)": [[391, "nilearn.plotting.displays.BaseAxes", false]], "basemasker (class in nilearn.maskers)": [[370, "nilearn.maskers.BaseMasker", false]], "baseslicer (class in nilearn.plotting.displays)": [[392, "nilearn.plotting.displays.BaseSlicer", false]], "beta": [[184, "term-Beta", true]], "bids": [[184, "term-BIDS", true]], "binarize_img() (in module nilearn.image)": [[343, "nilearn.image.binarize_img", false]], "black_bg (nilearn.plotting.displays.baseslicer property)": [[392, "nilearn.plotting.displays.BaseSlicer.black_bg", false]], "black_bg (nilearn.plotting.displays.lprojector property)": [[395, "nilearn.plotting.displays.LProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.lrprojector property)": [[396, "nilearn.plotting.displays.LRProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.lyrprojector property)": [[397, "nilearn.plotting.displays.LYRProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.lyrzprojector property)": [[398, "nilearn.plotting.displays.LYRZProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.lzrprojector property)": [[399, "nilearn.plotting.displays.LZRProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.lzryprojector property)": [[400, "nilearn.plotting.displays.LZRYProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.mosaicslicer property)": [[401, "nilearn.plotting.displays.MosaicSlicer.black_bg", false]], "black_bg (nilearn.plotting.displays.orthoprojector property)": [[402, "nilearn.plotting.displays.OrthoProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.orthoslicer property)": [[403, "nilearn.plotting.displays.OrthoSlicer.black_bg", false]], "black_bg (nilearn.plotting.displays.rprojector property)": [[405, "nilearn.plotting.displays.RProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.tiledslicer property)": [[406, "nilearn.plotting.displays.TiledSlicer.black_bg", false]], "black_bg (nilearn.plotting.displays.xprojector property)": [[407, "nilearn.plotting.displays.XProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.xslicer property)": [[408, "nilearn.plotting.displays.XSlicer.black_bg", false]], "black_bg (nilearn.plotting.displays.xzprojector property)": [[409, "nilearn.plotting.displays.XZProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.xzslicer property)": [[410, "nilearn.plotting.displays.XZSlicer.black_bg", false]], "black_bg (nilearn.plotting.displays.yprojector property)": [[411, "nilearn.plotting.displays.YProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.yslicer property)": [[412, "nilearn.plotting.displays.YSlicer.black_bg", false]], "black_bg (nilearn.plotting.displays.yxprojector property)": [[413, "nilearn.plotting.displays.YXProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.yxslicer property)": [[414, "nilearn.plotting.displays.YXSlicer.black_bg", false]], "black_bg (nilearn.plotting.displays.yzprojector property)": [[415, "nilearn.plotting.displays.YZProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.yzslicer property)": [[416, "nilearn.plotting.displays.YZSlicer.black_bg", false]], "black_bg (nilearn.plotting.displays.zprojector property)": [[417, "nilearn.plotting.displays.ZProjector.black_bg", false]], "black_bg (nilearn.plotting.displays.zslicer property)": [[418, "nilearn.plotting.displays.ZSlicer.black_bg", false]], "bold": [[184, "term-BOLD", true]], "brain_color (nilearn.plotting.displays.baseslicer property)": [[392, "nilearn.plotting.displays.BaseSlicer.brain_color", false]], "brain_color (nilearn.plotting.displays.lprojector property)": [[395, "nilearn.plotting.displays.LProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.lrprojector property)": [[396, "nilearn.plotting.displays.LRProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.lyrprojector property)": [[397, "nilearn.plotting.displays.LYRProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.lyrzprojector property)": [[398, "nilearn.plotting.displays.LYRZProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.lzrprojector property)": [[399, "nilearn.plotting.displays.LZRProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.lzryprojector property)": [[400, "nilearn.plotting.displays.LZRYProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.mosaicslicer property)": [[401, "nilearn.plotting.displays.MosaicSlicer.brain_color", false]], "brain_color (nilearn.plotting.displays.orthoprojector property)": [[402, "nilearn.plotting.displays.OrthoProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.orthoslicer property)": [[403, "nilearn.plotting.displays.OrthoSlicer.brain_color", false]], "brain_color (nilearn.plotting.displays.rprojector property)": [[405, "nilearn.plotting.displays.RProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.tiledslicer property)": [[406, "nilearn.plotting.displays.TiledSlicer.brain_color", false]], "brain_color (nilearn.plotting.displays.xprojector property)": [[407, "nilearn.plotting.displays.XProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.xslicer property)": [[408, "nilearn.plotting.displays.XSlicer.brain_color", false]], "brain_color (nilearn.plotting.displays.xzprojector property)": [[409, "nilearn.plotting.displays.XZProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.xzslicer property)": [[410, "nilearn.plotting.displays.XZSlicer.brain_color", false]], "brain_color (nilearn.plotting.displays.yprojector property)": [[411, "nilearn.plotting.displays.YProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.yslicer property)": [[412, "nilearn.plotting.displays.YSlicer.brain_color", false]], "brain_color (nilearn.plotting.displays.yxprojector property)": [[413, "nilearn.plotting.displays.YXProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.yxslicer property)": [[414, "nilearn.plotting.displays.YXSlicer.brain_color", false]], "brain_color (nilearn.plotting.displays.yzprojector property)": [[415, "nilearn.plotting.displays.YZProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.yzslicer property)": [[416, "nilearn.plotting.displays.YZSlicer.brain_color", false]], "brain_color (nilearn.plotting.displays.zprojector property)": [[417, "nilearn.plotting.displays.ZProjector.brain_color", false]], "brain_color (nilearn.plotting.displays.zslicer property)": [[418, "nilearn.plotting.displays.ZSlicer.brain_color", false]], "butterworth() (in module nilearn.signal)": [[467, "nilearn.signal.butterworth", false]], "canica": [[184, "term-CanICA", true]], "canica (class in nilearn.decomposition)": [[311, "nilearn.decomposition.CanICA", false]], "check_design_matrix() (in module nilearn.glm.first_level)": [[327, "nilearn.glm.first_level.check_design_matrix", false]], "classification": [[184, "term-classification", true]], "clean() (in module nilearn.signal)": [[468, "nilearn.signal.clean", false]], "clean_img() (in module nilearn.image)": [[344, "nilearn.image.clean_img", false]], "close() (nilearn.plotting.displays.baseslicer method)": [[392, "nilearn.plotting.displays.BaseSlicer.close", false]], "close() (nilearn.plotting.displays.lprojector method)": [[395, "nilearn.plotting.displays.LProjector.close", false]], "close() (nilearn.plotting.displays.lrprojector method)": [[396, "nilearn.plotting.displays.LRProjector.close", false]], "close() (nilearn.plotting.displays.lyrprojector method)": [[397, "nilearn.plotting.displays.LYRProjector.close", false]], "close() (nilearn.plotting.displays.lyrzprojector method)": [[398, "nilearn.plotting.displays.LYRZProjector.close", false]], "close() (nilearn.plotting.displays.lzrprojector method)": [[399, "nilearn.plotting.displays.LZRProjector.close", false]], "close() (nilearn.plotting.displays.lzryprojector method)": [[400, "nilearn.plotting.displays.LZRYProjector.close", false]], "close() (nilearn.plotting.displays.mosaicslicer method)": [[401, "nilearn.plotting.displays.MosaicSlicer.close", false]], "close() (nilearn.plotting.displays.orthoprojector method)": [[402, "nilearn.plotting.displays.OrthoProjector.close", false]], "close() (nilearn.plotting.displays.orthoslicer method)": [[403, "nilearn.plotting.displays.OrthoSlicer.close", false]], "close() (nilearn.plotting.displays.rprojector method)": [[405, "nilearn.plotting.displays.RProjector.close", false]], "close() (nilearn.plotting.displays.tiledslicer method)": [[406, "nilearn.plotting.displays.TiledSlicer.close", false]], "close() (nilearn.plotting.displays.xprojector method)": [[407, "nilearn.plotting.displays.XProjector.close", false]], "close() (nilearn.plotting.displays.xslicer method)": [[408, "nilearn.plotting.displays.XSlicer.close", false]], "close() (nilearn.plotting.displays.xzprojector method)": [[409, "nilearn.plotting.displays.XZProjector.close", false]], "close() (nilearn.plotting.displays.xzslicer method)": [[410, "nilearn.plotting.displays.XZSlicer.close", false]], "close() (nilearn.plotting.displays.yprojector method)": [[411, "nilearn.plotting.displays.YProjector.close", false]], "close() (nilearn.plotting.displays.yslicer method)": [[412, "nilearn.plotting.displays.YSlicer.close", false]], "close() (nilearn.plotting.displays.yxprojector method)": [[413, "nilearn.plotting.displays.YXProjector.close", false]], "close() (nilearn.plotting.displays.yxslicer method)": [[414, "nilearn.plotting.displays.YXSlicer.close", false]], "close() (nilearn.plotting.displays.yzprojector method)": [[415, "nilearn.plotting.displays.YZProjector.close", false]], "close() (nilearn.plotting.displays.yzslicer method)": [[416, "nilearn.plotting.displays.YZSlicer.close", false]], "close() (nilearn.plotting.displays.zprojector method)": [[417, "nilearn.plotting.displays.ZProjector.close", false]], "close() (nilearn.plotting.displays.zslicer method)": [[418, "nilearn.plotting.displays.ZSlicer.close", false]], "closing": [[184, "term-Closing", true]], "cluster_level_inference() (in module nilearn.glm)": [[321, "nilearn.glm.cluster_level_inference", false]], "compute_background_mask() (in module nilearn.masking)": [[382, "nilearn.masking.compute_background_mask", false]], "compute_brain_mask() (in module nilearn.masking)": [[383, "nilearn.masking.compute_brain_mask", false]], "compute_contrast() (in module nilearn.glm)": [[322, "nilearn.glm.compute_contrast", false]], "compute_contrast() (nilearn.glm.first_level.firstlevelmodel method)": [[326, "nilearn.glm.first_level.FirstLevelModel.compute_contrast", false]], "compute_contrast() (nilearn.glm.second_level.secondlevelmodel method)": [[339, "nilearn.glm.second_level.SecondLevelModel.compute_contrast", false]], "compute_epi_mask() (in module nilearn.masking)": [[384, "nilearn.masking.compute_epi_mask", false]], "compute_fixed_effects() (in module nilearn.glm)": [[323, "nilearn.glm.compute_fixed_effects", false]], "compute_multi_background_mask() (in module nilearn.masking)": [[385, "nilearn.masking.compute_multi_background_mask", false]], "compute_multi_brain_mask() (in module nilearn.masking)": [[386, "nilearn.masking.compute_multi_brain_mask", false]], "compute_multi_epi_mask() (in module nilearn.masking)": [[387, "nilearn.masking.compute_multi_epi_mask", false]], "compute_regressor() (in module nilearn.glm.first_level)": [[328, "nilearn.glm.first_level.compute_regressor", false]], "concat_imgs() (in module nilearn.image)": [[345, "nilearn.image.concat_imgs", false]], "conf_int() (nilearn.glm.likelihoodmodelresults method)": [[316, "nilearn.glm.LikelihoodModelResults.conf_int", false]], "conf_int() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.conf_int", false]], "conf_int() (nilearn.glm.simpleregressionresults method)": [[319, "nilearn.glm.SimpleRegressionResults.conf_int", false]], "connected_label_regions() (in module nilearn.regions)": [[457, "nilearn.regions.connected_label_regions", false]], "connected_regions() (in module nilearn.regions)": [[458, "nilearn.regions.connected_regions", false]], "connectivitymeasure (class in nilearn.connectome)": [[238, "nilearn.connectome.ConnectivityMeasure", false]], "contrast": [[184, "term-contrast", true]], "contrast (class in nilearn.glm)": [[314, "nilearn.glm.Contrast", false]], "contrast_type (nilearn.glm.contrast property)": [[314, "nilearn.glm.Contrast.contrast_type", false]], "coord_transform() (in module nilearn.image)": [[346, "nilearn.image.coord_transform", false]], "coordinates (nilearn.surface.filemesh property)": [[470, "nilearn.surface.FileMesh.coordinates", false]], "coordinates (nilearn.surface.inmemorymesh attribute)": [[471, "nilearn.surface.InMemoryMesh.coordinates", false]], "coordinates (nilearn.surface.surfacemesh attribute)": [[475, "nilearn.surface.SurfaceMesh.coordinates", false]], "copy_img() (in module nilearn.image)": [[347, "nilearn.image.copy_img", false]], "cov_to_corr() (in module nilearn.connectome)": [[241, "nilearn.connectome.cov_to_corr", false]], "crop_img() (in module nilearn.image)": [[348, "nilearn.image.crop_img", false]], "cutaxes (class in nilearn.plotting.displays)": [[393, "nilearn.plotting.displays.CutAxes", false]], "decision_function() (nilearn.decoding.decoder method)": [[304, "nilearn.decoding.Decoder.decision_function", false]], "decision_function() (nilearn.decoding.decoderregressor method)": [[305, "nilearn.decoding.DecoderRegressor.decision_function", false]], "decision_function() (nilearn.decoding.fremclassifier method)": [[306, "nilearn.decoding.FREMClassifier.decision_function", false]], "decision_function() (nilearn.decoding.fremregressor method)": [[307, "nilearn.decoding.FREMRegressor.decision_function", false]], "decision_function() (nilearn.decoding.spacenetclassifier method)": [[309, "nilearn.decoding.SpaceNetClassifier.decision_function", false]], "decision_function() (nilearn.decoding.spacenetregressor method)": [[310, "nilearn.decoding.SpaceNetRegressor.decision_function", false]], "decoder (class in nilearn.decoding)": [[304, "nilearn.decoding.Decoder", false]], "decoderregressor (class in nilearn.decoding)": [[305, "nilearn.decoding.DecoderRegressor", false]], "decoding": [[184, "term-Decoding", true]], "deterministic atlas": [[184, "term-Deterministic-atlas", true]], "dictionary learning": [[184, "term-Dictionary-learning", true]], "dictlearning (class in nilearn.decomposition)": [[312, "nilearn.decomposition.DictLearning", false]], "dilation": [[184, "term-Dilation", true]], "draw_2d() (nilearn.plotting.displays.baseaxes method)": [[391, "nilearn.plotting.displays.BaseAxes.draw_2d", false]], "draw_2d() (nilearn.plotting.displays.cutaxes method)": [[393, "nilearn.plotting.displays.CutAxes.draw_2d", false]], "draw_2d() (nilearn.plotting.displays.glassbrainaxes method)": [[394, "nilearn.plotting.displays.GlassBrainAxes.draw_2d", false]], "draw_cross() (nilearn.plotting.displays.lprojector method)": [[395, "nilearn.plotting.displays.LProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.lrprojector method)": [[396, "nilearn.plotting.displays.LRProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.lyrprojector method)": [[397, "nilearn.plotting.displays.LYRProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.lyrzprojector method)": [[398, "nilearn.plotting.displays.LYRZProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.lzrprojector method)": [[399, "nilearn.plotting.displays.LZRProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.lzryprojector method)": [[400, "nilearn.plotting.displays.LZRYProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.mosaicslicer method)": [[401, "nilearn.plotting.displays.MosaicSlicer.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.orthoprojector method)": [[402, "nilearn.plotting.displays.OrthoProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.orthoslicer method)": [[403, "nilearn.plotting.displays.OrthoSlicer.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.rprojector method)": [[405, "nilearn.plotting.displays.RProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.tiledslicer method)": [[406, "nilearn.plotting.displays.TiledSlicer.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.xprojector method)": [[407, "nilearn.plotting.displays.XProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.xslicer method)": [[408, "nilearn.plotting.displays.XSlicer.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.xzprojector method)": [[409, "nilearn.plotting.displays.XZProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.xzslicer method)": [[410, "nilearn.plotting.displays.XZSlicer.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.yprojector method)": [[411, "nilearn.plotting.displays.YProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.yslicer method)": [[412, "nilearn.plotting.displays.YSlicer.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.yxprojector method)": [[413, "nilearn.plotting.displays.YXProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.yxslicer method)": [[414, "nilearn.plotting.displays.YXSlicer.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.yzprojector method)": [[415, "nilearn.plotting.displays.YZProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.yzslicer method)": [[416, "nilearn.plotting.displays.YZSlicer.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.zprojector method)": [[417, "nilearn.plotting.displays.ZProjector.draw_cross", false]], "draw_cross() (nilearn.plotting.displays.zslicer method)": [[418, "nilearn.plotting.displays.ZSlicer.draw_cross", false]], "draw_left_right() (nilearn.plotting.displays.baseaxes method)": [[391, "nilearn.plotting.displays.BaseAxes.draw_left_right", false]], "draw_left_right() (nilearn.plotting.displays.cutaxes method)": [[393, "nilearn.plotting.displays.CutAxes.draw_left_right", false]], "draw_left_right() (nilearn.plotting.displays.glassbrainaxes method)": [[394, "nilearn.plotting.displays.GlassBrainAxes.draw_left_right", false]], "draw_position() (nilearn.plotting.displays.baseaxes method)": [[391, "nilearn.plotting.displays.BaseAxes.draw_position", false]], "draw_position() (nilearn.plotting.displays.cutaxes method)": [[393, "nilearn.plotting.displays.CutAxes.draw_position", false]], "draw_position() (nilearn.plotting.displays.glassbrainaxes method)": [[394, "nilearn.plotting.displays.GlassBrainAxes.draw_position", false]], "draw_scale_bar() (nilearn.plotting.displays.baseaxes method)": [[391, "nilearn.plotting.displays.BaseAxes.draw_scale_bar", false]], "draw_scale_bar() (nilearn.plotting.displays.cutaxes method)": [[393, "nilearn.plotting.displays.CutAxes.draw_scale_bar", false]], "draw_scale_bar() (nilearn.plotting.displays.glassbrainaxes method)": [[394, "nilearn.plotting.displays.GlassBrainAxes.draw_scale_bar", false]], "eeg": [[184, "term-EEG", true]], "effect_size() (nilearn.glm.contrast method)": [[314, "nilearn.glm.Contrast.effect_size", false]], "effect_variance() (nilearn.glm.contrast method)": [[314, "nilearn.glm.Contrast.effect_variance", false]], "epi": [[184, "term-EPI", true]], "erosion": [[184, "term-Erosion", true]], "expression_to_contrast_vector() (in module nilearn.glm)": [[324, "nilearn.glm.expression_to_contrast_vector", false]], "faces": [[184, "term-faces", true]], "faces (nilearn.surface.filemesh property)": [[470, "nilearn.surface.FileMesh.faces", false]], "faces (nilearn.surface.inmemorymesh attribute)": [[471, "nilearn.surface.InMemoryMesh.faces", false]], "faces (nilearn.surface.surfacemesh attribute)": [[475, "nilearn.surface.SurfaceMesh.faces", false]], "fcontrast() (nilearn.glm.likelihoodmodelresults method)": [[316, "nilearn.glm.LikelihoodModelResults.Fcontrast", false]], "fcontrast() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.Fcontrast", false]], "fcontrast() (nilearn.glm.simpleregressionresults method)": [[319, "nilearn.glm.SimpleRegressionResults.Fcontrast", false]], "fcontrastresults (class in nilearn.glm)": [[315, "nilearn.glm.FContrastResults", false]], "fdr correction": [[184, "term-FDR-correction", true]], "fdr_threshold() (in module nilearn.glm)": [[325, "nilearn.glm.fdr_threshold", false]], "fetch_abide_pcp() (in module nilearn.datasets)": [[246, "nilearn.datasets.fetch_abide_pcp", false]], "fetch_adhd() (in module nilearn.datasets)": [[247, "nilearn.datasets.fetch_adhd", false]], "fetch_atlas_aal() (in module nilearn.datasets)": [[248, "nilearn.datasets.fetch_atlas_aal", false]], "fetch_atlas_allen_2011() (in module nilearn.datasets)": [[249, "nilearn.datasets.fetch_atlas_allen_2011", false]], "fetch_atlas_basc_multiscale_2015() (in module nilearn.datasets)": [[250, "nilearn.datasets.fetch_atlas_basc_multiscale_2015", false]], "fetch_atlas_craddock_2012() (in module nilearn.datasets)": [[251, "nilearn.datasets.fetch_atlas_craddock_2012", false]], "fetch_atlas_destrieux_2009() (in module nilearn.datasets)": [[252, "nilearn.datasets.fetch_atlas_destrieux_2009", false]], "fetch_atlas_difumo() (in module nilearn.datasets)": [[253, "nilearn.datasets.fetch_atlas_difumo", false]], "fetch_atlas_harvard_oxford() (in module nilearn.datasets)": [[254, "nilearn.datasets.fetch_atlas_harvard_oxford", false]], "fetch_atlas_juelich() (in module nilearn.datasets)": [[255, "nilearn.datasets.fetch_atlas_juelich", false]], "fetch_atlas_msdl() (in module nilearn.datasets)": [[256, "nilearn.datasets.fetch_atlas_msdl", false]], "fetch_atlas_pauli_2017() (in module nilearn.datasets)": [[257, "nilearn.datasets.fetch_atlas_pauli_2017", false]], "fetch_atlas_schaefer_2018() (in module nilearn.datasets)": [[258, "nilearn.datasets.fetch_atlas_schaefer_2018", false]], "fetch_atlas_smith_2009() (in module nilearn.datasets)": [[259, "nilearn.datasets.fetch_atlas_smith_2009", false]], "fetch_atlas_surf_destrieux() (in module nilearn.datasets)": [[260, "nilearn.datasets.fetch_atlas_surf_destrieux", false]], "fetch_atlas_talairach() (in module nilearn.datasets)": [[261, "nilearn.datasets.fetch_atlas_talairach", false]], "fetch_atlas_yeo_2011() (in module nilearn.datasets)": [[262, "nilearn.datasets.fetch_atlas_yeo_2011", false]], "fetch_bids_langloc_dataset() (in module nilearn.datasets)": [[263, "nilearn.datasets.fetch_bids_langloc_dataset", false]], "fetch_coords_dosenbach_2010() (in module nilearn.datasets)": [[264, "nilearn.datasets.fetch_coords_dosenbach_2010", false]], "fetch_coords_power_2011() (in module nilearn.datasets)": [[265, "nilearn.datasets.fetch_coords_power_2011", false]], "fetch_coords_seitzman_2018() (in module nilearn.datasets)": [[266, "nilearn.datasets.fetch_coords_seitzman_2018", false]], "fetch_development_fmri() (in module nilearn.datasets)": [[267, "nilearn.datasets.fetch_development_fmri", false]], "fetch_ds000030_urls() (in module nilearn.datasets)": [[268, "nilearn.datasets.fetch_ds000030_urls", false]], "fetch_fiac_first_level() (in module nilearn.datasets)": [[269, "nilearn.datasets.fetch_fiac_first_level", false]], "fetch_haxby() (in module nilearn.datasets)": [[270, "nilearn.datasets.fetch_haxby", false]], "fetch_icbm152_2009() (in module nilearn.datasets)": [[271, "nilearn.datasets.fetch_icbm152_2009", false]], "fetch_icbm152_brain_gm_mask() (in module nilearn.datasets)": [[272, "nilearn.datasets.fetch_icbm152_brain_gm_mask", false]], "fetch_language_localizer_demo_dataset() (in module nilearn.datasets)": [[273, "nilearn.datasets.fetch_language_localizer_demo_dataset", false]], "fetch_localizer_button_task() (in module nilearn.datasets)": [[274, "nilearn.datasets.fetch_localizer_button_task", false]], "fetch_localizer_calculation_task() (in module nilearn.datasets)": [[275, "nilearn.datasets.fetch_localizer_calculation_task", false]], "fetch_localizer_contrasts() (in module nilearn.datasets)": [[276, "nilearn.datasets.fetch_localizer_contrasts", false]], "fetch_localizer_first_level() (in module nilearn.datasets)": [[277, "nilearn.datasets.fetch_localizer_first_level", false]], "fetch_megatrawls_netmats() (in module nilearn.datasets)": [[278, "nilearn.datasets.fetch_megatrawls_netmats", false]], "fetch_mixed_gambles() (in module nilearn.datasets)": [[279, "nilearn.datasets.fetch_mixed_gambles", false]], "fetch_miyawaki2008() (in module nilearn.datasets)": [[280, "nilearn.datasets.fetch_miyawaki2008", false]], "fetch_neurovault() (in module nilearn.datasets)": [[281, "nilearn.datasets.fetch_neurovault", false]], "fetch_neurovault_auditory_computation_task() (in module nilearn.datasets)": [[282, "nilearn.datasets.fetch_neurovault_auditory_computation_task", false]], "fetch_neurovault_ids() (in module nilearn.datasets)": [[283, "nilearn.datasets.fetch_neurovault_ids", false]], "fetch_neurovault_motor_task() (in module nilearn.datasets)": [[284, "nilearn.datasets.fetch_neurovault_motor_task", false]], "fetch_oasis_vbm() (in module nilearn.datasets)": [[285, "nilearn.datasets.fetch_oasis_vbm", false]], "fetch_openneuro_dataset() (in module nilearn.datasets)": [[286, "nilearn.datasets.fetch_openneuro_dataset", false]], "fetch_spm_auditory() (in module nilearn.datasets)": [[287, "nilearn.datasets.fetch_spm_auditory", false]], "fetch_spm_multimodal_fmri() (in module nilearn.datasets)": [[288, "nilearn.datasets.fetch_spm_multimodal_fmri", false]], "fetch_surf_fsaverage() (in module nilearn.datasets)": [[289, "nilearn.datasets.fetch_surf_fsaverage", false]], "fetch_surf_nki_enhanced() (in module nilearn.datasets)": [[290, "nilearn.datasets.fetch_surf_nki_enhanced", false]], "file_path (nilearn.surface.filemesh attribute)": [[470, "nilearn.surface.FileMesh.file_path", false]], "filemesh (class in nilearn.surface)": [[470, "nilearn.surface.FileMesh", false]], "find_cut_coords() (nilearn.plotting.displays.baseslicer static method)": [[392, "nilearn.plotting.displays.BaseSlicer.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.lprojector class method)": [[395, "nilearn.plotting.displays.LProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.lrprojector class method)": [[396, "nilearn.plotting.displays.LRProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.lyrprojector class method)": [[397, "nilearn.plotting.displays.LYRProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.lyrzprojector class method)": [[398, "nilearn.plotting.displays.LYRZProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.lzrprojector class method)": [[399, "nilearn.plotting.displays.LZRProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.lzryprojector class method)": [[400, "nilearn.plotting.displays.LZRYProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.mosaicslicer class method)": [[401, "nilearn.plotting.displays.MosaicSlicer.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.orthoprojector class method)": [[402, "nilearn.plotting.displays.OrthoProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.orthoslicer class method)": [[403, "nilearn.plotting.displays.OrthoSlicer.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.rprojector class method)": [[405, "nilearn.plotting.displays.RProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.tiledslicer class method)": [[406, "nilearn.plotting.displays.TiledSlicer.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.xprojector class method)": [[407, "nilearn.plotting.displays.XProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.xslicer class method)": [[408, "nilearn.plotting.displays.XSlicer.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.xzprojector class method)": [[409, "nilearn.plotting.displays.XZProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.xzslicer class method)": [[410, "nilearn.plotting.displays.XZSlicer.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.yprojector class method)": [[411, "nilearn.plotting.displays.YProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.yslicer class method)": [[412, "nilearn.plotting.displays.YSlicer.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.yxprojector class method)": [[413, "nilearn.plotting.displays.YXProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.yxslicer class method)": [[414, "nilearn.plotting.displays.YXSlicer.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.yzprojector class method)": [[415, "nilearn.plotting.displays.YZProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.yzslicer class method)": [[416, "nilearn.plotting.displays.YZSlicer.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.zprojector class method)": [[417, "nilearn.plotting.displays.ZProjector.find_cut_coords", false]], "find_cut_coords() (nilearn.plotting.displays.zslicer class method)": [[418, "nilearn.plotting.displays.ZSlicer.find_cut_coords", false]], "find_cut_slices() (in module nilearn.plotting)": [[421, "nilearn.plotting.find_cut_slices", false]], "find_parcellation_cut_coords() (in module nilearn.plotting)": [[422, "nilearn.plotting.find_parcellation_cut_coords", false]], "find_probabilistic_atlas_cut_coords() (in module nilearn.plotting)": [[423, "nilearn.plotting.find_probabilistic_atlas_cut_coords", false]], "find_xyz_cut_coords() (in module nilearn.plotting)": [[424, "nilearn.plotting.find_xyz_cut_coords", false]], "fir": [[184, "term-FIR", true]], "first_level_from_bids() (in module nilearn.glm.first_level)": [[329, "nilearn.glm.first_level.first_level_from_bids", false]], "firstlevelmodel (class in nilearn.glm.first_level)": [[326, "nilearn.glm.first_level.FirstLevelModel", false]], "fit() (nilearn.connectome.connectivitymeasure method)": [[238, "nilearn.connectome.ConnectivityMeasure.fit", false]], "fit() (nilearn.connectome.groupsparsecovariance method)": [[239, "nilearn.connectome.GroupSparseCovariance.fit", false]], "fit() (nilearn.connectome.groupsparsecovariancecv method)": [[240, "nilearn.connectome.GroupSparseCovarianceCV.fit", false]], "fit() (nilearn.decoding.decoder method)": [[304, "nilearn.decoding.Decoder.fit", false]], "fit() (nilearn.decoding.decoderregressor method)": [[305, "nilearn.decoding.DecoderRegressor.fit", false]], "fit() (nilearn.decoding.fremclassifier method)": [[306, "nilearn.decoding.FREMClassifier.fit", false]], "fit() (nilearn.decoding.fremregressor method)": [[307, "nilearn.decoding.FREMRegressor.fit", false]], "fit() (nilearn.decoding.searchlight method)": [[308, "nilearn.decoding.SearchLight.fit", false]], "fit() (nilearn.decoding.spacenetclassifier method)": [[309, "nilearn.decoding.SpaceNetClassifier.fit", false]], "fit() (nilearn.decoding.spacenetregressor method)": [[310, "nilearn.decoding.SpaceNetRegressor.fit", false]], "fit() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.fit", false]], "fit() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.fit", false]], "fit() (nilearn.glm.armodel method)": [[313, "nilearn.glm.ARModel.fit", false]], "fit() (nilearn.glm.first_level.firstlevelmodel method)": [[326, "nilearn.glm.first_level.FirstLevelModel.fit", false]], "fit() (nilearn.glm.olsmodel method)": [[317, "nilearn.glm.OLSModel.fit", false]], "fit() (nilearn.glm.second_level.secondlevelmodel method)": [[339, "nilearn.glm.second_level.SecondLevelModel.fit", false]], "fit() (nilearn.maskers.basemasker method)": [[370, "nilearn.maskers.BaseMasker.fit", false]], "fit() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.fit", false]], "fit() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.fit", false]], "fit() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.fit", false]], "fit() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.fit", false]], "fit() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.fit", false]], "fit() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.fit", false]], "fit() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.fit", false]], "fit() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.fit", false]], "fit() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.fit", false]], "fit() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.fit", false]], "fit() (nilearn.regions.hierarchicalkmeans method)": [[453, "nilearn.regions.HierarchicalKMeans.fit", false]], "fit() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.fit", false]], "fit() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.fit", false]], "fit() (nilearn.regions.rena method)": [[455, "nilearn.regions.ReNA.fit", false]], "fit_predict() (nilearn.regions.hierarchicalkmeans method)": [[453, "nilearn.regions.HierarchicalKMeans.fit_predict", false]], "fit_predict() (nilearn.regions.rena method)": [[455, "nilearn.regions.ReNA.fit_predict", false]], "fit_transform() (nilearn.connectome.connectivitymeasure method)": [[238, "nilearn.connectome.ConnectivityMeasure.fit_transform", false]], "fit_transform() (nilearn.decoding.searchlight method)": [[308, "nilearn.decoding.SearchLight.fit_transform", false]], "fit_transform() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.fit_transform", false]], "fit_transform() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.fit_transform", false]], "fit_transform() (nilearn.maskers.basemasker method)": [[370, "nilearn.maskers.BaseMasker.fit_transform", false]], "fit_transform() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.fit_transform", false]], "fit_transform() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.fit_transform", false]], "fit_transform() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.fit_transform", false]], "fit_transform() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.fit_transform", false]], "fit_transform() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.fit_transform", false]], "fit_transform() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.fit_transform", false]], "fit_transform() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.fit_transform", false]], "fit_transform() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.fit_transform", false]], "fit_transform() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.fit_transform", false]], "fit_transform() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.fit_transform", false]], "fit_transform() (nilearn.regions.hierarchicalkmeans method)": [[453, "nilearn.regions.HierarchicalKMeans.fit_transform", false]], "fit_transform() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.fit_transform", false]], "fit_transform() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.fit_transform", false]], "fit_transform() (nilearn.regions.rena method)": [[455, "nilearn.regions.ReNA.fit_transform", false]], "fmri": [[184, "term-fMRI", true]], "fmriprep": [[184, "term-fMRIPrep", true]], "fpr correction": [[184, "term-FPR-correction", true]], "frem": [[184, "term-FREM", true]], "fremclassifier (class in nilearn.decoding)": [[306, "nilearn.decoding.FREMClassifier", false]], "fremregressor (class in nilearn.decoding)": [[307, "nilearn.decoding.FREMRegressor", false]], "from_volume() (nilearn.surface.surfaceimage class method)": [[474, "nilearn.surface.SurfaceImage.from_volume", false]], "functional connectivity": [[184, "term-functional-connectivity", true]], "functional connectome": [[184, "term-functional-connectome", true]], "fwer correction": [[184, "term-FWER-correction", true]], "fwhm": [[184, "term-FWHM", true]], "generate_report() (nilearn.glm.first_level.firstlevelmodel method)": [[326, "nilearn.glm.first_level.FirstLevelModel.generate_report", false]], "generate_report() (nilearn.glm.second_level.secondlevelmodel method)": [[339, "nilearn.glm.second_level.SecondLevelModel.generate_report", false]], "generate_report() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.generate_report", false]], "generate_report() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.generate_report", false]], "generate_report() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.generate_report", false]], "generate_report() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.generate_report", false]], "generate_report() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.generate_report", false]], "generate_report() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.generate_report", false]], "generate_report() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.generate_report", false]], "generate_report() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.generate_report", false]], "generate_report() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.generate_report", false]], "generate_report() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.generate_report", false]], "generate_report() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.generate_report", false]], "get_bids_files() (in module nilearn.interfaces.bids)": [[364, "nilearn.interfaces.bids.get_bids_files", false]], "get_clusters_table() (in module nilearn.reporting)": [[465, "nilearn.reporting.get_clusters_table", false]], "get_data() (in module nilearn.image)": [[349, "nilearn.image.get_data", false]], "get_data_dirs() (in module nilearn.datasets)": [[291, "nilearn.datasets.get_data_dirs", false]], "get_design_from_fslmat() (in module nilearn.interfaces.fsl)": [[369, "nilearn.interfaces.fsl.get_design_from_fslmat", false]], "get_iframe() (nilearn.reporting.htmlreport method)": [[464, "nilearn.reporting.HTMLReport.get_iframe", false]], "get_metadata_routing() (nilearn.connectome.connectivitymeasure method)": [[238, "nilearn.connectome.ConnectivityMeasure.get_metadata_routing", false]], "get_metadata_routing() (nilearn.connectome.groupsparsecovariance method)": [[239, "nilearn.connectome.GroupSparseCovariance.get_metadata_routing", false]], "get_metadata_routing() (nilearn.connectome.groupsparsecovariancecv method)": [[240, "nilearn.connectome.GroupSparseCovarianceCV.get_metadata_routing", false]], "get_metadata_routing() (nilearn.decoding.decoder method)": [[304, "nilearn.decoding.Decoder.get_metadata_routing", false]], "get_metadata_routing() (nilearn.decoding.decoderregressor method)": [[305, "nilearn.decoding.DecoderRegressor.get_metadata_routing", false]], "get_metadata_routing() (nilearn.decoding.fremclassifier method)": [[306, "nilearn.decoding.FREMClassifier.get_metadata_routing", false]], "get_metadata_routing() (nilearn.decoding.fremregressor method)": [[307, "nilearn.decoding.FREMRegressor.get_metadata_routing", false]], "get_metadata_routing() (nilearn.decoding.searchlight method)": [[308, "nilearn.decoding.SearchLight.get_metadata_routing", false]], "get_metadata_routing() (nilearn.decoding.spacenetclassifier method)": [[309, "nilearn.decoding.SpaceNetClassifier.get_metadata_routing", false]], "get_metadata_routing() (nilearn.decoding.spacenetregressor method)": [[310, "nilearn.decoding.SpaceNetRegressor.get_metadata_routing", false]], "get_metadata_routing() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.get_metadata_routing", false]], "get_metadata_routing() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.get_metadata_routing", false]], "get_metadata_routing() (nilearn.glm.first_level.firstlevelmodel method)": [[326, "nilearn.glm.first_level.FirstLevelModel.get_metadata_routing", false]], "get_metadata_routing() (nilearn.glm.second_level.secondlevelmodel method)": [[339, "nilearn.glm.second_level.SecondLevelModel.get_metadata_routing", false]], "get_metadata_routing() (nilearn.maskers.basemasker method)": [[370, "nilearn.maskers.BaseMasker.get_metadata_routing", false]], "get_metadata_routing() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.get_metadata_routing", false]], "get_metadata_routing() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.get_metadata_routing", false]], "get_metadata_routing() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.get_metadata_routing", false]], "get_metadata_routing() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.get_metadata_routing", false]], "get_metadata_routing() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.get_metadata_routing", false]], "get_metadata_routing() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.get_metadata_routing", false]], "get_metadata_routing() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.get_metadata_routing", false]], "get_metadata_routing() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.get_metadata_routing", false]], "get_metadata_routing() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.get_metadata_routing", false]], "get_metadata_routing() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.get_metadata_routing", false]], "get_metadata_routing() (nilearn.regions.hierarchicalkmeans method)": [[453, "nilearn.regions.HierarchicalKMeans.get_metadata_routing", false]], "get_metadata_routing() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.get_metadata_routing", false]], "get_metadata_routing() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.get_metadata_routing", false]], "get_metadata_routing() (nilearn.regions.rena method)": [[455, "nilearn.regions.ReNA.get_metadata_routing", false]], "get_object_bounds() (nilearn.plotting.displays.baseaxes method)": [[391, "nilearn.plotting.displays.BaseAxes.get_object_bounds", false]], "get_object_bounds() (nilearn.plotting.displays.cutaxes method)": [[393, "nilearn.plotting.displays.CutAxes.get_object_bounds", false]], "get_object_bounds() (nilearn.plotting.displays.glassbrainaxes method)": [[394, "nilearn.plotting.displays.GlassBrainAxes.get_object_bounds", false]], "get_params() (nilearn.connectome.connectivitymeasure method)": [[238, "nilearn.connectome.ConnectivityMeasure.get_params", false]], "get_params() (nilearn.connectome.groupsparsecovariance method)": [[239, "nilearn.connectome.GroupSparseCovariance.get_params", false]], "get_params() (nilearn.connectome.groupsparsecovariancecv method)": [[240, "nilearn.connectome.GroupSparseCovarianceCV.get_params", false]], "get_params() (nilearn.decoding.decoder method)": [[304, "nilearn.decoding.Decoder.get_params", false]], "get_params() (nilearn.decoding.decoderregressor method)": [[305, "nilearn.decoding.DecoderRegressor.get_params", false]], "get_params() (nilearn.decoding.fremclassifier method)": [[306, "nilearn.decoding.FREMClassifier.get_params", false]], "get_params() (nilearn.decoding.fremregressor method)": [[307, "nilearn.decoding.FREMRegressor.get_params", false]], "get_params() (nilearn.decoding.searchlight method)": [[308, "nilearn.decoding.SearchLight.get_params", false]], "get_params() (nilearn.decoding.spacenetclassifier method)": [[309, "nilearn.decoding.SpaceNetClassifier.get_params", false]], "get_params() (nilearn.decoding.spacenetregressor method)": [[310, "nilearn.decoding.SpaceNetRegressor.get_params", false]], "get_params() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.get_params", false]], "get_params() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.get_params", false]], "get_params() (nilearn.glm.first_level.firstlevelmodel method)": [[326, "nilearn.glm.first_level.FirstLevelModel.get_params", false]], "get_params() (nilearn.glm.second_level.secondlevelmodel method)": [[339, "nilearn.glm.second_level.SecondLevelModel.get_params", false]], "get_params() (nilearn.maskers.basemasker method)": [[370, "nilearn.maskers.BaseMasker.get_params", false]], "get_params() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.get_params", false]], "get_params() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.get_params", false]], "get_params() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.get_params", false]], "get_params() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.get_params", false]], "get_params() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.get_params", false]], "get_params() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.get_params", false]], "get_params() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.get_params", false]], "get_params() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.get_params", false]], "get_params() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.get_params", false]], "get_params() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.get_params", false]], "get_params() (nilearn.regions.hierarchicalkmeans method)": [[453, "nilearn.regions.HierarchicalKMeans.get_params", false]], "get_params() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.get_params", false]], "get_params() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.get_params", false]], "get_params() (nilearn.regions.rena method)": [[455, "nilearn.regions.ReNA.get_params", false]], "get_projector() (in module nilearn.plotting.displays)": [[419, "nilearn.plotting.displays.get_projector", false]], "get_slicer() (in module nilearn.plotting.displays)": [[420, "nilearn.plotting.displays.get_slicer", false]], "get_standalone() (nilearn.reporting.htmlreport method)": [[464, "nilearn.reporting.HTMLReport.get_standalone", false]], "glassbrainaxes (class in nilearn.plotting.displays)": [[394, "nilearn.plotting.displays.GlassBrainAxes", false]], "glm": [[184, "term-GLM", true]], "glover_dispersion_derivative() (in module nilearn.glm.first_level)": [[330, "nilearn.glm.first_level.glover_dispersion_derivative", false]], "glover_hrf() (in module nilearn.glm.first_level)": [[331, "nilearn.glm.first_level.glover_hrf", false]], "glover_time_derivative() (in module nilearn.glm.first_level)": [[332, "nilearn.glm.first_level.glover_time_derivative", false]], "group_sparse_covariance() (in module nilearn.connectome)": [[242, "nilearn.connectome.group_sparse_covariance", false]], "groupsparsecovariance (class in nilearn.connectome)": [[239, "nilearn.connectome.GroupSparseCovariance", false]], "groupsparsecovariancecv (class in nilearn.connectome)": [[240, "nilearn.connectome.GroupSparseCovarianceCV", false]], "height (nilearn.reporting.htmlreport property)": [[464, "nilearn.reporting.HTMLReport.height", false]], "hierarchicalkmeans (class in nilearn.regions)": [[453, "nilearn.regions.HierarchicalKMeans", false]], "high_variance_confounds() (in module nilearn.image)": [[350, "nilearn.image.high_variance_confounds", false]], "high_variance_confounds() (in module nilearn.signal)": [[469, "nilearn.signal.high_variance_confounds", false]], "hrf": [[184, "term-HRF", true]], "htmlreport (class in nilearn.reporting)": [[464, "nilearn.reporting.HTMLReport", false]], "ica": [[184, "term-ICA", true]], "img_to_signals_labels() (in module nilearn.regions)": [[459, "nilearn.regions.img_to_signals_labels", false]], "img_to_signals_maps() (in module nilearn.regions)": [[460, "nilearn.regions.img_to_signals_maps", false]], "index_img() (in module nilearn.image)": [[351, "nilearn.image.index_img", false]], "init_with_figure() (nilearn.plotting.displays.baseslicer class method)": [[392, "nilearn.plotting.displays.BaseSlicer.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.lprojector class method)": [[395, "nilearn.plotting.displays.LProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.lrprojector class method)": [[396, "nilearn.plotting.displays.LRProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.lyrprojector class method)": [[397, "nilearn.plotting.displays.LYRProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.lyrzprojector class method)": [[398, "nilearn.plotting.displays.LYRZProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.lzrprojector class method)": [[399, "nilearn.plotting.displays.LZRProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.lzryprojector class method)": [[400, "nilearn.plotting.displays.LZRYProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.mosaicslicer class method)": [[401, "nilearn.plotting.displays.MosaicSlicer.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.orthoprojector class method)": [[402, "nilearn.plotting.displays.OrthoProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.orthoslicer class method)": [[403, "nilearn.plotting.displays.OrthoSlicer.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.rprojector class method)": [[405, "nilearn.plotting.displays.RProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.tiledslicer class method)": [[406, "nilearn.plotting.displays.TiledSlicer.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.xprojector class method)": [[407, "nilearn.plotting.displays.XProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.xslicer class method)": [[408, "nilearn.plotting.displays.XSlicer.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.xzprojector class method)": [[409, "nilearn.plotting.displays.XZProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.xzslicer class method)": [[410, "nilearn.plotting.displays.XZSlicer.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.yprojector class method)": [[411, "nilearn.plotting.displays.YProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.yslicer class method)": [[412, "nilearn.plotting.displays.YSlicer.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.yxprojector class method)": [[413, "nilearn.plotting.displays.YXProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.yxslicer class method)": [[414, "nilearn.plotting.displays.YXSlicer.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.yzprojector class method)": [[415, "nilearn.plotting.displays.YZProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.yzslicer class method)": [[416, "nilearn.plotting.displays.YZSlicer.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.zprojector class method)": [[417, "nilearn.plotting.displays.ZProjector.init_with_figure", false]], "init_with_figure() (nilearn.plotting.displays.zslicer class method)": [[418, "nilearn.plotting.displays.ZSlicer.init_with_figure", false]], "initialize() (nilearn.glm.armodel method)": [[313, "nilearn.glm.ARModel.initialize", false]], "initialize() (nilearn.glm.olsmodel method)": [[317, "nilearn.glm.OLSModel.initialize", false]], "inmemorymesh (class in nilearn.surface)": [[471, "nilearn.surface.InMemoryMesh", false]], "intersect_masks() (in module nilearn.masking)": [[388, "nilearn.masking.intersect_masks", false]], "inverse_transform() (nilearn.connectome.connectivitymeasure method)": [[238, "nilearn.connectome.ConnectivityMeasure.inverse_transform", false]], "inverse_transform() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.inverse_transform", false]], "inverse_transform() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.inverse_transform", false]], "inverse_transform() (nilearn.maskers.basemasker method)": [[370, "nilearn.maskers.BaseMasker.inverse_transform", false]], "inverse_transform() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.inverse_transform", false]], "inverse_transform() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.inverse_transform", false]], "inverse_transform() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.inverse_transform", false]], "inverse_transform() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.inverse_transform", false]], "inverse_transform() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.inverse_transform", false]], "inverse_transform() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.inverse_transform", false]], "inverse_transform() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.inverse_transform", false]], "inverse_transform() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.inverse_transform", false]], "inverse_transform() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.inverse_transform", false]], "inverse_transform() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.inverse_transform", false]], "inverse_transform() (nilearn.regions.hierarchicalkmeans method)": [[453, "nilearn.regions.HierarchicalKMeans.inverse_transform", false]], "inverse_transform() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.inverse_transform", false]], "inverse_transform() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.inverse_transform", false]], "inverse_transform() (nilearn.regions.rena method)": [[455, "nilearn.regions.ReNA.inverse_transform", false]], "iter_img() (in module nilearn.image)": [[352, "nilearn.image.iter_img", false]], "labels_ (nilearn.maskers.multiniftilabelsmasker property)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.labels_", false]], "labels_ (nilearn.maskers.niftilabelsmasker property)": [[374, "nilearn.maskers.NiftiLabelsMasker.labels_", false]], "labels_ (nilearn.maskers.surfacelabelsmasker property)": [[378, "nilearn.maskers.SurfaceLabelsMasker.labels_", false]], "largest_connected_component_img() (in module nilearn.image)": [[353, "nilearn.image.largest_connected_component_img", false]], "likelihoodmodelresults (class in nilearn.glm)": [[316, "nilearn.glm.LikelihoodModelResults", false]], "load_confounds() (in module nilearn.interfaces.fmriprep)": [[367, "nilearn.interfaces.fmriprep.load_confounds", false]], "load_confounds_strategy() (in module nilearn.interfaces.fmriprep)": [[368, "nilearn.interfaces.fmriprep.load_confounds_strategy", false]], "load_fsaverage() (in module nilearn.datasets)": [[292, "nilearn.datasets.load_fsaverage", false]], "load_fsaverage_data() (in module nilearn.datasets)": [[293, "nilearn.datasets.load_fsaverage_data", false]], "load_img() (in module nilearn.image)": [[354, "nilearn.image.load_img", false]], "load_mni152_brain_mask() (in module nilearn.datasets)": [[294, "nilearn.datasets.load_mni152_brain_mask", false]], "load_mni152_gm_mask() (in module nilearn.datasets)": [[295, "nilearn.datasets.load_mni152_gm_mask", false]], "load_mni152_gm_template() (in module nilearn.datasets)": [[296, "nilearn.datasets.load_mni152_gm_template", false]], "load_mni152_template() (in module nilearn.datasets)": [[297, "nilearn.datasets.load_mni152_template", false]], "load_mni152_wm_mask() (in module nilearn.datasets)": [[298, "nilearn.datasets.load_mni152_wm_mask", false]], "load_mni152_wm_template() (in module nilearn.datasets)": [[299, "nilearn.datasets.load_mni152_wm_template", false]], "load_nki() (in module nilearn.datasets)": [[300, "nilearn.datasets.load_nki", false]], "load_sample_motor_activation_image() (in module nilearn.datasets)": [[301, "nilearn.datasets.load_sample_motor_activation_image", false]], "load_surf_data() (in module nilearn.surface)": [[476, "nilearn.surface.load_surf_data", false]], "load_surf_mesh() (in module nilearn.surface)": [[477, "nilearn.surface.load_surf_mesh", false]], "loaded() (nilearn.surface.filemesh method)": [[470, "nilearn.surface.FileMesh.loaded", false]], "logl() (nilearn.glm.armodel method)": [[313, "nilearn.glm.ARModel.logL", false]], "logl() (nilearn.glm.likelihoodmodelresults method)": [[316, "nilearn.glm.LikelihoodModelResults.logL", false]], "logl() (nilearn.glm.olsmodel method)": [[317, "nilearn.glm.OLSModel.logL", false]], "logl() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.logL", false]], "logl() (nilearn.glm.simpleregressionresults method)": [[319, "nilearn.glm.SimpleRegressionResults.logL", false]], "lprojector (class in nilearn.plotting.displays)": [[395, "nilearn.plotting.displays.LProjector", false]], "lrprojector (class in nilearn.plotting.displays)": [[396, "nilearn.plotting.displays.LRProjector", false]], "lyrprojector (class in nilearn.plotting.displays)": [[397, "nilearn.plotting.displays.LYRProjector", false]], "lyrzprojector (class in nilearn.plotting.displays)": [[398, "nilearn.plotting.displays.LYRZProjector", false]], "lzrprojector (class in nilearn.plotting.displays)": [[399, "nilearn.plotting.displays.LZRProjector", false]], "lzryprojector (class in nilearn.plotting.displays)": [[400, "nilearn.plotting.displays.LZRYProjector", false]], "make_first_level_design_matrix() (in module nilearn.glm.first_level)": [[333, "nilearn.glm.first_level.make_first_level_design_matrix", false]], "make_glm_report() (in module nilearn.reporting)": [[466, "nilearn.reporting.make_glm_report", false]], "make_second_level_design_matrix() (in module nilearn.glm.second_level)": [[340, "nilearn.glm.second_level.make_second_level_design_matrix", false]], "math_img() (in module nilearn.image)": [[355, "nilearn.image.math_img", false]], "mean_img() (in module nilearn.image)": [[356, "nilearn.image.mean_img", false]], "mean_scaling() (in module nilearn.glm.first_level)": [[334, "nilearn.glm.first_level.mean_scaling", false]], "meg": [[184, "term-MEG", true]], "mesh": [[184, "term-mesh", true]], "mni": [[184, "term-MNI", true]], "module": [[192, "module-nilearn.connectome", false], [193, "module-nilearn.datasets", false], [194, "module-nilearn.decoding", false], [195, "module-nilearn.decomposition", false], [481, "module-nilearn.glm", false], [481, "module-nilearn.glm.first_level", false], [481, "module-nilearn.glm.second_level", false], [482, "module-nilearn.image", false], [484, "module-nilearn.interfaces", false], [484, "module-nilearn.interfaces.bids", false], [484, "module-nilearn.interfaces.fmriprep", false], [484, "module-nilearn.interfaces.fsl", false], [485, "module-nilearn.maskers", false], [486, "module-nilearn.masking", false], [487, "module-nilearn.mass_univariate", false], [488, "module-nilearn.plotting", false], [488, "module-nilearn.plotting.displays", false], [488, "module-nilearn.plotting.img_comparison", false], [490, "module-nilearn.regions", false], [491, "module-nilearn.reporting", false], [492, "module-nilearn.signal", false], [493, "module-nilearn.surface", false]], "mosaicslicer (class in nilearn.plotting.displays)": [[401, "nilearn.plotting.displays.MosaicSlicer", false]], "mse() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.MSE", false]], "multiniftilabelsmasker (class in nilearn.maskers)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker", false]], "multiniftimapsmasker (class in nilearn.maskers)": [[372, "nilearn.maskers.MultiNiftiMapsMasker", false]], "multiniftimasker (class in nilearn.maskers)": [[373, "nilearn.maskers.MultiNiftiMasker", false]], "mvpa": [[184, "term-MVPA", true]], "n_elements_ (nilearn.maskers.multiniftilabelsmasker property)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.n_elements_", false]], "n_elements_ (nilearn.maskers.niftilabelsmasker property)": [[374, "nilearn.maskers.NiftiLabelsMasker.n_elements_", false]], "n_elements_ (nilearn.maskers.surfacelabelsmasker property)": [[378, "nilearn.maskers.SurfaceLabelsMasker.n_elements_", false]], "n_vertices (nilearn.surface.filemesh attribute)": [[470, "nilearn.surface.FileMesh.n_vertices", false]], "n_vertices (nilearn.surface.inmemorymesh attribute)": [[471, "nilearn.surface.InMemoryMesh.n_vertices", false]], "n_vertices (nilearn.surface.polymesh attribute)": [[473, "nilearn.surface.PolyMesh.n_vertices", false]], "n_vertices (nilearn.surface.surfacemesh attribute)": [[475, "nilearn.surface.SurfaceMesh.n_vertices", false]], "neurovault": [[184, "term-Neurovault", true]], "new_img_like() (in module nilearn.image)": [[357, "nilearn.image.new_img_like", false]], "nifti_maps_masker_ (nilearn.decomposition.canica property)": [[311, "nilearn.decomposition.CanICA.nifti_maps_masker_", false]], "nifti_maps_masker_ (nilearn.decomposition.dictlearning property)": [[312, "nilearn.decomposition.DictLearning.nifti_maps_masker_", false]], "nifti_maps_masker_ (nilearn.regions.parcellations property)": [[454, "nilearn.regions.Parcellations.nifti_maps_masker_", false]], "niftilabelsmasker (class in nilearn.maskers)": [[374, "nilearn.maskers.NiftiLabelsMasker", false]], "niftimapsmasker (class in nilearn.maskers)": [[375, "nilearn.maskers.NiftiMapsMasker", false]], "niftimasker (class in nilearn.maskers)": [[376, "nilearn.maskers.NiftiMasker", false]], "niftispheresmasker (class in nilearn.maskers)": [[377, "nilearn.maskers.NiftiSpheresMasker", false]], "nilearn.connectome": [[192, "module-nilearn.connectome", false]], "nilearn.datasets": [[193, "module-nilearn.datasets", false]], "nilearn.decoding": [[194, "module-nilearn.decoding", false]], "nilearn.decomposition": [[195, "module-nilearn.decomposition", false]], "nilearn.glm": [[481, "module-nilearn.glm", false]], "nilearn.glm.first_level": [[481, "module-nilearn.glm.first_level", false]], "nilearn.glm.second_level": [[481, "module-nilearn.glm.second_level", false]], "nilearn.image": [[482, "module-nilearn.image", false]], "nilearn.interfaces": [[484, "module-nilearn.interfaces", false]], "nilearn.interfaces.bids": [[484, "module-nilearn.interfaces.bids", false]], "nilearn.interfaces.fmriprep": [[484, "module-nilearn.interfaces.fmriprep", false]], "nilearn.interfaces.fsl": [[484, "module-nilearn.interfaces.fsl", false]], "nilearn.maskers": [[485, "module-nilearn.maskers", false]], "nilearn.masking": [[486, "module-nilearn.masking", false]], "nilearn.mass_univariate": [[487, "module-nilearn.mass_univariate", false]], "nilearn.plotting": [[488, "module-nilearn.plotting", false]], "nilearn.plotting.displays": [[488, "module-nilearn.plotting.displays", false]], "nilearn.plotting.img_comparison": [[488, "module-nilearn.plotting.img_comparison", false]], "nilearn.regions": [[490, "module-nilearn.regions", false]], "nilearn.reporting": [[491, "module-nilearn.reporting", false]], "nilearn.signal": [[492, "module-nilearn.signal", false]], "nilearn.surface": [[493, "module-nilearn.surface", false]], "non_parametric_inference() (in module nilearn.glm.second_level)": [[341, "nilearn.glm.second_level.non_parametric_inference", false]], "normalized_residuals() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.normalized_residuals", false]], "normalized_residuals() (nilearn.glm.simpleregressionresults method)": [[319, "nilearn.glm.SimpleRegressionResults.normalized_residuals", false]], "olsmodel (class in nilearn.glm)": [[317, "nilearn.glm.OLSModel", false]], "one_minus_pvalue() (nilearn.glm.contrast method)": [[314, "nilearn.glm.Contrast.one_minus_pvalue", false]], "open_in_browser() (nilearn.reporting.htmlreport method)": [[464, "nilearn.reporting.HTMLReport.open_in_browser", false]], "opening": [[184, "term-Opening", true]], "orthoprojector (class in nilearn.plotting.displays)": [[402, "nilearn.plotting.displays.OrthoProjector", false]], "orthoslicer (class in nilearn.plotting.displays)": [[403, "nilearn.plotting.displays.OrthoSlicer", false]], "p_value() (nilearn.glm.contrast method)": [[314, "nilearn.glm.Contrast.p_value", false]], "parameter estimate": [[184, "term-Parameter-estimate", true]], "parcellation": [[184, "term-parcellation", true]], "parcellations (class in nilearn.regions)": [[454, "nilearn.regions.Parcellations", false]], "parse_bids_filename() (in module nilearn.interfaces.bids)": [[365, "nilearn.interfaces.bids.parse_bids_filename", false]], "patch_openneuro_dataset() (in module nilearn.datasets)": [[302, "nilearn.datasets.patch_openneuro_dataset", false]], "permuted_ols() (in module nilearn.mass_univariate)": [[390, "nilearn.mass_univariate.permuted_ols", false]], "plot_anat() (in module nilearn.plotting)": [[427, "nilearn.plotting.plot_anat", false]], "plot_bland_altman() (in module nilearn.plotting.img_comparison)": [[425, "nilearn.plotting.img_comparison.plot_bland_altman", false]], "plot_carpet() (in module nilearn.plotting)": [[428, "nilearn.plotting.plot_carpet", false]], "plot_connectome() (in module nilearn.plotting)": [[429, "nilearn.plotting.plot_connectome", false]], "plot_contrast_matrix() (in module nilearn.plotting)": [[430, "nilearn.plotting.plot_contrast_matrix", false]], "plot_design_matrix() (in module nilearn.plotting)": [[431, "nilearn.plotting.plot_design_matrix", false]], "plot_design_matrix_correlation() (in module nilearn.plotting)": [[432, "nilearn.plotting.plot_design_matrix_correlation", false]], "plot_epi() (in module nilearn.plotting)": [[433, "nilearn.plotting.plot_epi", false]], "plot_event() (in module nilearn.plotting)": [[434, "nilearn.plotting.plot_event", false]], "plot_glass_brain() (in module nilearn.plotting)": [[435, "nilearn.plotting.plot_glass_brain", false]], "plot_img() (in module nilearn.plotting)": [[436, "nilearn.plotting.plot_img", false]], "plot_img_comparison() (in module nilearn.plotting.img_comparison)": [[426, "nilearn.plotting.img_comparison.plot_img_comparison", false]], "plot_img_on_surf() (in module nilearn.plotting)": [[437, "nilearn.plotting.plot_img_on_surf", false]], "plot_markers() (in module nilearn.plotting)": [[438, "nilearn.plotting.plot_markers", false]], "plot_matrix() (in module nilearn.plotting)": [[439, "nilearn.plotting.plot_matrix", false]], "plot_prob_atlas() (in module nilearn.plotting)": [[440, "nilearn.plotting.plot_prob_atlas", false]], "plot_roi() (in module nilearn.plotting)": [[441, "nilearn.plotting.plot_roi", false]], "plot_stat_map() (in module nilearn.plotting)": [[442, "nilearn.plotting.plot_stat_map", false]], "plot_surf() (in module nilearn.plotting)": [[443, "nilearn.plotting.plot_surf", false]], "plot_surf_contours() (in module nilearn.plotting)": [[444, "nilearn.plotting.plot_surf_contours", false]], "plot_surf_roi() (in module nilearn.plotting)": [[445, "nilearn.plotting.plot_surf_roi", false]], "plot_surf_stat_map() (in module nilearn.plotting)": [[446, "nilearn.plotting.plot_surf_stat_map", false]], "plotlysurfacefigure (class in nilearn.plotting.displays)": [[404, "nilearn.plotting.displays.PlotlySurfaceFigure", false]], "polydata (class in nilearn.surface)": [[472, "nilearn.surface.PolyData", false]], "polymesh (class in nilearn.surface)": [[473, "nilearn.surface.PolyMesh", false]], "prec_to_partial() (in module nilearn.connectome)": [[243, "nilearn.connectome.prec_to_partial", false]], "predict() (nilearn.decoding.decoder method)": [[304, "nilearn.decoding.Decoder.predict", false]], "predict() (nilearn.decoding.decoderregressor method)": [[305, "nilearn.decoding.DecoderRegressor.predict", false]], "predict() (nilearn.decoding.fremclassifier method)": [[306, "nilearn.decoding.FREMClassifier.predict", false]], "predict() (nilearn.decoding.fremregressor method)": [[307, "nilearn.decoding.FREMRegressor.predict", false]], "predict() (nilearn.decoding.spacenetclassifier method)": [[309, "nilearn.decoding.SpaceNetClassifier.predict", false]], "predict() (nilearn.decoding.spacenetregressor method)": [[310, "nilearn.decoding.SpaceNetRegressor.predict", false]], "predicted() (nilearn.glm.first_level.firstlevelmodel method)": [[326, "nilearn.glm.first_level.FirstLevelModel.predicted", false]], "predicted() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.predicted", false]], "predicted() (nilearn.glm.second_level.secondlevelmodel method)": [[339, "nilearn.glm.second_level.SecondLevelModel.predicted", false]], "predicted() (nilearn.glm.simpleregressionresults method)": [[319, "nilearn.glm.SimpleRegressionResults.predicted", false]], "predictive modeling": [[184, "term-predictive-modeling", true]], "probabilistic atlas": [[184, "term-Probabilistic-atlas", true]], "r_square() (nilearn.glm.first_level.firstlevelmodel method)": [[326, "nilearn.glm.first_level.FirstLevelModel.r_square", false]], "r_square() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.r_square", false]], "r_square() (nilearn.glm.second_level.secondlevelmodel method)": [[339, "nilearn.glm.second_level.SecondLevelModel.r_square", false]], "recursive_neighbor_agglomeration() (in module nilearn.regions)": [[461, "nilearn.regions.recursive_neighbor_agglomeration", false]], "region_ids_ (nilearn.maskers.multiniftilabelsmasker property)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.region_ids_", false]], "region_ids_ (nilearn.maskers.niftilabelsmasker property)": [[374, "nilearn.maskers.NiftiLabelsMasker.region_ids_", false]], "region_ids_ (nilearn.maskers.surfacelabelsmasker property)": [[378, "nilearn.maskers.SurfaceLabelsMasker.region_ids_", false]], "region_names_ (nilearn.maskers.multiniftilabelsmasker property)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.region_names_", false]], "region_names_ (nilearn.maskers.niftilabelsmasker property)": [[374, "nilearn.maskers.NiftiLabelsMasker.region_names_", false]], "region_names_ (nilearn.maskers.surfacelabelsmasker property)": [[378, "nilearn.maskers.SurfaceLabelsMasker.region_names_", false]], "regionextractor (class in nilearn.regions)": [[456, "nilearn.regions.RegionExtractor", false]], "regression": [[184, "term-regression", true]], "regressionresults (class in nilearn.glm)": [[318, "nilearn.glm.RegressionResults", false]], "rena": [[184, "term-ReNA", true]], "rena (class in nilearn.regions)": [[455, "nilearn.regions.ReNA", false]], "reorder_img() (in module nilearn.image)": [[358, "nilearn.image.reorder_img", false]], "resample_img() (in module nilearn.image)": [[359, "nilearn.image.resample_img", false]], "resample_to_img() (in module nilearn.image)": [[360, "nilearn.image.resample_to_img", false]], "residuals() (nilearn.glm.first_level.firstlevelmodel method)": [[326, "nilearn.glm.first_level.FirstLevelModel.residuals", false]], "residuals() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.residuals", false]], "residuals() (nilearn.glm.second_level.secondlevelmodel method)": [[339, "nilearn.glm.second_level.SecondLevelModel.residuals", false]], "residuals() (nilearn.glm.simpleregressionresults method)": [[319, "nilearn.glm.SimpleRegressionResults.residuals", false]], "resize() (nilearn.reporting.htmlreport method)": [[464, "nilearn.reporting.HTMLReport.resize", false]], "resting-state": [[184, "term-resting-state", true]], "roc": [[184, "term-ROC", true]], "rprojector (class in nilearn.plotting.displays)": [[405, "nilearn.plotting.displays.RProjector", false]], "run_glm() (in module nilearn.glm.first_level)": [[335, "nilearn.glm.first_level.run_glm", false]], "save_as_html() (nilearn.reporting.htmlreport method)": [[464, "nilearn.reporting.HTMLReport.save_as_html", false]], "save_glm_to_bids() (in module nilearn.interfaces.bids)": [[366, "nilearn.interfaces.bids.save_glm_to_bids", false]], "savefig() (nilearn.plotting.displays.baseslicer method)": [[392, "nilearn.plotting.displays.BaseSlicer.savefig", false]], "savefig() (nilearn.plotting.displays.lprojector method)": [[395, "nilearn.plotting.displays.LProjector.savefig", false]], "savefig() (nilearn.plotting.displays.lrprojector method)": [[396, "nilearn.plotting.displays.LRProjector.savefig", false]], "savefig() (nilearn.plotting.displays.lyrprojector method)": [[397, "nilearn.plotting.displays.LYRProjector.savefig", false]], "savefig() (nilearn.plotting.displays.lyrzprojector method)": [[398, "nilearn.plotting.displays.LYRZProjector.savefig", false]], "savefig() (nilearn.plotting.displays.lzrprojector method)": [[399, "nilearn.plotting.displays.LZRProjector.savefig", false]], "savefig() (nilearn.plotting.displays.lzryprojector method)": [[400, "nilearn.plotting.displays.LZRYProjector.savefig", false]], "savefig() (nilearn.plotting.displays.mosaicslicer method)": [[401, "nilearn.plotting.displays.MosaicSlicer.savefig", false]], "savefig() (nilearn.plotting.displays.orthoprojector method)": [[402, "nilearn.plotting.displays.OrthoProjector.savefig", false]], "savefig() (nilearn.plotting.displays.orthoslicer method)": [[403, "nilearn.plotting.displays.OrthoSlicer.savefig", false]], "savefig() (nilearn.plotting.displays.plotlysurfacefigure method)": [[404, "nilearn.plotting.displays.PlotlySurfaceFigure.savefig", false]], "savefig() (nilearn.plotting.displays.rprojector method)": [[405, "nilearn.plotting.displays.RProjector.savefig", false]], "savefig() (nilearn.plotting.displays.tiledslicer method)": [[406, "nilearn.plotting.displays.TiledSlicer.savefig", false]], "savefig() (nilearn.plotting.displays.xprojector method)": [[407, "nilearn.plotting.displays.XProjector.savefig", false]], "savefig() (nilearn.plotting.displays.xslicer method)": [[408, "nilearn.plotting.displays.XSlicer.savefig", false]], "savefig() (nilearn.plotting.displays.xzprojector method)": [[409, "nilearn.plotting.displays.XZProjector.savefig", false]], "savefig() (nilearn.plotting.displays.xzslicer method)": [[410, "nilearn.plotting.displays.XZSlicer.savefig", false]], "savefig() (nilearn.plotting.displays.yprojector method)": [[411, "nilearn.plotting.displays.YProjector.savefig", false]], "savefig() (nilearn.plotting.displays.yslicer method)": [[412, "nilearn.plotting.displays.YSlicer.savefig", false]], "savefig() (nilearn.plotting.displays.yxprojector method)": [[413, "nilearn.plotting.displays.YXProjector.savefig", false]], "savefig() (nilearn.plotting.displays.yxslicer method)": [[414, "nilearn.plotting.displays.YXSlicer.savefig", false]], "savefig() (nilearn.plotting.displays.yzprojector method)": [[415, "nilearn.plotting.displays.YZProjector.savefig", false]], "savefig() (nilearn.plotting.displays.yzslicer method)": [[416, "nilearn.plotting.displays.YZSlicer.savefig", false]], "savefig() (nilearn.plotting.displays.zprojector method)": [[417, "nilearn.plotting.displays.ZProjector.savefig", false]], "savefig() (nilearn.plotting.displays.zslicer method)": [[418, "nilearn.plotting.displays.ZSlicer.savefig", false]], "score() (nilearn.decoding.decoder method)": [[304, "nilearn.decoding.Decoder.score", false]], "score() (nilearn.decoding.decoderregressor method)": [[305, "nilearn.decoding.DecoderRegressor.score", false]], "score() (nilearn.decoding.fremclassifier method)": [[306, "nilearn.decoding.FREMClassifier.score", false]], "score() (nilearn.decoding.fremregressor method)": [[307, "nilearn.decoding.FREMRegressor.score", false]], "score() (nilearn.decoding.spacenetclassifier method)": [[309, "nilearn.decoding.SpaceNetClassifier.score", false]], "score() (nilearn.decoding.spacenetregressor method)": [[310, "nilearn.decoding.SpaceNetRegressor.score", false]], "score() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.score", false]], "score() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.score", false]], "score() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.score", false]], "scores_img_ (nilearn.decoding.searchlight property)": [[308, "nilearn.decoding.SearchLight.scores_img_", false]], "searchlight": [[184, "term-Searchlight", true]], "searchlight (class in nilearn.decoding)": [[308, "nilearn.decoding.SearchLight", false]], "secondlevelmodel (class in nilearn.glm.second_level)": [[339, "nilearn.glm.second_level.SecondLevelModel", false]], "select_from_index() (in module nilearn.datasets)": [[303, "nilearn.datasets.select_from_index", false]], "set_fit_request() (nilearn.connectome.groupsparsecovariance method)": [[239, "nilearn.connectome.GroupSparseCovariance.set_fit_request", false]], "set_fit_request() (nilearn.connectome.groupsparsecovariancecv method)": [[240, "nilearn.connectome.GroupSparseCovarianceCV.set_fit_request", false]], "set_fit_request() (nilearn.decoding.decoder method)": [[304, "nilearn.decoding.Decoder.set_fit_request", false]], "set_fit_request() (nilearn.decoding.decoderregressor method)": [[305, "nilearn.decoding.DecoderRegressor.set_fit_request", false]], "set_fit_request() (nilearn.decoding.fremclassifier method)": [[306, "nilearn.decoding.FREMClassifier.set_fit_request", false]], "set_fit_request() (nilearn.decoding.fremregressor method)": [[307, "nilearn.decoding.FREMRegressor.set_fit_request", false]], "set_fit_request() (nilearn.decoding.searchlight method)": [[308, "nilearn.decoding.SearchLight.set_fit_request", false]], "set_fit_request() (nilearn.decoding.spacenetclassifier method)": [[309, "nilearn.decoding.SpaceNetClassifier.set_fit_request", false]], "set_fit_request() (nilearn.decoding.spacenetregressor method)": [[310, "nilearn.decoding.SpaceNetRegressor.set_fit_request", false]], "set_fit_request() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.set_fit_request", false]], "set_fit_request() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.set_fit_request", false]], "set_fit_request() (nilearn.glm.first_level.firstlevelmodel method)": [[326, "nilearn.glm.first_level.FirstLevelModel.set_fit_request", false]], "set_fit_request() (nilearn.glm.second_level.secondlevelmodel method)": [[339, "nilearn.glm.second_level.SecondLevelModel.set_fit_request", false]], "set_fit_request() (nilearn.maskers.basemasker method)": [[370, "nilearn.maskers.BaseMasker.set_fit_request", false]], "set_fit_request() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.set_fit_request", false]], "set_fit_request() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.set_fit_request", false]], "set_fit_request() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.set_fit_request", false]], "set_fit_request() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.set_fit_request", false]], "set_fit_request() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.set_fit_request", false]], "set_fit_request() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.set_fit_request", false]], "set_fit_request() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.set_fit_request", false]], "set_fit_request() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.set_fit_request", false]], "set_fit_request() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.set_fit_request", false]], "set_fit_request() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.set_fit_request", false]], "set_fit_request() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.set_fit_request", false]], "set_fit_request() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.set_fit_request", false]], "set_inverse_transform_request() (nilearn.connectome.connectivitymeasure method)": [[238, "nilearn.connectome.ConnectivityMeasure.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.regions.hierarchicalkmeans method)": [[453, "nilearn.regions.HierarchicalKMeans.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.set_inverse_transform_request", false]], "set_inverse_transform_request() (nilearn.regions.rena method)": [[455, "nilearn.regions.ReNA.set_inverse_transform_request", false]], "set_params() (nilearn.connectome.connectivitymeasure method)": [[238, "nilearn.connectome.ConnectivityMeasure.set_params", false]], "set_params() (nilearn.connectome.groupsparsecovariance method)": [[239, "nilearn.connectome.GroupSparseCovariance.set_params", false]], "set_params() (nilearn.connectome.groupsparsecovariancecv method)": [[240, "nilearn.connectome.GroupSparseCovarianceCV.set_params", false]], "set_params() (nilearn.decoding.decoder method)": [[304, "nilearn.decoding.Decoder.set_params", false]], "set_params() (nilearn.decoding.decoderregressor method)": [[305, "nilearn.decoding.DecoderRegressor.set_params", false]], "set_params() (nilearn.decoding.fremclassifier method)": [[306, "nilearn.decoding.FREMClassifier.set_params", false]], "set_params() (nilearn.decoding.fremregressor method)": [[307, "nilearn.decoding.FREMRegressor.set_params", false]], "set_params() (nilearn.decoding.searchlight method)": [[308, "nilearn.decoding.SearchLight.set_params", false]], "set_params() (nilearn.decoding.spacenetclassifier method)": [[309, "nilearn.decoding.SpaceNetClassifier.set_params", false]], "set_params() (nilearn.decoding.spacenetregressor method)": [[310, "nilearn.decoding.SpaceNetRegressor.set_params", false]], "set_params() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.set_params", false]], "set_params() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.set_params", false]], "set_params() (nilearn.glm.first_level.firstlevelmodel method)": [[326, "nilearn.glm.first_level.FirstLevelModel.set_params", false]], "set_params() (nilearn.glm.second_level.secondlevelmodel method)": [[339, "nilearn.glm.second_level.SecondLevelModel.set_params", false]], "set_params() (nilearn.maskers.basemasker method)": [[370, "nilearn.maskers.BaseMasker.set_params", false]], "set_params() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.set_params", false]], "set_params() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.set_params", false]], "set_params() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.set_params", false]], "set_params() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.set_params", false]], "set_params() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.set_params", false]], "set_params() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.set_params", false]], "set_params() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.set_params", false]], "set_params() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.set_params", false]], "set_params() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.set_params", false]], "set_params() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.set_params", false]], "set_params() (nilearn.regions.hierarchicalkmeans method)": [[453, "nilearn.regions.HierarchicalKMeans.set_params", false]], "set_params() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.set_params", false]], "set_params() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.set_params", false]], "set_params() (nilearn.regions.rena method)": [[455, "nilearn.regions.ReNA.set_params", false]], "set_score_request() (nilearn.decoding.decoder method)": [[304, "nilearn.decoding.Decoder.set_score_request", false]], "set_score_request() (nilearn.decoding.decoderregressor method)": [[305, "nilearn.decoding.DecoderRegressor.set_score_request", false]], "set_score_request() (nilearn.decoding.spacenetclassifier method)": [[309, "nilearn.decoding.SpaceNetClassifier.set_score_request", false]], "set_score_request() (nilearn.decoding.spacenetregressor method)": [[310, "nilearn.decoding.SpaceNetRegressor.set_score_request", false]], "set_score_request() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.set_score_request", false]], "set_score_request() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.set_score_request", false]], "set_score_request() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.set_score_request", false]], "set_transform_request() (nilearn.connectome.connectivitymeasure method)": [[238, "nilearn.connectome.ConnectivityMeasure.set_transform_request", false]], "set_transform_request() (nilearn.decoding.searchlight method)": [[308, "nilearn.decoding.SearchLight.set_transform_request", false]], "set_transform_request() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.set_transform_request", false]], "set_transform_request() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.set_transform_request", false]], "set_transform_request() (nilearn.maskers.basemasker method)": [[370, "nilearn.maskers.BaseMasker.set_transform_request", false]], "set_transform_request() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.set_transform_request", false]], "set_transform_request() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.set_transform_request", false]], "set_transform_request() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.set_transform_request", false]], "set_transform_request() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.set_transform_request", false]], "set_transform_request() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.set_transform_request", false]], "set_transform_request() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.set_transform_request", false]], "set_transform_request() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.set_transform_request", false]], "set_transform_request() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.set_transform_request", false]], "set_transform_request() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.set_transform_request", false]], "set_transform_request() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.set_transform_request", false]], "set_transform_request() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.set_transform_request", false]], "set_transform_request() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.set_transform_request", false]], "shape (nilearn.surface.polydata property)": [[472, "nilearn.surface.PolyData.shape", false]], "shape (nilearn.surface.surfaceimage property)": [[474, "nilearn.surface.SurfaceImage.shape", false]], "show() (in module nilearn.plotting)": [[447, "nilearn.plotting.show", false]], "show() (nilearn.plotting.displays.plotlysurfacefigure method)": [[404, "nilearn.plotting.displays.PlotlySurfaceFigure.show", false]], "signals_to_img_labels() (in module nilearn.regions)": [[462, "nilearn.regions.signals_to_img_labels", false]], "signals_to_img_maps() (in module nilearn.regions)": [[463, "nilearn.regions.signals_to_img_maps", false]], "simpleregressionresults (class in nilearn.glm)": [[319, "nilearn.glm.SimpleRegressionResults", false]], "smooth_img() (in module nilearn.image)": [[361, "nilearn.image.smooth_img", false]], "snr": [[184, "term-SNR", true]], "spacenet": [[184, "term-SpaceNet", true]], "spacenetclassifier (class in nilearn.decoding)": [[309, "nilearn.decoding.SpaceNetClassifier", false]], "spacenetregressor (class in nilearn.decoding)": [[310, "nilearn.decoding.SpaceNetRegressor", false]], "spm": [[184, "term-SPM", true]], "spm_dispersion_derivative() (in module nilearn.glm.first_level)": [[336, "nilearn.glm.first_level.spm_dispersion_derivative", false]], "spm_hrf() (in module nilearn.glm.first_level)": [[337, "nilearn.glm.first_level.spm_hrf", false]], "spm_time_derivative() (in module nilearn.glm.first_level)": [[338, "nilearn.glm.first_level.spm_time_derivative", false]], "sse() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.SSE", false]], "stat() (nilearn.glm.contrast method)": [[314, "nilearn.glm.Contrast.stat", false]], "supervised learning": [[184, "term-supervised-learning", true]], "supported_losses (nilearn.decoding.spacenetclassifier attribute)": [[309, "nilearn.decoding.SpaceNetClassifier.SUPPORTED_LOSSES", false]], "supported_losses (nilearn.decoding.spacenetregressor attribute)": [[310, "nilearn.decoding.SpaceNetRegressor.SUPPORTED_LOSSES", false]], "supported_penalties (nilearn.decoding.spacenetclassifier attribute)": [[309, "nilearn.decoding.SpaceNetClassifier.SUPPORTED_PENALTIES", false]], "supported_penalties (nilearn.decoding.spacenetregressor attribute)": [[310, "nilearn.decoding.SpaceNetRegressor.SUPPORTED_PENALTIES", false]], "surfaceimage (class in nilearn.surface)": [[474, "nilearn.surface.SurfaceImage", false]], "surfacelabelsmasker (class in nilearn.maskers)": [[378, "nilearn.maskers.SurfaceLabelsMasker", false]], "surfacemapsmasker (class in nilearn.maskers)": [[379, "nilearn.maskers.SurfaceMapsMasker", false]], "surfacemasker (class in nilearn.maskers)": [[380, "nilearn.maskers.SurfaceMasker", false]], "surfacemesh (class in nilearn.surface)": [[475, "nilearn.surface.SurfaceMesh", false]], "svm": [[184, "term-SVM", true]], "swap_img_hemispheres() (in module nilearn.image)": [[362, "nilearn.image.swap_img_hemispheres", false]], "sym_matrix_to_vec() (in module nilearn.connectome)": [[244, "nilearn.connectome.sym_matrix_to_vec", false]], "t() (nilearn.glm.likelihoodmodelresults method)": [[316, "nilearn.glm.LikelihoodModelResults.t", false]], "t() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.t", false]], "t() (nilearn.glm.simpleregressionresults method)": [[319, "nilearn.glm.SimpleRegressionResults.t", false]], "tcontrast() (nilearn.glm.likelihoodmodelresults method)": [[316, "nilearn.glm.LikelihoodModelResults.Tcontrast", false]], "tcontrast() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.Tcontrast", false]], "tcontrast() (nilearn.glm.simpleregressionresults method)": [[319, "nilearn.glm.SimpleRegressionResults.Tcontrast", false]], "tcontrastresults (class in nilearn.glm)": [[320, "nilearn.glm.TContrastResults", false]], "tfce": [[184, "term-TFCE", true]], "threshold_img() (in module nilearn.image)": [[363, "nilearn.image.threshold_img", false]], "threshold_stats_img() (in module nilearn.glm)": [[342, "nilearn.glm.threshold_stats_img", false]], "tiledslicer (class in nilearn.plotting.displays)": [[406, "nilearn.plotting.displays.TiledSlicer", false]], "title() (nilearn.plotting.displays.baseslicer method)": [[392, "nilearn.plotting.displays.BaseSlicer.title", false]], "title() (nilearn.plotting.displays.lprojector method)": [[395, "nilearn.plotting.displays.LProjector.title", false]], "title() (nilearn.plotting.displays.lrprojector method)": [[396, "nilearn.plotting.displays.LRProjector.title", false]], "title() (nilearn.plotting.displays.lyrprojector method)": [[397, "nilearn.plotting.displays.LYRProjector.title", false]], "title() (nilearn.plotting.displays.lyrzprojector method)": [[398, "nilearn.plotting.displays.LYRZProjector.title", false]], "title() (nilearn.plotting.displays.lzrprojector method)": [[399, "nilearn.plotting.displays.LZRProjector.title", false]], "title() (nilearn.plotting.displays.lzryprojector method)": [[400, "nilearn.plotting.displays.LZRYProjector.title", false]], "title() (nilearn.plotting.displays.mosaicslicer method)": [[401, "nilearn.plotting.displays.MosaicSlicer.title", false]], "title() (nilearn.plotting.displays.orthoprojector method)": [[402, "nilearn.plotting.displays.OrthoProjector.title", false]], "title() (nilearn.plotting.displays.orthoslicer method)": [[403, "nilearn.plotting.displays.OrthoSlicer.title", false]], "title() (nilearn.plotting.displays.rprojector method)": [[405, "nilearn.plotting.displays.RProjector.title", false]], "title() (nilearn.plotting.displays.tiledslicer method)": [[406, "nilearn.plotting.displays.TiledSlicer.title", false]], "title() (nilearn.plotting.displays.xprojector method)": [[407, "nilearn.plotting.displays.XProjector.title", false]], "title() (nilearn.plotting.displays.xslicer method)": [[408, "nilearn.plotting.displays.XSlicer.title", false]], "title() (nilearn.plotting.displays.xzprojector method)": [[409, "nilearn.plotting.displays.XZProjector.title", false]], "title() (nilearn.plotting.displays.xzslicer method)": [[410, "nilearn.plotting.displays.XZSlicer.title", false]], "title() (nilearn.plotting.displays.yprojector method)": [[411, "nilearn.plotting.displays.YProjector.title", false]], "title() (nilearn.plotting.displays.yslicer method)": [[412, "nilearn.plotting.displays.YSlicer.title", false]], "title() (nilearn.plotting.displays.yxprojector method)": [[413, "nilearn.plotting.displays.YXProjector.title", false]], "title() (nilearn.plotting.displays.yxslicer method)": [[414, "nilearn.plotting.displays.YXSlicer.title", false]], "title() (nilearn.plotting.displays.yzprojector method)": [[415, "nilearn.plotting.displays.YZProjector.title", false]], "title() (nilearn.plotting.displays.yzslicer method)": [[416, "nilearn.plotting.displays.YZSlicer.title", false]], "title() (nilearn.plotting.displays.zprojector method)": [[417, "nilearn.plotting.displays.ZProjector.title", false]], "title() (nilearn.plotting.displays.zslicer method)": [[418, "nilearn.plotting.displays.ZSlicer.title", false]], "to_filename() (nilearn.surface.polydata method)": [[472, "nilearn.surface.PolyData.to_filename", false]], "to_filename() (nilearn.surface.polymesh method)": [[473, "nilearn.surface.PolyMesh.to_filename", false]], "to_gifti() (nilearn.surface.filemesh method)": [[470, "nilearn.surface.FileMesh.to_gifti", false]], "to_gifti() (nilearn.surface.inmemorymesh method)": [[471, "nilearn.surface.InMemoryMesh.to_gifti", false]], "to_gifti() (nilearn.surface.surfacemesh method)": [[475, "nilearn.surface.SurfaceMesh.to_gifti", false]], "tr": [[184, "term-TR", true]], "transform() (nilearn.connectome.connectivitymeasure method)": [[238, "nilearn.connectome.ConnectivityMeasure.transform", false]], "transform() (nilearn.decoding.searchlight method)": [[308, "nilearn.decoding.SearchLight.transform", false]], "transform() (nilearn.decomposition.canica method)": [[311, "nilearn.decomposition.CanICA.transform", false]], "transform() (nilearn.decomposition.dictlearning method)": [[312, "nilearn.decomposition.DictLearning.transform", false]], "transform() (nilearn.maskers.basemasker method)": [[370, "nilearn.maskers.BaseMasker.transform", false]], "transform() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.transform", false]], "transform() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.transform", false]], "transform() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.transform", false]], "transform() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.transform", false]], "transform() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.transform", false]], "transform() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.transform", false]], "transform() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.transform", false]], "transform() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.transform", false]], "transform() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.transform", false]], "transform() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.transform", false]], "transform() (nilearn.regions.hierarchicalkmeans method)": [[453, "nilearn.regions.HierarchicalKMeans.transform", false]], "transform() (nilearn.regions.parcellations method)": [[454, "nilearn.regions.Parcellations.transform", false]], "transform() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.transform", false]], "transform() (nilearn.regions.rena method)": [[455, "nilearn.regions.ReNA.transform", false]], "transform_imgs() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.transform_imgs", false]], "transform_imgs() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.transform_imgs", false]], "transform_imgs() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.transform_imgs", false]], "transform_single_imgs() (nilearn.maskers.basemasker method)": [[370, "nilearn.maskers.BaseMasker.transform_single_imgs", false]], "transform_single_imgs() (nilearn.maskers.multiniftilabelsmasker method)": [[371, "nilearn.maskers.MultiNiftiLabelsMasker.transform_single_imgs", false]], "transform_single_imgs() (nilearn.maskers.multiniftimapsmasker method)": [[372, "nilearn.maskers.MultiNiftiMapsMasker.transform_single_imgs", false]], "transform_single_imgs() (nilearn.maskers.multiniftimasker method)": [[373, "nilearn.maskers.MultiNiftiMasker.transform_single_imgs", false]], "transform_single_imgs() (nilearn.maskers.niftilabelsmasker method)": [[374, "nilearn.maskers.NiftiLabelsMasker.transform_single_imgs", false]], "transform_single_imgs() (nilearn.maskers.niftimapsmasker method)": [[375, "nilearn.maskers.NiftiMapsMasker.transform_single_imgs", false]], "transform_single_imgs() (nilearn.maskers.niftimasker method)": [[376, "nilearn.maskers.NiftiMasker.transform_single_imgs", false]], "transform_single_imgs() (nilearn.maskers.niftispheresmasker method)": [[377, "nilearn.maskers.NiftiSpheresMasker.transform_single_imgs", false]], "transform_single_imgs() (nilearn.maskers.surfacelabelsmasker method)": [[378, "nilearn.maskers.SurfaceLabelsMasker.transform_single_imgs", false]], "transform_single_imgs() (nilearn.maskers.surfacemapsmasker method)": [[379, "nilearn.maskers.SurfaceMapsMasker.transform_single_imgs", false]], "transform_single_imgs() (nilearn.maskers.surfacemasker method)": [[380, "nilearn.maskers.SurfaceMasker.transform_single_imgs", false]], "transform_single_imgs() (nilearn.regions.regionextractor method)": [[456, "nilearn.regions.RegionExtractor.transform_single_imgs", false]], "transform_to_2d() (nilearn.plotting.displays.baseaxes method)": [[391, "nilearn.plotting.displays.BaseAxes.transform_to_2d", false]], "transform_to_2d() (nilearn.plotting.displays.cutaxes method)": [[393, "nilearn.plotting.displays.CutAxes.transform_to_2d", false]], "transform_to_2d() (nilearn.plotting.displays.glassbrainaxes method)": [[394, "nilearn.plotting.displays.GlassBrainAxes.transform_to_2d", false]], "unmask() (in module nilearn.masking)": [[389, "nilearn.masking.unmask", false]], "unsupervised learning": [[184, "term-Unsupervised-learning", true]], "valid_methods (nilearn.regions.parcellations attribute)": [[454, "nilearn.regions.Parcellations.VALID_METHODS", false]], "vbm": [[184, "term-VBM", true]], "vcov() (nilearn.glm.likelihoodmodelresults method)": [[316, "nilearn.glm.LikelihoodModelResults.vcov", false]], "vcov() (nilearn.glm.regressionresults method)": [[318, "nilearn.glm.RegressionResults.vcov", false]], "vcov() (nilearn.glm.simpleregressionresults method)": [[319, "nilearn.glm.SimpleRegressionResults.vcov", false]], "vec_to_sym_matrix() (in module nilearn.connectome)": [[245, "nilearn.connectome.vec_to_sym_matrix", false]], "vertex": [[184, "term-vertex", true]], "view_connectome() (in module nilearn.plotting)": [[448, "nilearn.plotting.view_connectome", false]], "view_img() (in module nilearn.plotting)": [[449, "nilearn.plotting.view_img", false]], "view_img_on_surf() (in module nilearn.plotting)": [[450, "nilearn.plotting.view_img_on_surf", false]], "view_markers() (in module nilearn.plotting)": [[451, "nilearn.plotting.view_markers", false]], "view_surf() (in module nilearn.plotting)": [[452, "nilearn.plotting.view_surf", false]], "vol_to_surf() (in module nilearn.surface)": [[478, "nilearn.surface.vol_to_surf", false]], "voxel": [[184, "term-voxel", true]], "ward clustering": [[184, "term-Ward-clustering", true]], "whiten() (nilearn.glm.armodel method)": [[313, "nilearn.glm.ARModel.whiten", false]], "whiten() (nilearn.glm.olsmodel method)": [[317, "nilearn.glm.OLSModel.whiten", false]], "width (nilearn.reporting.htmlreport property)": [[464, "nilearn.reporting.HTMLReport.width", false]], "xprojector (class in nilearn.plotting.displays)": [[407, "nilearn.plotting.displays.XProjector", false]], "xslicer (class in nilearn.plotting.displays)": [[408, "nilearn.plotting.displays.XSlicer", false]], "xzprojector (class in nilearn.plotting.displays)": [[409, "nilearn.plotting.displays.XZProjector", false]], "xzslicer (class in nilearn.plotting.displays)": [[410, "nilearn.plotting.displays.XZSlicer", false]], "yprojector (class in nilearn.plotting.displays)": [[411, "nilearn.plotting.displays.YProjector", false]], "yslicer (class in nilearn.plotting.displays)": [[412, "nilearn.plotting.displays.YSlicer", false]], "yxprojector (class in nilearn.plotting.displays)": [[413, "nilearn.plotting.displays.YXProjector", false]], "yxslicer (class in nilearn.plotting.displays)": [[414, "nilearn.plotting.displays.YXSlicer", false]], "yzprojector (class in nilearn.plotting.displays)": [[415, "nilearn.plotting.displays.YZProjector", false]], "yzslicer (class in nilearn.plotting.displays)": [[416, "nilearn.plotting.displays.YZSlicer", false]], "z_score() (nilearn.glm.contrast method)": [[314, "nilearn.glm.Contrast.z_score", false]], "zprojector (class in nilearn.plotting.displays)": [[417, "nilearn.plotting.displays.ZProjector", false]], "zslicer (class in nilearn.plotting.displays)": [[418, "nilearn.plotting.displays.ZSlicer", false]]}, "objects": {"nilearn": [[192, 0, 0, "-", "connectome"], [193, 0, 0, "-", "datasets"], [194, 0, 0, "-", "decoding"], [195, 0, 0, "-", "decomposition"], [481, 0, 0, "-", "glm"], [482, 0, 0, "-", "image"], [484, 0, 0, "-", "interfaces"], [485, 0, 0, "-", "maskers"], [486, 0, 0, "-", "masking"], [487, 0, 0, "-", "mass_univariate"], [488, 0, 0, "-", "plotting"], [490, 0, 0, "-", "regions"], [491, 0, 0, "-", "reporting"], [492, 0, 0, "-", "signal"], [493, 0, 0, "-", "surface"]], "nilearn.connectome": [[238, 1, 1, "", "ConnectivityMeasure"], [239, 1, 1, "", "GroupSparseCovariance"], [240, 1, 1, "", "GroupSparseCovarianceCV"], [241, 3, 1, "", "cov_to_corr"], [242, 3, 1, "", "group_sparse_covariance"], [243, 3, 1, "", "prec_to_partial"], [244, 3, 1, "", "sym_matrix_to_vec"], [245, 3, 1, "", "vec_to_sym_matrix"]], "nilearn.connectome.ConnectivityMeasure": [[238, 2, 1, "", "__init__"], [238, 2, 1, "", "fit"], [238, 2, 1, "", "fit_transform"], [238, 2, 1, "", "get_metadata_routing"], [238, 2, 1, "", "get_params"], [238, 2, 1, "", "inverse_transform"], [238, 2, 1, "", "set_inverse_transform_request"], [238, 2, 1, "", "set_params"], [238, 2, 1, "", "set_transform_request"], [238, 2, 1, "", "transform"]], "nilearn.connectome.GroupSparseCovariance": [[239, 2, 1, "", "__init__"], [239, 2, 1, "", "fit"], [239, 2, 1, "", "get_metadata_routing"], [239, 2, 1, "", "get_params"], [239, 2, 1, "", "set_fit_request"], [239, 2, 1, "", "set_params"]], "nilearn.connectome.GroupSparseCovarianceCV": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "fit"], [240, 2, 1, "", "get_metadata_routing"], [240, 2, 1, "", "get_params"], [240, 2, 1, "", "set_fit_request"], [240, 2, 1, "", "set_params"]], "nilearn.datasets": [[246, 3, 1, "", "fetch_abide_pcp"], [247, 3, 1, "", "fetch_adhd"], [248, 3, 1, "", "fetch_atlas_aal"], [249, 3, 1, "", "fetch_atlas_allen_2011"], [250, 3, 1, "", "fetch_atlas_basc_multiscale_2015"], [251, 3, 1, "", "fetch_atlas_craddock_2012"], [252, 3, 1, "", "fetch_atlas_destrieux_2009"], [253, 3, 1, "", "fetch_atlas_difumo"], [254, 3, 1, "", "fetch_atlas_harvard_oxford"], [255, 3, 1, "", "fetch_atlas_juelich"], [256, 3, 1, "", "fetch_atlas_msdl"], [257, 3, 1, "", "fetch_atlas_pauli_2017"], [258, 3, 1, "", "fetch_atlas_schaefer_2018"], [259, 3, 1, "", "fetch_atlas_smith_2009"], [260, 3, 1, "", "fetch_atlas_surf_destrieux"], [261, 3, 1, "", "fetch_atlas_talairach"], [262, 3, 1, "", "fetch_atlas_yeo_2011"], [263, 3, 1, "", "fetch_bids_langloc_dataset"], [264, 3, 1, "", "fetch_coords_dosenbach_2010"], [265, 3, 1, "", "fetch_coords_power_2011"], [266, 3, 1, "", "fetch_coords_seitzman_2018"], [267, 3, 1, "", "fetch_development_fmri"], [268, 3, 1, "", "fetch_ds000030_urls"], [269, 3, 1, "", "fetch_fiac_first_level"], [270, 3, 1, "", "fetch_haxby"], [271, 3, 1, "", "fetch_icbm152_2009"], [272, 3, 1, "", "fetch_icbm152_brain_gm_mask"], [273, 3, 1, "", "fetch_language_localizer_demo_dataset"], [274, 3, 1, "", "fetch_localizer_button_task"], [275, 3, 1, "", "fetch_localizer_calculation_task"], [276, 3, 1, "", "fetch_localizer_contrasts"], [277, 3, 1, "", "fetch_localizer_first_level"], [278, 3, 1, "", "fetch_megatrawls_netmats"], [279, 3, 1, "", "fetch_mixed_gambles"], [280, 3, 1, "", "fetch_miyawaki2008"], [281, 3, 1, "", "fetch_neurovault"], [282, 3, 1, "", "fetch_neurovault_auditory_computation_task"], [283, 3, 1, "", "fetch_neurovault_ids"], [284, 3, 1, "", "fetch_neurovault_motor_task"], [285, 3, 1, "", "fetch_oasis_vbm"], [286, 3, 1, "", "fetch_openneuro_dataset"], [287, 3, 1, "", "fetch_spm_auditory"], [288, 3, 1, "", "fetch_spm_multimodal_fmri"], [289, 3, 1, "", "fetch_surf_fsaverage"], [290, 3, 1, "", "fetch_surf_nki_enhanced"], [291, 3, 1, "", "get_data_dirs"], [292, 3, 1, "", "load_fsaverage"], [293, 3, 1, "", "load_fsaverage_data"], [294, 3, 1, "", "load_mni152_brain_mask"], [295, 3, 1, "", "load_mni152_gm_mask"], [296, 3, 1, "", "load_mni152_gm_template"], [297, 3, 1, "", "load_mni152_template"], [298, 3, 1, "", "load_mni152_wm_mask"], [299, 3, 1, "", "load_mni152_wm_template"], [300, 3, 1, "", "load_nki"], [301, 3, 1, "", "load_sample_motor_activation_image"], [302, 3, 1, "", "patch_openneuro_dataset"], [303, 3, 1, "", "select_from_index"]], "nilearn.decoding": [[304, 1, 1, "", "Decoder"], [305, 1, 1, "", "DecoderRegressor"], [306, 1, 1, "", "FREMClassifier"], [307, 1, 1, "", "FREMRegressor"], [308, 1, 1, "", "SearchLight"], [309, 1, 1, "", "SpaceNetClassifier"], [310, 1, 1, "", "SpaceNetRegressor"]], "nilearn.decoding.Decoder": [[304, 2, 1, "", "__init__"], [304, 2, 1, "", "decision_function"], [304, 2, 1, "", "fit"], [304, 2, 1, "", "get_metadata_routing"], [304, 2, 1, "", "get_params"], [304, 2, 1, "", "predict"], [304, 2, 1, "", "score"], [304, 2, 1, "", "set_fit_request"], [304, 2, 1, "", "set_params"], [304, 2, 1, "", "set_score_request"]], "nilearn.decoding.DecoderRegressor": [[305, 2, 1, "", "__init__"], [305, 2, 1, "", "decision_function"], [305, 2, 1, "", "fit"], [305, 2, 1, "", "get_metadata_routing"], [305, 2, 1, "", "get_params"], [305, 2, 1, "", "predict"], [305, 2, 1, "", "score"], [305, 2, 1, "", "set_fit_request"], [305, 2, 1, "", "set_params"], [305, 2, 1, "", "set_score_request"]], "nilearn.decoding.FREMClassifier": [[306, 2, 1, "", "__init__"], [306, 2, 1, "", "decision_function"], [306, 2, 1, "", "fit"], [306, 2, 1, "", "get_metadata_routing"], [306, 2, 1, "", "get_params"], [306, 2, 1, "", "predict"], [306, 2, 1, "", "score"], [306, 2, 1, "", "set_fit_request"], [306, 2, 1, "", "set_params"]], "nilearn.decoding.FREMRegressor": [[307, 2, 1, "", "__init__"], [307, 2, 1, "", "decision_function"], [307, 2, 1, "", "fit"], [307, 2, 1, "", "get_metadata_routing"], [307, 2, 1, "", "get_params"], [307, 2, 1, "", "predict"], [307, 2, 1, "", "score"], [307, 2, 1, "", "set_fit_request"], [307, 2, 1, "", "set_params"]], "nilearn.decoding.SearchLight": [[308, 2, 1, "", "__init__"], [308, 2, 1, "", "fit"], [308, 2, 1, "", "fit_transform"], [308, 2, 1, "", "get_metadata_routing"], [308, 2, 1, "", "get_params"], [308, 4, 1, "", "scores_img_"], [308, 2, 1, "", "set_fit_request"], [308, 2, 1, "", "set_params"], [308, 2, 1, "", "set_transform_request"], [308, 2, 1, "", "transform"]], "nilearn.decoding.SpaceNetClassifier": [[309, 5, 1, "", "SUPPORTED_LOSSES"], [309, 5, 1, "", "SUPPORTED_PENALTIES"], [309, 2, 1, "", "__init__"], [309, 2, 1, "", "decision_function"], [309, 2, 1, "", "fit"], [309, 2, 1, "", "get_metadata_routing"], [309, 2, 1, "", "get_params"], [309, 2, 1, "", "predict"], [309, 2, 1, "", "score"], [309, 2, 1, "", "set_fit_request"], [309, 2, 1, "", "set_params"], [309, 2, 1, "", "set_score_request"]], "nilearn.decoding.SpaceNetRegressor": [[310, 5, 1, "", "SUPPORTED_LOSSES"], [310, 5, 1, "", "SUPPORTED_PENALTIES"], [310, 2, 1, "", "__init__"], [310, 2, 1, "", "decision_function"], [310, 2, 1, "", "fit"], [310, 2, 1, "", "get_metadata_routing"], [310, 2, 1, "", "get_params"], [310, 2, 1, "", "predict"], [310, 2, 1, "", "score"], [310, 2, 1, "", "set_fit_request"], [310, 2, 1, "", "set_params"], [310, 2, 1, "", "set_score_request"]], "nilearn.decomposition": [[311, 1, 1, "", "CanICA"], [312, 1, 1, "", "DictLearning"]], "nilearn.decomposition.CanICA": [[311, 2, 1, "", "__init__"], [311, 2, 1, "", "fit"], [311, 2, 1, "", "fit_transform"], [311, 2, 1, "", "get_metadata_routing"], [311, 2, 1, "", "get_params"], [311, 2, 1, "", "inverse_transform"], [311, 4, 1, "", "nifti_maps_masker_"], [311, 2, 1, "", "score"], [311, 2, 1, "", "set_fit_request"], [311, 2, 1, "", "set_inverse_transform_request"], [311, 2, 1, "", "set_params"], [311, 2, 1, "", "set_score_request"], [311, 2, 1, "", "set_transform_request"], [311, 2, 1, "", "transform"]], "nilearn.decomposition.DictLearning": [[312, 2, 1, "", "__init__"], [312, 2, 1, "", "fit"], [312, 2, 1, "", "fit_transform"], [312, 2, 1, "", "get_metadata_routing"], [312, 2, 1, "", "get_params"], [312, 2, 1, "", "inverse_transform"], [312, 4, 1, "", "nifti_maps_masker_"], [312, 2, 1, "", "score"], [312, 2, 1, "", "set_fit_request"], [312, 2, 1, "", "set_inverse_transform_request"], [312, 2, 1, "", "set_params"], [312, 2, 1, "", "set_score_request"], [312, 2, 1, "", "set_transform_request"], [312, 2, 1, "", "transform"]], "nilearn.glm": [[313, 1, 1, "", "ARModel"], [314, 1, 1, "", "Contrast"], [315, 1, 1, "", "FContrastResults"], [316, 1, 1, "", "LikelihoodModelResults"], [317, 1, 1, "", "OLSModel"], [318, 1, 1, "", "RegressionResults"], [319, 1, 1, "", "SimpleRegressionResults"], [320, 1, 1, "", "TContrastResults"], [321, 3, 1, "", "cluster_level_inference"], [322, 3, 1, "", "compute_contrast"], [323, 3, 1, "", "compute_fixed_effects"], [324, 3, 1, "", "expression_to_contrast_vector"], [325, 3, 1, "", "fdr_threshold"], [481, 0, 0, "-", "first_level"], [481, 0, 0, "-", "second_level"], [342, 3, 1, "", "threshold_stats_img"]], "nilearn.glm.ARModel": [[313, 2, 1, "", "__init__"], [313, 2, 1, "", "fit"], [313, 2, 1, "", "initialize"], [313, 2, 1, "", "logL"], [313, 2, 1, "", "whiten"]], "nilearn.glm.Contrast": [[314, 2, 1, "", "__init__"], [314, 4, 1, "", "contrast_type"], [314, 2, 1, "", "effect_size"], [314, 2, 1, "", "effect_variance"], [314, 2, 1, "", "one_minus_pvalue"], [314, 2, 1, "", "p_value"], [314, 2, 1, "", "stat"], [314, 2, 1, "", "z_score"]], "nilearn.glm.FContrastResults": [[315, 2, 1, "", "__init__"]], "nilearn.glm.LikelihoodModelResults": [[316, 2, 1, "", "Fcontrast"], [316, 2, 1, "", "Tcontrast"], [316, 2, 1, "", "__init__"], [316, 2, 1, "", "conf_int"], [316, 2, 1, "", "logL"], [316, 2, 1, "", "t"], [316, 2, 1, "", "vcov"]], "nilearn.glm.OLSModel": [[317, 2, 1, "", "__init__"], [317, 2, 1, "", "fit"], [317, 2, 1, "", "initialize"], [317, 2, 1, "", "logL"], [317, 2, 1, "", "whiten"]], "nilearn.glm.RegressionResults": [[318, 2, 1, "", "Fcontrast"], [318, 2, 1, "", "MSE"], [318, 2, 1, "", "SSE"], [318, 2, 1, "", "Tcontrast"], [318, 2, 1, "", "__init__"], [318, 2, 1, "", "conf_int"], [318, 2, 1, "", "logL"], [318, 2, 1, "", "normalized_residuals"], [318, 2, 1, "", "predicted"], [318, 2, 1, "", "r_square"], [318, 2, 1, "", "residuals"], [318, 2, 1, "", "t"], [318, 2, 1, "", "vcov"]], "nilearn.glm.SimpleRegressionResults": [[319, 2, 1, "", "Fcontrast"], [319, 2, 1, "", "Tcontrast"], [319, 2, 1, "", "__init__"], [319, 2, 1, "", "conf_int"], [319, 2, 1, "", "logL"], [319, 2, 1, "", "normalized_residuals"], [319, 2, 1, "", "predicted"], [319, 2, 1, "", "residuals"], [319, 2, 1, "", "t"], [319, 2, 1, "", "vcov"]], "nilearn.glm.TContrastResults": [[320, 2, 1, "", "__init__"]], "nilearn.glm.first_level": [[326, 1, 1, "", "FirstLevelModel"], [327, 3, 1, "", "check_design_matrix"], [328, 3, 1, "", "compute_regressor"], [329, 3, 1, "", "first_level_from_bids"], [330, 3, 1, "", "glover_dispersion_derivative"], [331, 3, 1, "", "glover_hrf"], [332, 3, 1, "", "glover_time_derivative"], [333, 3, 1, "", "make_first_level_design_matrix"], [334, 3, 1, "", "mean_scaling"], [335, 3, 1, "", "run_glm"], [336, 3, 1, "", "spm_dispersion_derivative"], [337, 3, 1, "", "spm_hrf"], [338, 3, 1, "", "spm_time_derivative"]], "nilearn.glm.first_level.FirstLevelModel": [[326, 2, 1, "", "__init__"], [326, 2, 1, "", "compute_contrast"], [326, 2, 1, "", "fit"], [326, 2, 1, "", "generate_report"], [326, 2, 1, "", "get_metadata_routing"], [326, 2, 1, "", "get_params"], [326, 2, 1, "", "predicted"], [326, 2, 1, "", "r_square"], [326, 2, 1, "", "residuals"], [326, 2, 1, "", "set_fit_request"], [326, 2, 1, "", "set_params"]], "nilearn.glm.second_level": [[339, 1, 1, "", "SecondLevelModel"], [340, 3, 1, "", "make_second_level_design_matrix"], [341, 3, 1, "", "non_parametric_inference"]], "nilearn.glm.second_level.SecondLevelModel": [[339, 2, 1, "", "__init__"], [339, 2, 1, "", "compute_contrast"], [339, 2, 1, "", "fit"], [339, 2, 1, "", "generate_report"], [339, 2, 1, "", "get_metadata_routing"], [339, 2, 1, "", "get_params"], [339, 2, 1, "", "predicted"], [339, 2, 1, "", "r_square"], [339, 2, 1, "", "residuals"], [339, 2, 1, "", "set_fit_request"], [339, 2, 1, "", "set_params"]], "nilearn.image": [[343, 3, 1, "", "binarize_img"], [344, 3, 1, "", "clean_img"], [345, 3, 1, "", "concat_imgs"], [346, 3, 1, "", "coord_transform"], [347, 3, 1, "", "copy_img"], [348, 3, 1, "", "crop_img"], [349, 3, 1, "", "get_data"], [350, 3, 1, "", "high_variance_confounds"], [351, 3, 1, "", "index_img"], [352, 3, 1, "", "iter_img"], [353, 3, 1, "", "largest_connected_component_img"], [354, 3, 1, "", "load_img"], [355, 3, 1, "", "math_img"], [356, 3, 1, "", "mean_img"], [357, 3, 1, "", "new_img_like"], [358, 3, 1, "", "reorder_img"], [359, 3, 1, "", "resample_img"], [360, 3, 1, "", "resample_to_img"], [361, 3, 1, "", "smooth_img"], [362, 3, 1, "", "swap_img_hemispheres"], [363, 3, 1, "", "threshold_img"]], "nilearn.interfaces": [[484, 0, 0, "-", "bids"], [484, 0, 0, "-", "fmriprep"], [484, 0, 0, "-", "fsl"]], "nilearn.interfaces.bids": [[364, 3, 1, "", "get_bids_files"], [365, 3, 1, "", "parse_bids_filename"], [366, 3, 1, "", "save_glm_to_bids"]], "nilearn.interfaces.fmriprep": [[367, 3, 1, "", "load_confounds"], [368, 3, 1, "", "load_confounds_strategy"]], "nilearn.interfaces.fsl": [[369, 3, 1, "", "get_design_from_fslmat"]], "nilearn.maskers": [[370, 1, 1, "", "BaseMasker"], [371, 1, 1, "", "MultiNiftiLabelsMasker"], [372, 1, 1, "", "MultiNiftiMapsMasker"], [373, 1, 1, "", "MultiNiftiMasker"], [374, 1, 1, "", "NiftiLabelsMasker"], [375, 1, 1, "", "NiftiMapsMasker"], [376, 1, 1, "", "NiftiMasker"], [377, 1, 1, "", "NiftiSpheresMasker"], [378, 1, 1, "", "SurfaceLabelsMasker"], [379, 1, 1, "", "SurfaceMapsMasker"], [380, 1, 1, "", "SurfaceMasker"]], "nilearn.maskers.BaseMasker": [[370, 2, 1, "", "fit"], [370, 2, 1, "", "fit_transform"], [370, 2, 1, "", "get_metadata_routing"], [370, 2, 1, "", "get_params"], [370, 2, 1, "", "inverse_transform"], [370, 2, 1, "", "set_fit_request"], [370, 2, 1, "", "set_params"], [370, 2, 1, "", "set_transform_request"], [370, 2, 1, "", "transform"], [370, 2, 1, "", "transform_single_imgs"]], "nilearn.maskers.MultiNiftiLabelsMasker": [[371, 2, 1, "", "__init__"], [371, 2, 1, "", "fit"], [371, 2, 1, "", "fit_transform"], [371, 2, 1, "", "generate_report"], [371, 2, 1, "", "get_metadata_routing"], [371, 2, 1, "", "get_params"], [371, 2, 1, "", "inverse_transform"], [371, 4, 1, "", "labels_"], [371, 4, 1, "", "n_elements_"], [371, 4, 1, "", "region_ids_"], [371, 4, 1, "", "region_names_"], [371, 2, 1, "", "set_fit_request"], [371, 2, 1, "", "set_inverse_transform_request"], [371, 2, 1, "", "set_params"], [371, 2, 1, "", "set_transform_request"], [371, 2, 1, "", "transform"], [371, 2, 1, "", "transform_imgs"], [371, 2, 1, "", "transform_single_imgs"]], "nilearn.maskers.MultiNiftiMapsMasker": [[372, 2, 1, "", "__init__"], [372, 2, 1, "", "fit"], [372, 2, 1, "", "fit_transform"], [372, 2, 1, "", "generate_report"], [372, 2, 1, "", "get_metadata_routing"], [372, 2, 1, "", "get_params"], [372, 2, 1, "", "inverse_transform"], [372, 2, 1, "", "set_fit_request"], [372, 2, 1, "", "set_inverse_transform_request"], [372, 2, 1, "", "set_params"], [372, 2, 1, "", "set_transform_request"], [372, 2, 1, "", "transform"], [372, 2, 1, "", "transform_imgs"], [372, 2, 1, "", "transform_single_imgs"]], "nilearn.maskers.MultiNiftiMasker": [[373, 2, 1, "", "__init__"], [373, 2, 1, "", "fit"], [373, 2, 1, "", "fit_transform"], [373, 2, 1, "", "generate_report"], [373, 2, 1, "", "get_metadata_routing"], [373, 2, 1, "", "get_params"], [373, 2, 1, "", "inverse_transform"], [373, 2, 1, "", "set_fit_request"], [373, 2, 1, "", "set_params"], [373, 2, 1, "", "set_transform_request"], [373, 2, 1, "", "transform"], [373, 2, 1, "", "transform_imgs"], [373, 2, 1, "", "transform_single_imgs"]], "nilearn.maskers.NiftiLabelsMasker": [[374, 2, 1, "", "__init__"], [374, 2, 1, "", "fit"], [374, 2, 1, "", "fit_transform"], [374, 2, 1, "", "generate_report"], [374, 2, 1, "", "get_metadata_routing"], [374, 2, 1, "", "get_params"], [374, 2, 1, "", "inverse_transform"], [374, 4, 1, "", "labels_"], [374, 4, 1, "", "n_elements_"], [374, 4, 1, "", "region_ids_"], [374, 4, 1, "", "region_names_"], [374, 2, 1, "", "set_fit_request"], [374, 2, 1, "", "set_inverse_transform_request"], [374, 2, 1, "", "set_params"], [374, 2, 1, "", "set_transform_request"], [374, 2, 1, "", "transform"], [374, 2, 1, "", "transform_single_imgs"]], "nilearn.maskers.NiftiMapsMasker": [[375, 2, 1, "", "__init__"], [375, 2, 1, "", "fit"], [375, 2, 1, "", "fit_transform"], [375, 2, 1, "", "generate_report"], [375, 2, 1, "", "get_metadata_routing"], [375, 2, 1, "", "get_params"], [375, 2, 1, "", "inverse_transform"], [375, 2, 1, "", "set_fit_request"], [375, 2, 1, "", "set_inverse_transform_request"], [375, 2, 1, "", "set_params"], [375, 2, 1, "", "set_transform_request"], [375, 2, 1, "", "transform"], [375, 2, 1, "", "transform_single_imgs"]], "nilearn.maskers.NiftiMasker": [[376, 2, 1, "", "__init__"], [376, 2, 1, "", "fit"], [376, 2, 1, "", "fit_transform"], [376, 2, 1, "", "generate_report"], [376, 2, 1, "", "get_metadata_routing"], [376, 2, 1, "", "get_params"], [376, 2, 1, "", "inverse_transform"], [376, 2, 1, "", "set_fit_request"], [376, 2, 1, "", "set_params"], [376, 2, 1, "", "set_transform_request"], [376, 2, 1, "", "transform"], [376, 2, 1, "", "transform_single_imgs"]], "nilearn.maskers.NiftiSpheresMasker": [[377, 2, 1, "", "__init__"], [377, 2, 1, "", "fit"], [377, 2, 1, "", "fit_transform"], [377, 2, 1, "", "generate_report"], [377, 2, 1, "", "get_metadata_routing"], [377, 2, 1, "", "get_params"], [377, 2, 1, "", "inverse_transform"], [377, 2, 1, "", "set_fit_request"], [377, 2, 1, "", "set_inverse_transform_request"], [377, 2, 1, "", "set_params"], [377, 2, 1, "", "set_transform_request"], [377, 2, 1, "", "transform"], [377, 2, 1, "", "transform_single_imgs"]], "nilearn.maskers.SurfaceLabelsMasker": [[378, 2, 1, "", "__init__"], [378, 2, 1, "", "fit"], [378, 2, 1, "", "fit_transform"], [378, 2, 1, "", "generate_report"], [378, 2, 1, "", "get_metadata_routing"], [378, 2, 1, "", "get_params"], [378, 2, 1, "", "inverse_transform"], [378, 4, 1, "", "labels_"], [378, 4, 1, "", "n_elements_"], [378, 4, 1, "", "region_ids_"], [378, 4, 1, "", "region_names_"], [378, 2, 1, "", "set_fit_request"], [378, 2, 1, "", "set_inverse_transform_request"], [378, 2, 1, "", "set_params"], [378, 2, 1, "", "set_transform_request"], [378, 2, 1, "", "transform"], [378, 2, 1, "", "transform_single_imgs"]], "nilearn.maskers.SurfaceMapsMasker": [[379, 2, 1, "", "__init__"], [379, 2, 1, "", "fit"], [379, 2, 1, "", "fit_transform"], [379, 2, 1, "", "generate_report"], [379, 2, 1, "", "get_metadata_routing"], [379, 2, 1, "", "get_params"], [379, 2, 1, "", "inverse_transform"], [379, 2, 1, "", "set_fit_request"], [379, 2, 1, "", "set_inverse_transform_request"], [379, 2, 1, "", "set_params"], [379, 2, 1, "", "set_transform_request"], [379, 2, 1, "", "transform"], [379, 2, 1, "", "transform_single_imgs"]], "nilearn.maskers.SurfaceMasker": [[380, 2, 1, "", "__init__"], [380, 2, 1, "", "fit"], [380, 2, 1, "", "fit_transform"], [380, 2, 1, "", "generate_report"], [380, 2, 1, "", "get_metadata_routing"], [380, 2, 1, "", "get_params"], [380, 2, 1, "", "inverse_transform"], [380, 2, 1, "", "set_fit_request"], [380, 2, 1, "", "set_inverse_transform_request"], [380, 2, 1, "", "set_params"], [380, 2, 1, "", "set_transform_request"], [380, 2, 1, "", "transform"], [380, 2, 1, "", "transform_single_imgs"]], "nilearn.masking": [[381, 3, 1, "", "apply_mask"], [382, 3, 1, "", "compute_background_mask"], [383, 3, 1, "", "compute_brain_mask"], [384, 3, 1, "", "compute_epi_mask"], [385, 3, 1, "", "compute_multi_background_mask"], [386, 3, 1, "", "compute_multi_brain_mask"], [387, 3, 1, "", "compute_multi_epi_mask"], [388, 3, 1, "", "intersect_masks"], [389, 3, 1, "", "unmask"]], "nilearn.mass_univariate": [[390, 3, 1, "", "permuted_ols"]], "nilearn.plotting": [[488, 0, 0, "-", "displays"], [421, 3, 1, "", "find_cut_slices"], [422, 3, 1, "", "find_parcellation_cut_coords"], [423, 3, 1, "", "find_probabilistic_atlas_cut_coords"], [424, 3, 1, "", "find_xyz_cut_coords"], [488, 0, 0, "-", "img_comparison"], [427, 3, 1, "", "plot_anat"], [428, 3, 1, "", "plot_carpet"], [429, 3, 1, "", "plot_connectome"], [430, 3, 1, "", "plot_contrast_matrix"], [431, 3, 1, "", "plot_design_matrix"], [432, 3, 1, "", "plot_design_matrix_correlation"], [433, 3, 1, "", "plot_epi"], [434, 3, 1, "", "plot_event"], [435, 3, 1, "", "plot_glass_brain"], [436, 3, 1, "", "plot_img"], [437, 3, 1, "", "plot_img_on_surf"], [438, 3, 1, "", "plot_markers"], [439, 3, 1, "", "plot_matrix"], [440, 3, 1, "", "plot_prob_atlas"], [441, 3, 1, "", "plot_roi"], [442, 3, 1, "", "plot_stat_map"], [443, 3, 1, "", "plot_surf"], [444, 3, 1, "", "plot_surf_contours"], [445, 3, 1, "", "plot_surf_roi"], [446, 3, 1, "", "plot_surf_stat_map"], [447, 3, 1, "", "show"], [448, 3, 1, "", "view_connectome"], [449, 3, 1, "", "view_img"], [450, 3, 1, "", "view_img_on_surf"], [451, 3, 1, "", "view_markers"], [452, 3, 1, "", "view_surf"]], "nilearn.plotting.displays": [[391, 1, 1, "", "BaseAxes"], [392, 1, 1, "", "BaseSlicer"], [393, 1, 1, "", "CutAxes"], [394, 1, 1, "", "GlassBrainAxes"], [395, 1, 1, "", "LProjector"], [396, 1, 1, "", "LRProjector"], [397, 1, 1, "", "LYRProjector"], [398, 1, 1, "", "LYRZProjector"], [399, 1, 1, "", "LZRProjector"], [400, 1, 1, "", "LZRYProjector"], [401, 1, 1, "", "MosaicSlicer"], [402, 1, 1, "", "OrthoProjector"], [403, 1, 1, "", "OrthoSlicer"], [404, 1, 1, "", "PlotlySurfaceFigure"], [405, 1, 1, "", "RProjector"], [406, 1, 1, "", "TiledSlicer"], [407, 1, 1, "", "XProjector"], [408, 1, 1, "", "XSlicer"], [409, 1, 1, "", "XZProjector"], [410, 1, 1, "", "XZSlicer"], [411, 1, 1, "", "YProjector"], [412, 1, 1, "", "YSlicer"], [413, 1, 1, "", "YXProjector"], [414, 1, 1, "", "YXSlicer"], [415, 1, 1, "", "YZProjector"], [416, 1, 1, "", "YZSlicer"], [417, 1, 1, "", "ZProjector"], [418, 1, 1, "", "ZSlicer"], [419, 3, 1, "", "get_projector"], [420, 3, 1, "", "get_slicer"]], "nilearn.plotting.displays.BaseAxes": [[391, 2, 1, "", "__init__"], [391, 2, 1, "", "add_object_bounds"], [391, 2, 1, "", "draw_2d"], [391, 2, 1, "", "draw_left_right"], [391, 2, 1, "", "draw_position"], [391, 2, 1, "", "draw_scale_bar"], [391, 2, 1, "", "get_object_bounds"], [391, 2, 1, "", "transform_to_2d"]], "nilearn.plotting.displays.BaseSlicer": [[392, 2, 1, "", "__init__"], [392, 2, 1, "", "add_contours"], [392, 2, 1, "", "add_edges"], [392, 2, 1, "", "add_markers"], [392, 2, 1, "", "add_overlay"], [392, 2, 1, "", "annotate"], [392, 4, 1, "", "black_bg"], [392, 4, 1, "", "brain_color"], [392, 2, 1, "", "close"], [392, 2, 1, "", "find_cut_coords"], [392, 2, 1, "", "init_with_figure"], [392, 2, 1, "", "savefig"], [392, 2, 1, "", "title"]], "nilearn.plotting.displays.CutAxes": [[393, 2, 1, "", "__init__"], [393, 2, 1, "", "add_object_bounds"], [393, 2, 1, "", "draw_2d"], [393, 2, 1, "", "draw_left_right"], [393, 2, 1, "", "draw_position"], [393, 2, 1, "", "draw_scale_bar"], [393, 2, 1, "", "get_object_bounds"], [393, 2, 1, "", "transform_to_2d"]], "nilearn.plotting.displays.GlassBrainAxes": [[394, 2, 1, "", "__init__"], [394, 2, 1, "", "add_object_bounds"], [394, 2, 1, "", "draw_2d"], [394, 2, 1, "", "draw_left_right"], [394, 2, 1, "", "draw_position"], [394, 2, 1, "", "draw_scale_bar"], [394, 2, 1, "", "get_object_bounds"], [394, 2, 1, "", "transform_to_2d"]], "nilearn.plotting.displays.LProjector": [[395, 2, 1, "", "__init__"], [395, 2, 1, "", "add_contours"], [395, 2, 1, "", "add_edges"], [395, 2, 1, "", "add_graph"], [395, 2, 1, "", "add_markers"], [395, 2, 1, "", "add_overlay"], [395, 2, 1, "", "annotate"], [395, 4, 1, "", "black_bg"], [395, 4, 1, "", "brain_color"], [395, 2, 1, "", "close"], [395, 2, 1, "", "draw_cross"], [395, 2, 1, "", "find_cut_coords"], [395, 2, 1, "", "init_with_figure"], [395, 2, 1, "", "savefig"], [395, 2, 1, "", "title"]], "nilearn.plotting.displays.LRProjector": [[396, 2, 1, "", "__init__"], [396, 2, 1, "", "add_contours"], [396, 2, 1, "", "add_edges"], [396, 2, 1, "", "add_graph"], [396, 2, 1, "", "add_markers"], [396, 2, 1, "", "add_overlay"], [396, 2, 1, "", "annotate"], [396, 4, 1, "", "black_bg"], [396, 4, 1, "", "brain_color"], [396, 2, 1, "", "close"], [396, 2, 1, "", "draw_cross"], [396, 2, 1, "", "find_cut_coords"], [396, 2, 1, "", "init_with_figure"], [396, 2, 1, "", "savefig"], [396, 2, 1, "", "title"]], "nilearn.plotting.displays.LYRProjector": [[397, 2, 1, "", "__init__"], [397, 2, 1, "", "add_contours"], [397, 2, 1, "", "add_edges"], [397, 2, 1, "", "add_graph"], [397, 2, 1, "", "add_markers"], [397, 2, 1, "", "add_overlay"], [397, 2, 1, "", "annotate"], [397, 4, 1, "", "black_bg"], [397, 4, 1, "", "brain_color"], [397, 2, 1, "", "close"], [397, 2, 1, "", "draw_cross"], [397, 2, 1, "", "find_cut_coords"], [397, 2, 1, "", "init_with_figure"], [397, 2, 1, "", "savefig"], [397, 2, 1, "", "title"]], "nilearn.plotting.displays.LYRZProjector": [[398, 2, 1, "", "__init__"], [398, 2, 1, "", "add_contours"], [398, 2, 1, "", "add_edges"], [398, 2, 1, "", "add_graph"], [398, 2, 1, "", "add_markers"], [398, 2, 1, "", "add_overlay"], [398, 2, 1, "", "annotate"], [398, 4, 1, "", "black_bg"], [398, 4, 1, "", "brain_color"], [398, 2, 1, "", "close"], [398, 2, 1, "", "draw_cross"], [398, 2, 1, "", "find_cut_coords"], [398, 2, 1, "", "init_with_figure"], [398, 2, 1, "", "savefig"], [398, 2, 1, "", "title"]], "nilearn.plotting.displays.LZRProjector": [[399, 2, 1, "", "__init__"], [399, 2, 1, "", "add_contours"], [399, 2, 1, "", "add_edges"], [399, 2, 1, "", "add_graph"], [399, 2, 1, "", "add_markers"], [399, 2, 1, "", "add_overlay"], [399, 2, 1, "", "annotate"], [399, 4, 1, "", "black_bg"], [399, 4, 1, "", "brain_color"], [399, 2, 1, "", "close"], [399, 2, 1, "", "draw_cross"], [399, 2, 1, "", "find_cut_coords"], [399, 2, 1, "", "init_with_figure"], [399, 2, 1, "", "savefig"], [399, 2, 1, "", "title"]], "nilearn.plotting.displays.LZRYProjector": [[400, 2, 1, "", "__init__"], [400, 2, 1, "", "add_contours"], [400, 2, 1, "", "add_edges"], [400, 2, 1, "", "add_graph"], [400, 2, 1, "", "add_markers"], [400, 2, 1, "", "add_overlay"], [400, 2, 1, "", "annotate"], [400, 4, 1, "", "black_bg"], [400, 4, 1, "", "brain_color"], [400, 2, 1, "", "close"], [400, 2, 1, "", "draw_cross"], [400, 2, 1, "", "find_cut_coords"], [400, 2, 1, "", "init_with_figure"], [400, 2, 1, "", "savefig"], [400, 2, 1, "", "title"]], "nilearn.plotting.displays.MosaicSlicer": [[401, 2, 1, "", "__init__"], [401, 2, 1, "", "add_contours"], [401, 2, 1, "", "add_edges"], [401, 2, 1, "", "add_markers"], [401, 2, 1, "", "add_overlay"], [401, 2, 1, "", "annotate"], [401, 4, 1, "", "black_bg"], [401, 4, 1, "", "brain_color"], [401, 2, 1, "", "close"], [401, 2, 1, "", "draw_cross"], [401, 2, 1, "", "find_cut_coords"], [401, 2, 1, "", "init_with_figure"], [401, 2, 1, "", "savefig"], [401, 2, 1, "", "title"]], "nilearn.plotting.displays.OrthoProjector": [[402, 2, 1, "", "__init__"], [402, 2, 1, "", "add_contours"], [402, 2, 1, "", "add_edges"], [402, 2, 1, "", "add_graph"], [402, 2, 1, "", "add_markers"], [402, 2, 1, "", "add_overlay"], [402, 2, 1, "", "annotate"], [402, 4, 1, "", "black_bg"], [402, 4, 1, "", "brain_color"], [402, 2, 1, "", "close"], [402, 2, 1, "", "draw_cross"], [402, 2, 1, "", "find_cut_coords"], [402, 2, 1, "", "init_with_figure"], [402, 2, 1, "", "savefig"], [402, 2, 1, "", "title"]], "nilearn.plotting.displays.OrthoSlicer": [[403, 2, 1, "", "__init__"], [403, 2, 1, "", "add_contours"], [403, 2, 1, "", "add_edges"], [403, 2, 1, "", "add_markers"], [403, 2, 1, "", "add_overlay"], [403, 2, 1, "", "annotate"], [403, 4, 1, "", "black_bg"], [403, 4, 1, "", "brain_color"], [403, 2, 1, "", "close"], [403, 2, 1, "", "draw_cross"], [403, 2, 1, "", "find_cut_coords"], [403, 2, 1, "", "init_with_figure"], [403, 2, 1, "", "savefig"], [403, 2, 1, "", "title"]], "nilearn.plotting.displays.PlotlySurfaceFigure": [[404, 2, 1, "", "__init__"], [404, 2, 1, "", "add_contours"], [404, 2, 1, "", "savefig"], [404, 2, 1, "", "show"]], "nilearn.plotting.displays.RProjector": [[405, 2, 1, "", "__init__"], [405, 2, 1, "", "add_contours"], [405, 2, 1, "", "add_edges"], [405, 2, 1, "", "add_graph"], [405, 2, 1, "", "add_markers"], [405, 2, 1, "", "add_overlay"], [405, 2, 1, "", "annotate"], [405, 4, 1, "", "black_bg"], [405, 4, 1, "", "brain_color"], [405, 2, 1, "", "close"], [405, 2, 1, "", "draw_cross"], [405, 2, 1, "", "find_cut_coords"], [405, 2, 1, "", "init_with_figure"], [405, 2, 1, "", "savefig"], [405, 2, 1, "", "title"]], "nilearn.plotting.displays.TiledSlicer": [[406, 2, 1, "", "__init__"], [406, 2, 1, "", "add_contours"], [406, 2, 1, "", "add_edges"], [406, 2, 1, "", "add_markers"], [406, 2, 1, "", "add_overlay"], [406, 2, 1, "", "annotate"], [406, 4, 1, "", "black_bg"], [406, 4, 1, "", "brain_color"], [406, 2, 1, "", "close"], [406, 2, 1, "", "draw_cross"], [406, 2, 1, "", "find_cut_coords"], [406, 2, 1, "", "init_with_figure"], [406, 2, 1, "", "savefig"], [406, 2, 1, "", "title"]], "nilearn.plotting.displays.XProjector": [[407, 2, 1, "", "__init__"], [407, 2, 1, "", "add_contours"], [407, 2, 1, "", "add_edges"], [407, 2, 1, "", "add_graph"], [407, 2, 1, "", "add_markers"], [407, 2, 1, "", "add_overlay"], [407, 2, 1, "", "annotate"], [407, 4, 1, "", "black_bg"], [407, 4, 1, "", "brain_color"], [407, 2, 1, "", "close"], [407, 2, 1, "", "draw_cross"], [407, 2, 1, "", "find_cut_coords"], [407, 2, 1, "", "init_with_figure"], [407, 2, 1, "", "savefig"], [407, 2, 1, "", "title"]], "nilearn.plotting.displays.XSlicer": [[408, 2, 1, "", "__init__"], [408, 2, 1, "", "add_contours"], [408, 2, 1, "", "add_edges"], [408, 2, 1, "", "add_markers"], [408, 2, 1, "", "add_overlay"], [408, 2, 1, "", "annotate"], [408, 4, 1, "", "black_bg"], [408, 4, 1, "", "brain_color"], [408, 2, 1, "", "close"], [408, 2, 1, "", "draw_cross"], [408, 2, 1, "", "find_cut_coords"], [408, 2, 1, "", "init_with_figure"], [408, 2, 1, "", "savefig"], [408, 2, 1, "", "title"]], "nilearn.plotting.displays.XZProjector": [[409, 2, 1, "", "__init__"], [409, 2, 1, "", "add_contours"], [409, 2, 1, "", "add_edges"], [409, 2, 1, "", "add_graph"], [409, 2, 1, "", "add_markers"], [409, 2, 1, "", "add_overlay"], [409, 2, 1, "", "annotate"], [409, 4, 1, "", "black_bg"], [409, 4, 1, "", "brain_color"], [409, 2, 1, "", "close"], [409, 2, 1, "", "draw_cross"], [409, 2, 1, "", "find_cut_coords"], [409, 2, 1, "", "init_with_figure"], [409, 2, 1, "", "savefig"], [409, 2, 1, "", "title"]], "nilearn.plotting.displays.XZSlicer": [[410, 2, 1, "", "__init__"], [410, 2, 1, "", "add_contours"], [410, 2, 1, "", "add_edges"], [410, 2, 1, "", "add_markers"], [410, 2, 1, "", "add_overlay"], [410, 2, 1, "", "annotate"], [410, 4, 1, "", "black_bg"], [410, 4, 1, "", "brain_color"], [410, 2, 1, "", "close"], [410, 2, 1, "", "draw_cross"], [410, 2, 1, "", "find_cut_coords"], [410, 2, 1, "", "init_with_figure"], [410, 2, 1, "", "savefig"], [410, 2, 1, "", "title"]], "nilearn.plotting.displays.YProjector": [[411, 2, 1, "", "__init__"], [411, 2, 1, "", "add_contours"], [411, 2, 1, "", "add_edges"], [411, 2, 1, "", "add_graph"], [411, 2, 1, "", "add_markers"], [411, 2, 1, "", "add_overlay"], [411, 2, 1, "", "annotate"], [411, 4, 1, "", "black_bg"], [411, 4, 1, "", "brain_color"], [411, 2, 1, "", "close"], [411, 2, 1, "", "draw_cross"], [411, 2, 1, "", "find_cut_coords"], [411, 2, 1, "", "init_with_figure"], [411, 2, 1, "", "savefig"], [411, 2, 1, "", "title"]], "nilearn.plotting.displays.YSlicer": [[412, 2, 1, "", "__init__"], [412, 2, 1, "", "add_contours"], [412, 2, 1, "", "add_edges"], [412, 2, 1, "", "add_markers"], [412, 2, 1, "", "add_overlay"], [412, 2, 1, "", "annotate"], [412, 4, 1, "", "black_bg"], [412, 4, 1, "", "brain_color"], [412, 2, 1, "", "close"], [412, 2, 1, "", "draw_cross"], [412, 2, 1, "", "find_cut_coords"], [412, 2, 1, "", "init_with_figure"], [412, 2, 1, "", "savefig"], [412, 2, 1, "", "title"]], "nilearn.plotting.displays.YXProjector": [[413, 2, 1, "", "__init__"], [413, 2, 1, "", "add_contours"], [413, 2, 1, "", "add_edges"], [413, 2, 1, "", "add_graph"], [413, 2, 1, "", "add_markers"], [413, 2, 1, "", "add_overlay"], [413, 2, 1, "", "annotate"], [413, 4, 1, "", "black_bg"], [413, 4, 1, "", "brain_color"], [413, 2, 1, "", "close"], [413, 2, 1, "", "draw_cross"], [413, 2, 1, "", "find_cut_coords"], [413, 2, 1, "", "init_with_figure"], [413, 2, 1, "", "savefig"], [413, 2, 1, "", "title"]], "nilearn.plotting.displays.YXSlicer": [[414, 2, 1, "", "__init__"], [414, 2, 1, "", "add_contours"], [414, 2, 1, "", "add_edges"], [414, 2, 1, "", "add_markers"], [414, 2, 1, "", "add_overlay"], [414, 2, 1, "", "annotate"], [414, 4, 1, "", "black_bg"], [414, 4, 1, "", "brain_color"], [414, 2, 1, "", "close"], [414, 2, 1, "", "draw_cross"], [414, 2, 1, "", "find_cut_coords"], [414, 2, 1, "", "init_with_figure"], [414, 2, 1, "", "savefig"], [414, 2, 1, "", "title"]], "nilearn.plotting.displays.YZProjector": [[415, 2, 1, "", "__init__"], [415, 2, 1, "", "add_contours"], [415, 2, 1, "", "add_edges"], [415, 2, 1, "", "add_graph"], [415, 2, 1, "", "add_markers"], [415, 2, 1, "", "add_overlay"], [415, 2, 1, "", "annotate"], [415, 4, 1, "", "black_bg"], [415, 4, 1, "", "brain_color"], [415, 2, 1, "", "close"], [415, 2, 1, "", "draw_cross"], [415, 2, 1, "", "find_cut_coords"], [415, 2, 1, "", "init_with_figure"], [415, 2, 1, "", "savefig"], [415, 2, 1, "", "title"]], "nilearn.plotting.displays.YZSlicer": [[416, 2, 1, "", "__init__"], [416, 2, 1, "", "add_contours"], [416, 2, 1, "", "add_edges"], [416, 2, 1, "", "add_markers"], [416, 2, 1, "", "add_overlay"], [416, 2, 1, "", "annotate"], [416, 4, 1, "", "black_bg"], [416, 4, 1, "", "brain_color"], [416, 2, 1, "", "close"], [416, 2, 1, "", "draw_cross"], [416, 2, 1, "", "find_cut_coords"], [416, 2, 1, "", "init_with_figure"], [416, 2, 1, "", "savefig"], [416, 2, 1, "", "title"]], "nilearn.plotting.displays.ZProjector": [[417, 2, 1, "", "__init__"], [417, 2, 1, "", "add_contours"], [417, 2, 1, "", "add_edges"], [417, 2, 1, "", "add_graph"], [417, 2, 1, "", "add_markers"], [417, 2, 1, "", "add_overlay"], [417, 2, 1, "", "annotate"], [417, 4, 1, "", "black_bg"], [417, 4, 1, "", "brain_color"], [417, 2, 1, "", "close"], [417, 2, 1, "", "draw_cross"], [417, 2, 1, "", "find_cut_coords"], [417, 2, 1, "", "init_with_figure"], [417, 2, 1, "", "savefig"], [417, 2, 1, "", "title"]], "nilearn.plotting.displays.ZSlicer": [[418, 2, 1, "", "__init__"], [418, 2, 1, "", "add_contours"], [418, 2, 1, "", "add_edges"], [418, 2, 1, "", "add_markers"], [418, 2, 1, "", "add_overlay"], [418, 2, 1, "", "annotate"], [418, 4, 1, "", "black_bg"], [418, 4, 1, "", "brain_color"], [418, 2, 1, "", "close"], [418, 2, 1, "", "draw_cross"], [418, 2, 1, "", "find_cut_coords"], [418, 2, 1, "", "init_with_figure"], [418, 2, 1, "", "savefig"], [418, 2, 1, "", "title"]], "nilearn.plotting.img_comparison": [[425, 3, 1, "", "plot_bland_altman"], [426, 3, 1, "", "plot_img_comparison"]], "nilearn.regions": [[453, 1, 1, "", "HierarchicalKMeans"], [454, 1, 1, "", "Parcellations"], [455, 1, 1, "", "ReNA"], [456, 1, 1, "", "RegionExtractor"], [457, 3, 1, "", "connected_label_regions"], [458, 3, 1, "", "connected_regions"], [459, 3, 1, "", "img_to_signals_labels"], [460, 3, 1, "", "img_to_signals_maps"], [461, 3, 1, "", "recursive_neighbor_agglomeration"], [462, 3, 1, "", "signals_to_img_labels"], [463, 3, 1, "", "signals_to_img_maps"]], "nilearn.regions.HierarchicalKMeans": [[453, 2, 1, "", "__init__"], [453, 2, 1, "", "fit"], [453, 2, 1, "", "fit_predict"], [453, 2, 1, "", "fit_transform"], [453, 2, 1, "", "get_metadata_routing"], [453, 2, 1, "", "get_params"], [453, 2, 1, "", "inverse_transform"], [453, 2, 1, "", "set_inverse_transform_request"], [453, 2, 1, "", "set_params"], [453, 2, 1, "", "transform"]], "nilearn.regions.Parcellations": [[454, 5, 1, "", "VALID_METHODS"], [454, 2, 1, "", "__init__"], [454, 2, 1, "", "fit"], [454, 2, 1, "", "fit_transform"], [454, 2, 1, "", "get_metadata_routing"], [454, 2, 1, "", "get_params"], [454, 2, 1, "", "inverse_transform"], [454, 4, 1, "", "nifti_maps_masker_"], [454, 2, 1, "", "score"], [454, 2, 1, "", "set_fit_request"], [454, 2, 1, "", "set_inverse_transform_request"], [454, 2, 1, "", "set_params"], [454, 2, 1, "", "set_score_request"], [454, 2, 1, "", "set_transform_request"], [454, 2, 1, "", "transform"]], "nilearn.regions.ReNA": [[455, 2, 1, "", "__init__"], [455, 2, 1, "", "fit"], [455, 2, 1, "", "fit_predict"], [455, 2, 1, "", "fit_transform"], [455, 2, 1, "", "get_metadata_routing"], [455, 2, 1, "", "get_params"], [455, 2, 1, "", "inverse_transform"], [455, 2, 1, "", "set_inverse_transform_request"], [455, 2, 1, "", "set_params"], [455, 2, 1, "", "transform"]], "nilearn.regions.RegionExtractor": [[456, 2, 1, "", "__init__"], [456, 2, 1, "", "fit"], [456, 2, 1, "", "fit_transform"], [456, 2, 1, "", "generate_report"], [456, 2, 1, "", "get_metadata_routing"], [456, 2, 1, "", "get_params"], [456, 2, 1, "", "inverse_transform"], [456, 2, 1, "", "set_fit_request"], [456, 2, 1, "", "set_inverse_transform_request"], [456, 2, 1, "", "set_params"], [456, 2, 1, "", "set_transform_request"], [456, 2, 1, "", "transform"], [456, 2, 1, "", "transform_single_imgs"]], "nilearn.reporting": [[464, 1, 1, "", "HTMLReport"], [465, 3, 1, "", "get_clusters_table"], [466, 3, 1, "", "make_glm_report"]], "nilearn.reporting.HTMLReport": [[464, 2, 1, "", "__init__"], [464, 2, 1, "", "get_iframe"], [464, 2, 1, "", "get_standalone"], [464, 4, 1, "", "height"], [464, 2, 1, "", "open_in_browser"], [464, 2, 1, "", "resize"], [464, 2, 1, "", "save_as_html"], [464, 4, 1, "", "width"]], "nilearn.signal": [[467, 3, 1, "", "butterworth"], [468, 3, 1, "", "clean"], [469, 3, 1, "", "high_variance_confounds"]], "nilearn.surface": [[470, 1, 1, "", "FileMesh"], [471, 1, 1, "", "InMemoryMesh"], [472, 1, 1, "", "PolyData"], [473, 1, 1, "", "PolyMesh"], [474, 1, 1, "", "SurfaceImage"], [475, 1, 1, "", "SurfaceMesh"], [476, 3, 1, "", "load_surf_data"], [477, 3, 1, "", "load_surf_mesh"], [478, 3, 1, "", "vol_to_surf"]], "nilearn.surface.FileMesh": [[470, 2, 1, "", "__init__"], [470, 4, 1, "", "coordinates"], [470, 4, 1, "", "faces"], [470, 5, 1, "", "file_path"], [470, 2, 1, "", "loaded"], [470, 5, 1, "", "n_vertices"], [470, 2, 1, "", "to_gifti"]], "nilearn.surface.InMemoryMesh": [[471, 2, 1, "", "__init__"], [471, 5, 1, "", "coordinates"], [471, 5, 1, "", "faces"], [471, 5, 1, "", "n_vertices"], [471, 2, 1, "", "to_gifti"]], "nilearn.surface.PolyData": [[472, 2, 1, "", "__init__"], [472, 4, 1, "", "shape"], [472, 2, 1, "", "to_filename"]], "nilearn.surface.PolyMesh": [[473, 2, 1, "", "__init__"], [473, 5, 1, "", "n_vertices"], [473, 2, 1, "", "to_filename"]], "nilearn.surface.SurfaceImage": [[474, 2, 1, "", "__init__"], [474, 2, 1, "", "from_volume"], [474, 4, 1, "", "shape"]], "nilearn.surface.SurfaceMesh": [[475, 5, 1, "", "coordinates"], [475, 5, 1, "", "faces"], [475, 5, 1, "", "n_vertices"], [475, 2, 1, "", "to_gifti"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "terms": {"": [0, 2, 3, 4, 6, 7, 10, 11, 13, 17, 24, 26, 31, 32, 36, 41, 43, 44, 47, 50, 51, 52, 53, 58, 59, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 79, 80, 81, 82, 88, 93, 95, 96, 103, 105, 106, 107, 111, 113, 114, 118, 121, 130, 131, 140, 147, 157, 158, 163, 164, 167, 171, 174, 175, 177, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 196, 197, 198, 199, 200, 201, 203, 204, 207, 208, 216, 219, 223, 224, 225, 227, 229, 231, 232, 235, 236, 238, 239, 240, 248, 250, 251, 259, 261, 262, 264, 265, 276, 281, 283, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 326, 339, 343, 344, 353, 355, 359, 360, 361, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 428, 429, 437, 438, 443, 444, 445, 446, 448, 450, 452, 453, 454, 455, 456, 466, 468, 494], "0": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 164, 165, 168, 170, 176, 177, 178, 179, 180, 189, 190, 191, 198, 201, 202, 206, 209, 210, 211, 212, 213, 214, 227, 228, 235, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 427, 428, 429, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 494, 495, 496, 498], "00": [8, 29, 32, 34, 35, 47, 48, 56, 62, 73, 75, 84, 91, 99, 113, 115, 117, 479, 496], "000": [36, 45, 81, 96, 117, 175], "0000": 178, "000000": [11, 65, 68, 480], "00002": [118, 200, 249], "00008": [118, 121, 225, 281, 283], "000082": 11, "0001": [309, 310], "00012447e": 3, "0002": 178, "00059219e": 3, "000797": 52, "000828": 59, "000948": 51, "001": [6, 26, 35, 44, 47, 64, 65, 73, 78, 81, 82, 83, 104, 113, 118, 180, 239, 240, 242, 309, 310, 326, 339, 342, 466, 479], "0010042": 12, "0010042_rest_tshift_rpi_voreg_mni": 12, "00105430e": 3, "001213": 51, "00152": [118, 226], "00156": [106, 118, 390], "00167": [52, 118, 167], "001838": 52, "002": 44, "00232492e": 3, "00275578e": 3, "0029482": [118, 186], "003": 44, "003026": 51, "003096": 52, "00338": [118, 230, 236, 258, 262], "004": [43, 44, 118, 201, 223, 280], "004306": 52, "004826": 52, "005": [44, 118, 172, 306, 307], "005065": 6, "00512451": [118, 164, 239], "00563468": [47, 118, 176], "005777885591323e": 71, "005922": 52, "00599": [118, 196, 246], "006": [44, 52, 61, 118, 229, 265], "00645": 53, "00653983e": 3, "00662601e": 3, "007": [44, 59, 118, 164, 165, 222, 224, 256], "007294": 59, "00743128949229107": 77, "007541": 59, "00760e": 11, "00769255e": 3, "008": [35, 44], "00839984": [118, 176], "00847": 51, "009": [44, 118, 428], "009333": 52, "00991743": [118, 176], "00_tutori": [3, 4, 6, 7, 8, 185, 496], "00e": 479, "01": [3, 4, 6, 8, 13, 26, 29, 32, 34, 35, 40, 45, 48, 51, 54, 56, 58, 61, 62, 64, 70, 72, 73, 75, 84, 99, 102, 103, 104, 106, 113, 114, 115, 118, 201, 205, 224, 240, 252, 256, 326, 329, 333, 364, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 479, 480, 496], "010": [23, 44, 51, 118, 169, 205, 260, 311], "010751": 52, "01093944": [118, 168, 456], "011": 44, "01147731": [118, 176], "012": 44, "013": 44, "014": 44, "01422": [26, 118], "014412": 51, "01499899481932693": 71, "015": 44, "015035": 51, "015679": 56, "016": [44, 68], "01698209e": 3, "017": 44, "01770819e": 3, "018": [44, 118, 201, 367, 368], "01872075e": 3, "018869405610297586": 71, "019": 44, "019085": 59, "0193": [118, 210, 211, 212, 213, 214, 235, 261, 289], "019374": 59, "01_plot": [10, 16, 23, 24, 26, 29, 185, 450, 496], "01_task": [6, 103, 104, 113], "01d": 3, "01hz": [68, 246], "02": [3, 32, 35, 48, 51, 54, 56, 62, 64, 65, 73, 75, 80, 93, 99, 102, 113, 115, 118, 169, 175, 201, 250, 311, 367, 368, 479, 496], "020": [44, 59, 107, 118, 216, 367, 368], "021": [44, 107], "02131181e": 3, "022": 44, "022169": 59, "022416": 59, "022868": 56, "023": 44, "023900": 59, "024": [26, 44, 118], "024188": 59, "024363": 35, "025": 44, "02587": 56, "026": 44, "026078": 59, "026206": 35, "026366": 59, "027": 44, "027587": 59, "027876": 59, "028": 44, "02839078e": 3, "028668": 65, "029": 44, "02904869": [118, 207, 253], "02912448e": 3, "029500": 59, "029747": 59, "02_decod": [31, 38, 42, 43, 44, 46, 48, 185, 496], "02_task": 113, "02d": 82, "02g": 73, "03": [3, 29, 32, 34, 35, 44, 47, 48, 53, 56, 59, 73, 84, 93, 99, 113, 115, 118, 175, 184, 341, 367, 368, 390, 479, 480, 496], "030": 44, "03003450e": 3, "031": [31, 44, 48, 496], "032": 44, "03259523e": 3, "03298359e": 3, "033": [44, 118, 201, 218], "033396": 59, "033577": 35, "033685": 59, "034": 44, "034236": 59, "034474": 53, "034483": 59, "034967": 6, "035": [39, 44, 118], "036": 44, "03623098e": 3, "03658827e": 3, "037": [44, 118], "038": 44, "03858101e": 3, "039": 44, "03906011e": 3, "03928479e": 3, "0395": [118, 205], "0396": [118, 205], "03_connect": [50, 51, 52, 58, 60, 62, 150, 162, 185, 496], "03_task": 113, "03cm": 46, "03d": [44, 103], "03g": 77, "04": [3, 29, 32, 34, 35, 47, 52, 53, 56, 59, 62, 64, 73, 75, 84, 93, 99, 113, 118, 164, 165, 177, 224, 256, 367, 368, 469, 479, 480, 496], "040": [44, 103, 115, 496], "04054779e": 3, "04070418e": 3, "041": [44, 115, 118, 175], "042": [44, 118, 367, 368, 469], "042248": 59, "042495": 59, "04261446e": 3, "043": 44, "04367275e": 3, "044": [44, 68, 75, 496], "044073": 56, "045": 44, "04575602612203437": 71, "046": 44, "04616563e": 3, "047": 44, "0471754951": [118, 318, 319], "04798296e": 3, "048": [44, 118, 367], "04858609e": 3, "048779": 56, "049": [43, 44, 48, 496], "049211": 59, "049458": 59, "04955626049962088": 71, "04965626e": 3, "04_glm_first_level": [64, 65, 66, 70, 72, 73, 74, 75, 178, 496], "04_task": 113, "05": [6, 26, 29, 32, 34, 35, 47, 48, 51, 53, 54, 56, 64, 73, 77, 78, 79, 81, 83, 93, 102, 113, 118, 180, 198, 199, 200, 204, 224, 227, 228, 230, 233, 234, 235, 236, 247, 248, 251, 256, 257, 258, 261, 262, 287, 316, 318, 319, 321, 479, 480, 496], "050": 44, "0504136102": [118, 368], "051": 44, "052": [44, 118, 203, 276], "05201": [118, 170], "052775": 59, "05281163e": 3, "052952": 59, "053": [33, 44, 48, 496], "05301048e": 3, "053022": 59, "053241": 59, "054": [44, 118, 175], "054759": 59, "054901960784313725": 111, "055": 44, "055006": 59, "055884": 65, "056": 44, "057": 44, "057023": 56, "05703046e": 3, "05739888e": 3, "058": 44, "059": 44, "05_advanc": [150, 162], "05_glm_second_level": [77, 79, 80, 81, 84, 496], "05_task": 113, "06": [23, 29, 34, 35, 48, 64, 73, 77, 84, 93, 113, 115, 118, 177, 201, 205, 250, 260, 308, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 442, 449, 479, 480, 496], "060": [44, 78, 106, 118, 321, 390], "0600244103": [118, 175, 186], "061": [44, 118, 184, 341, 390], "06154389e": 3, "062": [44, 47, 48, 54, 102, 118, 176, 496], "062316": 56, "062676": 6, "063": [16, 29, 44, 118, 164, 496], "064": [44, 118, 367, 368], "064266": 59, "06447274e": 3, "064554": 59, "064585": 59, "064873": 59, "065": 44, "06519700e": 3, "065223": 56, "066": 44, "066189": [118, 313, 317], "066584": 65, "06663966e": 3, "067": 44, "068": [44, 77, 84, 496], "06832009e": 3, "068998": 59, "069": 44, "069287": 59, "06_manipulating_imag": [88, 93, 96, 99, 496], "06_task": 113, "06mm": [33, 35, 42, 46], "07": [32, 34, 35, 39, 48, 52, 73, 78, 93, 99, 113, 115, 118, 171, 201, 218, 230, 258, 321, 455, 461, 479, 480, 496], "070": 44, "07013894e": 3, "071": 44, "072": [44, 59, 62, 496], "07247312e": 3, "07294425e": 3, "073": [44, 59, 118, 171, 368], "07350015": [118, 390], "07354545e": 3, "074": 44, "075": 44, "07532196e": 3, "075540": 59, "075787": 59, "076": 44, "07603815e": 3, "077": 44, "07737": 35, "077517": 59, "077764": 59, "078": 44, "079": 44, "079066": 65, "07_advanc": [103, 104, 111, 113, 114, 115, 496], "07_task": 113, "08": [32, 34, 35, 52, 62, 64, 70, 73, 75, 104, 113, 114, 118, 164, 197, 201, 348, 367, 428, 479, 480, 496], "080": [44, 118], "08006146e": 3, "081": 44, "0811879106": [118, 197], "081260": 6, "081441": 51, "081559": 59, "081847": 59, "082": [44, 118, 201, 250], "083": 44, "084": 44, "085": 44, "08510152e": 3, "086": 44, "087": 44, "087084": 56, "088": 44, "08855965e": 3, "08860391e": 3, "089": 44, "08955989e": 3, "089762": 56, "08_task": 113, "09": [32, 34, 35, 61, 62, 73, 84, 99, 113, 118, 203, 205, 218, 227, 229, 252, 265, 276, 326, 339, 466, 479, 480, 496], "090": 44, "09027107e": 3, "0905267106": [118, 232, 259], "0908073106": [118, 201], "090935": 6, "091": 44, "091516": 65, "09189145e": 3, "092": [44, 107, 115, 496], "093": 44, "093286": 65, "094": [44, 56, 62, 496], "09406056e": 3, "09407703e": 3, "09423560e": 3, "095": 44, "095605": 35, "096": 44, "096305": 65, "097": [44, 51, 62, 496], "09702613e": 3, "0978": [118, 198, 248], "098": 44, "09866666e": 3, "098969": 53, "099": [44, 73, 75, 496], "09925535e": 3, "09950142e": 3, "09_task": 113, "0a0": 147, "0c30ff": 11, "0min": [35, 51, 52, 53, 55, 56, 59, 61], "0mm": [86, 186], "0rc1": [159, 162], "0x7efdecbbb640": 101, "0x7efdf1c14190": 42, "0x7efdf1c141c0": 35, "0x7efdf1c14370": 42, "0x7efdf1c143a0": 42, "0x7efdf1c145b0": 56, "0x7efdf1c14610": 42, "0x7efdf1c14640": 42, "0x7efdf1c14730": 42, "0x7efdf1c147c0": 42, "0x7efdf1c14850": 42, "0x7efdf1c14970": 42, "0x7efdf1c14c70": 42, "0x7efdf1c14eb0": 42, "0x7efdf1c14fa0": 42, "0x7efdf39fbf40": 59, "0x7efdf3a39040": 42, "0x7efdf3a39070": 42, "0x7efdf3a391f0": 42, "0x7efdf3a39250": 42, "0x7efdf3a392b0": 42, "0x7efdf3a39340": 42, "0x7efdf3a39760": 42, "0x7efdf3a398b0": 42, "0x7efdf3a39a00": 42, "0x7efdf3a39a90": 42, "0x7efdf3a39b20": 42, "0x7efdf3a39c10": 42, "0x7efdf3a39c40": 42, "0x7efdf3a39e20": 42, "0x7efdf3a39eb0": 42, "0x7efdf3a39f70": 42, "0x7efdf3a39fd0": 42, "0x7efdf4703310": 59, "0x7efdf479d5b0": 52, "0x7efdf4cb1910": 83, "0x7efdf524b070": 51, "0x7efdf52672e0": 42, "0x7efdf5267760": 42, "0x7efdf52678e0": 42, "0x7efdf5267910": 42, "0x7efdf5267b20": 42, "0x7efdf5267ca0": 42, "0x7efdf7282fd0": 77, "0x7efdf72aa160": 17, "0x7efdfe12dd00": 55, "0x7efdfec07100": 42, "0x7efdfec07130": 42, "0x7efdfec072b0": 42, "0x7efdfec07400": 42, "0x7efdfec07430": 42, "0x7efdfec07460": 42, "0x7efdfec075b0": 42, "0x7efdfec07640": 42, "0x7efdfec07b20": 42, "0x7efdfec07bb0": 42, "0x7efdfec07be0": 42, "0x7efdfec07d00": 42, "0x7efdfec07d30": 42, "0x7efdfec07eb0": 42, "0x7efdfec07fa0": 42, "0x7efdfec07fd0": 42, "0x7efe12097ee0": 52, "0x7efe1209f460": 52, "0x7efe1213d340": 83, "0x7efe125b4160": 42, "0x7efe125b4340": 42, "0x7efe125b4370": 42, "0x7efe125b43d0": 42, "0x7efe125b44f0": 42, "0x7efe125b4580": 42, "0x7efe125b4670": 42, "0x7efe125b46d0": 42, "0x7efe125b4790": 42, "0x7efe125b47f0": 42, "0x7efe125b4940": 42, "0x7efe125b4970": 42, "0x7efe125b4a00": 42, "0x7efe125b4b80": 42, "0x7efe125b4dc0": 42, "0x7efe125b4f10": 42, "0x7efe125ed880": 65, "0x7efe125f7700": 65, "0x7efe12690280": 55, "0x7efe126a9a30": 52, "0x7efe129ae0a0": 53, "0x7efe129ae460": 53, "0x7efe129ae4c0": 53, "0x7efe129ae550": 53, "0x7efe129ae5b0": 53, "0x7efe129ae610": 53, "0x7efe129ae910": 53, "0x7efe129aee20": 53, "0x7efe129aee80": 53, "0x7efe129aeee0": 53, "0x7efe12c0e040": 42, "0x7efe12c0e070": 42, "0x7efe12c0e130": 42, "0x7efe12c0e160": 42, "0x7efe12c0e1c0": 42, "0x7efe12c0e2b0": 42, "0x7efe12c0e370": 42, "0x7efe12c0e550": 42, "0x7efe12c0e5e0": 42, "0x7efe12c0e6d0": 42, "0x7efe12c0e760": 42, "0x7efe12c0e8b0": 42, "0x7efe12c0ea30": 42, "0x7efe12c0eaf0": 42, "0x7efe12c0ecd0": 42, "0x7efe12c0ed30": 42, "0x7efe12c0edc0": 42, "0x7efe12f3f460": 59, "0x7efe12f3f7c0": 55, "0x7efe12fe0490": 17, "0x7efe13050ac0": 59, "0x7efe1479f0a0": 35, "0x7efe1479f0d0": 42, "0x7efe1479f130": 42, "0x7efe1479f160": 42, "0x7efe1479f250": 42, "0x7efe1479f2b0": 42, "0x7efe1479f2e0": 42, "0x7efe1479f670": 42, "0x7efe1479f700": 42, "0x7efe1479f7f0": 42, "0x7efe1479f820": 42, "0x7efe1479f850": 42, "0x7efe1479f970": 42, "0x7efe1479fa00": 42, "0x7efe1479fa60": 42, "0x7efe1479faf0": 42, "0x7efe1479fd30": 42, "0x7efe1479fdc0": [27, 42], "0x7efe1479ffd0": 16, "0x7efe149a5c40": 83, "0x7efe14a50f70": 65, "0x7efe14a51460": 54, "0x7efe14b3c430": 17, "0x7efe14b83c40": 24, "0x7efe16c72880": 10, "0x7efe1720db20": 96, "0x7efe17cf30a0": 42, "0x7efe17cf30d0": 42, "0x7efe17cf32e0": 42, "0x7efe17cf33d0": 42, "0x7efe17cf3490": 42, "0x7efe17cf3580": 42, "0x7efe17cf3610": 42, "0x7efe17cf3670": 42, "0x7efe17cf3970": 42, "0x7efe17cf3a00": 42, "0x7efe17cf3b20": 42, "0x7efe17cf3b50": 42, "0x7efe17cf3be0": 42, "0x7efe17cf3d30": 42, "0x7efe17cf3d60": 42, "0x7efe17cf3f10": 42, "0x7efe17cf3f70": 42, "0x7efe17d05160": 71, "0x7efe18f1f280": 45, "0x7efe18f29040": 42, "0x7efe18f29070": 42, "0x7efe18f29310": 42, "0x7efe18f293a0": 42, "0x7efe18f29400": 42, "0x7efe18f297f0": 42, "0x7efe18f29820": 42, "0x7efe18f29850": 42, "0x7efe18f29910": 42, "0x7efe18f299d0": 42, "0x7efe18f29a00": 42, "0x7efe18f29a90": 42, "0x7efe18f29ac0": 42, "0x7efe18f29dc0": 42, "0x7efe18f29df0": 42, "0x7efe18f29f10": 42, "0x7efe18f2d0d0": 42, "0x7efe18f2d1f0": 42, "0x7efe18f2d220": 42, "0x7efe18f2d3a0": 42, "0x7efe18f2d400": 42, "0x7efe18f2d700": 42, "0x7efe18f2d790": 42, "0x7efe18f2d940": 42, "0x7efe18f2da00": 42, "0x7efe18f2da90": 42, "0x7efe18f2dbb0": 42, "0x7efe18f2dbe0": 42, "0x7efe18f2dd90": 42, "0x7efe18f2de20": 42, "0x7efe18f2de50": 42, "0x7efe18f2dee0": 42, "0x7efe18f2df40": 42, "0x7efe18f32400": 77, "0x7efe18f3a070": 42, "0x7efe18f3a220": 42, "0x7efe18f3a280": 42, "0x7efe18f3a2e0": 42, "0x7efe18f3a370": 42, "0x7efe18f3a430": 42, "0x7efe18f3a520": 42, "0x7efe18f3a5e0": 42, "0x7efe18f3a640": 42, "0x7efe18f3ac10": 42, "0x7efe18f3ad30": 42, "0x7efe18f3ae20": 42, "0x7efe18f3aeb0": 42, "0x7efe18f3af40": 42, "0x7efe18f43ac0": 96, "0x7efe18f4d2e0": 42, "0x7efe18f4d4c0": 42, "0x7efe18f4d5b0": 42, "0x7efe18f4d610": 42, "0x7efe18f4d640": 42, "0x7efe18f4d6d0": 42, "0x7efe18f4d7c0": 42, "0x7efe18f4d910": 42, "0x7efe18f4da00": 42, "0x7efe18f4da60": 42, "0x7efe18f4de20": 42, "0x7efe18f4de50": 42, "0x7efe18f4df70": 42, "0x7efe18f4dfa0": 42, "0x7efe18f4dfd0": 42, "0x7efe18f5b070": 42, "0x7efe18f5b3d0": 42, "0x7efe18f5b430": 42, "0x7efe18f5b7c0": 42, "0x7efe18f5b7f0": 42, "0x7efe18f5b820": 42, "0x7efe18f5b8b0": 42, "0x7efe18f5b910": 42, "0x7efe18f5ba30": 42, "0x7efe18f5bb80": 42, "0x7efe18f5bc70": 42, "0x7efe18f637c0": 96, "0x7efe18f639a0": 83, "0x7efe18f79040": 42, "0x7efe18f790d0": 42, "0x7efe18f79130": 42, "0x7efe18f79190": 42, "0x7efe18f79250": 42, "0x7efe18f79430": 42, "0x7efe18f79460": 18, "0x7efe18f794c0": 42, "0x7efe18f795e0": 42, "0x7efe18f79610": 42, "0x7efe18f79730": 42, "0x7efe18f798b0": 42, "0x7efe18f79a30": 42, "0x7efe18f79a90": 42, "0x7efe18f79d00": 42, "0x7efe18f79d90": 42, "0x7efe18f79e50": 42, "0x7efe18f830a0": 42, "0x7efe18f83160": 42, "0x7efe18f83880": 42, "0x7efe18f838b0": 42, "0x7efe18f83910": 42, "0x7efe18f83a90": 42, "0x7efe18f83ac0": 42, "0x7efe18f83b50": 42, "0x7efe18f83c10": 42, "0x7efe18f83d30": 42, "0x7efe18f83d60": 42, "0x7efe18f83d90": 42, "0x7efe18f83f10": 42, "0x7efe19068220": 42, "0x7efe1906e3a0": 42, "0x7efe1907b790": 42, "0x7efe1907f880": 35, "0x7efe1907fa60": 42, "0x7efe1907fcd0": 15, "0x7efe1908b370": 42, "0x7efe1908b3d0": 4, "0x7efe1908c4c0": 42, "0x7efe1908d700": 42, "0x7efe19096b50": 42, "0x7efe19098850": 42, "0x7efe19098be0": 42, "0x7efe1909a130": 2, "0x7efe1909aaf0": 42, "0x7efe1909fbb0": 42, "0x7efe190a17c0": 42, "0x7efe190c7040": 42, "0x7efe190ca4f0": 42, "0x7efe190d1c70": 33, "0x7efe190e21c0": 42, "0x7efe190e7760": 42, "0x7efe190e7790": 42, "0x7efe190e7ca0": 42, "0x7efe190e7d00": 42, "0x7efe190e7eb0": 42, "0x7efe190eb1f0": 42, "0x7efe190eb2e0": 42, "0x7efe190eb370": 42, "0x7efe190eb3d0": 42, "0x7efe190eb400": 42, "0x7efe190eb430": 42, "0x7efe190eb5b0": 42, "0x7efe190eb880": 42, "0x7efe190eb940": 42, "0x7efe190eb9a0": 42, "0x7efe190eba60": 42, "0x7efe190ebca0": 42, "0x7efe190ebcd0": 42, "0x7efe190ebd90": 42, "0x7efe190ebe50": 42, "0x7efe190ff520": 42, "0x7efe19101730": 38, "0x7efe19245130": 42, "0x7efe19272430": [16, 42], "0x7efe19290250": 42, "0x7efe19606af0": 51, "0x7efe24345820": 91, "0x7efe243d9970": 77, "0x7efe243d9e20": 52, "0x7efe2443feb0": 65, "0x7efe24558df0": 61, "0x7efe24558e50": 98, "0x7efe248924c0": 52, "0x7efe24892820": 52, "0x7efe248929a0": 52, "0x7efe24b79040": 98, "0x7efe2ca74dc0": 61, "0x7efe2cf13ac0": 59, "0x7efe2d229a60": 98, "0x7efe2d2bb1f0": 42, "0x7efe2d2bb220": 42, "0x7efe2d2bb370": 42, "0x7efe2d2bb460": 42, "0x7efe2d2bb490": 42, "0x7efe2d2bb4c0": 42, "0x7efe2d2bb520": 42, "0x7efe2d2bb580": 42, "0x7efe2d2bb610": 42, "0x7efe2d2bb970": 42, "0x7efe2d2bb9a0": 42, "0x7efe2d2bba00": 42, "0x7efe2d2bbdc0": 42, "0x7efe2d2bbee0": 42, "0x7efe2d2bbf10": 42, "0x7efe2d2bbf70": 42, "0x7efe2d2bbfd0": 42, "0x7efe2d2d89d0": 35, "0x7efe367c4730": 42, "0x7efe37451e80": 17, "0x7efe374ab070": 42, "0x7efe374ab250": 42, "0x7efe374ab2b0": 42, "0x7efe374ab310": 42, "0x7efe374ab340": 42, "0x7efe374ab3d0": 42, "0x7efe374ab520": 42, "0x7efe374ab610": 42, "0x7efe374ab6d0": 56, "0x7efe374ab7c0": 42, "0x7efe374ab820": 56, "0x7efe374ab8e0": [42, 56], "0x7efe374ab970": 42, "0x7efe374abb20": 42, "0x7efe374abc40": 42, "0x7efe374abd30": 42, "0x7efe374abdf0": 42, "0x7efe374abfa0": 42, "0x7efe374b3cd0": 35, "0x7efe374c8340": 42, "0x7efe374c8460": 42, "0x7efe374c8670": 42, "0x7efe374c8730": 42, "0x7efe374c88b0": 42, "0x7efe374c8ac0": 42, "0x7efe374c8b20": 59, "0x7efe374c8b80": 42, "0x7efe3c2c01c0": 42, "0x7efe3c2c01f0": 42, "0x7efe3c2c0280": 42, "0x7efe3c2c0340": 42, "0x7efe3c2c0430": 42, "0x7efe3c2c0490": 42, "0x7efe3c2c04f0": 42, "0x7efe3c2c0550": 42, "0x7efe3c2c0580": 42, "0x7efe3c2c05b0": 42, "0x7efe3c2c06a0": 42, "0x7efe3c2c0970": 59, "0x7efe3c2c0c10": 42, "0x7efe3c2c0c70": 42, "0x7efe3c2c0df0": 42, "0x7efe3c2c0e20": 42, "0x7efe3c2c0f70": 42, "0x7efe3c368220": 17, "0x7efe3c38cee0": 61, "0x7efe3c3c2160": 59, "0x7efe3c3ce640": 35, "0x7efe3c3ce8e0": 17, "0x7efe3c3cecd0": 35, "0x7efe3c49d1c0": 38, "0x7efe3c607c10": 16, "0x7efe3c6252b0": 15, "0x7efe3c6ea940": 61, "0x7efe3c71e310": 14, "0x7efe3c773cd0": 15, "0x7efe3c7c7160": 42, "0x7efe3c7c71c0": 42, "0x7efe3c7c71f0": 42, "0x7efe3c7c72e0": 42, "0x7efe3c7c7430": 42, "0x7efe3c7c7550": 42, "0x7efe3c7c7610": 42, "0x7efe3c7c77c0": 42, "0x7efe3c7c78e0": 42, "0x7efe3c7c79a0": 42, "0x7efe3c7c7a90": 42, "0x7efe3c7c7b50": 42, "0x7efe3c7c7b80": 42, "0x7efe3c7c7e50": 42, "0x7efe3c7c7e80": 42, "0x7efe3c7c7fa0": 42, "0x7efe3c85b0a0": 42, "0x7efe3c85b0d0": 42, "0x7efe3c85b130": 42, "0x7efe3c85b1f0": 42, "0x7efe3c85b310": 42, "0x7efe3c85b3a0": 42, "0x7efe3c85b4f0": 42, "0x7efe3c85b520": 42, "0x7efe3c85b7c0": 42, "0x7efe3c85b7f0": 42, "0x7efe3c85b820": 42, "0x7efe3c85b8b0": 42, "0x7efe3c85ba00": 42, "0x7efe3c85baf0": 42, "0x7efe3c85bbb0": 42, "0x7efe3c85bd00": 42, "0x7efe3c85beb0": 42, "0x7efe3c92faf0": 15, "0x7efe3c93f580": 96, "0x7efe3ca65a30": 17, "0x7efe3ca89c70": 16, "0x7efe3cb9cb50": 17, "0x7efe3cc19070": 42, "0x7efe3cc190a0": 42, "0x7efe3cc19310": 42, "0x7efe3cc19340": 42, "0x7efe3cc193d0": 42, "0x7efe3cc19400": 42, "0x7efe3cc19490": 42, "0x7efe3cc196d0": 42, "0x7efe3cc19760": 42, "0x7efe3cc197f0": 42, "0x7efe3cc19940": 42, "0x7efe3cc19a30": 42, "0x7efe3cc19a90": 42, "0x7efe3cc19c10": 42, "0x7efe3cc19ee0": 42, "0x7efe3ccae6d0": 54, "0x7efe3cdd41f0": 42, "0x7efe3cdd42b0": 42, "0x7efe3cdd42e0": 42, "0x7efe3cdd4370": 42, "0x7efe3cdd4430": 42, "0x7efe3cdd4610": 42, "0x7efe3cdd47c0": 42, "0x7efe3cdd48e0": 42, "0x7efe3cdd49a0": 42, "0x7efe3cdd4ac0": 42, "0x7efe3cdd4b20": 42, "0x7efe3cdd4c10": 42, "0x7efe3cdd4ca0": 42, "0x7efe3cdd4cd0": 42, "0x7efe3cdd4d00": 42, "0x7efe3cdd4dc0": [35, 42], "0x7efe3cdd4e20": 46, "0x7efe3cdd4e80": 61, "0x7efe3cdd4ee0": 42, "0x7efe3cde4820": 16, "0x7efe3cdf14f0": 16, "0x7efe3cdfda60": 15, "0x7efe3ce0faf0": 15, "0x7efe3cf51160": 42, "0x7efe3cf511c0": 42, "0x7efe3cf511f0": 42, "0x7efe3cf51430": 42, "0x7efe3cf51580": 42, "0x7efe3cf51610": 42, "0x7efe3cf51670": 42, "0x7efe3cf516a0": 42, "0x7efe3cf51730": 42, "0x7efe3cf51760": 42, "0x7efe3cf51d60": 42, "0x7efe3cf51dc0": 42, "0x7efe3d0204f0": 15, "0x7efe3d0aa1f0": 15, "0x7efe3d0eff10": 46, "0x7efe3d101190": 42, "0x7efe3d101250": 42, "0x7efe3d101310": 42, "0x7efe3d101370": 42, "0x7efe3d1014c0": 59, "0x7efe3d1015b0": 42, "0x7efe3d1015e0": 42, "0x7efe3d101970": 42, "0x7efe3d101a90": 42, "0x7efe3d101ac0": 42, "0x7efe3d101b50": 42, "0x7efe3d101dc0": 42, "0x7efe3d101df0": 42, "0x7efe3d101e20": 42, "0x7efe3d101e50": 42, "0x7efe3d101e80": 42, "0x7efe3d101eb0": 42, "0x7efe3d101f40": 42, "0x7efe3d101f70": 98, "0x7efe3d123520": 59, "0x7efe3d1916a0": 91, "0x7efe3d1b0910": 61, "0x7efe40456070": 42, "0x7efe40456220": 42, "0x7efe40456370": 42, "0x7efe40456430": 42, "0x7efe404565e0": 42, "0x7efe40456610": 42, "0x7efe40456880": 42, "0x7efe404568b0": 42, "0x7efe404569a0": 42, "0x7efe40456a30": 42, "0x7efe40456a60": 42, "0x7efe40456b20": 42, "0x7efe40456d30": 42, "0x7efe40456d90": 42, "0x7efe40456dc0": 42, "0x7efe40456fa0": 42, "0x7efe4048e640": 52, "0x7efe404eb250": 42, "0x7efe404eb280": 42, "0x7efe404eb3d0": 35, "0x7efe404eb5b0": 42, "0x7efe404eb700": 42, "0x7efe404eb790": 42, "0x7efe404eb7f0": 42, "0x7efe404eb850": 42, "0x7efe404eb940": 42, "0x7efe404eb9a0": 42, "0x7efe404eba00": 42, "0x7efe404eba90": 42, "0x7efe404ebdc0": 42, "0x7efe404ebdf0": 16, "0x7efe404ebe20": 42, "0x7efe404ebe50": 42, "0x7efe404ebeb0": 42, "0x7efe40519040": 42, "0x7efe405190d0": 42, "0x7efe40519100": 42, "0x7efe405192b0": 42, "0x7efe40519340": 42, "0x7efe40519700": 42, "0x7efe405198e0": 42, "0x7efe405199d0": 42, "0x7efe40519a00": 42, "0x7efe40519b20": 42, "0x7efe40519d60": 42, "0x7efe40519df0": 42, "0x7efe40519ee0": 35, "0x7efe40519fa0": 42, "0x7efe40519fd0": 42, "0x7efe40594040": 42, "0x7efe405940d0": 42, "0x7efe40594130": 42, "0x7efe40594160": 42, "0x7efe40594280": 42, "0x7efe405943d0": 42, "0x7efe40594490": 42, "0x7efe405944c0": 42, "0x7efe405944f0": 94, "0x7efe40594580": 42, "0x7efe40594a90": 27, "0x7efe40594ac0": 42, "0x7efe40594af0": 42, "0x7efe40594c70": 42, "0x7efe40594d00": 42, "0x7efe40594e20": 42, "0x7efe40594ee0": 42, "0x7efe405ab970": 91, "0x7efe405d7d60": 59, "0x7efe405d7e80": 16, "0x7efe405dc700": 61, "0x7efe405e5310": 55, "0x7efe405ec040": 42, "0x7efe405ec190": 42, "0x7efe405ec490": 42, "0x7efe405ec550": 42, "0x7efe405ec6a0": 42, "0x7efe405ec760": 42, "0x7efe405ec790": 42, "0x7efe405ec7c0": 42, "0x7efe405ec970": 42, "0x7efe405ecb50": 42, "0x7efe405eceb0": 42, "0x7efe405ecee0": 42, "0x7efe405ecf10": 42, "0x7efe4064f0a0": 42, "0x7efe4064f160": 42, "0x7efe4064f1f0": 42, "0x7efe4064f250": 42, "0x7efe4064f280": 42, "0x7efe4064f2e0": 42, "0x7efe4064f310": 42, "0x7efe4064f3a0": 42, "0x7efe4064f520": 35, "0x7efe4064f820": 42, "0x7efe4064f8e0": 51, "0x7efe4064f9a0": 42, "0x7efe4064fbb0": 42, "0x7efe4064fca0": 42, "0x7efe4064fd90": 42, "0x7efe4064fe80": 42, "0x7efe40656040": 42, "0x7efe406560a0": 42, "0x7efe406560d0": 42, "0x7efe40656250": 42, "0x7efe406562b0": 42, "0x7efe406563d0": 42, "0x7efe40656400": 42, "0x7efe40656460": 42, "0x7efe40656580": 42, "0x7efe40656610": 42, "0x7efe40656820": 15, "0x7efe406568b0": 42, "0x7efe406568e0": 42, "0x7efe40656c70": 42, "0x7efe40656d60": 42, "0x7efe40656f10": 42, "0x7efe40671070": 42, "0x7efe40671100": 42, "0x7efe40671160": 42, "0x7efe40671370": 42, "0x7efe40671430": 42, "0x7efe40671520": 42, "0x7efe40671a00": 42, "0x7efe40671a90": 42, "0x7efe40671b20": 42, "0x7efe40671b50": 42, "0x7efe40671cd0": 42, "0x7efe40671d30": 42, "0x7efe40671d60": 42, "0x7efe40671dc0": 35, "0x7efe40671e80": 42, "0x7efe40671fa0": 42, "0x7efe406d3a90": 52, "0x7efe40746df0": 4, "0x7efe40746e20": 11, "0x7efe407540d0": 77, "0x7efe40754160": 42, "0x7efe408db3a0": 53, "0x7efe408db490": 52, "0x7efe408db970": 53, "0x7efe408dba30": 53, "0x7efe408dbc10": 52, "0x7efe408dbc40": 53, "0x7efe408dbc70": 53, "0x7efe408dbd60": 52, "0x7efe408dbfa0": 53, "0x7efe408e4250": 16, "0x7efe408e47f0": 2, "0x7efe408f6070": 42, "0x7efe408f6100": 53, "0x7efe408f61c0": 42, "0x7efe408f6310": 42, "0x7efe408f64c0": 42, "0x7efe408f6550": 42, "0x7efe408f6730": 42, "0x7efe408f6790": 42, "0x7efe408f67f0": 42, "0x7efe408f68e0": 42, "0x7efe408f6940": 42, "0x7efe408f6ca0": 42, "0x7efe408f6f40": 42, "0x7efe408f6f70": 42, "0x7efe408f6fd0": 42, "0x7efe40900100": 42, "0x7efe40900460": 42, "0x7efe40900640": 42, "0x7efe40900730": 42, "0x7efe409008e0": 42, "0x7efe40900cd0": 42, "0x7efe40900fa0": 42, "0x7efe40900fd0": 42, "0x7efe4090c040": 42, "0x7efe4090c070": 42, "0x7efe4090c130": 42, "0x7efe4090c160": 42, "0x7efe4090c460": 42, "0x7efe4090c5b0": 42, "0x7efe4090cd60": 42, "0x7efe40925160": 42, "0x7efe409252b0": 42, "0x7efe40925310": 42, "0x7efe409253d0": 42, "0x7efe40925430": 42, "0x7efe40925700": 42, "0x7efe409257f0": 42, "0x7efe409258b0": 42, "0x7efe40925940": 57, "0x7efe40925b80": 42, "0x7efe40925fa0": 42, "0x7efe40931130": 4, "0x7efe40951160": [16, 42], "0x7efe40951220": 42, "0x7efe40951340": 42, "0x7efe40951640": 42, "0x7efe40951730": 42, "0x7efe40951970": 42, "0x7efe40951b80": 42, "0x7efe40951bb0": 42, "0x7efe40951cd0": 42, "0x7efe40951d00": 42, "0x7efe40951df0": 42, "0x7efe40951e20": 42, "0x7efe40951e50": 42, "0x7efe40951ee0": 11, "0x7efe40951fd0": 42, "0x7efe40974370": 43, "0x7efe40978070": 42, "0x7efe409780d0": 42, "0x7efe40978130": 42, "0x7efe40978160": 42, "0x7efe40978220": 42, "0x7efe40978340": 42, "0x7efe40978370": 42, "0x7efe409783d0": 42, "0x7efe40978580": 42, "0x7efe40978670": 42, "0x7efe409788b0": 42, "0x7efe409788e0": 42, "0x7efe40978910": 42, "0x7efe40978940": 42, "0x7efe40978b20": 42, "0x7efe40978d30": 42, "0x7efe40978dc0": 42, "0x7efe40997100": 42, "0x7efe40997220": 42, "0x7efe40997370": 42, "0x7efe409973a0": 42, "0x7efe40997430": 42, "0x7efe40997490": 42, "0x7efe409979d0": 42, "0x7efe40997a00": 42, "0x7efe40997a30": 42, "0x7efe40997bb0": 42, "0x7efe40997d00": 42, "0x7efe40997d90": 5, "0x7efe40997f10": 42, "0x7efe409a0040": 42, "0x7efe409a0130": 42, "0x7efe409a0160": [42, 52], "0x7efe409a0190": 42, "0x7efe409a01c0": 42, "0x7efe409a0310": 42, "0x7efe409a0340": 42, "0x7efe409a04c0": 52, "0x7efe409a06d0": 42, "0x7efe409a0700": 42, "0x7efe409a0910": 42, "0x7efe409a0940": 42, "0x7efe409a0cd0": 42, "0x7efe409a2100": 42, "0x7efe409a2190": 42, "0x7efe409a2220": 42, "0x7efe409a2250": 42, "0x7efe409a23d0": 42, "0x7efe409a2430": 42, "0x7efe409a2490": 42, "0x7efe409a2730": 42, "0x7efe409a27c0": 42, "0x7efe409a2a00": 42, "0x7efe409a2b80": 42, "0x7efe409a2c10": 42, "0x7efe409a2eb0": 42, "0x7efe409a2ee0": 42, "0x7efe409a2fd0": 42, "0x7efe409ad100": 42, "0x7efe409ad2e0": 17, "0x7efe409ad340": 42, "0x7efe409ad370": 42, "0x7efe409ad5b0": 42, "0x7efe409ad610": 42, "0x7efe409ad670": 42, "0x7efe409ad7f0": 42, "0x7efe409ad940": 42, "0x7efe409ada30": 42, "0x7efe409ada60": 42, "0x7efe409adc70": 42, "0x7efe409add30": 42, "0x7efe409ade50": 42, "0x7efe409adf10": 42, "0x7efe409adfd0": 42, "0x7efe409ba0d0": 42, "0x7efe409ba340": 42, "0x7efe409ba3d0": 42, "0x7efe409ba430": 42, "0x7efe409ba4c0": 42, "0x7efe409ba520": 42, "0x7efe409ba7c0": 42, "0x7efe409babe0": 42, "0x7efe409bac40": 42, "0x7efe409baca0": 42, "0x7efe409bad30": 42, "0x7efe409bae80": 42, "0x7efe409baee0": 42, "0x7efe409c3310": 42, "0x7efe409c3370": 42, "0x7efe409c35e0": 42, "0x7efe409c3610": 42, "0x7efe409c3850": 42, "0x7efe409c3970": 42, "0x7efe409c3a30": 42, "0x7efe409c3b20": 42, "0x7efe409c3bb0": 42, "0x7efe409c3c10": 42, "0x7efe409c3cd0": 42, "0x7efe409c3d60": 42, "0x7efe409c3f10": 42, "0x7efe409da130": 42, "0x7efe409da160": 42, "0x7efe409da280": 42, "0x7efe409da2b0": 42, "0x7efe409da400": 42, "0x7efe409da850": 42, "0x7efe409da9a0": 42, "0x7efe409dabe0": 42, "0x7efe409dad60": 42, "0x7efe409dae20": 42, "0x7efe409e5340": 42, "0x7efe409e53a0": 42, "0x7efe409e5610": 42, "0x7efe409e57f0": 52, "0x7efe409e5fa0": 42, "0x7efe409e85b0": 18, "0x7efe409ed4f0": 16, "0x7efe409f00d0": 42, "0x7efe409f01c0": 42, "0x7efe409f0310": 42, "0x7efe409f03a0": 42, "0x7efe409f0430": 42, "0x7efe409f04f0": 42, "0x7efe409f05b0": 42, "0x7efe409f0610": 42, "0x7efe409f0730": 77, "0x7efe409f0a00": 42, "0x7efe409f0a30": 42, "0x7efe409f0ac0": 42, "0x7efe409f0bb0": 42, "0x7efe409f0e20": 42, "0x7efe409f0eb0": 42, "0x7efe409f0ee0": 42, "0x7efe409f0f40": 42, "0x7efe409f0fd0": 42, "0x7efe409f7400": 33, "0x7efe40a0abe0": 4, "0x7efe40a0adf0": 17, "0x7efe40a351f0": 14, "0x7efe40a3b130": 42, "0x7efe40a3b190": 42, "0x7efe40a3b280": 42, "0x7efe40a3b400": 42, "0x7efe40a3b5b0": 42, "0x7efe40a3b6d0": 42, "0x7efe40a3b880": [42, 52], "0x7efe40a3b940": 42, "0x7efe40a3ba60": 42, "0x7efe40a3ba90": 42, "0x7efe40a3bbb0": 42, "0x7efe40a3bbe0": 42, "0x7efe40a3bc70": 42, "0x7efe40a3be20": 42, "0x7efe40a3be80": 42, "0x7efe40a3beb0": 42, "0x7efe40a4bdf0": 2, "0x7efe40aa0130": 96, "0x7efe40aa0190": 65, "0x7efe40aa0a00": 77, "0x7efe40aad7f0": 65, "0x7efe40aca4c0": 38, "0x7efe40b100d0": 42, "0x7efe40b10220": 42, "0x7efe40b10400": 42, "0x7efe40b10580": 42, "0x7efe40b105e0": 42, "0x7efe40b10670": 42, "0x7efe40b10730": 42, "0x7efe40b107f0": 42, "0x7efe40b10820": 42, "0x7efe40b109a0": 42, "0x7efe40b109d0": 42, "0x7efe40b10b20": 42, "0x7efe40b10ca0": 42, "0x7efe40b10fa0": 42, "0x7efe40b502b0": 42, "0x7efe40b502e0": 42, "0x7efe40b50340": 42, "0x7efe40b50370": 42, "0x7efe40b503d0": 42, "0x7efe40b504c0": 42, "0x7efe40b505b0": 42, "0x7efe40b505e0": 42, "0x7efe40b50640": 42, "0x7efe40b506d0": 42, "0x7efe40b508e0": 42, "0x7efe40b50a90": 42, "0x7efe40b50b80": 35, "0x7efe40b50be0": 42, "0x7efe40b50c40": 96, "0x7efe40b50ca0": 42, "0x7efe40b50ee0": 42, "0x7efe40b65190": 42, "0x7efe40b65430": 42, "0x7efe40b65460": 42, "0x7efe40b65490": 42, "0x7efe40b654f0": 42, "0x7efe40b65730": 42, "0x7efe40b658b0": 42, "0x7efe40b658e0": 42, "0x7efe40b65970": 42, "0x7efe40b65a90": 42, "0x7efe40b65b20": 42, "0x7efe40b65c70": 42, "0x7efe40b65dc0": 18, "0x7efe40b65e80": 42, "0x7efe40b65eb0": 42, "0x7efe40b7e820": 17, "0x7efe40b8cf40": 15, "1": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 19, 20, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 121, 127, 129, 130, 131, 132, 135, 137, 141, 142, 144, 147, 149, 150, 157, 159, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 184, 186, 187, 189, 191, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 326, 329, 333, 335, 339, 341, 343, 344, 348, 351, 353, 356, 359, 361, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 428, 429, 430, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 455, 456, 461, 463, 465, 468, 469, 472, 478, 479, 480, 494, 495, 496, 498], "10": [0, 2, 3, 4, 5, 6, 8, 10, 11, 12, 16, 22, 23, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 64, 65, 66, 68, 72, 73, 74, 78, 79, 81, 83, 89, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 118, 121, 126, 147, 157, 160, 164, 165, 167, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 184, 186, 193, 196, 197, 198, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 238, 239, 242, 246, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 273, 276, 280, 281, 282, 283, 284, 286, 289, 290, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 321, 322, 329, 341, 343, 344, 355, 367, 368, 371, 372, 374, 375, 377, 379, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 428, 446, 453, 454, 455, 456, 459, 460, 461, 464, 465, 468, 469, 472, 478, 479, 480, 489, 494, 496, 498], "100": [3, 16, 33, 35, 36, 41, 43, 44, 45, 47, 52, 58, 66, 70, 73, 77, 88, 91, 107, 109, 113, 121, 171, 180, 188, 193, 197, 201, 230, 237, 240, 246, 258, 278, 281, 304, 305, 306, 307, 309, 310, 323, 326, 334, 335, 343, 350, 363, 425, 469, 479, 480, 494], "1000": [36, 52, 79, 96, 167, 180, 193, 196, 199, 201, 230, 237, 258, 341, 390, 453, 480], "10000": [45, 52, 58, 106, 109, 341, 390], "10000000000": 314, "10002432": 67, "1002": [118, 204, 210, 211, 212, 213, 214, 235, 251, 261, 289, 344, 468], "10051813e": 3, "1006": [118, 198, 205, 248], "100608": 480, "1007": [26, 118], "100745216": 72, "100765": 480, "1008": [118, 164, 239], "100m": 68, "100mm": 88, "101": [35, 43, 44, 73, 118, 367, 368, 469, 479, 480], "1010": [29, 48, 496], "1011": [19, 36], "1012": [29, 48, 496], "1013": [17, 31, 33], "1014": [48, 115, 496], "1015": [35, 38, 39, 101, 106], "10159": [65, 479], "10159_task": 65, "1016": [23, 26, 39, 43, 44, 51, 52, 54, 59, 61, 78, 102, 106, 118, 164, 165, 169, 171, 172, 175, 176, 184, 201, 203, 205, 207, 216, 218, 222, 223, 224, 229, 231, 250, 252, 253, 256, 260, 265, 266, 276, 280, 306, 307, 311, 321, 341, 367, 368, 390, 428, 469], "10176": 93, "1019": [64, 75, 496], "102": [27, 29, 35, 43, 44, 65, 73, 118, 226, 290, 300, 368, 479, 480, 496], "10216042e": 3, "1024": [154, 162, 193, 207, 253, 480, 489], "10242": [23, 24, 289, 292, 293, 300, 437, 450, 480], "10242755e": 3, "1025": [3, 8, 496], "1026": 64, "102714": 56, "103": [35, 44, 73, 118, 175, 186, 308, 479, 480], "10332557e": 3, "10346329e": 3, "10364490e": 3, "1038": [118, 228, 257, 268, 286], "103874560": 72, "104": [35, 44, 73, 253, 479, 480], "104073": 59, "1042": [103, 118], "10426": [284, 301], "104293434": 42, "1044": 73, "10440": 73, "104535": 35, "1046": [159, 162], "105": [35, 44, 65, 73, 479, 480], "10509354": [118, 390], "1052": [62, 103, 118, 496], "1053": [56, 61], "105373": 59, "1054": [48, 480, 496], "105434": 59, "1055": 44, "105651": 59, "1058": [118, 201], "105981": 59, "106": [35, 44, 73, 118, 197, 201, 230, 232, 236, 258, 259, 262, 479, 480], "1062": 480, "1063736": [3, 33, 34, 40, 101, 118, 217, 270], "1064": [118, 201], "106438": 59, "106460": 59, "106742": 59, "106895": 59, "107": [5, 7, 8, 14, 20, 25, 28, 29, 35, 44, 62, 66, 69, 73, 74, 75, 78, 79, 80, 82, 83, 84, 86, 90, 92, 95, 98, 99, 110, 112, 115, 479, 480, 496], "107012": 59, "107094016": 72, "107145": 59, "107229": 59, "1073": [118, 175, 186, 197, 201, 232, 259, 368], "10744104e": 3, "107488": 59, "107567": 59, "1078": 480, "108": [35, 44, 47, 48, 60, 65, 73, 74, 479, 480, 496], "1080": [118, 390], "108038": 59, "108046": 6, "108058": 59, "108176": 59, "1082": [35, 159, 162], "108211": 59, "108325": 59, "108401": 59, "108440": 59, "10846020e": 3, "108591": 59, "108632": 59, "108723": 59, "1088": 480, "10880": 93, "108875": 59, "108937": 59, "108990": 59, "109": [2, 21, 29, 35, 44, 59, 73, 93, 156, 162, 248, 259, 479, 480, 496], "1090": [51, 480], "109066": 59, "109090": 59, "109104": 59, "1093": [118, 164, 197, 205, 230, 252, 258], "109387": 59, "1095": 480, "109540": 59, "109616": 59, "109654": 59, "1097": [118, 210, 211, 212, 213, 214, 235, 261, 289], "109731": 59, "109769": 59, "1098": 480, "10_task": 113, "10a": [64, 65, 73, 479], "10b": [64, 65], "10c": [64, 65], "10k": 113, "10mm": 52, "10th": 43, "10x10": [43, 44], "11": [3, 6, 11, 29, 35, 41, 43, 44, 45, 47, 52, 56, 64, 65, 67, 68, 72, 73, 74, 75, 84, 93, 101, 104, 107, 118, 122, 134, 135, 144, 147, 148, 149, 157, 197, 201, 204, 205, 216, 222, 223, 251, 252, 280, 292, 293, 300, 308, 330, 331, 332, 336, 337, 338, 343, 348, 356, 358, 359, 360, 363, 378, 379, 380, 425, 432, 444, 452, 456, 470, 471, 472, 473, 474, 475, 479, 480, 496, 498], "110": [35, 44, 73, 88, 118, 261, 268, 286, 479, 480], "11008": 93, "1101": [118, 344, 468], "11020": 107, "11021": 107, "110301": 59, "110313472": 72, "110644": 59, "11072": 93, "1109": [47, 51, 52, 118, 169, 176, 198, 201, 250, 311, 312, 455, 461], "111": [35, 44, 56, 64, 73, 93, 479, 480], "1111": [106, 118, 390], "1112": 196, "1116": 479, "112": [14, 29, 35, 44, 73, 84, 95, 114, 118, 367, 368, 479, 480, 496], "11208": 93, "1122": 480, "1125": [118, 230, 236, 258, 262], "1126": [3, 33, 34, 40, 61, 101, 118, 186, 201, 208, 217, 250, 264, 270], "112a": 35, "112b": 35, "113": [28, 29, 35, 44, 73, 81, 114, 207, 479, 480, 496], "1134": 64, "113541120": 72, "1139": [118, 201, 250], "114": [15, 29, 35, 44, 47, 73, 147, 162, 479, 480, 496], "1143": 480, "11431302e": 3, "114769": 35, "115": [8, 18, 29, 35, 44, 54, 73, 102, 118, 147, 162, 479, 480, 496], "1152": [118, 230, 236, 258, 262, 480], "1155": [155, 162], "1156": 480, "11598890e": 3, "116": [35, 44, 73, 74, 77, 198, 479, 480], "1161": [6, 64, 480], "11617": 91, "1162": [118, 227, 232, 259], "116290": [118, 231, 266], "11648": 93, "1165": [118, 230, 236, 258, 262], "116776960": 72, "117": [10, 35, 44, 73, 95, 156, 162, 193, 198, 237, 248, 479, 480], "1170": 480, "117126": [118, 207, 253], "1171599": [118, 186], "11747328": 6, "11752": 93, "11760": 93, "1177": [118, 311], "11775567e": 3, "11780558e": 3, "118": [29, 35, 44, 73, 479, 480], "1180": [118, 311], "1181": 35, "11872": 93, "1188": [64, 479], "118a": 35, "119": [35, 44, 73, 74, 79, 135, 162, 479, 480], "1190": 480, "11904": 93, "1192": [48, 496], "1193": 43, "1194144": [61, 118, 208, 264], "11942": 10, "11968": 93, "11a": [35, 64, 65, 479], "11b": [64, 65], "11c": 65, "11t19": [35, 479], "11t20": [64, 70, 73, 104, 113], "12": [6, 11, 13, 24, 27, 29, 34, 35, 41, 43, 44, 46, 47, 51, 52, 56, 59, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 79, 80, 82, 93, 101, 104, 107, 112, 113, 114, 118, 122, 125, 127, 128, 135, 137, 153, 158, 159, 176, 177, 190, 193, 198, 201, 206, 232, 237, 248, 250, 257, 259, 262, 267, 284, 288, 341, 363, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442, 443, 456, 466, 472, 474, 478, 479, 480, 496], "120": [35, 44, 73, 86, 102, 118, 235, 261, 479, 480], "120094720": 72, "120138": [26, 118], "120152064": 4, "1206": [118, 177, 186], "1207": [118, 177, 239, 242], "120742": 59, "12096": 11, "121": [13, 29, 35, 44, 54, 62, 68, 73, 479, 480, 496], "12101131e": 3, "12124353e": 3, "1213": [104, 115, 496], "1214": 480, "1215": 480, "12156862745098039": 111, "1216": 480, "122": [35, 44, 65, 68, 73, 74, 122, 162, 193, 201, 237, 250, 267, 479, 480], "12224": 93, "122246": 59, "12226205e": 3, "1224": [65, 479, 480], "12249039e": 3, "1229": [109, 110], "123": [35, 44, 73, 253, 479, 480], "1230": 480, "123008": 93, "123176": 93, "12328855e": 3, "12333e": 42, "12339610e": 3, "123551744": 72, "1237": 36, "1238": [141, 162], "12393": 479, "123e": 56, "124": [4, 35, 43, 44, 73, 479, 480], "1241": [62, 496], "1242": [55, 58, 64, 178], "1246": 480, "125": [18, 29, 35, 43, 44, 73, 74, 103, 118, 479, 480, 496], "1255": 480, "1256": [118, 216, 480], "1257": [107, 480], "12591104": 18, "12595591e": 3, "126": [6, 35, 44, 59, 73, 93, 105, 156, 162, 479, 480], "1261": 480, "1265": [118, 216], "127": [15, 29, 35, 44, 73, 114, 144, 162, 479, 480, 496], "1271": [118, 201], "127270912": 72, "1273": 480, "127426": 65, "12752": 93, "12756208e": 3, "127944": 56, "128": [35, 44, 66, 68, 70, 73, 86, 94, 108, 154, 162, 193, 207, 253, 479, 480, 489], "1280": 480, "12810544e": 3, "1282": [51, 118, 169, 312], "1285": [51, 118, 169, 312], "1285615": 250, "1286": [115, 496], "1287": 114, "12882090e": 3, "1289": 480, "129": [35, 44, 73, 125, 162, 479, 480], "1290": 480, "1294": [118, 201], "1296": [64, 65], "12a": [35, 65, 73], "12b": 65, "12mm": 96, "12th": [118, 201], "13": [6, 11, 35, 38, 55, 56, 59, 62, 64, 65, 72, 73, 79, 93, 98, 99, 103, 104, 107, 112, 115, 118, 122, 128, 130, 132, 134, 135, 162, 175, 202, 206, 227, 238, 248, 250, 251, 257, 259, 262, 266, 284, 287, 288, 313, 317, 323, 343, 348, 356, 358, 359, 360, 363, 365, 367, 371, 374, 375, 390, 428, 459, 460, 478, 479, 480, 496], "130": [35, 44, 73, 479, 480], "13038101e": 3, "13040": [118, 232, 259], "1304239304725877": 71, "13045": [118, 232, 259], "1307": 107, "13075574e": 3, "131": [35, 44, 73, 74, 118, 235, 261, 479, 480], "131391488": 72, "1314": 480, "132": [35, 44, 73, 479, 480], "1322": [32, 34, 41, 48, 496], "1323": 64, "132423680": 3, "1327": 480, "1328": [47, 118, 176], "13290481e": 3, "133": [35, 44, 73, 479, 480], "1335": 480, "1336": [150, 162], "13360": 111, "13384435e": 3, "1339": 480, "134": [35, 44, 54, 73, 95, 102, 118, 156, 162, 479, 480], "1340": [47, 118, 176], "13411239e": 3, "134263085": 72, "1344": 480, "13475097e": 3, "135": [35, 40, 44, 48, 72, 73, 74, 113, 115, 479, 480, 496], "1350": [53, 168, 456, 458], "1350mm": [456, 458], "1355": 480, "1357": 480, "1358": [61, 118, 208, 264], "136": [35, 44, 73, 479, 480], "1361": [61, 118, 208, 264, 480], "13630891e": 3, "13675506e": 3, "1368": 73, "137": [13, 29, 35, 44, 73, 74, 479, 480, 496], "1370": [145, 162], "1371": [118, 186], "1372": 480, "1375": 480, "1377": 480, "13781756e": 3, "138": [35, 44, 65, 73, 479, 480], "1384": 480, "1389": 480, "139": [35, 44, 73, 479, 480], "13936": 93, "1395": 480, "13951266": 18, "1396": 480, "1397": 480, "13a": [64, 73], "13b": [64, 73], "13th": [51, 118, 169, 312], "14": [3, 4, 6, 11, 19, 27, 29, 32, 34, 35, 40, 43, 48, 56, 64, 65, 67, 71, 72, 73, 75, 79, 91, 93, 99, 104, 107, 115, 118, 123, 125, 132, 140, 142, 143, 144, 147, 150, 162, 175, 201, 205, 230, 252, 258, 445, 479, 480, 496], "140": [35, 43, 44, 73, 74, 113, 479, 480], "14016": 93, "1402": 480, "1408": 480, "141": [35, 44, 73, 126, 162, 261, 479, 480], "1414": 53, "1416": [29, 496], "1417": 10, "141e": 56, "142": [35, 44, 73, 135, 162, 479, 480], "14225329e": 3, "14272": 93, "1429": [103, 118], "143": [35, 44, 73, 74, 479, 480], "1430": [62, 102, 115, 496], "14300394e": 3, "1431": 54, "1432": 118, "143288": 65, "14336": 93, "1435": 480, "1438": [62, 103, 118, 480, 496], "1439": 53, "144": [35, 44, 73, 118, 203, 276, 479, 480], "14428237e": 3, "14448": 93, "1445": 118, "1447": [3, 101], "1448": [3, 101], "1449": [3, 101], "145": [35, 44, 73, 118, 170, 479, 480], "1450": [3, 101], "1451": [3, 101], "1452": [3, 96, 101], "1458": 480, "146": [35, 44, 73, 74, 138, 162, 479, 480], "1460": 480, "14638158e": 3, "14640": 93, "1466": 480, "1467": [106, 118, 390], "14696448": 72, "147": [35, 44, 73, 479, 480], "1472": 480, "14724": 73, "1476": [35, 73], "148": [35, 44, 73, 193, 237, 479, 480], "1483": 480, "149": [35, 44, 73, 74, 479, 480], "1491": 480, "149296": 35, "1494": [51, 53], "1495": [51, 53], "1497": 480, "14976": 93, "1498": [118, 227, 480], "14990892e": 3, "14a": [35, 64, 65, 73, 479], "14b": [64, 65], "14c": 64, "15": [6, 11, 13, 23, 25, 32, 34, 35, 51, 52, 54, 56, 64, 65, 68, 71, 72, 73, 74, 77, 79, 80, 82, 84, 86, 89, 91, 93, 96, 97, 107, 112, 118, 122, 126, 129, 130, 143, 147, 157, 162, 198, 205, 238, 248, 260, 371, 374, 375, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 428, 459, 460, 479, 480, 496], "150": [27, 35, 44, 73, 118, 190, 428, 479, 480], "1500": 90, "15032616e": 3, "150482": 35, "1507": [118, 227], "15088": 93, "151": [10, 35, 44, 73, 74, 112, 479, 480], "1512": 73, "151677": 56, "152": [35, 44, 72, 73, 118, 184, 193, 201, 226, 479, 480], "1523": [118, 144, 162, 175], "1527": 480, "153": [35, 44, 73, 74, 479, 480], "15344039e": 3, "15345942e": 3, "1536": [145, 162, 480], "1539": 480, "153mb": 280, "154": [35, 44, 59, 70, 73, 77, 118, 367, 368, 428, 479, 480], "15425548e": 3, "15451572e": 3, "155": [35, 44, 73, 118, 216, 267, 479, 480], "1550": 480, "15536": 93, "155444": 56, "15583": 105, "156": [35, 44, 73, 74, 479, 480], "15616": 93, "15634": 111, "1565": [118, 197], "156604": 65, "1567": [118, 197], "15676209e": 3, "1568": [84, 496], "15680": 93, "1569": 77, "156a": 35, "157": [35, 44, 73, 479, 480], "1570": 480, "157605": 65, "1577": 480, "157832": 65, "158": [35, 44, 73, 118, 428, 479, 480], "1582": 480, "1583": [118, 186], "1585": [118, 186], "15886176e": 3, "158e": 56, "159": [35, 44, 73, 74, 109, 115, 479, 480, 496], "1593": 64, "1595": [145, 162], "15a": [64, 65, 73], "15b": 73, "15c": 73, "16": [6, 11, 27, 32, 34, 35, 36, 42, 47, 48, 51, 52, 56, 57, 59, 61, 62, 64, 65, 66, 68, 69, 72, 73, 78, 79, 81, 82, 84, 86, 91, 93, 94, 107, 109, 148, 155, 162, 177, 190, 193, 196, 216, 233, 237, 257, 372, 375, 377, 379, 456, 479, 480, 494, 496], "160": [35, 44, 61, 73, 86, 118, 172, 208, 246, 264, 306, 307, 478, 479, 480], "1600": [326, 339, 466, 480], "160110": [118, 268, 286], "16032": 93, "1606": [118, 170], "161": [35, 44, 73, 107, 115, 479, 480, 496], "1617": 480, "1619": 480, "161a": 35, "162": [35, 44, 73, 74, 118, 216, 479, 480], "1620": 6, "1621": 480, "162682": 52, "1627": 480, "163": [35, 44, 59, 73, 81, 479, 480], "1631": 480, "1637": 480, "1638": 480, "163842": [289, 292, 293, 300, 437, 450], "163e": 56, "164": [35, 44, 59, 73, 74, 479, 480], "1640": 480, "16426136e": 3, "1646": 480, "1647": 64, "16492896e": 3, "16498036e": 3, "164a": 35, "165": [35, 44, 59, 73, 479, 480], "166": [35, 44, 59, 73, 118, 170, 479, 480], "1664": 480, "16695296": 6, "166999999999994": 58, "167": [35, 44, 59, 73, 74, 193, 198, 237, 248, 479, 480], "1671": 480, "16721761e": 3, "1673": 480, "1674": [2, 16, 19, 32, 38, 43, 45, 46, 51, 89, 106, 110], "16784757e": 3, "168": [35, 44, 57, 58, 59, 61, 73, 91, 93, 168, 479, 480], "168973": 51, "169": [10, 29, 35, 44, 73, 479, 480, 496], "1691": 480, "1692": 73, "1694": 480, "1695": [27, 29, 496], "1699": 480, "16a": [64, 65], "17": [6, 11, 18, 26, 29, 32, 35, 42, 48, 50, 56, 64, 65, 72, 73, 82, 93, 104, 107, 118, 132, 147, 162, 193, 197, 198, 230, 236, 237, 248, 258, 262, 479, 480, 496], "170": [35, 44, 73, 74, 198, 479, 480], "1704": 480, "1705": [147, 162], "17099107e": 3, "171": [35, 44, 59, 73, 118, 198, 216, 368, 479, 480], "17136133e": 3, "1716": 480, "17170432": 22, "172": [35, 41, 44, 48, 73, 118, 172, 261, 306, 307, 479, 480, 496], "17254901960784313": 111, "17268302e": 3, "1728": [73, 480], "173": [35, 44, 73, 74, 101, 115, 479, 480, 496], "1730": 480, "17327": 107, "17328": 107, "17329": 107, "17330": 107, "17331": 107, "17332": 107, "17333": 107, "17334": 107, "17335": 107, "17336": 107, "17337": 107, "17338": 107, "17338038e": 3, "17339": 107, "17340": 107, "17341": 107, "17342": 107, "17343": 107, "17344": 107, "17345": 107, "17346": 107, "17347": 107, "17348": 107, "17349": 107, "17350": 107, "17351": 107, "17352": 107, "174": [35, 44, 59, 73, 118, 367, 368, 479, 480], "174325": 56, "17432858e": 3, "175": [35, 44, 73, 479, 480], "17557886e": 3, "17564156e": 3, "1757": 480, "17594175e": 3, "176": [35, 44, 64, 66, 73, 74, 75, 105, 479, 480, 496], "17600": 93, "17649180e": 3, "177": [23, 29, 35, 44, 73, 479, 480, 496], "17736": 105, "1775": 480, "178": [35, 44, 73, 479, 480], "1780": 43, "17813306e": 3, "1789": 480, "179": [35, 44, 73, 118, 170, 205, 479, 480], "1792": 480, "179269": 65, "1796": 480, "17987877e": 3, "179998": 35, "17a": 64, "17b": 64, "17c": 64, "17networks_1": 11, "17networks_10": 11, "17networks_11": 11, "17networks_12": 11, "17networks_13": 11, "17networks_14": 11, "17networks_15": 11, "17networks_16": 11, "17networks_17": 11, "17networks_2": 11, "17networks_3": 11, "17networks_4": 11, "17networks_5": 11, "17networks_6": 11, "17networks_7": 11, "17networks_8": 11, "17networks_9": 11, "18": [6, 26, 32, 33, 35, 56, 58, 61, 64, 65, 72, 73, 74, 93, 104, 106, 107, 112, 115, 118, 123, 140, 147, 157, 162, 191, 197, 201, 206, 216, 267, 443, 479, 480, 494, 496], "180": [35, 44, 73, 86, 118, 147, 162, 172, 201, 306, 307, 443, 445, 446, 479, 480], "180063": [118, 228, 257], "1804": 480, "18072": 93, "1808": 480, "181": [35, 44, 73, 78, 118, 321, 479, 480], "18105101e": 3, "18129438e": 3, "182": [35, 44, 73, 113, 254, 255, 258, 479, 480], "1822": 480, "18240": 93, "183": [35, 44, 73, 479, 480], "18359375": 111, "1836": 480, "184": [35, 44, 73, 479, 480], "1842": 480, "1845": 480, "18497457e": 3, "185": [35, 44, 73, 479, 480], "1851": 480, "18520544e": 3, "1856": 480, "186": [35, 44, 73, 479, 480], "1861819": 20, "1866": 480, "1869": 480, "18696191e": 3, "187": [35, 44, 59, 73, 118, 367, 368, 479, 480], "18719280e": 3, "18728": 93, "188": [35, 44, 50, 62, 73, 74, 77, 479, 480, 496], "18825775e": 3, "1888": [150, 162], "189": [35, 44, 73, 118, 344, 351, 468, 479, 480], "1898": 480, "18a": [64, 65, 73, 479], "19": [6, 29, 35, 42, 56, 61, 64, 65, 72, 73, 75, 79, 93, 101, 104, 107, 113, 115, 118, 127, 130, 135, 137, 150, 162, 198, 199, 224, 227, 228, 230, 233, 234, 235, 236, 247, 248, 256, 257, 258, 261, 262, 287, 318, 319, 479, 480, 496], "190": [35, 44, 73, 479, 480], "1905": 480, "1906": 480, "191": [35, 44, 73, 74, 479, 480], "191002": 479, "19114114": 22, "1914": [118, 204, 251], "1917": 480, "192": [35, 44, 54, 73, 86, 102, 118, 479, 480], "1920": [93, 480], "19272": 93, "1928": [118, 204, 251], "19296": 93, "193": [35, 44, 73, 257, 479, 480], "19328": 93, "1935": [43, 118], "19367874e": 3, "19387557e": 3, "19392": 93, "194": [35, 44, 73, 118, 205, 479, 480], "1941": 480, "1944": 73, "195": [35, 44, 73, 74, 118, 205, 479, 480], "195093": 65, "1951": [43, 150, 162], "1952": [121, 150, 162], "1953": [150, 162], "1955": 480, "196": [35, 44, 73, 479, 480], "1964": [33, 35], "196909": 65, "197": [20, 35, 44, 73, 193, 201, 237, 250, 351, 479, 480], "19701760": 72, "1971": [64, 480], "1974": 480, "197878": 65, "19790711e": 3, "198": [35, 44, 73, 74, 257, 479, 480], "1983": [118, 390], "1984": 480, "1985": 480, "1987": 480, "199": [35, 44, 73, 479, 480], "1991": 480, "1993": 480, "19934904e": 3, "1994": [118, 344, 468], "19957459e": 3, "1997": [118, 150, 162, 201, 235, 261], "1998": [118, 198, 205, 248], "1999": [118, 132, 162, 205, 210, 211, 212, 213, 214, 218, 289, 480], "19a": [35, 64, 479], "19b": [35, 64, 479], "1a": [6, 35, 64, 65, 73, 104, 479], "1b": [6, 64, 65, 73, 479], "1c": [6, 64, 65, 73, 479], "1d": [54, 109, 110, 120, 134, 159, 162, 189, 191, 238, 308, 311, 312, 316, 318, 319, 322, 328, 344, 345, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 401, 408, 412, 418, 421, 456, 457, 462, 467, 468, 476, 478], "1dev": [472, 474], "1e": [32, 41, 42, 43, 52, 114, 227, 239, 240, 309, 310, 314, 348, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 442, 445, 449, 455, 461], "1e3": 79, "1e4": [41, 304, 305, 306, 307], "1f": [47, 443, 446], "1hz": 246, "1min": 56, "1mm": [11, 127, 156, 162, 254, 255, 258, 296, 297, 299, 383], "1st": 58, "1x2": 44, "2": [2, 3, 4, 6, 7, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 93, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 116, 118, 121, 123, 125, 126, 127, 132, 142, 144, 145, 147, 148, 155, 156, 157, 164, 165, 169, 170, 171, 175, 176, 177, 178, 180, 182, 186, 187, 190, 191, 197, 198, 200, 201, 203, 204, 205, 209, 210, 211, 212, 213, 214, 216, 218, 224, 225, 227, 228, 230, 232, 234, 235, 236, 238, 239, 240, 244, 245, 246, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 261, 262, 267, 268, 269, 270, 272, 276, 281, 283, 288, 289, 294, 295, 298, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 326, 328, 329, 333, 335, 339, 341, 342, 344, 350, 351, 354, 355, 356, 357, 360, 361, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 427, 429, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 455, 456, 458, 459, 460, 462, 465, 468, 469, 478, 479, 480, 494, 495, 496, 498], "20": [6, 17, 22, 25, 29, 33, 35, 41, 42, 44, 47, 51, 53, 55, 57, 60, 61, 64, 65, 68, 71, 72, 73, 74, 80, 83, 93, 96, 97, 103, 107, 110, 118, 125, 135, 140, 162, 164, 168, 170, 193, 196, 197, 201, 232, 237, 250, 259, 304, 305, 306, 307, 309, 310, 311, 312, 478, 479, 480, 489, 496], "200": [35, 44, 45, 46, 73, 96, 107, 118, 164, 193, 197, 201, 237, 238, 246, 250, 258, 278, 309, 310, 479, 480], "2000": [5, 45, 52, 118, 150, 153, 162, 167, 189, 235, 261], "200007": [118, 235, 261], "2001": [3, 33, 34, 40, 101, 106, 118, 120, 174, 185, 189, 198, 217, 248, 270, 390], "2002": [118, 198, 248], "2003": [118, 313, 317, 480], "2004": [103, 118, 205, 252, 318, 319], "2005": [118, 216, 368], "2006": [118, 175, 186, 201, 209, 216, 308, 318, 319], "2007": [68, 74, 118, 203, 216, 227, 276, 350, 367, 368, 469], "2008": [30, 48, 116, 118, 164, 184, 191, 193, 280, 341, 346, 363, 370, 373, 376, 390, 418, 442, 447, 480, 496], "2009": [2, 22, 118, 126, 153, 156, 162, 184, 186, 193, 197, 201, 205, 218, 237, 252, 259, 271, 272, 294, 295, 296, 297, 298, 299, 341, 390, 489], "2009a": 201, "201": [35, 40, 44, 73, 74, 479, 480], "2010": [3, 4, 23, 39, 40, 51, 61, 118, 142, 162, 164, 169, 171, 201, 205, 218, 238, 239, 250, 260, 264, 311], "2011": [26, 39, 47, 52, 61, 118, 121, 126, 134, 142, 162, 164, 171, 175, 176, 193, 201, 218, 222, 224, 225, 230, 232, 237, 249, 256, 258, 259, 262, 265, 281, 283, 367, 368, 489], "2012": [26, 52, 103, 118, 159, 162, 165, 170, 176, 177, 186, 193, 201, 222, 226, 239, 242, 251, 367, 368, 480, 489], "2013": [59, 118, 150, 162, 164, 165, 175, 176, 196, 201, 207, 224, 246, 250, 256, 367], "2014": [52, 103, 106, 118, 167, 168, 175, 176, 197, 367, 390, 456], "2015": [118, 121, 122, 123, 124, 125, 126, 135, 136, 162, 176, 193, 197, 203, 224, 225, 237, 256, 276, 278, 281, 283, 367, 368], "20151277e": 3, "20153834": [51, 118, 169, 311], "2016": [51, 103, 118, 137, 138, 139, 140, 141, 162, 169, 268, 286, 312, 428], "2017": [59, 118, 142, 143, 144, 162, 170, 172, 193, 203, 228, 230, 237, 257, 258, 276, 306, 307, 367, 368, 428, 480], "20179152e": 3, "2018": [52, 59, 78, 118, 145, 146, 147, 162, 172, 193, 206, 207, 228, 237, 257, 258, 267, 306, 307, 321, 344, 368, 455, 461, 468], "2019": [52, 54, 102, 118, 148, 149, 150, 162, 231, 266, 425, 455, 461, 480], "202": [35, 44, 73, 479, 480], "2020": [118, 151, 152, 153, 162, 207, 231, 253, 266], "20200": 93, "20206": 114, "20207": 114, "20208": 114, "2021": [154, 155, 156, 162, 198, 199, 204, 224, 227, 228, 230, 233, 234, 235, 236, 247, 248, 251, 256, 257, 258, 261, 262, 287, 480], "2022": [26, 118, 157, 158, 159, 162], "20224": 93, "2023": [26, 118, 127, 128, 129, 162], "2024": [131, 132, 133, 162], "2025": [35, 64, 70, 73, 104, 113, 150, 162, 479, 480], "2028": [150, 162], "2029": 480, "203": [35, 44, 50, 73, 74, 479, 480], "2031": 480, "2033": 480, "2037": 480, "204": [35, 44, 73, 479, 480], "2041": [52, 118], "2043": 480, "2047": 480, "2048": 480, "20480": [23, 24, 93], "20484": [23, 24, 70, 113, 114, 474, 480], "204891": 35, "2049": [52, 118], "20499": [118, 201], "205": [35, 44, 73, 479, 480], "20503": [118, 201], "2052": [150, 162, 480], "2053": 480, "2054": 480, "205584": 35, "2057": [150, 162], "2058": 480, "20589948e": 3, "206": [35, 44, 73, 118, 231, 266, 479, 480], "20620542e": 3, "2063": [150, 162], "2064": 480, "20691790": [118, 171], "206928": 56, "207": [19, 29, 35, 44, 70, 73, 74, 75, 118, 205, 479, 480, 496], "2070": 480, "20736": 93, "2074": 480, "2079": 64, "208": [35, 44, 73, 118, 164, 238, 479, 480], "2083": [150, 162], "2088": 93, "209": [35, 44, 73, 479, 480], "2090": [150, 162], "2093": 200, "2096": [118, 165], "20a": [35, 64], "20b": [35, 64], "20c": [35, 64], "20mm": [97, 186], "21": [2, 6, 8, 26, 32, 33, 35, 44, 57, 64, 65, 68, 73, 79, 93, 98, 107, 130, 137, 155, 162, 193, 216, 237, 479, 480, 489, 496], "210": [6, 23, 35, 44, 65, 73, 74, 118, 218, 344, 468, 479, 480], "2104": 480, "2106": [118, 165], "2107": [150, 162], "211": [35, 44, 46, 73, 114, 479, 480], "2110": 480, "2111": 42, "2112": 480, "2113378": [47, 118, 176], "2118": [150, 162], "212": [35, 44, 46, 73, 74, 81, 257, 479, 480], "21211678e": 3, "2123": 42, "2128": 480, "213": [35, 44, 73, 479, 480], "2131": [43, 150, 162, 480], "21333": [118, 204, 251], "2136": 480, "2138": [150, 162], "213951": 6, "214": [35, 44, 70, 73, 479, 480], "21403529e": 3, "2142": [118, 201, 367, 368], "2144": 61, "21449": 480, "2148": 480, "215": [35, 44, 73, 74, 479, 480], "21503293e": 3, "215089152": 104, "2152": 480, "2153": 480, "2154": [118, 201, 367, 368, 480], "2155": 480, "2157": [150, 162], "216": [3, 32, 35, 44, 73, 479, 480], "2162": 480, "2163": [118, 480], "21653723": [118, 230, 236, 258, 262], "2166": [150, 162], "21664178e": 3, "2167": 480, "216765": 65, "2169": [150, 162], "217": [35, 44, 73, 479, 480], "2172": [150, 162], "21720619e": 3, "21733376": 6, "2175": 480, "2176": 480, "2177": [118, 150, 162, 480], "21781": 91, "218": [35, 44, 73, 74, 254, 255, 258, 479, 480], "2181": 480, "2186": 480, "219": [35, 44, 73, 92, 99, 479, 480, 496], "2194": 480, "2195": [150, 162], "21952393e": 3, "2196": 479, "219713": 59, "21983350e": 3, "21a": 64, "21b": 64, "22": [6, 13, 15, 29, 31, 35, 48, 58, 62, 64, 65, 72, 73, 93, 104, 107, 112, 118, 132, 137, 148, 157, 162, 205, 252, 346, 479, 480, 496], "220": [35, 44, 73, 479, 480], "22016": 480, "2202": 480, "22034845e": 3, "220446049250313e": 82, "220624": 53, "2207": 480, "2209": 118, "22093243e": 3, "221": [35, 44, 73, 74, 118, 207, 253, 479, 480], "22103e": 46, "2212": [150, 162], "221217": 59, "2214": [150, 162], "22197010e": 3, "222": [35, 44, 73, 479, 480], "2221": [150, 162], "2224": 480, "2229": 118, "223": [35, 44, 73, 118, 218, 479, 480], "2231": [150, 162], "2232": 73, "2234": 480, "22347434e": 3, "2235": [150, 162, 480], "2239": 480, "223948": 35, "22399328e": 3, "224": [35, 44, 70, 73, 74, 479, 480], "2240": [150, 162, 480], "2242": 480, "2243": 480, "2245": 480, "2246": 480, "2248": [150, 162], "225": [35, 44, 73, 479, 480], "2251": 480, "2255": [150, 162], "226": [35, 44, 73, 479, 480], "22603329e": 3, "22619173e": 3, "2264": 480, "22687402e": 3, "2269": 480, "227": [35, 44, 73, 74, 479, 480], "2272": [151, 162], "2274": 480, "2277": 480, "227700": 65, "22779833e": 3, "2278": 480, "22788": 65, "228": [35, 44, 73, 479, 480], "22802": 480, "2282": [157, 162], "228e": 56, "229": [35, 44, 73, 257, 479, 480], "2290": [151, 162], "2299": [153, 162], "22a": [64, 65, 73], "23": [6, 10, 35, 64, 65, 72, 73, 74, 93, 103, 104, 107, 118, 201, 232, 250, 259, 305, 310, 368, 479, 480], "230": [35, 44, 73, 74, 479, 480], "2300": [152, 162], "2302": [152, 162], "23027605e": 3, "2304": [153, 162, 480], "23066488e": 3, "2307": [153, 162], "2308": [152, 162], "2309": 480, "231": [35, 44, 58, 62, 73, 479, 480, 496], "23104": 93, "2312": [152, 162, 480], "2319": 480, "232": [35, 44, 61, 73, 479, 480], "2325": 480, "23264": 93, "23268763e": 3, "2327": [153, 162], "23292481e": 3, "232974": 65, "233": [35, 44, 73, 351, 479, 480], "23349470e": 3, "23390780e": 3, "234": [35, 44, 73, 74, 479, 480], "2340": 73, "23421358e": 3, "23478811e": 3, "23481820e": 3, "23488": 480, "235": [35, 44, 73, 479, 480], "2351": [99, 496], "2352": 96, "23552": 93, "2358": 480, "236": [35, 44, 73, 74, 479, 480], "236279": 59, "23640": 104, "23642873e": 3, "2368": 480, "2369": 104, "237": [32, 35, 44, 73, 479, 480], "237783": 59, "2379": 480, "238": [35, 44, 73, 118, 235, 261, 479, 480], "2385": 480, "2388": 480, "239": [10, 35, 44, 48, 73, 479, 480, 496], "23919129e": 3, "2395": 480, "23a": [64, 73], "23b": 64, "23c": 64, "24": [35, 38, 47, 48, 54, 61, 64, 65, 71, 72, 73, 75, 93, 104, 107, 109, 115, 129, 155, 162, 326, 328, 329, 333, 367, 368, 479, 480, 496], "240": [35, 44, 73, 479, 480], "24000": 93, "2401": 480, "2409": 480, "241": [35, 44, 73, 479, 480], "2410": 480, "2411": 480, "24167362e": 3, "242": [35, 44, 73, 118, 235, 261, 479, 480], "2425": [3, 33, 34, 40, 101, 118, 217, 270], "24256": [94, 480], "24256x24256": 52, "2429": [152, 162], "243": [7, 8, 26, 35, 44, 73, 479, 480, 496], "2430": [3, 33, 34, 40, 101, 118, 217, 270], "2432": 480, "24359": 105, "244": [35, 44, 73, 479, 480], "2440": 480, "2441216": 6, "24428": 91, "2446": 480, "2449": 480, "24497343e": 3, "245": [35, 44, 73, 479, 480], "2453": 480, "246": [35, 44, 73, 74, 479, 480], "2462": [42, 48, 480, 496], "2465": 480, "2466": 480, "2467": 480, "247": [35, 44, 73, 479, 480], "2471": 480, "2478": 480, "2479": 480, "248": [35, 44, 74, 479, 480], "24809": 91, "2482": 480, "2485": 480, "249": [35, 44, 480], "24913494e": 3, "24928256": 72, "2494": 480, "2496": 480, "24a": [64, 65, 73], "24b": 73, "24c": 73, "25": [6, 8, 16, 24, 32, 34, 35, 43, 44, 64, 65, 66, 73, 79, 93, 96, 97, 101, 107, 122, 162, 165, 197, 278, 316, 318, 319, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 440, 448, 450, 451, 452, 479, 480, 496], "250": [26, 35, 44, 68, 118, 480], "2506": 480, "2509": [153, 162], "251": [11, 29, 35, 44, 74, 480, 496], "2511": 480, "25184": 93, "251e": 56, "252": [35, 44, 73, 479, 480], "253": [35, 44, 480], "2531": 480, "2532": [155, 162], "2539": 480, "254": [2, 8, 35, 44, 74, 88, 99, 122, 162, 480, 496], "2543": 480, "2544": 480, "254408": 35, "255": [35, 44, 156, 162, 480], "2551": 480, "25524984e": 3, "2553": [154, 162, 480], "2555": 480, "256": [4, 13, 35, 44, 73, 86, 154, 162, 193, 207, 253, 262, 480, 489], "2560": 480, "25603974e": 3, "2561": 480, "25618803e": 3, "2562": [289, 292, 293, 300, 450], "2565": 480, "2567": [154, 162], "257": [35, 44, 74, 480], "257976e": 51, "258": [35, 44, 480], "2588": 480, "259": [35, 44, 480], "25912310e": 3, "2594": 480, "2598": 480, "25a": [64, 65, 73], "25b": [64, 73], "25c": 64, "26": [26, 35, 36, 48, 64, 65, 72, 73, 74, 77, 93, 98, 104, 107, 140, 162, 457, 479, 480, 496], "260": [35, 44, 61, 62, 74, 480, 496], "2606": [154, 162], "2608": 480, "261": [35, 44, 118, 175, 480], "261070848": 4, "2617": 480, "2619": [154, 162], "262": [35, 44, 118, 480], "2622": [154, 162], "2624": 480, "26240": 93, "263": [35, 44, 257, 480, 496], "2630": 480, "2635": 480, "2636": [103, 118, 170], "2637": 480, "263e": 56, "264": [35, 44, 61, 74, 229, 265, 480], "2643": [103, 118, 154, 162, 170], "2645": 355, "2649": 480, "265": [35, 44, 480], "2650": 480, "26522": 46, "2655": [157, 162], "266": [35, 44, 74, 480], "2663": 480, "2669": [154, 162], "267": [35, 44, 118, 367, 368, 480], "2674": [154, 162, 480], "2675": 112, "2676": 112, "2678": 480, "26787840": 6, "26795314e": 3, "268": [35, 44, 480], "26816": 93, "2684": [154, 162], "2688": 480, "269": [35, 44, 74, 118, 175, 480], "269133": 6, "2696": [154, 162], "2697": [154, 162], "26a": [64, 65, 73], "27": [6, 16, 17, 18, 23, 35, 42, 53, 62, 64, 65, 73, 88, 92, 93, 95, 99, 104, 107, 118, 201, 209, 368, 456, 458, 479, 480, 494, 496], "270": [35, 44, 443, 445, 446, 480], "2702": [154, 162], "27027": 64, "2703": [50, 62, 496], "27048": 93, "270521": 65, "2707": [155, 162], "271": [35, 44, 480], "2712": [154, 162], "2714": [154, 162], "2715": [127, 159, 162], "2717": 480, "2719": [154, 162, 480], "272": [35, 44, 75, 118, 210, 211, 212, 213, 214, 289, 480], "2723": [156, 162], "2725": 480, "273": [35, 44, 55, 118, 198, 248, 480], "2730": [155, 162], "2732": [155, 162], "27354270e": 3, "2736": 65, "2738": [156, 162], "274": [35, 44, 480], "27424194e": 3, "2743": 480, "274350080": 3, "2745": [155, 162], "275": [35, 44, 45, 48, 74, 480, 496], "2750": 480, "2752": 480, "2755": [156, 162, 480], "2757": 480, "276": [35, 44, 480], "2767": [155, 162], "2769": 480, "277": [35, 44, 118, 367, 368, 480], "27700759e": 3, "2774": 480, "2775": 480, "278": [35, 44, 74, 104, 115, 480, 496], "2783": 480, "2789": 480, "279": [35, 44, 480], "2790": [155, 162], "27900": 65, "2792": [155, 162], "279282": 35, "2797": 480, "2798": [155, 162], "27a": [64, 65], "27b": 65, "27c": 65, "27mm": [456, 458], "28": [16, 26, 29, 32, 35, 45, 48, 61, 64, 65, 73, 91, 93, 96, 99, 104, 107, 118, 122, 147, 162, 200, 230, 249, 258, 479, 480, 496], "280": [35, 44, 480], "28008": [73, 479], "28030429e": 3, "2804": [129, 162], "2805": [155, 162], "28050496e": 3, "2806": [155, 162, 480], "280625": 51, "2807": 480, "28087681e": 3, "28092792e": 3, "28093535e": 3, "281": [35, 44, 480], "2810": [155, 162], "2815": [155, 162], "2815524": [52, 118, 455, 461], "2816": 480, "2818": 112, "282": [35, 44, 480], "2821": [155, 157, 162], "2823": 480, "2826": [21, 51, 53, 155, 162, 480], "2827": 480, "2828": [118, 175], "2829": [157, 162], "283": [4, 5, 8, 35, 44, 480, 496], "2831": [155, 162], "2833": [130, 162], "2834": 112, "2835": 480, "2836": 480, "284": [35, 44, 68, 74, 118, 210, 211, 212, 213, 214, 289, 480], "285": [35, 44, 480], "2858": [155, 162], "2859": [157, 162], "286": [35, 44, 480], "2860": 43, "2867": [155, 162], "286718": 65, "2868": [155, 162], "2869": [155, 162], "287": [35, 44, 480], "28703490e": 3, "28723661e": 3, "2875": [156, 162], "2876": [156, 162], "28797455e": 3, "288": [35, 44, 51, 68, 73, 74, 118, 169, 311, 479, 480], "2880": [73, 157, 162, 480], "28884992": 105, "2889": 64, "289": [35, 44, 118, 198, 248, 480], "2890": 480, "28950528": [42, 111], "28a": [64, 65], "28b": 64, "28c": 64, "29": [21, 22, 29, 32, 35, 38, 64, 65, 67, 73, 74, 83, 93, 107, 135, 162, 479, 480, 496], "290": [35, 44, 480], "2900": [156, 162], "2902": [157, 162], "2904": [156, 162, 480], "291": [35, 44, 64, 68, 73, 74, 104, 479, 480], "291168628": 3, "29126929e": 3, "2916": 64, "29172453e": 3, "2919": 480, "292": [35, 44, 67, 75, 118, 390, 480, 496], "29244221e": 3, "2928": [156, 162, 480], "292987": 35, "293": [3, 33, 34, 35, 40, 44, 68, 74, 101, 118, 217, 270, 480], "2934": 480, "2939": 480, "293e": 56, "294": [6, 35, 44, 480], "2941": [156, 162], "2942": [157, 162], "2943": 64, "2944": [156, 162, 480], "2945": 480, "2946": [157, 162], "295": [35, 44, 480], "29516472e": 3, "2953": [158, 162], "296": [35, 44, 68, 74, 91, 97, 99, 480, 496], "2962": 480, "2965": [157, 162], "297": [35, 44, 480], "29727903e": 3, "297e": 56, "298": [35, 44, 97, 99, 118, 390, 480, 496], "2986": 480, "299": [35, 44, 51, 118, 169, 311, 480], "299562": 35, "2996": [62, 496], "2997": 52, "29a": [35, 479], "29b": 35, "2a": [6, 35, 64, 65, 73, 104, 479], "2a2e5a5707983d509d9319c692c867ab": 10, "2acca4": 11, "2b": [6, 64, 65, 73, 479], "2bqxn": 67, "2c": [64, 65, 73, 479], "2d": [41, 54, 57, 86, 93, 94, 101, 107, 119, 159, 162, 170, 173, 188, 191, 239, 240, 241, 242, 243, 311, 312, 313, 322, 344, 345, 346, 350, 351, 352, 356, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 391, 393, 394, 395, 396, 397, 398, 399, 400, 405, 407, 409, 411, 413, 415, 417, 425, 435, 453, 454, 455, 456, 462, 463, 472, 476, 478, 486], "2f": [32, 34, 44, 45, 46, 47, 52, 60, 91], "2g": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 435, 436, 437, 441, 442, 443, 445, 446], "2mm": [11, 22, 59, 93, 127, 156, 162, 165, 175, 253, 254, 255, 480], "2nd": [3, 27, 31, 32, 34, 35, 36, 37, 38, 39, 41, 270, 352, 356], "2t": 233, "2x1": 44, "2x2": [44, 148, 162, 401, 403, 406, 420, 427, 433, 436, 440, 441, 442, 494], "3": [2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 101, 102, 103, 104, 105, 107, 109, 110, 112, 114, 115, 118, 122, 126, 127, 131, 132, 137, 140, 141, 144, 147, 148, 149, 150, 155, 156, 157, 158, 160, 164, 168, 170, 175, 176, 179, 180, 186, 190, 191, 193, 197, 198, 201, 204, 205, 206, 210, 211, 212, 213, 214, 216, 218, 224, 230, 235, 236, 237, 238, 239, 240, 244, 245, 246, 250, 251, 253, 256, 258, 260, 261, 262, 263, 267, 268, 273, 281, 283, 286, 289, 290, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 321, 322, 326, 328, 329, 333, 339, 342, 343, 351, 353, 355, 356, 359, 361, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 387, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 427, 429, 433, 435, 436, 438, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 464, 466, 478, 479, 480, 482, 494, 495, 496, 498], "30": [3, 6, 33, 35, 38, 43, 47, 51, 54, 56, 60, 62, 64, 65, 66, 69, 72, 73, 90, 93, 102, 104, 107, 112, 118, 137, 147, 162, 176, 247, 306, 307, 316, 318, 319, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 464, 479, 480, 496], "300": [28, 35, 44, 58, 64, 71, 103, 193, 197, 231, 237, 258, 266, 278, 480], "3000": 52, "3003": [157, 162], "3008": [157, 162, 480], "3009": [157, 162], "301": [35, 44, 480], "3010": [157, 162, 480], "3013": [157, 162], "3015": [157, 162], "3016": [157, 162], "30176409": 6, "302": [35, 44, 122, 162, 480], "30210763e": 3, "3022": [48, 496], "3023": 37, "3025": [157, 162], "3026": [157, 162], "303": [35, 44, 480], "3030": [159, 162], "3033": [157, 162], "3035": [157, 162], "3036": [157, 162], "30367744": 72, "3037": 480, "3039": [157, 162], "304": [35, 44, 118, 176, 480], "3040": [91, 480], "3041": 112, "3042": [112, 157, 162], "3045": 480, "305": [29, 35, 44, 75, 480, 496], "3054": 480, "30541851e": 3, "30564": 73, "306": [3, 8, 22, 35, 44, 68, 480, 496], "3061": [157, 162], "3065": [157, 162, 480], "307": [35, 44, 480], "3072": 480, "3073": [157, 162], "3077": [157, 162], "3078": [157, 162], "308": [35, 44, 480], "308056": 65, "3081": [157, 162], "3082": [157, 162], "3084": 480, "3085": 480, "3086": 480, "3087": 480, "3089": 480, "308e": 56, "309": [35, 44, 118, 203, 276, 480], "3090": [157, 162], "3093": [157, 162, 480], "3095": [118, 230, 258, 480], "3096": 65, "3098": [158, 162], "30a": 64, "30b": 64, "31": [35, 42, 43, 48, 51, 64, 65, 70, 72, 73, 77, 93, 104, 113, 118, 176, 216, 232, 259, 479, 480, 496], "310": [3, 35, 44, 480], "3102": [130, 162], "3105": [127, 162, 178], "3106": [157, 162], "3109": [157, 162, 480], "311": [35, 44, 480], "3111": [157, 162], "3113": 480, "3114": [118, 230, 258], "31148917e": 3, "3115": 480, "3118": 480, "312": [35, 44, 480], "3120": 480, "3125": [127, 159, 162, 480], "3126": [157, 162], "3127": [158, 162], "31276604e": 3, "313": [35, 44, 118, 201, 218, 480], "3132": [65, 480], "3133": [157, 162], "3134": 480, "3135": [157, 162, 480], "3136": 480, "3137": [157, 162], "314": [35, 44, 99, 118, 203, 276, 480], "3141": [159, 162], "314803244": 4, "315": [35, 44, 480], "3152": [158, 162, 480], "31555584": 10, "316": [35, 44, 480], "3160": 480, "3165": [158, 162], "3169": 480, "317": [35, 44, 480], "3172": [129, 162], "31721919e": 3, "3173": [128, 162], "31739700e": 3, "3174": [158, 162], "31769c9cee5cd55f045e62633d651f3d": 105, "3178": [158, 162], "3179": [158, 162], "318": [35, 44, 480], "3181": [127, 159, 162], "3184": [158, 162], "3185": [159, 162], "3186": 480, "3188": [158, 162], "3189": 480, "318e": 56, "319": [35, 44, 480], "3191": [130, 162], "31919900e": 3, "3193": [159, 162], "31959161e": 3, "3196": [127, 159, 162], "31a": [35, 65], "32": [35, 36, 37, 43, 48, 51, 61, 62, 64, 65, 68, 73, 86, 93, 104, 105, 191, 330, 331, 332, 336, 337, 338, 479, 480, 494, 496], "320": [10, 35, 44, 118, 367, 480], "3200": 480, "3201": [158, 162], "32015": 121, "32016": 121, "3203": [129, 162], "3204": 480, "3207": [158, 162], "3209": [159, 162, 480], "321": [35, 44, 118, 176, 480], "321565": 65, "3216": [159, 162], "32177702e": 3, "3219": 480, "322": [35, 44, 480], "3220": [159, 162, 480], "3222": [159, 162], "32232048e": 3, "3227": [159, 162], "3228": 480, "3229": [159, 162], "323": [35, 44, 480], "3233": [159, 162], "3235": [159, 162], "3237": [127, 162], "32374832e": 3, "3238": 480, "324": [35, 44, 73, 118, 186, 479, 480], "3241": [159, 162], "3248": 35, "3249": [118, 177], "325": [35, 44, 193, 201, 237, 250, 480], "3250": 480, "32504": 58, "3255": [159, 162], "3258": 480, "3259": [128, 162, 480], "326": [35, 44, 480], "3262": [159, 162], "32637590e": 3, "3264": 480, "32695055e": 3, "327": [35, 44, 52, 62, 118, 201, 218, 480, 496], "3270": 480, "32712": 93, "3274": [159, 162], "328": [35, 44, 47, 480], "3281": [159, 162], "3283": [159, 162], "3284": [159, 162], "3285": [130, 162], "3286": [159, 162], "3289": 480, "329": [35, 44, 61, 118, 208, 264, 480], "3292": [159, 162], "3293": [159, 162], "3297": [159, 162], "32980": [107, 282], "32a": 64, "32b": 64, "33": [29, 35, 45, 46, 64, 65, 68, 72, 73, 74, 75, 93, 109, 115, 118, 204, 206, 251, 267, 479, 480, 496], "330": [35, 44, 480], "3300": [159, 162], "3302": [159, 162], "3306": [159, 162], "331": [35, 44, 480], "3311": [159, 162], "3312": [159, 162], "3317": [159, 162], "331865": 35, "332": [16, 35, 44, 480], "3322": [159, 162], "332201984": 104, "33221755e": 3, "3324": 480, "3327": 480, "3328": 480, "333": [35, 44, 480], "3333": [159, 162], "3337": [159, 162], "334": [35, 44, 480], "3344": 480, "33452512e": 3, "3346": 480, "3347": [127, 162], "335": [35, 44, 480], "3351": [128, 162], "3353": [128, 162], "3355": 480, "3356": 480, "336": [35, 44, 480], "33600": 93, "3362": [118, 128, 162, 425], "337": [35, 39, 44, 48, 480, 496], "33718272": 67, "337295": 65, "3374": [127, 162], "3375": [127, 162], "338": [35, 44, 480], "3380": [127, 162], "33812931e": 3, "3382": 480, "3384": [118, 425], "3385": [127, 162], "3389": [52, 118, 121, 167, 196, 200, 225, 226, 246, 249, 281, 283], "33890646e": 3, "339": [35, 44, 480], "3390": [127, 162], "3392": 480, "33a": 73, "33cm": 42, "34": [16, 35, 54, 64, 65, 73, 93, 104, 118, 175, 479, 480], "340": [35, 44, 480], "34028821e": 3, "3403": [127, 162], "34042234e": 3, "341": [35, 44, 118, 367, 480], "3410": 480, "3412": [48, 127, 162, 496], "3413": 46, "3414": [128, 162], "341729": 6, "342": [35, 44, 480], "342086": 65, "3422": [127, 162], "3424": [127, 162], "34242788": 10, "3426": [127, 162], "3427": [127, 162], "3429": [127, 162], "343": [35, 44, 480], "3430": [127, 162], "3433": [127, 162], "3436": [127, 162], "3437": 480, "34372": 480, "3439": [127, 162], "344": [35, 44, 94, 99, 480, 496], "3440": [127, 162, 480], "3444": [128, 162], "3445": [128, 162], "3446": [127, 162], "3449": [127, 162], "345": [35, 44, 47, 480], "3450": 480, "3452": [127, 162], "3453": [127, 162, 480], "34532740": 67, "3456": 480, "34560": 480, "34598429e": 3, "346": [35, 44, 480], "3460": 480, "3462": [128, 162], "3465": [128, 162], "3468": 480, "347": [35, 44, 480], "3474": [128, 162], "3477": [128, 162], "3478": [128, 162], "34792": [207, 253], "347e": 56, "348": [35, 44, 59, 93, 105, 480], "3483": [128, 162], "3484": [128, 162], "3485": [128, 162], "3487": 480, "349": [35, 44, 81, 480], "34906773e": 3, "3491": [128, 162], "349184": 65, "3492": 73, "3498": [128, 162], "34a": [65, 73], "35": [21, 26, 35, 44, 48, 56, 64, 65, 73, 74, 93, 102, 104, 115, 122, 162, 198, 256, 281, 479, 480, 496], "350": [35, 44, 108, 115, 480, 496], "351": [35, 44, 480], "35114291e": 3, "352": [35, 44, 480], "3520": 480, "352245": 35, "3523": [128, 162], "3525": [128, 162], "3527": 480, "3528": [115, 496], "3529": 111, "353": [35, 44, 480], "3531": [128, 162], "35340987e": 3, "3538": [129, 162], "354": [35, 44, 480], "35460722e": 3, "3548": [128, 129, 162], "3549": [128, 162], "355": [35, 44, 480], "3550": [128, 162], "3551": [128, 162], "3552": [128, 162], "35522070e": 3, "3553": [128, 162], "3554": [128, 162], "3555": [128, 162], "3556": [129, 162], "3557": [128, 162, 480], "3558": [128, 162], "356": [35, 44, 480], "3563": [128, 162], "3566": [129, 162], "357": [35, 44, 163, 480], "35701955e": 3, "3571712": 72, "3572": 480, "358": [35, 44, 480], "3584": 480, "35840000": 72, "35868536e": 3, "359": [35, 44, 480], "3593": 480, "3597": [129, 162], "35a": [65, 479], "36": [6, 16, 17, 18, 33, 35, 48, 61, 64, 65, 72, 73, 89, 92, 93, 95, 99, 113, 114, 144, 147, 162, 193, 198, 201, 232, 237, 250, 479, 480, 494, 496], "360": [35, 44, 65, 73, 118, 209, 479, 480], "3600": [128, 162], "360060360811": 163, "3601": [129, 162], "3603": 480, "3605": [128, 162], "3609": [129, 162], "361": [35, 44, 480], "36138502e": 3, "3614": [129, 162], "3615": [129, 162], "36175454e": 3, "361a": 35, "362": [35, 480], "3622": 480, "3626": [128, 162], "3629": 480, "363": [35, 480], "3631": [128, 162], "3635": [128, 162], "364": [35, 104, 480], "3640": [129, 162], "3642": 480, "3644": [129, 162, 480], "3646": [129, 162], "3647": [129, 162], "3648": [129, 162, 480], "3649": 480, "365": [26, 29, 35, 480, 496], "3650": [129, 162], "36504": 73, "3651": [129, 162], "366": [35, 480], "3665": 480, "367": [35, 54, 480], "367151": 35, "36718819e": 3, "3673": 480, "3676": 480, "368": [35, 480], "3681": [129, 162], "369": [35, 118, 480], "3691": 480, "36992528e": 3, "37": [35, 64, 65, 72, 73, 75, 83, 93, 96, 113, 118, 125, 162, 367, 368, 469, 479, 480, 496], "370": [35, 480], "3700": 480, "371": [35, 118, 209, 480], "3710": 480, "3712": 480, "3717": 480, "372": [35, 96, 99, 480, 496], "3722": [129, 162], "3723": [129, 162], "372383": 35, "37296487e": 3, "373": [35, 480], "3730": 480, "3732": [129, 162, 480], "3733": [129, 162, 480], "3735": 480, "3736": [129, 162], "3737": 480, "374": [35, 480], "37416417e": 3, "3742": [129, 162], "37427323e": 3, "3743": [129, 162, 480], "375": [35, 480], "3751": 480, "3753": [129, 162], "376": [35, 480], "3761": [130, 162], "37628239e": 3, "3763": 480, "3764": 480, "3765": 480, "3766": 480, "3768": 480, "37688": 93, "377": [35, 480], "3774": [129, 162], "3776": 480, "3777": [129, 162], "37776627e": 3, "378": [6, 35, 480], "3781": [129, 162], "3783": [129, 162], "379": [35, 480], "3790": [129, 162], "379355": 65, "3794": [129, 162], "3795": [129, 162], "3797": [129, 162], "37a": 479, "37b": 479, "38": [4, 6, 35, 64, 65, 73, 93, 114, 115, 147, 162, 479, 480, 496], "380": [35, 480], "38016": 93, "3802": [129, 162], "3803": [129, 162], "381": [35, 71, 75, 106, 118, 390, 480, 496], "3810": [129, 162], "3811": [129, 162], "3816": [129, 162], "38164290e": 3, "3819": [129, 162], "382": [35, 480], "38238252e": 3, "3827": [129, 162], "38275368e": 3, "383": [35, 480], "3833": [129, 162], "3836": [129, 162], "3838": [129, 162], "384": [35, 480], "3840": 480, "3842048": 72, "3847": [129, 162], "385": [35, 480], "3854": [129, 162], "3855": [129, 162], "3856": [129, 162], "3857": [129, 162], "386": [35, 480], "3860": [129, 162], "3863": [118, 175, 186, 308], "3868": [118, 175, 186, 308], "387": [35, 480], "3873": [129, 162], "3879": [129, 162], "388": [35, 480], "38816159e": 3, "3888": 6, "38888888888888895": 3, "3889": 36, "389": [35, 480], "3897": [129, 162], "389e": 56, "39": [6, 16, 35, 54, 57, 62, 64, 65, 70, 73, 74, 75, 93, 104, 135, 137, 140, 162, 193, 206, 249, 256, 267, 479, 480, 489, 496], "390": [35, 72, 480], "3904": 480, "3905": 480, "3908": 480, "391": [24, 29, 35, 60, 62, 480, 496], "3919": [129, 162], "392": [35, 480], "3921": [129, 162], "3927": [129, 162], "392956": 35, "393": [35, 480], "3934": [129, 162], "39346": 480, "3935": [130, 162], "39360": 480, "39361952e": 3, "394": [35, 480], "3942": [129, 162], "3943": [129, 162], "3945": [129, 162], "3949": [132, 162], "395": [35, 480], "39532805e": 3, "396": [35, 65, 73, 480], "396248e": 53, "39666765e": 3, "3968": 480, "397": [35, 106, 118, 390, 480], "397082": 65, "3971": [129, 162], "3973": [129, 162], "398": [35, 480], "3982": 480, "3987": [129, 162], "399": [35, 480], "39912": 35, "3993": [130, 162], "3994": [129, 162], "3995": 480, "399994": 68, "3a": [6, 35, 64, 65, 73, 479], "3b": [64, 65, 73, 479], "3c": [64, 65, 73, 479], "3d": [1, 3, 7, 8, 9, 16, 17, 19, 20, 24, 25, 27, 29, 31, 32, 34, 36, 38, 39, 41, 45, 47, 50, 72, 77, 79, 85, 86, 96, 99, 103, 106, 108, 109, 114, 116, 118, 120, 125, 128, 132, 134, 137, 144, 146, 147, 148, 150, 154, 155, 159, 162, 180, 184, 185, 186, 188, 190, 191, 201, 230, 234, 235, 252, 254, 255, 258, 259, 260, 261, 262, 282, 292, 293, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 339, 341, 343, 345, 346, 349, 351, 352, 353, 354, 363, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 462, 474, 478, 496, 497], "3dev": 446, "3dj2a": 104, "3f": [3, 6, 36, 47, 51, 58, 101], "3f1468dc43a408bf84510b07cee95049": 28, "3g": 83, "3min": [46, 51], "3mm": 233, "3rd": [21, 114, 435, 436, 441, 442, 449], "3v2": [132, 162, 198, 248], "3vrct": [207, 253], "3x3": [86, 190, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 356, 359, 373, 376, 382, 384, 385, 387, 454], "3x3x3": [190, 281, 283, 456, 458], "4": [0, 3, 4, 6, 7, 10, 11, 15, 16, 19, 20, 21, 24, 25, 26, 29, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 83, 86, 88, 91, 93, 94, 97, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 114, 115, 118, 122, 132, 135, 140, 143, 147, 148, 149, 150, 155, 164, 165, 168, 170, 175, 176, 177, 178, 186, 197, 201, 205, 209, 210, 211, 212, 213, 214, 216, 220, 222, 227, 228, 229, 235, 240, 246, 261, 265, 268, 286, 289, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 344, 355, 356, 359, 360, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 433, 435, 436, 438, 439, 440, 441, 442, 453, 454, 455, 456, 468, 478, 479, 480, 494, 496], "40": [21, 35, 41, 52, 56, 64, 65, 66, 73, 93, 96, 104, 118, 199, 201, 247, 256, 281, 425, 478, 479, 480], "400": [35, 118, 171, 193, 237, 246, 258, 480], "400000": 68, "4001": [130, 162], "40063294e": 3, "40064": 93, "4008": 107, "401": [35, 480], "40175": 77, "402": 35, "4022": [118, 232, 259], "4023": 64, "40261806e": 3, "4028": [130, 162], "4029": [130, 162], "403": 35, "4032": 480, "4037": [118, 232, 259], "404": [35, 163], "4042": [130, 162], "405": [35, 59, 64, 118, 164, 165, 224, 256], "4051": [130, 162], "4058": 480, "406": 35, "40640": 93, "4067": [130, 162], "4069": 163, "407": 35, "4070": [130, 162], "4071": [130, 162], "40740740740740744": 3, "407676": [118, 344, 468], "408": 35, "4081": 480, "40832935e": 3, "408391": 65, "4086": [130, 162], "4087": 480, "409": 35, "4094": [130, 162], "4096": 480, "40962": [289, 292, 293, 300, 450], "40977810e": 3, "4099": [130, 162], "40x64x64": 41, "41": [35, 52, 65, 72, 73, 74, 84, 93, 99, 118, 455, 461, 479, 480], "410": [35, 118, 171], "4103": [130, 162, 480], "4108": 480, "411": 35, "4116": [130, 162], "412": 35, "4121": [130, 162], "4122": [130, 162], "4126": [132, 162, 480], "41276307e": 3, "413": [35, 112], "4131": [130, 162], "41320448": 72, "41325866e": 3, "4136": [130, 162], "4138": 480, "413969": 44, "414": 35, "4140": 73, "4141": [130, 162], "41484411e": 3, "415": [35, 59, 118, 164, 165, 224, 256, 368], "4153": [130, 162], "41588854e": 3, "4159": [130, 162], "416": [35, 74, 75, 227, 285, 496], "4160": [93, 480], "4166": [130, 162], "4167": [130, 162], "4168": [93, 130, 162], "417": [35, 42, 48, 496], "41705999e": 3, "417132": 65, "4172": 480, "4176": 479, "417917": 35, "418": 35, "4180": [130, 162], "4188": [130, 162, 480], "418909": 59, "419": 35, "4191": [130, 162], "4195": 480, "41966072e": 3, "42": [6, 10, 25, 26, 32, 35, 46, 52, 64, 65, 66, 73, 93, 94, 103, 108, 112, 118, 198, 233, 479, 480, 494], "420": 35, "4203": 480, "4204": [130, 162], "420413": 59, "42048": 93, "4205": [132, 162], "4208": [129, 162], "421": 35, "42112": 93, "4215": [130, 162], "4219": [130, 162], "422": 35, "42208": 93, "4224": 480, "4225": [130, 162], "423": [35, 112], "4232": [131, 162], "4233": [130, 162], "4236": 480, "424": [35, 48], "42459620e": 3, "425": 35, "42528": 93, "42548863e": 3, "4255": [118, 131, 162, 177, 239, 242], "42560676e": 3, "4257": [131, 162], "4258": [131, 162], "426": [35, 480], "4263": 480, "4266": [131, 162], "4267": [131, 162], "4269": [131, 162], "427": 35, "4270": [131, 162], "4273": [132, 162], "4274": [131, 162], "4279": [131, 162], "428": 35, "4284": [131, 162], "4285": [131, 162], "42850939e": 3, "4287": [133, 162], "429": 35, "4295": [131, 162], "4297": [131, 162], "42976212e": 3, "4298": [131, 162], "42a": 73, "42cm": [33, 35], "43": [35, 52, 62, 65, 73, 93, 104, 106, 118, 135, 162, 193, 251, 390, 479, 480, 489, 496], "430": 35, "4302": [131, 162], "43027523e": 3, "43031880e": 3, "4304": [131, 162], "4307": [132, 162, 480], "4308": [131, 162], "431": 35, "4310": [131, 162], "4318": [131, 162], "432": [35, 73, 118, 164, 479], "4320": [131, 162], "4325": [131, 162], "433": 35, "4334": [131, 162], "4337": [131, 162], "434": 35, "4343": [131, 162], "435": 35, "4352": 480, "4354": [45, 48, 496], "43559530e": 3, "436": [35, 59, 118, 368], "4360": [132, 162], "437": 35, "438": 35, "439": 35, "4391": 480, "4392": [132, 162], "4397": [132, 162], "4399": 480, "44": [35, 46, 48, 65, 73, 74, 93, 104, 118, 125, 162, 184, 341, 390, 479, 480, 496], "440": [35, 107], "4403": 480, "4407": [132, 162], "441": [35, 118, 164], "4411": [132, 162], "4412": [132, 162], "4413": [132, 162], "4414": [132, 162], "4416": [132, 162, 480], "442": 35, "443": 35, "4434": 480, "4435": 480, "4436": [132, 162], "4437": [132, 162], "444": [20, 35, 193, 201, 237, 250], "4442": [134, 162], "4444": 36, "4446": [132, 162], "445": 35, "4452": [132, 162, 480], "445403": 65, "446": 35, "4465": [132, 162], "4467": [132, 162], "4469": [132, 162], "447": 35, "4470": [132, 162], "4475": 480, "4476": [132, 162], "448": [35, 44, 48, 480, 496], "4480": 480, "44800": 93, "4487": 480, "449": 35, "449202": 35, "4498": [132, 162], "44984": 93, "45": [3, 6, 8, 34, 35, 41, 48, 52, 58, 64, 65, 72, 73, 93, 104, 110, 118, 479, 480, 496], "450": [35, 72, 75, 496], "4507": [132, 162], "45093777e": 3, "451": 35, "45132369e": 3, "4515": 480, "4518": 480, "452": 35, "453": 35, "454": [35, 480], "45402739e": 3, "4544": [132, 162, 480], "45461055": 111, "455": [35, 104], "45514752": 72, "4554": [132, 162], "4555": [132, 162], "4556": [132, 162], "4558": [132, 162], "45583539": 105, "455974912": 104, "456": 35, "457": 35, "4570": [132, 162], "4571": [132, 162], "4574": [132, 162], "4577": [132, 162], "458": 35, "4582": [132, 162], "4585": [132, 162], "459": [35, 57, 62, 64, 496], "4590": [132, 162, 480], "4593": [132, 162], "45955": 35, "46": [34, 35, 42, 48, 61, 65, 73, 93, 95, 104, 112, 122, 162, 191, 249, 251, 479, 480, 494, 496], "460": 35, "460020402": [118, 344, 468], "4607": [132, 162], "4608": 480, "461": [35, 197, 278], "46115948e": 3, "4612": [132, 162], "4618": [132, 162], "462": [6, 35], "4620": [132, 162], "46216320": 111, "463": [35, 118, 198, 248], "463430": 6, "4635": [132, 162], "4637": [132, 162], "464": [3, 35, 41, 101], "46411506e": 3, "4643": 480, "465": 35, "4652": [132, 162], "4656": [132, 162], "4657": 480, "465759": 65, "4659": [132, 162], "465973": 44, "466": [35, 83, 84, 496], "4660": [132, 162], "4666666666666667": 111, "466817": 53, "467": 35, "4672": 480, "468": [35, 65, 73, 118, 198, 248, 479], "4682b4": 11, "46869624e": 3, "4688": [132, 162], "469": [35, 105], "4692": [132, 162], "4693": [132, 162], "46a": 35, "47": [35, 65, 73, 93, 101, 113, 115, 118, 205, 218, 246, 251, 252, 479, 480, 496], "470": 35, "47013743e": 3, "470x500": 23, "471": [35, 50], "4714": [132, 162], "4715": [132, 162], "4719": [132, 162], "472": 35, "4720": 480, "4723": [132, 162], "4725": 480, "473": [35, 103, 115, 496], "4734": 480, "4736": 480, "4737": 480, "474": 35, "47419303e": 3, "4743": 480, "475": 35, "47546273e": 3, "4756": [133, 162], "475669e": 53, "476": 35, "476023": 53, "4766": [118, 175], "47673910e": 3, "477": 35, "4775": [118, 175], "477846": 65, "478": 35, "479": [35, 480], "48": [6, 21, 35, 44, 56, 59, 64, 65, 73, 74, 80, 93, 104, 105, 115, 118, 193, 201, 216, 237, 249, 254, 256, 279, 346, 479, 480, 489], "480": 35, "4806": [132, 162], "4807": [133, 134, 162], "4809": [134, 162], "481": 35, "482": 35, "4820": [134, 162], "483": [35, 122, 162], "4830": [133, 162], "4832": 93, "484": 35, "48421903e": 3, "4847132034632034": 114, "4849": [133, 162], "485": [35, 52, 108, 115, 496], "4851": [134, 162], "486": [35, 64, 479], "4860": [132, 162], "4864": 93, "487": 35, "48724621e": 3, "48768812e": 3, "488": 35, "4880": 93, "48879586e": 3, "489": 35, "48931667e": 3, "4896": 65, "49": [35, 65, 72, 73, 88, 93, 104, 118, 147, 162, 479, 480], "490": 35, "4903": 480, "4906": [133, 162], "491": 35, "492": 35, "49254633e": 3, "4926": [133, 162], "4928": 480, "493": 35, "49353108e": 3, "4939": [133, 162], "49397573e": 3, "494": [35, 480], "4948": [133, 162], "495": 35, "4951": [134, 162], "4954": [133, 162], "49554": 479, "496": [35, 107], "496571": 51, "4967": [133, 162], "4968": [134, 162], "497": 35, "4975": [133, 162], "498": 35, "4980392156862745": 111, "499": 35, "4991": [134, 162], "4991939095387371": 114, "4992": 480, "4998": 480, "4999": [134, 162], "49997683e": 3, "4a": [6, 64, 65, 73, 104, 479], "4a9b3c": 11, "4b": [64, 65, 73, 104], "4c": [64, 65, 73], "4d": [1, 3, 4, 8, 9, 12, 17, 19, 21, 27, 29, 31, 32, 33, 34, 36, 38, 41, 44, 50, 51, 52, 55, 56, 57, 59, 61, 73, 86, 87, 89, 91, 93, 94, 96, 97, 101, 103, 106, 108, 111, 116, 119, 127, 128, 129, 132, 137, 144, 147, 148, 153, 162, 165, 168, 169, 170, 173, 184, 186, 188, 191, 206, 221, 249, 251, 253, 254, 255, 259, 267, 271, 277, 301, 308, 311, 312, 339, 341, 343, 344, 345, 349, 350, 351, 352, 354, 356, 363, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 389, 422, 423, 428, 436, 440, 441, 442, 447, 449, 456, 458, 474, 478, 486, 490, 494, 496, 497], "4f": [35, 36, 101], "4mm": [96, 168, 175, 206, 267, 312], "4pm": [178, 495], "4th": [21, 96, 118, 176, 184, 190, 318, 319, 352, 356, 359, 440], "4x4": [86, 190, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 346, 356, 357, 359, 373, 376, 382, 384, 385, 387, 393, 394, 454], "5": [2, 3, 4, 6, 8, 10, 11, 13, 19, 21, 24, 25, 26, 27, 29, 31, 32, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 90, 91, 93, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113, 115, 118, 127, 130, 132, 137, 144, 150, 155, 156, 157, 158, 164, 168, 170, 175, 176, 177, 178, 180, 190, 191, 197, 198, 200, 201, 205, 209, 218, 221, 223, 228, 235, 248, 249, 251, 254, 255, 257, 258, 261, 266, 267, 270, 272, 276, 280, 294, 309, 310, 316, 318, 319, 344, 350, 351, 354, 367, 368, 383, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 440, 441, 443, 445, 446, 448, 450, 451, 452, 467, 468, 469, 472, 478, 479, 480, 494, 496], "50": [32, 33, 35, 39, 48, 52, 60, 61, 65, 68, 70, 73, 93, 95, 101, 104, 118, 121, 175, 177, 191, 197, 206, 216, 222, 240, 242, 278, 306, 307, 314, 328, 330, 331, 332, 333, 336, 337, 338, 346, 367, 368, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 454, 456, 458, 479, 480, 494, 496], "500": [26, 35, 37, 44, 52, 81, 101, 114, 193, 201, 237, 258], "5000": [36, 52, 58, 101], "50001": 246, "5004": [134, 162], "5006": [134, 162], "501": 35, "5013": [134, 162], "50135040": 72, "50178879e": 3, "502": [35, 101], "5021": 198, "502274": 65, "502379": 65, "503": 35, "5036": [134, 162], "50399517e": 3, "504": [35, 65, 73, 479], "50403949e": 3, "5041": [134, 162], "5048": 480, "505": 35, "50539981e": 3, "50555050e": 3, "5056": 480, "506": 35, "50607": 246, "507": 35, "5071": [118, 164, 239], "5078": [134, 162], "507e": 56, "508": 35, "5082": [134, 162, 480], "5085": [134, 162], "5086": [134, 162], "5088": [134, 162], "509": 35, "50952625e": 3, "5097": [134, 162], "51": [6, 10, 29, 35, 51, 56, 64, 65, 73, 93, 104, 118, 169, 201, 250, 311, 479, 480, 496], "510": 35, "5103": 104, "5109": [134, 162], "511": 35, "5112": [134, 162], "5115891053391053": 114, "51173": 35, "511866": 6, "512": [35, 86, 154, 162, 193, 207, 253, 489], "5120": [134, 162], "51200": 480, "51227165e": 3, "512372": [118, 318, 319], "513": [35, 479], "5132": [134, 162], "5134": 480, "514": 35, "514003e": 53, "515": 35, "5151": [134, 162], "515125": 65, "516": 35, "5160": [134, 162], "51633": 480, "51638295e": 3, "516815": 65, "5169": [134, 162], "517": 35, "5172": [134, 162], "517443": 65, "5176": 93, "5177": 480, "5179": [134, 162], "518": 35, "51825860e": 3, "5184": 480, "5188": 480, "519": 35, "5195": [134, 162], "52": [35, 48, 58, 60, 61, 64, 65, 73, 83, 84, 93, 191, 250, 479, 480, 494, 496], "520": 35, "5202": [134, 162], "521": 35, "52171608e": 3, "522": 35, "5220": 479, "5222": [134, 162], "5224": [134, 162], "52294": [26, 118], "523": 35, "5234": [134, 162], "524": [35, 40, 48, 496], "5240": [134, 162], "5248": 93, "525": 35, "5256": [134, 162], "526": 35, "5262": [134, 162], "5268": [134, 162], "527": 35, "52763693e": 3, "5277": [134, 162], "5279": [134, 162], "528": [23, 29, 35, 47, 496], "5281": 0, "529": 35, "53": [23, 32, 35, 64, 65, 72, 73, 93, 95, 104, 118, 205, 249, 250, 260, 479, 480], "530": 35, "5301": [134, 162], "5309": [134, 162], "530991": 6, "530e": 56, "531": 35, "5312": 480, "53123895e": 3, "532": 35, "5320": [134, 162], "53202894e": 3, "53245131e": 3, "5328": 73, "533": 35, "533043": 65, "5339": 480, "534": 35, "5342": [134, 162], "5346": [134, 162], "5347": [134, 162], "535": 35, "5357": [134, 162], "536": 35, "536042": 35, "536638": 65, "537": 35, "5371": [134, 162], "53769741e": 3, "5377": [134, 162], "5379": [134, 162], "538": 35, "5381": [134, 162], "5382": [134, 162], "539": [35, 196], "539273": 65, "53966729e": 3, "5398": [134, 162], "53994174e": 3, "54": [35, 64, 65, 73, 93, 103, 118, 164, 201, 218, 250, 479, 480], "540": [6, 35, 64, 65, 73, 479], "54080": 480, "540842": 59, "541": 35, "541399": 65, "542": 35, "542346": 59, "5425": [134, 162], "543": [35, 111, 115, 496], "54345866e": 3, "5438": [43, 91, 480], "544": [35, 105, 115, 118, 222, 496], "5440": 480, "54400": 93, "54498475e": 3, "545": [21, 29, 35, 496], "54584": 480, "546": [6, 35], "546246": 6, "54628726e": 3, "54677539e": 3, "547": 35, "548": 35, "5481": [160, 162], "548e": 56, "549": [35, 118, 175], "5490204": [118, 311], "5492": [160, 162], "5496": 93, "55": [6, 21, 35, 42, 64, 65, 69, 73, 75, 93, 104, 140, 162, 193, 237, 479, 480, 496], "550": 35, "551": 35, "55125761e": 3, "55148544": 72, "55160": 93, "5519": [160, 162], "552": [35, 91, 118, 222], "553": 35, "5530": [160, 162], "5539": [3, 33, 34, 40, 101, 118, 217, 270], "554": 35, "555": 35, "5550": [160, 162], "55502021e": 3, "556": 35, "55619961e": 3, "5562": 479, "5568": 480, "557": 35, "5576": 480, "558": 35, "559": [35, 93, 99, 118, 175, 496], "56": [24, 35, 39, 50, 62, 65, 72, 73, 74, 93, 118, 171, 251, 479, 480, 496], "560": 35, "560062464": 104, "561": [35, 99, 496], "562": [35, 89, 118, 224, 256], "563": 35, "5632": 93, "564": 35, "564125": 65, "56419482e": 3, "56495486e": 3, "565": [6, 8, 35, 496], "566": 35, "56643230e": 3, "567": [35, 64], "568": [35, 80, 84, 496], "5680": 93, "56840572e": 3, "569": 35, "56a": [35, 73], "57": [6, 32, 35, 64, 65, 72, 73, 93, 104, 118, 122, 125, 147, 162, 201, 250, 479, 480], "570": 35, "571": 35, "57195": 35, "572": [35, 78, 84, 496], "572388": 44, "573": [35, 118, 196, 224, 256], "574": 35, "57414864e": 3, "575": 35, "57536": 480, "575969": 65, "576": [35, 65], "5760": [93, 480], "57657108e": 3, "577": 35, "5773": 480, "57778176": 42, "578": 35, "57883325e": 3, "579": 35, "57929206e": 3, "57a": 35, "58": [32, 35, 65, 73, 93, 147, 162, 479, 480], "580": 35, "58044347e": 3, "581": [25, 29, 35, 496], "5818": 480, "582": [35, 39, 118], "58286764e": 3, "583": 35, "584": 35, "585": 35, "586": 35, "5861": 480, "58655634e": 3, "587": 35, "587189": 35, "588": 35, "589": 35, "58911": 480, "589401": 59, "59": [35, 44, 64, 65, 73, 74, 81, 84, 93, 103, 118, 122, 162, 170, 201, 249, 367, 368, 479, 480, 496], "590": 35, "590403": 65, "590905": 59, "591": [35, 67, 75, 496], "592": [35, 39, 118], "593": 35, "593056": 65, "5934": [118, 186], "594": [35, 64], "59459240e": 3, "595": 35, "595170": 6, "5952": [93, 480], "59526574e": 3, "596": 35, "5968": [51, 62, 496], "597": 35, "598": [11, 29, 35, 496], "59876435e": 3, "599": [35, 118, 196, 246], "5992": 93, "5997": [61, 118, 208, 264], "59974": 35, "5a": [6, 35, 64, 65, 73, 104], "5b": [6, 35, 64, 65, 73, 104], "5bdeprec": 368, "5c": [64, 65, 73, 104], "5c734f16e50cc772ef593cab9bb3137b": 11, "5c8ff37d4712b400183b7011": 54, "5c8ff37d4712b400193b5b54": 54, "5c8ff37e2286e80016c3c2cb": 54, "5c8ff3814712b4001a3b5561": 54, "5c8ff3822286e80018c3e37b": 54, "5c8ff382a743a90018606df8": 54, "5c8ff3832286e80016c3c2d1": 54, "5c8ff3832286e80019c3c10f": 54, "5c8ff3842286e80017c419e0": 54, "5c8ff3854712b4001a3b5568": 54, "5c8ff3872286e80017c419e9": 54, "5c8ff3872286e80017c419ea": 54, "5c8ff3884712b400183b7023": 54, "5c8ff3884712b400193b5b5c": 54, "5c8ff389a743a9001660a016": 54, "5c8ff38c2286e80016c3c2da": 54, "5c8ff38c4712b4001a3b5573": 54, "5c8ff38ca743a9001760809": 54, "5c8ff38ca743a90018606df": 54, "5c8ff38da743a900176080a2": 54, "5c8ff38f2286e80018c3e38d": 54, "5c8ff3912286e80018c3e393": 54, "5c8ff3914712b400173b5329": 54, "5c8ff3914712b4001a3b5579": 54, "5c8ff391a743a900176080a9": 54, "5c8ff3952286e80016c3c2e7": 102, "5c8ff3952286e80017c41a1b": 54, "5c8ff3954712b400193b5b79": 102, "5c8ff395a743a900176080af": 102, "5c8ff3964712b400193b5b7d": 102, "5c8ff3982286e80017c41a29": 102, "5c8ff399a743a9001660a031": 102, "5c8ff39aa743a900176080ba": 102, "5c8ff39aa743a900176080bf": 102, "5c8ff39aa743a90018606e21": 102, "5c8ff39ca743a90019606c50": 102, "5c8ff39d4712b400193b5b89": 102, "5c8ff39fa743a90018606e2f": 102, "5c8ff3a12286e80016c3c2fc": 102, "5c8ff3a12286e80017c41a48": 102, "5c8ff3a2a743a9001660a048": 102, "5c8ff3a34712b400193b5b92": 102, "5c8ff3a34712b4001a3b55a3": 102, "5c8ff3a72286e80017c41a54": 102, "5c8ff3a7a743a90018606e42": 102, "5c8ff3a84712b400183b7048": 102, "5c8ff3e14712b400183b7097": 54, "5c8ff3e32286e80018c3e42c": 54, "5c8ff3e4a743a9001760814f": 54, "5c8ff3e52286e80018c3e439": 54, "5c8ff3e54712b400183b70a5": 54, "5c8ff3e72286e80017c41b3d": 54, "5c8ff3e82286e80018c3e443": 54, "5c8ff3e9a743a90017608158": 54, "5c8ff3ea4712b400183b70b7": 54, "5c8ff3eb2286e80019c3c194": 54, "5c8ff3eb2286e80019c3c198": 102, "5c8ff3ed2286e80017c41b56": 102, "5c8ff3ee2286e80016c3c379": 102, "5c8ff3ee4712b400183b70c3": 102, "5c8ff3efa743a9001660a0d5": 102, "5c8ff3f12286e80016c3c37": 102, "5c8ff3f14712b4001a3b560": 102, "5c8ff3f1a743a90017608164": 102, "5c8ff3f34712b4001a3b5612": 102, "5c8ff3f64712b400183b70d8": 102, "5c8ff3f6a743a90017608171": 102, "5c8ff3f72286e80019c3c1af": 102, "5c8ff3f7a743a90019606cdf": 102, "5c8ff3f92286e80018c3e463": 102, "5cb46e0339926900160f6930": 102, "5cb46e0cf2be3c001801f757": 102, "5cb46e1c3992690018133a9": 102, "5cb46e35f2be3c00190305ff": 102, "5cb46e3f353c5800199ac787": 102, "5cb46e40f2be3c001801f77f": 102, "5cb46e43f2be3c0017056b8a": 54, "5cb46e4d353c58001b9cb325": 102, "5cb46e5af2be3c001801f799": 54, "5cb46e5c353c5800199ac79f": 54, "5cb46e63f2be3c0017056ba9": 102, "5cb46e6b353c58001b9cb34f": 54, "5cb46e6ba3bc970019f07152": 102, "5cb46e6f353c58001a9b3311": 102, "5cb46e793992690017108eb9": 102, "5cb46e7a353c58001a9b3324": 102, "5cb46e85a3bc97001aeff750": 102, "5cb46e8b353c58001c9abe98": 54, "5cb46e913992690018133b1c": 54, "5cb46e92a3bc970019f0717f": 54, "5cb46e9a353c58001c9abeac": 54, "5cb46e9b39926900190fad5c": 54, "5cb46eaa39926900160f69af": 54, "5cb4700af2be3c0017056f69": 102, "5cb470153992690018133d3b": 102, "5cb47016a3bc970017efe44f": 54, "5cb47016a3bc970018f1fc88": 102, "5cb4701c3992690018133d49": 102, "5cb4701e3992690018133d4f": 54, "5cb4701ff2be3c0017056fad": 102, "5cb47020f2be3c0019030968": 102, "5cb47023353c58001c9ac02b": 54, "5cb4702639926900190faf1d": 102, "5cb4702a353c58001b9cb5a": 54, "5cb4702b39926900171090e4": 102, "5cb4702f39926900171090ee": 54, "5cb4703039926900160f6b3e": 102, "5cb4703439926900160f6b43": 102, "5cb47038353c5800199ac9a2": 102, "5cb4703bf2be3c001801fa49": 54, "5cb470413992690018133d8c": 54, "5cb47045a3bc970019f073a0": 54, "5cb4704af2be3c001705703b": 102, "5cb47052f2be3c0017057069": 54, "5cb47056353c58001c9ac064": 54, "5cb47057f2be3c0019030a1f": 102, "5d": [130, 162, 368], "5d27037f45253a001c3d4563": 18, "5d275ede1c5b4a001aa00c26": 18, "5d27c2c41c5b4a001d9f4e7": 82, "5d27ca3d1c5b4a001b9eeddb": 81, "5d27cb281c5b4a001aa07e29": 81, "5d27cbbd45253a00193c9b70": 83, "5d27ccde1c5b4a001d9f5602": 82, "5d27d29145253a001c3e284f": 18, "5d27d3c3114a42001804500a": 82, "5d27d9c6114a420019045370": 82, "5d27da3a114a4200190453ab": 79, "5d27dbce45253a001a3c32fd": 83, "5d27ddc91c5b4a001b9ef9d0": 18, "5d27de38a26b340016099771": 82, "5d27e0221c5b4a001b9efb25": 83, "5d27e5fa1c5b4a001aa09681": 82, "5d27e787114a420016059c22": 81, "5d27eba2114a420016059fbf": 81, "5d27ebc3114a42001704a18d": 79, "5d27ed481c5b4a001aa09e83": 83, "5d27efab1c5b4a001aa0a0c2": 81, "5d27f18945253a00193cb2dd": 82, "5d27f1f0114a42001804603": 79, "5d27f296114a42001704a5d9": 81, "5d27fb651c5b4a001d9f7938": 82, "5d28000845253a001c3e507a": 83, "5d280057a26b340019089965": 82, "5d280608a26b3400180868d1": 81, "5d2808401c5b4a001d9f83b2": 82, "5d28092e45253a001c3e597f": 79, "5d28095545253a001c3e59a2": 81, "5d2811d0114a42001704b988": 81, "5d2811fba26b340017085492": 82, "5d28144c114a42001804739": 81, "5d2814d145253a001c3e6404": 82, "5d281a2a45253a001c3e684c": 83, "5d281a531c5b4a001c9ea662": 79, "5d281e3d114a42001605cb02": 81, "5d281f851c5b4a001b9f2315": 81, "5d28244745253a001b3c4afa": 82, "5d28295aa26b340018087ef4": 79, "5d282aa5114a42001605db5a": 83, "5d282b2345253a001c3e7d09": 82, "5d282d9045253a001c3e80a1": 81, "5d28309645253a001a3c6a8d": 82, "5d28318445253a00193ce6d7": 82, "5d28335545253a00193ce806": 83, "5d283473a26b34001609ed88": 79, "5d28375345253a001c3e90a2": 81, "5d283ee0a26b34001609f58": 81, "5d283f021c5b4a001aa100cb": 81, "5d284374114a42001605f4d2": 79, "5d28453a1c5b4a001c9eca": 83, "5d2848581c5b4a001aa10aac": 82, "5d284a3445253a001c3ea2d1": 82, "5d284daf1c5b4a001d9fc4e5": 83, "5d285263114a4200160602c6": 81, "5d2852caa26b340018089ae5": 81, "5d28545ca26b340018089ba7": 82, "5d28564b1c5b4a001d9fc9d6": 82, "5d28590d114a4200160607da": 79, "5d285a53114a4200160608b": 79, "5d285b6c1c5b4a001c9edada": 82, "5d285cd945253a001a3c8509": 82, "5d285d61114a42001904a343": 81, "5d28660b1c5b4a001aa122c7": 81, "5d2866c0a26b340017088827": 83, "5d2868f9114a42001704f6a5": 81, "5d286e49114a42001904ab90": 82, "5d286f35a26b34001908e5c1": 79, "5d28709e114a420016061aa1": 81, "5d28765645253a001b3c8106": 82, "5d28781945253a00193d1237": 83, "5d287b3a45253a00193d145": 81, "5d287eeb45253a001c3ed1ba": 82, "5d28847d114a42001904b87b": 81, "5d2888ce1c5b4a001b9f789c": 79, "5d2889a7a26b3400160a368f": 83, "5d288af11c5b4a001d9ff0cb": 82, "5d288fb11c5b4a001d9ff738": 83, "5d28966345253a00193d2e27": 81, "5d2896fb45253a001a3cabe0": 82, "5d289736114a4200170518d7": 81, "5d289b2945253a00193d32ac": 79, "5d289be945253a001c3ef5e2": 82, "5d28a00245253a001c3efac9": 79, "5d28a1c91c5b4a001da00bd9": 82, "5d28a431a26b340019090fa2": 81, "5d28a4c0114a420016064fa2": 83, "5d28af541c5b4a001da01caa": 82, "5d28b135a26b3400160a648": 81, "5d28b6171c5b4a001c9f2ebd": 83, "5d28b761a26b3400160a6ba8": 81, "5d28b9af45253a001a3ccb85": 82, "5d28bb90a26b3400190925d2": 82, "5d28bc0145253a00193d53ab": 79, "5d28c0a81c5b4a001b9fb89a": 81, "5d28cfd91c5b4a001c9f404d": 79, "5d28d2bb114a420017054715": 83, "5d28db3ba26b34001808f444": 79, "5d28e056a26b340019093c95": 83, "5d28e50945253a00193d6e09": 83, "5d28f0bc1c5b4a001b9fd7f3": 79, "5d28ff54114a42001705610c": 83, "5d28ffc245253a00193d7dac": 79, "5d2909cd1c5b4a001b9fe6c5": 79, "5d2919e2114a42001606b46c": 79, "5d2928bc45253a001b3cf010": 79, "5d293a50a26b34001909682a": 79, "5d29492fa26b34001709070f": 79, "5d295328114a42001606dd9a": 79, "5d2c37031c5b4a001ca0da2b": 79, "5d2c442e114a420017071134": 79, "5d2c5c431c5b4a001da257a5": 79, "5d2c6c2645253a001c42460f": 79, "5d2ec286251f0e001604a189": 79, "5d2ed2875d2cdc001702b4c5": 79, "5d2ef8925d2cdc001702e0a5": 79, "5d2f0851251f0e0018044fe4": 79, "5d2f26e4a667db0017f72ae9": 79, "5d2f358c251f0e001704a76a": 79, "5d2f41d2835aff001a52da0c": 79, "5d2f5acc835aff0018532004": 79, "5d2f692d835aff00175372e9": 79, "5d2f7456835aff0017537992": 79, "5d2f8881a667db0018f6b634": 79, "5d2f9552251f0e001605bb64": 79, "5d2faf785d2cdc0017039bb1": 79, "5d2fbffd835aff0018535ef5": 79, "5d2fc225a667db001af6222a": 79, "5d2fdd77835aff00195494d4": 79, "5d2fe5d5a667db0017f80f32": 79, "5d2ff3ea835aff0018538140": 79, "5d301049a667db0019f67ca0": 79, "5d3021b65d2cdc00190344d6": 79, "5d302afe5d2cdc0018030034": 79, "5d303ad4835aff001853bca4": 79, "5d304f845d2cdc001a032801": 79, "5d3058cd835aff001853d4c7": 79, "5d306f15a667db0018f78b4d": 79, "5d307f8b251f0e00190519ca": 79, "5d309cb5251f0e001606fe4b": 79, "5d30a667251f0e00190534dc": 79, "5d30bb07251f0e001705df42": 79, "5d30df37251f0e001705fd72": 79, "5d30e232a667db0018f7f2a9": 79, "5d30f7ec251f0e001805e3cd": 79, "5d3116dca667db0018f81c29": 79, "5d312688251f0e0016079f29": 79, "5d3134fe5d2cdc001705393d": 79, "5d3143f9835aff00195630c": 79, "5d315ac0835aff001754e139": 79, "5d3160bc835aff00195649cf": 79, "5d317bb2251f0e001608002": 79, "5d318a6c251f0e001905b6": 79, "5d31962da667db0017fa303d": 79, "5d31abe45d2cdc0019046202": 79, "5d31cdeea667db001af75ab9": 79, "5d31dc83835aff001956e6c5": 79, "5d31fefea667db0018f8ea9f": 79, "5d32072b5d2cdc0018043969": 79, "5d3219b4a667db0018f8ff1f": 79, "5d3234f3835aff00175590f0": 79, "5d323d06251f0e001706f0b": 79, "5d324e77251f0e001806e5e7": 79, "5d326b70835aff00195762f8": 79, "5d32731a5d2cdc001a0472bb": 79, "5d3286b7251f0e001906427f": 79, "5d3298815d2cdc001804700c": 79, "5d32ab6ea667db0017fb59e8": 79, "5d32bb275d2cdc001a049841": 79, "5d32d901a667db0018f9684f": 79, "5d32e9d3835aff001957cd79": 79, "5d32f34f835aff001755ee97": 79, "5d3306db5d2cdc001706c36f": 79, "5d332373251f0e001609acbd": 79, "5d332b7e835aff001957feec": 79, "5d341711a667db0017fc816f": 79, "5d34294d835aff001958add9": 79, "5d7b8948fcbf44001c44e695": 18, "5fd26f33e54da6efc0bc7eca321ad622": 20, "5hju4": [168, 206, 267], "5mm": [68, 97, 186, 220], "5pm": [178, 495], "5th": [21, 209], "5x1": 220, "5x4": 220, "6": [3, 4, 6, 8, 11, 12, 13, 21, 23, 25, 26, 29, 32, 33, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 78, 82, 91, 93, 96, 99, 102, 103, 104, 105, 107, 110, 111, 112, 114, 118, 122, 125, 127, 140, 142, 144, 147, 148, 149, 155, 156, 157, 164, 168, 175, 176, 177, 179, 190, 201, 208, 226, 232, 233, 246, 264, 267, 270, 311, 367, 368, 372, 375, 377, 379, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 442, 448, 456, 458, 479, 480, 495, 496], "60": [6, 16, 17, 33, 35, 43, 44, 47, 64, 65, 66, 73, 102, 104, 105, 118, 165, 201, 223, 233, 280, 479, 480, 494], "600": [35, 52, 122, 162, 193, 200, 237, 258, 449], "60000": 52, "601": 35, "601855088049469": 37, "602": [35, 110, 115, 496], "602484": 35, "60262535e": 3, "603": 35, "6034": 33, "60399989e": 3, "604": 35, "60400369e": 3, "60424192": 72, "605": 35, "6058": 480, "606": 35, "607": 35, "608": 35, "6084": 73, "609": 35, "60954796e": 3, "61": [35, 38, 64, 65, 69, 72, 73, 104, 105, 118, 216, 479, 480], "610": 35, "611": 35, "6111": 36, "6111111111111112": [3, 31], "612": [35, 65, 73, 479], "61200978e": 3, "613": 35, "613018e": 53, "613071": 65, "614": 35, "61420766e": 3, "615": 35, "616": [35, 98, 99, 496], "61630109e": 3, "616334": 35, "617": 35, "618": 35, "619": 35, "62": [35, 64, 65, 73, 74, 93, 103, 104, 111, 112, 118, 144, 162, 193, 237, 255, 479, 480, 489], "620": 35, "621": [35, 64], "622": 35, "62245339e": 3, "623": 35, "623032": 65, "624": 35, "625": 35, "62546": [64, 479], "626": 35, "627": 35, "6274509803921569": 111, "628": 35, "6287": 104, "629": [35, 81, 84, 496], "62917693456014": 46, "63": [6, 35, 64, 65, 66, 73, 93, 95, 105, 111, 118, 228, 249, 257, 479, 480], "630": 35, "63033345e": 3, "63086030e": 3, "631": 35, "63144515e": 3, "631803": 6, "632": [35, 51], "633": 35, "6330": 480, "63369": 480, "634": 35, "63464693e": 3, "635": 35, "635179": 65, "63539662e": 3, "636": 35, "637": 35, "638": 35, "63808": 480, "63812": 480, "63834424e": 3, "6389": 36, "639": 35, "639460": 65, "64": [20, 22, 35, 36, 38, 41, 43, 44, 50, 64, 65, 68, 72, 73, 81, 86, 96, 104, 111, 154, 159, 162, 189, 193, 201, 207, 233, 237, 246, 249, 250, 253, 479, 480, 489], "640": 35, "6408": 479, "641": 35, "64128": 480, "642": [35, 58, 289, 292, 293, 300, 450], "64225840e": 3, "64242767e": 3, "643": 35, "644": 35, "6447": [118, 186], "645": [35, 70, 75, 496], "645e": 56, "645m": 226, "646": 35, "64627771e": 3, "64687237e": 3, "646e": 56, "647": 35, "647343": 35, "648": [35, 64, 65, 479], "648e": 56, "649": 35, "64908": 65, "64x64x64": 233, "65": [34, 35, 44, 64, 65, 73, 93, 135, 162, 479, 480], "650": 35, "65018316e": 3, "6506": 118, "65060789e": 3, "6507": 64, "65085": 35, "651": 35, "651576": 65, "652": [35, 90, 99, 496], "652072": 65, "65214805e": 3, "65270685e": 3, "6528": 93, "653": [35, 38, 48, 496], "65325070e": 3, "654": 35, "65405824e": 3, "65426": 107, "655": 35, "6552": 65, "656": 35, "65625": 111, "657": 35, "65758771e": 3, "658": 35, "65855488": 72, "65859262e": 3, "659": 35, "66": [6, 17, 18, 35, 61, 64, 65, 73, 92, 95, 104, 113, 207, 479, 480], "660": 35, "660587": 35, "661": 35, "662": 35, "663": 35, "664": 35, "664e": 56, "665": [35, 51, 61, 75, 118, 121, 225, 229, 265, 281, 283, 496], "66514928e": 3, "66532056e": 3, "66533": 35, "665675": 65, "666": [35, 71], "667": 35, "668": 35, "66895616e": 3, "669": [35, 52, 118, 455, 461, 479], "67": [25, 35, 65, 72, 73, 125, 162, 249, 479, 480], "670": [35, 118, 121, 225, 281, 283], "670400512": 104, "67099402e": 3, "671": 35, "67106265e": 3, "6712058072321548": 37, "672": 35, "67257092e": 3, "67293750e": 3, "673": 35, "674": [35, 99, 496], "675": [6, 35, 64, 93], "676": 35, "676518": 6, "676956": 35, "67697219e": 3, "677": 35, "677519": 35, "678": [35, 61, 106, 115, 118, 229, 265, 496], "6784": 93, "679": [35, 480], "67991946e": 3, "67b924beca01574bbea08fde49fbbbcd": 111, "68": [35, 43, 46, 61, 64, 65, 73, 93, 191, 479, 480, 494], "680": 35, "68079846e": 3, "681": [35, 52, 118, 455, 461], "68151": 480, "682": [35, 79, 84, 496], "6823529411764706": 111, "68292": 480, "683": 35, "68303013e": 3, "68352": 93, "684": [35, 73, 91, 99, 496], "68455835e": 3, "6848": 480, "685": 35, "68525454e": 3, "6852766": 72, "68544": 480, "68584": 93, "686": 35, "687": 35, "68750842e": 3, "688": 35, "689": 35, "68e": 56, "69": [6, 32, 35, 64, 65, 73, 74, 81, 104, 479, 480], "690": 35, "69094622e": 3, "691": 35, "69166891e": 3, "692": 35, "69248": 480, "693": [20, 29, 35, 496], "69390006e": 3, "694": 35, "695": 35, "696": 35, "697": 35, "698": [3, 35], "6987776": 6, "699": 35, "69998005e": 3, "6a": [6, 64, 65, 73, 479], "6b": [6, 64, 65, 73, 479], "6c": [6, 65, 73], "6mm": [311, 456], "6th": 21, "7": [3, 6, 11, 16, 25, 26, 27, 29, 32, 35, 40, 41, 45, 46, 47, 48, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 71, 72, 73, 74, 84, 88, 91, 93, 96, 99, 104, 107, 108, 109, 111, 112, 118, 121, 122, 125, 127, 135, 137, 142, 144, 147, 148, 150, 155, 157, 176, 186, 189, 190, 193, 196, 201, 205, 207, 216, 230, 233, 236, 237, 246, 250, 252, 253, 258, 262, 316, 318, 319, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 429, 435, 438, 440, 441, 443, 445, 446, 450, 452, 455, 472, 479, 480, 494, 496, 498], "70": [22, 32, 34, 35, 65, 66, 72, 73, 118, 175, 193, 232, 259, 479, 480, 489], "700": [35, 46, 150, 162, 193, 237, 258], "700000": 68, "700012": 68, "70012": 480, "701": 35, "70158744e": 3, "70189670e": 3, "702": 35, "703": 35, "704": [35, 480], "705": 35, "7058823529411765": 111, "706": 35, "707": 35, "70783199e": 3, "708": 35, "70884": [118, 218], "709": 35, "70976": 480, "71": [34, 35, 64, 65, 73, 74, 104, 193, 237, 479, 480], "710": 35, "71053403e": 3, "711": 35, "712": 35, "712135": [118, 198], "71214486e": 3, "71327744": 72, "71450556e": 3, "714833": 65, "71484375": 111, "71506165e": 3, "71561": [118, 205, 252], "71612738e": 3, "716392": 65, "7183": 111, "719380": 65, "72": [6, 35, 59, 61, 64, 65, 72, 73, 93, 95, 105, 118, 156, 162, 176, 229, 265, 479, 480], "720": [65, 73], "72053538e": 3, "7209": [118, 197], "7214": [118, 197], "72171886e": 3, "7218": 480, "7221": 46, "7229": 42, "72429464e": 3, "72568981e": 3, "72589753e": 3, "728": [17, 29, 496], "729": [64, 479], "73": [35, 64, 65, 73, 93, 105, 479, 480], "730": [21, 22, 51, 53, 89, 90], "73125009e": 3, "734506": 65, "735930735930736": 36, "735bf0f211246c83396b5f21f706c224": 10, "73612193e": 3, "73679816e": 3, "736986": 65, "73786610e": 3, "738699": 6, "74": [35, 65, 73, 93, 103, 104, 479, 480], "740345": 65, "7407": 33, "744": 3, "74432": 480, "74667934e": 3, "74912215e": 3, "7493501": [51, 118, 169, 312], "749503182": 104, "75": [24, 26, 34, 35, 43, 64, 65, 68, 72, 73, 74, 93, 104, 106, 109, 114, 118, 193, 200, 237, 249, 390, 479, 480, 489], "75008": 480, "7506160736084": 46, "752": [103, 118], "752451": 65, "75293601e": 3, "75451409e": 3, "755": [88, 99, 496], "7552": 480, "75531117e": 3, "756": [103, 118, 479], "756994": 65, "757": [22, 29, 496], "7578125": 111, "758": [3, 17, 31], "758346": 65, "75855356998246e": 77, "758570": 65, "75889275e": 3, "7589": 35, "76": [34, 35, 52, 64, 65, 68, 73, 74, 93, 252, 260, 479, 480], "76046314e": 3, "7616": 93, "762": 58, "763": [64, 75, 103, 118, 496], "763636": 6, "764": [34, 48, 496], "76486847e": 3, "76553964e": 3, "766": [103, 118], "76641662e": 3, "76694150e": 3, "767": 3, "768": 480, "7680": 93, "76808192": 72, "76995361e": 3, "77": [35, 65, 68, 72, 73, 74, 479, 480], "77021580e": 3, "770578": 65, "772909": 65, "772e": 56, "77308230e": 3, "77393683e": 3, "7744": 93, "774939": 45, "775": [89, 99, 496], "77511959e": 3, "777": 105, "778": [26, 29, 496], "7783": 105, "7784": 111, "7785": 111, "7786": 111, "7787": 111, "778cb0": 11, "779": [6, 8, 496], "77914512e": 3, "779998": 35, "78": [35, 56, 64, 65, 68, 73, 74, 95, 118, 175, 479, 480], "78033778e": 3, "7803921568627451": 111, "7808": 93, "781": [24, 29, 496], "781180": 480, "781181": 480, "781182": 480, "781183": 480, "781286": 11, "782": [4, 8, 496], "78232": 93, "78272": 93, "784": [12, 29, 135, 162, 496], "786": [69, 75, 78, 118, 321, 496], "7868": 3, "787": [32, 48, 496], "78900161e": 3, "78908383e": 3, "78946768e": 3, "789520": 65, "7897088": 10, "78976": 480, "79": [35, 64, 65, 68, 72, 73, 74, 93, 104, 107, 479, 480], "791": [86, 99, 496], "79167750e": 3, "79199889e": 3, "792": 65, "793": [118, 135, 162], "7943722943722943": 36, "7955": 111, "796": [78, 118, 321], "796424": 65, "79686830e": 3, "798": [29, 496], "79848": 480, "799": 12, "7a": [6, 35, 64, 65, 73, 479], "7a8732": 11, "7b": [6, 64, 65, 73], "7c": [64, 65, 73], "7e62e7e7fcc4d6e1428b6b2cb48f7a7c": 11, "7networks_lh_cont_cing_1": 480, "7networks_lh_cont_cing_2": 480, "7networks_lh_cont_ofc_1": 480, "7networks_lh_cont_par_1": 480, "7networks_lh_cont_par_2": 480, "7networks_lh_cont_par_3": 480, "7networks_lh_cont_par_4": 480, "7networks_lh_cont_par_5": 480, "7networks_lh_cont_par_6": 480, "7networks_lh_cont_pcun_1": 480, "7networks_lh_cont_pcun_2": 480, "7networks_lh_cont_pfcl_1": 480, "7networks_lh_cont_pfcl_2": 480, "7networks_lh_cont_pfcl_3": 480, "7networks_lh_cont_pfcl_4": 480, "7networks_lh_cont_pfcl_5": 480, "7networks_lh_cont_pfcl_6": 480, "7networks_lh_cont_pfcl_7": 480, "7networks_lh_cont_pfcl_8": 480, "7networks_lh_cont_pfcmp_1": 480, "7networks_lh_cont_pfcv_1": 480, "7networks_lh_cont_temp_1": 480, "7networks_lh_default_par_1": 480, "7networks_lh_default_par_2": 480, "7networks_lh_default_par_3": 480, "7networks_lh_default_par_4": 480, "7networks_lh_default_par_5": 480, "7networks_lh_default_par_6": 480, "7networks_lh_default_par_7": 480, "7networks_lh_default_pcunpcc_1": 480, "7networks_lh_default_pcunpcc_10": 480, "7networks_lh_default_pcunpcc_11": 480, "7networks_lh_default_pcunpcc_2": 480, "7networks_lh_default_pcunpcc_3": 480, "7networks_lh_default_pcunpcc_4": 480, "7networks_lh_default_pcunpcc_5": 480, "7networks_lh_default_pcunpcc_6": 480, "7networks_lh_default_pcunpcc_7": 480, "7networks_lh_default_pcunpcc_8": 480, "7networks_lh_default_pcunpcc_9": 480, "7networks_lh_default_pfc_1": 480, "7networks_lh_default_pfc_10": 480, "7networks_lh_default_pfc_11": 480, "7networks_lh_default_pfc_12": 480, "7networks_lh_default_pfc_13": 480, "7networks_lh_default_pfc_14": 480, "7networks_lh_default_pfc_15": 480, "7networks_lh_default_pfc_16": 480, "7networks_lh_default_pfc_17": 480, "7networks_lh_default_pfc_18": 480, "7networks_lh_default_pfc_19": 480, "7networks_lh_default_pfc_2": 480, "7networks_lh_default_pfc_20": 480, "7networks_lh_default_pfc_21": 480, "7networks_lh_default_pfc_22": 480, "7networks_lh_default_pfc_23": 480, "7networks_lh_default_pfc_24": 480, "7networks_lh_default_pfc_3": 480, "7networks_lh_default_pfc_4": 480, "7networks_lh_default_pfc_5": 480, "7networks_lh_default_pfc_6": 480, "7networks_lh_default_pfc_7": 480, "7networks_lh_default_pfc_8": 480, "7networks_lh_default_pfc_9": 480, "7networks_lh_default_temp_1": 480, "7networks_lh_default_temp_10": 480, "7networks_lh_default_temp_2": 480, "7networks_lh_default_temp_3": 480, "7networks_lh_default_temp_4": 480, "7networks_lh_default_temp_5": 480, "7networks_lh_default_temp_6": 480, "7networks_lh_default_temp_7": 480, "7networks_lh_default_temp_8": 480, "7networks_lh_default_temp_9": 480, "7networks_lh_dorsattn_fef_1": 480, "7networks_lh_dorsattn_fef_2": 480, "7networks_lh_dorsattn_fef_3": 480, "7networks_lh_dorsattn_fef_4": 480, "7networks_lh_dorsattn_post_1": 480, "7networks_lh_dorsattn_post_10": 480, "7networks_lh_dorsattn_post_11": 480, "7networks_lh_dorsattn_post_12": 480, "7networks_lh_dorsattn_post_13": 480, "7networks_lh_dorsattn_post_14": 480, "7networks_lh_dorsattn_post_15": 480, "7networks_lh_dorsattn_post_16": 480, "7networks_lh_dorsattn_post_17": 480, "7networks_lh_dorsattn_post_2": 480, "7networks_lh_dorsattn_post_3": 480, "7networks_lh_dorsattn_post_4": 480, "7networks_lh_dorsattn_post_5": 480, "7networks_lh_dorsattn_post_6": 480, "7networks_lh_dorsattn_post_7": 480, "7networks_lh_dorsattn_post_8": 480, "7networks_lh_dorsattn_post_9": 480, "7networks_lh_dorsattn_prcv_1": 480, "7networks_lh_dorsattn_prcv_2": 480, "7networks_lh_limbic_ofc_1": 480, "7networks_lh_limbic_ofc_2": 480, "7networks_lh_limbic_ofc_3": 480, "7networks_lh_limbic_ofc_4": 480, "7networks_lh_limbic_ofc_5": 480, "7networks_lh_limbic_temppole_1": 480, "7networks_lh_limbic_temppole_2": 480, "7networks_lh_limbic_temppole_3": 480, "7networks_lh_limbic_temppole_4": 480, "7networks_lh_limbic_temppole_5": 480, "7networks_lh_limbic_temppole_6": 480, "7networks_lh_limbic_temppole_7": 480, "7networks_lh_limbic_temppole_8": 480, "7networks_lh_salventattn_froperins_1": 480, "7networks_lh_salventattn_froperins_2": 480, "7networks_lh_salventattn_froperins_3": 480, "7networks_lh_salventattn_froperins_4": 480, "7networks_lh_salventattn_froperins_5": 480, "7networks_lh_salventattn_froperins_6": 480, "7networks_lh_salventattn_froperins_7": 480, "7networks_lh_salventattn_froperins_8": 480, "7networks_lh_salventattn_froperins_9": 480, "7networks_lh_salventattn_med_1": 480, "7networks_lh_salventattn_med_2": 480, "7networks_lh_salventattn_med_3": 480, "7networks_lh_salventattn_med_4": 480, "7networks_lh_salventattn_med_5": 480, "7networks_lh_salventattn_med_6": 480, "7networks_lh_salventattn_med_7": 480, "7networks_lh_salventattn_paroper_1": 480, "7networks_lh_salventattn_paroper_2": 480, "7networks_lh_salventattn_paroper_3": 480, "7networks_lh_salventattn_paroper_4": 480, "7networks_lh_salventattn_pfcl_1": 480, "7networks_lh_salventattn_tempocc_1": 480, "7networks_lh_sommot_1": 480, "7networks_lh_sommot_10": 480, "7networks_lh_sommot_11": 480, "7networks_lh_sommot_12": 480, "7networks_lh_sommot_13": 480, "7networks_lh_sommot_14": 480, "7networks_lh_sommot_15": 480, "7networks_lh_sommot_16": 480, "7networks_lh_sommot_17": 480, "7networks_lh_sommot_18": 480, "7networks_lh_sommot_19": 480, "7networks_lh_sommot_2": 480, "7networks_lh_sommot_20": 480, "7networks_lh_sommot_21": 480, "7networks_lh_sommot_22": 480, "7networks_lh_sommot_23": 480, "7networks_lh_sommot_24": 480, "7networks_lh_sommot_25": 480, "7networks_lh_sommot_26": 480, "7networks_lh_sommot_27": 480, "7networks_lh_sommot_28": 480, "7networks_lh_sommot_29": 480, "7networks_lh_sommot_3": 480, "7networks_lh_sommot_30": 480, "7networks_lh_sommot_31": 480, "7networks_lh_sommot_32": 480, "7networks_lh_sommot_33": 480, "7networks_lh_sommot_34": 480, "7networks_lh_sommot_35": 480, "7networks_lh_sommot_36": 480, "7networks_lh_sommot_37": 480, "7networks_lh_sommot_4": 480, "7networks_lh_sommot_5": 480, "7networks_lh_sommot_6": 480, "7networks_lh_sommot_7": 480, "7networks_lh_sommot_8": 480, "7networks_lh_sommot_9": 480, "7networks_lh_vis_1": 480, "7networks_lh_vis_10": 480, "7networks_lh_vis_11": 480, "7networks_lh_vis_12": 480, "7networks_lh_vis_13": 480, "7networks_lh_vis_14": 480, "7networks_lh_vis_15": 480, "7networks_lh_vis_16": 480, "7networks_lh_vis_17": 480, "7networks_lh_vis_18": 480, "7networks_lh_vis_19": 480, "7networks_lh_vis_2": 480, "7networks_lh_vis_20": 480, "7networks_lh_vis_21": 480, "7networks_lh_vis_22": 480, "7networks_lh_vis_23": 480, "7networks_lh_vis_24": 480, "7networks_lh_vis_25": 480, "7networks_lh_vis_26": 480, "7networks_lh_vis_27": 480, "7networks_lh_vis_28": 480, "7networks_lh_vis_29": 480, "7networks_lh_vis_3": 480, "7networks_lh_vis_30": 480, "7networks_lh_vis_31": 480, "7networks_lh_vis_4": 480, "7networks_lh_vis_5": 480, "7networks_lh_vis_6": 480, "7networks_lh_vis_7": 480, "7networks_lh_vis_8": 480, "7networks_lh_vis_9": 480, "7networks_rh_cont_cing_1": 480, "7networks_rh_cont_cing_2": 480, "7networks_rh_cont_par_1": 480, "7networks_rh_cont_par_2": 480, "7networks_rh_cont_par_3": 480, "7networks_rh_cont_par_4": 480, "7networks_rh_cont_par_5": 480, "7networks_rh_cont_par_6": 480, "7networks_rh_cont_pcun_1": 480, "7networks_rh_cont_pcun_2": 480, "7networks_rh_cont_pfcl_1": 480, "7networks_rh_cont_pfcl_10": 480, "7networks_rh_cont_pfcl_11": 480, "7networks_rh_cont_pfcl_12": 480, "7networks_rh_cont_pfcl_13": 480, "7networks_rh_cont_pfcl_14": 480, "7networks_rh_cont_pfcl_15": 480, "7networks_rh_cont_pfcl_2": 480, "7networks_rh_cont_pfcl_3": 480, "7networks_rh_cont_pfcl_4": 480, "7networks_rh_cont_pfcl_5": 480, "7networks_rh_cont_pfcl_6": 480, "7networks_rh_cont_pfcl_7": 480, "7networks_rh_cont_pfcl_8": 480, "7networks_rh_cont_pfcl_9": 480, "7networks_rh_cont_pfcmp_1": 480, "7networks_rh_cont_pfcmp_2": 480, "7networks_rh_cont_pfcv_1": 480, "7networks_rh_cont_temp_1": 480, "7networks_rh_cont_temp_2": 480, "7networks_rh_default_par_1": 480, "7networks_rh_default_par_2": 480, "7networks_rh_default_par_3": 480, "7networks_rh_default_par_4": 480, "7networks_rh_default_par_5": 480, "7networks_rh_default_pcunpcc_1": 480, "7networks_rh_default_pcunpcc_2": 480, "7networks_rh_default_pcunpcc_3": 480, "7networks_rh_default_pcunpcc_4": 480, "7networks_rh_default_pcunpcc_5": 480, "7networks_rh_default_pcunpcc_6": 480, "7networks_rh_default_pcunpcc_7": 480, "7networks_rh_default_pcunpcc_8": 480, "7networks_rh_default_pcunpcc_9": 480, "7networks_rh_default_pfcdpfcm_1": 480, "7networks_rh_default_pfcdpfcm_10": 480, "7networks_rh_default_pfcdpfcm_11": 480, "7networks_rh_default_pfcdpfcm_12": 480, "7networks_rh_default_pfcdpfcm_13": 480, "7networks_rh_default_pfcdpfcm_2": 480, "7networks_rh_default_pfcdpfcm_3": 480, "7networks_rh_default_pfcdpfcm_4": 480, "7networks_rh_default_pfcdpfcm_5": 480, "7networks_rh_default_pfcdpfcm_6": 480, "7networks_rh_default_pfcdpfcm_7": 480, "7networks_rh_default_pfcdpfcm_8": 480, "7networks_rh_default_pfcdpfcm_9": 480, "7networks_rh_default_pfcv_1": 480, "7networks_rh_default_pfcv_2": 480, "7networks_rh_default_pfcv_3": 480, "7networks_rh_default_pfcv_4": 480, "7networks_rh_default_temp_1": 480, "7networks_rh_default_temp_2": 480, "7networks_rh_default_temp_3": 480, "7networks_rh_default_temp_4": 480, "7networks_rh_default_temp_5": 480, "7networks_rh_default_temp_6": 480, "7networks_rh_default_temp_7": 480, "7networks_rh_default_temp_8": 480, "7networks_rh_dorsattn_fef_1": 480, "7networks_rh_dorsattn_fef_2": 480, "7networks_rh_dorsattn_fef_3": 480, "7networks_rh_dorsattn_post_1": 480, "7networks_rh_dorsattn_post_10": 480, "7networks_rh_dorsattn_post_11": 480, "7networks_rh_dorsattn_post_12": 480, "7networks_rh_dorsattn_post_13": 480, "7networks_rh_dorsattn_post_14": 480, "7networks_rh_dorsattn_post_15": 480, "7networks_rh_dorsattn_post_16": 480, "7networks_rh_dorsattn_post_17": 480, "7networks_rh_dorsattn_post_18": 480, "7networks_rh_dorsattn_post_19": 480, "7networks_rh_dorsattn_post_2": 480, "7networks_rh_dorsattn_post_3": 480, "7networks_rh_dorsattn_post_4": 480, "7networks_rh_dorsattn_post_5": 480, "7networks_rh_dorsattn_post_6": 480, "7networks_rh_dorsattn_post_7": 480, "7networks_rh_dorsattn_post_8": 480, "7networks_rh_dorsattn_post_9": 480, "7networks_rh_dorsattn_prcv_1": 480, "7networks_rh_limbic_ofc_1": 480, "7networks_rh_limbic_ofc_2": 480, "7networks_rh_limbic_ofc_3": 480, "7networks_rh_limbic_ofc_4": 480, "7networks_rh_limbic_ofc_5": 480, "7networks_rh_limbic_ofc_6": 480, "7networks_rh_limbic_temppole_1": 480, "7networks_rh_limbic_temppole_2": 480, "7networks_rh_limbic_temppole_3": 480, "7networks_rh_limbic_temppole_4": 480, "7networks_rh_limbic_temppole_5": 480, "7networks_rh_limbic_temppole_6": 480, "7networks_rh_limbic_temppole_7": 480, "7networks_rh_salventattn_froperins_1": 480, "7networks_rh_salventattn_froperins_2": 480, "7networks_rh_salventattn_froperins_3": 480, "7networks_rh_salventattn_froperins_4": 480, "7networks_rh_salventattn_froperins_5": 480, "7networks_rh_salventattn_froperins_6": 480, "7networks_rh_salventattn_froperins_7": 480, "7networks_rh_salventattn_froperins_8": 480, "7networks_rh_salventattn_med_1": 480, "7networks_rh_salventattn_med_2": 480, "7networks_rh_salventattn_med_3": 480, "7networks_rh_salventattn_med_4": 480, "7networks_rh_salventattn_med_5": 480, "7networks_rh_salventattn_med_6": 480, "7networks_rh_salventattn_med_7": 480, "7networks_rh_salventattn_med_8": 480, "7networks_rh_salventattn_pfcl_1": 480, "7networks_rh_salventattn_prc_1": 480, "7networks_rh_salventattn_tempoccpar_1": 480, "7networks_rh_salventattn_tempoccpar_2": 480, "7networks_rh_salventattn_tempoccpar_3": 480, "7networks_rh_salventattn_tempoccpar_4": 480, "7networks_rh_salventattn_tempoccpar_5": 480, "7networks_rh_salventattn_tempoccpar_6": 480, "7networks_rh_salventattn_tempoccpar_7": 480, "7networks_rh_sommot_1": 480, "7networks_rh_sommot_10": 480, "7networks_rh_sommot_11": 480, "7networks_rh_sommot_12": 480, "7networks_rh_sommot_13": 480, "7networks_rh_sommot_14": 480, "7networks_rh_sommot_15": 480, "7networks_rh_sommot_16": 480, "7networks_rh_sommot_17": 480, "7networks_rh_sommot_18": 480, "7networks_rh_sommot_19": 480, "7networks_rh_sommot_2": 480, "7networks_rh_sommot_20": 480, "7networks_rh_sommot_21": 480, "7networks_rh_sommot_22": 480, "7networks_rh_sommot_23": 480, "7networks_rh_sommot_24": 480, "7networks_rh_sommot_25": 480, "7networks_rh_sommot_26": 480, "7networks_rh_sommot_27": 480, "7networks_rh_sommot_28": 480, "7networks_rh_sommot_29": 480, "7networks_rh_sommot_3": 480, "7networks_rh_sommot_30": 480, "7networks_rh_sommot_31": 480, "7networks_rh_sommot_32": 480, "7networks_rh_sommot_33": 480, "7networks_rh_sommot_34": 480, "7networks_rh_sommot_35": 480, "7networks_rh_sommot_36": 480, "7networks_rh_sommot_37": 480, "7networks_rh_sommot_38": 480, "7networks_rh_sommot_39": 480, "7networks_rh_sommot_4": 480, "7networks_rh_sommot_40": 480, "7networks_rh_sommot_5": 480, "7networks_rh_sommot_6": 480, "7networks_rh_sommot_7": 480, "7networks_rh_sommot_8": 480, "7networks_rh_sommot_9": 480, "7networks_rh_vis_1": 480, "7networks_rh_vis_10": 480, "7networks_rh_vis_11": 480, "7networks_rh_vis_12": 480, "7networks_rh_vis_13": 480, "7networks_rh_vis_14": 480, "7networks_rh_vis_15": 480, "7networks_rh_vis_16": 480, "7networks_rh_vis_17": 480, "7networks_rh_vis_18": 480, "7networks_rh_vis_19": 480, "7networks_rh_vis_2": 480, "7networks_rh_vis_20": 480, "7networks_rh_vis_21": 480, "7networks_rh_vis_22": 480, "7networks_rh_vis_23": 480, "7networks_rh_vis_24": 480, "7networks_rh_vis_25": 480, "7networks_rh_vis_26": 480, "7networks_rh_vis_27": 480, "7networks_rh_vis_28": 480, "7networks_rh_vis_29": 480, "7networks_rh_vis_3": 480, "7networks_rh_vis_30": 480, "7networks_rh_vis_4": 480, "7networks_rh_vis_5": 480, "7networks_rh_vis_6": 480, "7networks_rh_vis_7": 480, "7networks_rh_vis_8": 480, "7networks_rh_vis_9": 480, "8": [3, 6, 10, 11, 15, 22, 25, 26, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 68, 72, 73, 74, 77, 78, 81, 82, 84, 88, 91, 93, 94, 95, 98, 103, 104, 106, 107, 108, 112, 114, 115, 118, 121, 125, 130, 132, 135, 140, 148, 150, 152, 158, 168, 176, 198, 201, 204, 210, 211, 212, 213, 214, 216, 225, 235, 248, 251, 255, 261, 270, 272, 281, 283, 289, 294, 295, 296, 297, 298, 299, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 343, 367, 370, 371, 372, 373, 374, 375, 376, 377, 383, 386, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 454, 456, 465, 466, 468, 479, 480, 496, 498], "80": [35, 50, 57, 59, 64, 65, 67, 68, 73, 74, 86, 104, 107, 118, 164, 165, 178, 221, 224, 256, 343, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 435, 436, 437, 441, 442, 443, 445, 446, 478, 479, 480], "800": [36, 89, 111, 193, 237, 258, 326, 339, 428, 466], "8009": 101, "801": 101, "801208": 44, "80213089e": 3, "8028": 73, "80301271e": 3, "8037": 28, "805": 118, "8051948051948052": 36, "806378e": 51, "80743757e": 3, "80797113e": 3, "80907559e": 3, "81": [35, 64, 65, 73, 123, 162, 198, 479, 480], "810": [51, 64], "8100": 36, "81062679e": 3, "8119": [118, 205, 218, 252], "81308": 35, "81420565e": 3, "81649035e": 3, "81664025e": 3, "81702644e": 3, "817e": 56, "81945172e": 3, "82": [4, 32, 34, 35, 64, 65, 72, 73, 91, 93, 104, 198, 479, 480], "820": [46, 48, 496], "822": [135, 162], "82245420e": 3, "82288640": 72, "823": [73, 75, 101, 496], "8248": 36, "825": [95, 99, 496], "825038": 6, "825802": 51, "82605759e": 3, "82612591e": 3, "82637662e": 3, "82724e": [33, 35, 42, 46], "82791925e": 3, "828": [65, 73, 479], "82890605e": 3, "82973827e": 3, "83": [34, 35, 42, 64, 65, 73, 74, 93, 118, 122, 162, 184, 216, 341, 390, 479, 480], "832": [62, 480, 496], "83204029e": 3, "833": 57, "8339": [156, 162], "835": [36, 48, 496], "836": [35, 115, 496], "836576": 35, "837": [6, 105, 479], "83781": 64, "83882363e": 3, "839058": 35, "839163": 65, "8397156": 0, "84": [35, 64, 72, 73, 93, 103, 118, 346, 367, 479, 480], "84051529e": 3, "841e": 56, "842804": 35, "842x": [106, 118, 390], "843388": 59, "843833": 65, "844892": 59, "844e": 56, "84617611e": 3, "84699674e": 3, "8478": 64, "84813784e": 3, "8493": 36, "85": [35, 50, 64, 65, 73, 93, 135, 162, 384, 387, 479, 480], "850138": 6, "8518518518518519": 3, "852": [55, 62, 496], "85356884e": 3, "853608": 65, "85519842e": 3, "856": [112, 115, 496], "85681842e": 3, "857585": 65, "8576": 93, "858": [101, 480], "85903996e": 3, "86": [32, 34, 35, 64, 72, 73, 93, 479, 480, 496], "863": [62, 99, 496], "8630": 36, "864": [6, 41, 59, 65, 73, 87], "8644": 36, "86597632": 72, "86600984e": 3, "86687744": 42, "86828154e": 3, "87": [32, 34, 35, 44, 64, 65, 72, 73, 74, 93, 118, 479, 480], "87113286e": 3, "87166538e": 3, "872285": 65, "87324a": 11, "874f": 58, "875": [118, 135, 162, 164], "8765432098765432": 3, "876886": 59, "877": [109, 115, 496], "878390": 59, "88": [6, 32, 35, 73, 83, 91, 93, 106, 118, 390, 479, 480], "881": 480, "88146808e": 3, "881e": 56, "8822": 36, "8824": 93, "883419": 65, "885": 35, "886": 3, "88671615e": 3, "88746352e": 3, "88767051e": 3, "887969": 65, "888": 480, "88851820e": 3, "89": [22, 32, 34, 35, 72, 73, 74, 79, 104, 109, 479, 480], "890005": 65, "89031312e": 3, "89090431e": 3, "891": [64, 113, 115, 118, 164, 496], "89176831e": 3, "89276062e": 3, "89303673e": 3, "893538": 65, "89376421e": 3, "895": 114, "8952": 93, "895898": 53, "895e": 56, "896": 480, "8960": 93, "89712728e": 3, "897183": 65, "897215e": 51, "89845529e": 3, "8990": 178, "8a": [6, 35, 64, 65, 73], "8b": [6, 64], "8c": 64, "8mm": 104, "9": [2, 3, 4, 6, 11, 15, 16, 17, 19, 21, 22, 26, 29, 31, 32, 35, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 69, 70, 71, 72, 73, 74, 77, 79, 81, 88, 89, 90, 91, 92, 93, 94, 96, 101, 102, 103, 104, 106, 107, 108, 109, 110, 113, 114, 115, 118, 120, 121, 122, 125, 131, 144, 153, 155, 164, 184, 205, 206, 225, 227, 230, 258, 267, 268, 281, 283, 313, 317, 326, 335, 341, 357, 363, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 428, 443, 445, 446, 462, 465, 479, 480, 494, 495, 496, 498], "90": [10, 18, 23, 32, 34, 35, 50, 53, 56, 59, 66, 73, 79, 81, 93, 105, 107, 118, 135, 148, 156, 162, 163, 168, 367, 368, 443, 445, 446, 449, 469, 479, 480, 494], "900": [65, 150, 162, 193, 237, 258, 480], "90075716e": 3, "901255": 6, "90208892e": 3, "90244269e": 3, "906": [53, 62, 496], "907": 480, "9073798500881832": 41, "9098039215686274": 111, "91": [2, 32, 35, 59, 64, 73, 79, 93, 104, 156, 162, 248, 259, 479, 480], "91144192": 72, "911755": 35, "91200": 480, "913": [114, 115, 496], "91328": 480, "9136": 93, "91413549e": 3, "91435": 480, "915": [43, 44, 118, 223, 280], "91520": 480, "915996": 35, "9177489177489176": 36, "91a": 35, "92": [10, 32, 34, 35, 65, 72, 73, 79, 93, 106, 118, 390, 479, 480], "921": 107, "922085": 59, "923": [65, 75, 496], "923589": 59, "923981": 65, "924582": 65, "925": [87, 99, 496], "92527641e": 3, "92570289e": 3, "9259259259259259": 3, "92615150e": 3, "92747907e": 3, "928": [16, 29, 496], "92870453e": 3, "929": [43, 44, 118, 223, 280], "929461": 65, "93": [32, 34, 35, 64, 65, 73, 79, 93, 252, 479, 480], "93192897e": 3, "932": 105, "93380751e": 3, "93483961e": 3, "935": [35, 118, 216], "935719": 35, "936": [2, 8, 65, 73, 479, 496], "937": [75, 496], "93775502e": 3, "938": 65, "93849462e": 3, "94": [3, 11, 16, 19, 22, 26, 32, 35, 51, 53, 64, 72, 73, 79, 89, 90, 93, 109, 110, 275, 276, 479, 480], "94177736e": 3, "94204022e": 3, "9421487603305785": 36, "9444444444444444": 31, "945": [118, 216], "945328": 6, "946": 480, "94691328": 72, "947": 480, "947193": 6, "95": [27, 32, 35, 64, 73, 93, 95, 156, 162, 190, 201, 316, 318, 319, 479, 480], "952826": 6, "953": [118, 197], "9535488": 72, "954": 58, "95406224e": 3, "95494360e": 3, "956513": 53, "95653716e": 3, "958": [37, 48, 496], "959472": 65, "959582": 35, "96": [32, 34, 35, 64, 72, 73, 74, 86, 93, 113, 233, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442, 479, 480], "960": [102, 115, 480, 496], "9600": 93, "96236638e": 3, "9629629629629629": 3, "96430468e": 3, "96442e": [33, 35], "965": [118, 197], "967": 480, "9673": [118, 368], "9678": [118, 368], "968": [118, 216], "97": [32, 35, 46, 47, 64, 67, 72, 73, 90, 93, 479, 480], "970": 480, "972": 6, "9728": 93, "973": 480, "974": [75, 496], "974948": 35, "975": 72, "9753086419753086": 3, "977336e": 51, "97787904": 72, "978": [118, 318, 319], "98": [32, 34, 35, 64, 73, 77, 89, 93, 95, 104, 112, 118, 156, 162, 184, 341, 390, 479, 480], "980": [118, 216], "980278": 65, "98107": 0, "981215": 35, "9816": 93, "982": 84, "98227277e": 3, "98238464": 104, "983": 480, "984": [94, 99, 496], "98653055e": 3, "98669578e": 3, "98718124e": 3, "98728778e": 3, "98744483e": 3, "9876543209876543": 3, "988": 118, "98918713e": 3, "98949286e": 3, "99": [13, 32, 34, 35, 61, 64, 65, 73, 95, 156, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 479, 480, 496], "99015368e": 3, "9902": 11, "99186072e": 3, "992": 118, "994713": 35, "997": 62, "997198": 51, "998": [82, 84, 496], "9984": 93, "999": [64, 480], "999189": 65, "999324": 59, "9a": [64, 65, 73, 479], "9b": 64, "9b76y": [207, 253], "9c": 64, "9cabe068089e791ef0c5fe930fc20e30": 3, "A": [0, 1, 5, 6, 7, 8, 12, 16, 17, 22, 26, 31, 43, 45, 46, 50, 51, 52, 59, 61, 64, 66, 70, 73, 74, 77, 81, 82, 86, 88, 91, 100, 101, 103, 106, 109, 110, 111, 115, 116, 117, 118, 121, 128, 132, 142, 143, 147, 150, 156, 162, 164, 166, 167, 169, 171, 173, 174, 175, 177, 178, 179, 181, 184, 186, 187, 189, 190, 191, 197, 198, 200, 201, 203, 204, 205, 207, 208, 216, 222, 225, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 249, 251, 252, 257, 259, 260, 261, 264, 265, 266, 268, 270, 281, 282, 283, 284, 286, 292, 293, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 317, 318, 319, 322, 325, 326, 329, 335, 339, 344, 345, 351, 356, 357, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 401, 402, 404, 406, 422, 423, 425, 428, 433, 437, 439, 441, 443, 444, 447, 449, 453, 454, 455, 456, 457, 458, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 494, 496, 497], "AND": [96, 121, 130, 162], "And": [7, 27, 44, 105, 164, 179, 187, 190], "As": [3, 6, 16, 36, 38, 41, 47, 52, 55, 57, 68, 81, 83, 94, 96, 97, 101, 104, 107, 111, 120, 127, 150, 162, 164, 165, 167, 169, 170, 171, 175, 177, 178, 180, 183, 189, 233, 329, 367, 368, 371, 372, 373], "At": [35, 58, 64, 66, 67, 70, 73, 77, 79, 82, 93, 104, 113, 168, 186, 187, 339, 341, 479], "BY": [129, 162, 220], "Be": [170, 171, 178, 240, 313, 467], "But": [52, 77, 82, 101, 168, 177, 180, 191], "By": [3, 15, 16, 27, 31, 35, 37, 41, 61, 66, 71, 72, 105, 154, 162, 171, 178, 187, 191, 228, 239, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 345, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 426, 427, 433, 436, 438, 440, 441, 442, 445, 449, 454, 455, 456, 459, 494], "For": [3, 4, 6, 7, 10, 15, 16, 20, 24, 25, 26, 31, 32, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51, 53, 54, 57, 66, 68, 70, 72, 74, 77, 81, 82, 88, 91, 93, 101, 103, 105, 107, 109, 111, 113, 120, 121, 134, 147, 157, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 183, 184, 186, 187, 189, 190, 191, 196, 197, 198, 199, 200, 203, 204, 206, 207, 209, 216, 217, 218, 219, 223, 224, 225, 227, 231, 232, 235, 236, 238, 245, 248, 249, 250, 254, 255, 258, 259, 261, 262, 269, 271, 272, 278, 281, 283, 285, 288, 290, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310, 311, 312, 316, 317, 318, 319, 326, 333, 341, 355, 356, 364, 366, 367, 368, 371, 372, 374, 375, 377, 379, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 427, 433, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 454, 456, 457, 458, 464, 465, 466, 467, 478, 480, 494, 495], "If": [0, 2, 10, 11, 15, 16, 25, 26, 36, 37, 38, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 71, 72, 73, 77, 81, 86, 88, 91, 93, 94, 96, 101, 102, 103, 104, 106, 107, 108, 109, 110, 113, 116, 120, 121, 129, 147, 154, 155, 157, 162, 163, 164, 168, 170, 171, 173, 175, 177, 178, 180, 184, 186, 187, 189, 190, 191, 197, 218, 238, 239, 240, 242, 244, 245, 246, 247, 250, 251, 252, 254, 255, 257, 259, 262, 267, 271, 272, 275, 276, 279, 281, 283, 285, 286, 290, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 322, 323, 326, 329, 333, 335, 339, 340, 341, 342, 343, 344, 345, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 465, 466, 467, 468, 472, 473, 474, 478, 494, 495], "In": [0, 2, 3, 4, 6, 10, 13, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 32, 34, 35, 38, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 61, 67, 68, 69, 74, 81, 83, 88, 89, 90, 91, 93, 96, 97, 98, 102, 103, 105, 106, 110, 111, 113, 114, 118, 119, 120, 121, 127, 128, 134, 142, 147, 157, 159, 162, 164, 165, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 197, 198, 201, 218, 224, 227, 228, 238, 245, 248, 250, 254, 255, 256, 281, 283, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 318, 319, 326, 328, 333, 342, 359, 360, 361, 363, 384, 390, 428, 429, 440, 453, 462, 465, 478, 494, 495], "Ins": 54, "It": [2, 3, 6, 10, 15, 16, 17, 23, 36, 39, 41, 44, 45, 47, 51, 54, 64, 65, 67, 68, 72, 73, 77, 79, 83, 91, 96, 101, 103, 104, 111, 113, 119, 120, 121, 125, 134, 137, 140, 141, 143, 154, 155, 156, 157, 162, 163, 164, 165, 170, 171, 173, 174, 175, 177, 178, 180, 184, 185, 186, 187, 189, 190, 191, 201, 202, 221, 224, 225, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 495], "Its": [164, 172, 177, 308, 319, 342, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 466], "NOS": 246, "NOT": 121, "No": [11, 16, 17, 19, 22, 26, 51, 53, 59, 65, 68, 77, 79, 89, 90, 93, 97, 109, 112, 177, 178, 360, 479], "Not": [3, 68, 73, 163, 254, 255, 363, 381, 394, 453, 455], "ON": 52, "ONE": [118, 186], "OR": 121, "Of": 70, "On": [3, 14, 38, 52, 55, 56, 59, 61, 65, 68, 70, 77, 79, 107, 118, 148, 162, 163, 165, 177, 186, 190, 191, 239, 242], "One": [3, 6, 15, 36, 37, 41, 51, 52, 59, 81, 155, 162, 164, 165, 170, 171, 175, 177, 179, 180, 182, 183, 187, 189, 191, 300, 326, 359, 368, 372, 375, 459], "Or": [31, 35, 64, 70, 73, 104, 113, 121, 170, 494], "Such": [96, 164, 364], "That": [37, 38, 43, 44, 45, 50, 54, 55, 56, 57, 58, 59, 61, 64, 71, 91, 93, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 120, 154, 162, 184, 313, 317, 326, 328, 333], "The": [0, 2, 3, 6, 7, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 34, 35, 36, 38, 41, 43, 44, 45, 46, 48, 50, 51, 52, 54, 55, 57, 58, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 106, 108, 110, 111, 113, 114, 116, 118, 120, 121, 123, 124, 125, 127, 128, 130, 132, 134, 135, 137, 138, 139, 140, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 193, 195, 196, 197, 198, 200, 201, 203, 204, 206, 209, 216, 217, 218, 219, 220, 221, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 272, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 350, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 478, 479, 480, 484, 485, 489, 490, 494, 495, 496, 497], "Their": 223, "Then": [2, 3, 15, 32, 43, 45, 50, 53, 54, 58, 65, 66, 96, 97, 114, 163, 168, 170, 172, 173, 178, 187, 190, 191, 238, 240, 272, 453], "There": [0, 4, 22, 68, 167, 170, 171, 172, 178, 184, 248, 256, 316, 318, 319, 340, 367, 463, 494], "These": [3, 4, 6, 16, 26, 41, 58, 61, 63, 74, 76, 79, 81, 83, 91, 96, 112, 116, 120, 134, 150, 153, 154, 157, 162, 163, 170, 173, 174, 176, 177, 178, 182, 183, 184, 187, 191, 197, 198, 207, 218, 219, 233, 253, 264, 266, 302, 311, 312, 488, 494, 495], "To": [0, 2, 3, 4, 6, 16, 22, 23, 24, 33, 35, 39, 42, 43, 45, 46, 51, 52, 53, 54, 55, 57, 58, 65, 68, 69, 71, 78, 79, 81, 82, 89, 91, 96, 101, 104, 105, 108, 111, 113, 120, 121, 132, 142, 147, 159, 162, 163, 164, 165, 167, 170, 171, 172, 173, 175, 178, 179, 180, 183, 187, 189, 190, 281, 316, 318, 319, 335, 343, 355, 367, 436, 440, 441, 442, 443, 445, 446, 449, 453, 465, 466, 494], "Will": [246, 281, 287, 288, 326, 333, 348, 359, 360, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 437, 446, 450], "With": [10, 15, 34, 59, 80, 91, 173, 177, 180, 239, 242, 322, 368, 468, 477, 495], "_": [32, 38, 47, 50, 52, 54, 60, 65, 73, 77, 79, 82, 96, 103, 106, 109, 110, 127, 155, 159, 162, 178, 187, 286, 329, 366], "__": [103, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "______________________________________________________________________": 32, "________________________________________________________________________________": [35, 51, 52, 53, 55, 56, 59, 61], "__________________________________________________________run_glm": 35, "________________________________________________________ward_tre": 52, "____________________________________________________estimator_fit": 52, "_________________________________________________compute_load": [51, 53], "_______________________________________________filter_and_extract": [52, 55, 56, 59, 61], "______________________________________________explained_vari": 51, "_____________________________________________dict_learning_onlin": [51, 53], "__________________________________________high_variance_confound": 56, "_________________________________recursive_neighbor_agglomer": 52, "__all__": 178, "__class__": 47, "__init__": [178, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 326, 339, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 453, 454, 455, 456, 464, 470, 471, 472, 473, 474], "__init___": 317, "__name__": 47, "__version__": 178, "_adjust_screening_percentil": [142, 162], "_agglom": 52, "_apply_cluster_size_threshold": [158, 162], "_ax": [11, 16, 19, 22, 26, 51, 53, 89, 90], "_ball_sample_loc": 25, "_base": [36, 51], "_build": 178, "_cach": [50, 51], "_check_mask_shap": 178, "_check_mask_valu": 178, "_check_second_level_input": [159, 162], "_cmap_d": 13, "_col_filters_available_on_serv": 281, "_colorbar_ax": [21, 22, 51, 53, 89, 90], "_column": 180, "_compute_facecolors_matplotlib": [129, 162], "_compute_load": [51, 53], "_data": [21, 51, 53], "_default_time_out": [281, 283], "_design": 366, "_dict_learn": [51, 53], "_empty_filt": 281, "_estimator_fit": 52, "_explained_vari": 51, "_extractionfunctor": [52, 55, 56, 59, 61], "_fastica": [94, 108], "_full_brain_info": [129, 162], "_gamma_difference_hrf": [159, 162], "_get_clusters_t": [130, 162], "_get_mask_volum": [142, 162], "_get_vertexcolor": [129, 162], "_get_voxelwise_model_attribut": [155, 162], "_hemi": [7, 472, 473], "_label": 69, "_latest": 187, "_line_sample_loc": 25, "_method": 61, "_mix_colormap": [129, 162], "_neurosynth_fetch_words_url": [159, 162], "_neurovault_base_url": [159, 162], "_one_mesh_info": [129, 162], "_plot_surf_matplotlib": [129, 162], "_projector": [14, 15, 17, 54, 55, 61, 65, 132, 157, 162], "_r": 13, "_region_id_nam": [132, 162], "_safe_cach": [127, 162], "_safe_get_data": [142, 162], "_sample_locations_between_surfac": 25, "_scale": 201, "_scan": 180, "_set_output": 55, "_slicer": [2, 4, 10, 11, 16, 17, 18, 19, 21, 22, 27, 32, 38, 43, 45, 46, 51, 53, 71, 83, 89, 90, 91, 94, 96, 98, 101, 106, 110, 157, 162], "_space": 329, "_stat": 366, "_statmap": 366, "_tag": 365, "_task": 329, "_test": 178, "_univariate_select": 114, "_update_submatrix": 177, "_util": [25, 40, 43, 47, 52, 60, 69, 70, 77, 80, 93, 109, 110, 114, 128, 130, 137, 156, 159, 162, 177, 178, 187], "_valid": 178, "_validate_shap": 178, "_version": 187, "_voxel": 180, "_vx": 187, "_z_map": 73, "a4c8868ab5c651b8594da6f3204": 42, "a_model001_task002_cope011_tstat1": 112, "a_nice_funct": 178, "aal": [132, 139, 162, 193, 237, 248], "aal3": 248, "ab": [32, 46, 47, 56, 61, 83, 86, 106, 107, 108, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 429, 435, 436, 442], "abadi": [0, 135, 137, 140, 147, 162], "abb4588": 118, "abbrevi": 189, "abdulrahman": [103, 118], "aben": [0, 150, 162], "aberr": 80, "abid": [6, 118, 141, 162, 178, 193, 246], "abl": [32, 34, 39, 132, 162, 178, 187, 364, 443, 445, 446, 494], "abnorm": [118, 216], "about": [0, 2, 3, 6, 15, 20, 25, 35, 52, 64, 65, 66, 70, 73, 78, 80, 81, 96, 103, 104, 105, 113, 120, 121, 127, 128, 129, 132, 135, 150, 158, 162, 163, 167, 170, 171, 173, 175, 177, 178, 179, 180, 184, 185, 186, 189, 196, 197, 199, 201, 203, 206, 207, 217, 224, 225, 232, 235, 250, 259, 261, 270, 272, 278, 285, 294, 295, 296, 297, 298, 299, 326, 339, 368, 371, 372, 373, 425, 467, 478, 479], "abov": [2, 3, 4, 6, 15, 22, 26, 35, 41, 45, 50, 51, 52, 59, 68, 88, 96, 98, 103, 121, 130, 132, 133, 142, 162, 164, 165, 167, 169, 170, 175, 177, 178, 179, 184, 187, 189, 190, 191, 217, 232, 248, 270, 272, 294, 295, 298, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 322, 326, 328, 330, 331, 332, 333, 336, 337, 338, 344, 359, 360, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 395, 396, 397, 398, 399, 400, 402, 404, 405, 407, 409, 411, 413, 415, 417, 427, 428, 429, 433, 435, 436, 437, 440, 441, 442, 443, 445, 446, 448, 450, 452, 454, 456, 467, 468], "abraham": [0, 54, 102, 118, 122, 123, 125, 126, 135, 137, 140, 150, 162, 168, 201, 367, 368, 456], "abrupt": 191, "absenc": [180, 187, 459], "absent": [6, 72], "absolut": [45, 46, 54, 61, 114, 150, 162, 175, 177, 178, 220, 263, 273, 286, 343, 348, 363, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 429, 435, 436, 437, 440, 441, 442, 443, 445, 446, 449, 450, 452, 494], "absolute_path": 112, "abstract": [119, 370], "abstract_knowledge_regparam": 107, "ac": [2, 6, 22, 72, 118, 216, 218, 219, 232, 233, 234, 259, 287], "academi": [118, 175, 186, 197, 201, 232, 259, 308, 368], "acc": 21, "acceler": [118, 226], "accept": [2, 3, 50, 67, 127, 128, 132, 134, 141, 142, 144, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 162, 178, 179, 189, 197, 257, 339, 341, 342, 364, 371, 372, 373, 381, 382, 383, 384, 385, 386, 387, 427, 437, 439, 440, 441, 442, 449, 451, 462, 463], "access": [6, 35, 38, 41, 51, 59, 64, 65, 68, 73, 111, 118, 120, 128, 157, 162, 163, 165, 169, 177, 178, 179, 188, 189, 191, 215, 247, 248, 251, 256, 257, 258, 261, 262, 278, 287, 289, 314, 404, 484, 497], "accident": 187, "accommod": [130, 147, 162], "accord": [6, 11, 44, 47, 65, 103, 127, 142, 143, 144, 147, 153, 155, 159, 162, 168, 175, 178, 208, 226, 236, 239, 246, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 302, 304, 305, 306, 307, 309, 310, 313, 344, 364, 371, 374, 378, 390, 437, 438, 443, 445, 446, 450, 452, 455, 456, 465, 467, 468, 494], "accordingli": [16, 157, 162, 364], "account": [6, 35, 64, 68, 70, 73, 78, 96, 113, 163, 175, 178, 187, 191, 197, 219, 367, 371, 372, 374, 375, 377, 456, 479], "accumul": [113, 494], "accur": [26, 52, 61, 68, 70, 150, 158, 162, 175, 179, 180], "accuraci": [31, 32, 33, 34, 35, 37, 39, 44, 54, 101, 102, 154, 162, 174, 175, 184, 186, 304, 306, 308, 309], "accuracy_scor": [44, 54], "accuracy_to_print": 44, "acharya": 0, "achiev": [10, 16, 58, 72, 95, 170, 177, 186, 190, 191, 242], "acompcor_combin": 367, "acoustic_processing_regparam": 107, "acq": 329, "acquir": [3, 41, 68, 69, 120, 180, 184, 186, 220, 233, 234], "acquis": 191, "acquisit": [3, 6, 32, 34, 66, 68, 72, 104, 111, 118, 175, 180, 184, 201, 233, 276, 333, 428], "across": [3, 6, 16, 17, 35, 41, 50, 53, 54, 59, 67, 68, 72, 82, 96, 101, 102, 103, 107, 111, 113, 114, 118, 128, 133, 150, 156, 162, 163, 164, 165, 168, 169, 170, 171, 173, 175, 180, 182, 184, 196, 201, 209, 216, 224, 232, 238, 246, 256, 289, 304, 305, 306, 307, 309, 310, 311, 312, 362, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 428, 454, 456, 478, 479, 494], "act": [31, 36, 143, 162, 184, 244, 245, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 371, 374, 378, 392], "action": [34, 42, 180, 187, 203, 276], "action_perception_regparam": 107, "action_regparam": 107, "activ": [6, 7, 13, 15, 16, 17, 26, 32, 34, 43, 44, 52, 65, 68, 70, 71, 72, 73, 78, 79, 81, 82, 83, 103, 113, 118, 120, 164, 165, 168, 169, 170, 174, 175, 177, 178, 179, 180, 183, 184, 186, 187, 191, 197, 198, 201, 203, 208, 222, 223, 224, 232, 240, 246, 248, 256, 259, 280, 301, 321, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 424, 456, 458, 495], "activation_level_regparam": 107, "activation_regparam": 107, "activation_threshold": 424, "active_maintenance_regparam": 107, "active_retrieval_regparam": 107, "actual": [3, 6, 45, 68, 69, 72, 79, 88, 109, 129, 162, 177, 178, 180, 184, 189, 227, 342, 466], "acuity_regparam": 107, "ad": [2, 15, 16, 19, 21, 22, 32, 38, 43, 45, 46, 51, 53, 69, 70, 74, 86, 89, 90, 106, 110, 127, 128, 129, 132, 133, 134, 143, 144, 154, 156, 157, 158, 159, 162, 163, 173, 177, 179, 187, 238, 239, 240, 244, 245, 250, 253, 255, 258, 260, 261, 262, 266, 267, 268, 272, 273, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 329, 335, 339, 341, 343, 344, 348, 353, 354, 355, 356, 358, 359, 360, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 428, 429, 432, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 452, 453, 454, 455, 456, 458, 465, 466, 468, 470, 471, 472, 473, 474, 475, 478, 497], "adam": [103, 118], "adapt": [13, 52, 67, 98, 120, 132, 162, 163, 168, 171, 178, 326, 335, 367, 425, 479, 480], "adaptation_regparam": 107, "adaptive_control_regparam": 107, "add": [10, 15, 16, 21, 26, 33, 43, 44, 53, 59, 66, 70, 82, 106, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 142, 143, 145, 147, 150, 155, 159, 162, 168, 170, 173, 175, 178, 184, 187, 240, 281, 283, 302, 344, 363, 367, 376, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 448, 450, 452, 467, 468, 494], "add_ax": [2, 16, 19, 21, 22, 32, 38, 43, 45, 46, 51, 53, 89, 90, 106, 110], "add_contour": [10, 15, 19, 26, 132, 143, 150, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 494], "add_edg": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 494], "add_graph": [132, 162, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417], "add_mark": [43, 58, 64, 71, 103, 139, 145, 148, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 494], "add_object_bound": [391, 393, 394], "add_overlai": [53, 125, 134, 162, 168, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 435, 436, 440, 441, 442, 494], "add_patch": 43, "add_reg": [64, 66, 179, 333], "add_reg_nam": [64, 66, 333], "add_subplot": [64, 93], "addiction_regparam": 107, "addit": [0, 15, 41, 58, 66, 68, 71, 81, 88, 91, 104, 120, 121, 123, 128, 142, 147, 153, 162, 170, 173, 177, 179, 184, 186, 187, 198, 246, 248, 270, 280, 304, 305, 306, 307, 308, 311, 312, 314, 333, 341, 364, 367, 368, 370, 373, 376, 453, 454, 455, 464, 494], "addition": [15, 16, 26, 61, 71, 156, 162, 178, 183, 187, 190, 191, 207, 217, 329, 390, 465], "address": [118, 180, 183, 184, 187, 341, 390], "adelsberg": [118, 226], "adelsheim": [118, 200, 249], "adelstein": 118, "adequ": [77, 204], "adhd": [63, 75, 105, 111, 116, 150, 159, 162, 164, 179, 193, 247, 326, 333, 370, 377, 403, 442, 464, 480, 491, 496], "adhd200": [199, 247], "adhd200_40sub_preprocess": [199, 247], "adhd40_0010064": 105, "adhd40_0010128": 111, "adhd40_0021019": 111, "adhd40_0023008": 111, "adhd40_0023012": 111, "adhd_dataset": [12, 64, 179], "adher": 178, "adjac": [39, 150, 162, 470], "adjacency_matrix": [23, 50, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 448], "adjust": [13, 68, 69, 127, 132, 145, 162, 368, 392, 403, 406], "admittedli": 167, "adolesc": [118, 186], "adopt": [175, 184], "adriana": [118, 226], "adult": [51, 54, 102, 118, 150, 162, 185, 201, 206, 227, 267], "adulthood": [118, 218], "advanc": [0, 58, 114, 115, 118, 164, 170, 172, 173, 178, 179, 186, 190, 239, 270, 304, 306, 307, 351, 370, 376, 428, 442, 496, 497], "advantag": [41, 45, 46, 70, 177, 191], "advertis": [131, 162], "advic": [170, 197], "advis": [108, 178, 189, 272, 384, 454], "aesthet": [132, 162], "affect": [66, 74, 105, 132, 156, 162, 163, 180, 184, 187], "affect_perception_regparam": 107, "affect_recognition_regparam": 107, "affili": 178, "affin": [26, 43, 50, 59, 72, 85, 91, 95, 96, 99, 105, 111, 116, 141, 156, 162, 184, 188, 191, 216, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 344, 345, 346, 347, 349, 354, 355, 356, 357, 358, 359, 360, 362, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 447, 454, 459, 462, 463, 478, 482, 496], "affine_": [373, 376], "afni": [159, 162], "after": [24, 30, 36, 38, 41, 43, 48, 53, 59, 68, 79, 96, 101, 103, 109, 116, 130, 158, 162, 163, 167, 168, 170, 175, 177, 178, 180, 184, 187, 190, 191, 201, 242, 270, 304, 305, 306, 307, 311, 326, 334, 335, 344, 348, 351, 356, 367, 368, 375, 376, 378, 457, 459, 460, 464, 465, 466, 496], "afterward": [2, 177, 187], "ag": [46, 49, 62, 80, 100, 115, 116, 118, 150, 162, 164, 171, 172, 176, 183, 184, 185, 186, 199, 201, 206, 216, 218, 227, 238, 246, 256, 267, 278, 290, 304, 305, 306, 307, 309, 310, 370, 375, 429, 439, 447, 479, 496], "again": [16, 52, 73, 93, 105, 107, 111, 120, 178, 183, 186, 281, 283], "against": [65, 111, 170, 179, 184, 281, 341, 390, 425, 439], "age_at_scan": 246, "age_clust": 77, "age_design": 77, "age_group": 267, "age_pr": 45, "age_stat": 77, "age_test": [45, 46], "age_train": [45, 46], "ageeffectongm": 77, "ageeffectongm_contrast": 77, "ageeffectongm_corrdesign": 77, "ageeffectongm_design": 77, "ageeffectongm_mask": 77, "ageeffectongm_report": 77, "ageeffectongm_stat": 77, "ageeffectongm_statmap": 77, "agenc": 0, "agency_regparam": 107, "agencyenterpris": 0, "agent": 69, "agg": 447, "aggarw": [0, 131, 132, 133, 134, 162], "agglom": [52, 150, 162, 167, 454], "agglomer": [52, 118, 184, 185, 306, 307, 453, 454, 455, 461], "agglomerativeclust": [52, 454], "aggreg": [33, 42, 61, 153, 162, 172, 184, 200, 249, 306, 307], "aggres": 368, "aggress": 368, "agre": [45, 77, 178, 197, 227, 278, 285, 339, 341], "agreeableness_regparam": 107, "agreement": [45, 65, 77, 197, 231, 425], "ahern": [118, 216], "ahmad": [0, 127, 128, 129, 156, 157, 159, 162], "ai": 0, "aic": 316, "aid": [118, 210, 211, 212, 213, 214, 235, 261, 289], "aim": [31, 36, 41, 50, 137, 162, 170, 178, 184, 309, 310], "aina": [0, 135, 162], "air": 0, "aka": [6, 68, 167, 180, 321], "aki": [43, 44, 118, 147, 162, 223, 280], "akshai": [147, 162], "al": [3, 23, 26, 30, 33, 39, 41, 47, 48, 51, 52, 54, 59, 61, 68, 74, 78, 101, 102, 103, 106, 116, 121, 142, 147, 162, 164, 167, 170, 171, 172, 175, 176, 177, 186, 191, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 238, 239, 242, 246, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 276, 278, 279, 280, 281, 283, 289, 304, 307, 310, 311, 312, 318, 319, 321, 344, 346, 351, 363, 367, 368, 370, 373, 376, 390, 418, 425, 442, 447, 455, 456, 461, 468, 480, 496], "alan": [118, 201, 218, 250], "alberto": [118, 367, 368], "aldo": [78, 118, 321], "alecia": [61, 118, 208, 229, 264, 265], "alex": [0, 59, 118, 144, 147, 162, 165, 175, 218, 368], "alexa": [118, 206, 267], "alexand": [61, 118, 196, 208, 229, 230, 246, 258, 264, 265, 425], "alexandr": [0, 47, 52, 54, 102, 118, 122, 123, 125, 126, 129, 132, 135, 137, 140, 147, 149, 150, 162, 164, 168, 176, 186, 224, 239, 256, 456], "alexi": [0, 118, 127, 128, 147, 150, 155, 157, 159, 162, 226], "alff": 246, "algorithm": [51, 52, 91, 94, 96, 106, 108, 109, 120, 164, 167, 168, 169, 172, 173, 175, 178, 184, 191, 192, 194, 201, 227, 239, 242, 311, 312, 350, 385, 387, 453, 456, 458, 469], "alia": [238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456, 494], "alias": [127, 162], "align": [54, 59, 93, 102, 130, 160, 162, 308, 360, 362, 435], "alik": [204, 228, 251], "alisha": [0, 129, 162], "aliz": 104, "all": [3, 4, 9, 13, 16, 20, 24, 26, 29, 32, 35, 37, 38, 41, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 68, 70, 71, 72, 73, 74, 78, 79, 81, 82, 89, 91, 93, 94, 96, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 121, 127, 128, 129, 130, 132, 133, 134, 135, 140, 147, 150, 153, 155, 157, 158, 160, 162, 163, 164, 165, 167, 168, 169, 171, 173, 175, 177, 178, 180, 182, 183, 186, 187, 189, 190, 191, 196, 197, 199, 200, 201, 207, 209, 219, 225, 231, 239, 240, 242, 246, 247, 249, 250, 251, 267, 275, 276, 279, 281, 285, 286, 290, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 326, 329, 335, 339, 340, 341, 344, 345, 350, 355, 356, 359, 360, 361, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 387, 388, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 427, 429, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 452, 454, 456, 459, 466, 468, 478, 492, 494, 495, 496], "all_categori": 32, "all_coef_": [309, 310], "allel": [118, 197], "allen": [22, 26, 118, 142, 162, 193, 249, 489], "allen2011": 22, "allen_rsn_2011": 22, "allevi": 96, "allow": [10, 21, 25, 26, 39, 43, 51, 54, 61, 66, 91, 102, 103, 104, 106, 113, 120, 128, 129, 130, 132, 133, 134, 141, 143, 148, 150, 154, 155, 158, 159, 162, 163, 164, 170, 177, 178, 179, 181, 184, 187, 191, 197, 238, 239, 240, 268, 276, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 329, 339, 341, 364, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 432, 439, 453, 454, 455, 456], "allow_overlap": [55, 56, 57, 61, 372, 375, 377, 379, 480], "almli": [118, 201, 218], "almost": [25, 42, 52, 108, 177, 191], "alon": [178, 180, 494], "along": [25, 27, 50, 68, 86, 88, 103, 105, 113, 128, 150, 155, 162, 163, 169, 176, 178, 184, 190, 191, 309, 310, 326, 334, 352, 359, 361, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 409, 411, 413, 415, 417, 420, 421, 425, 426, 427, 433, 436, 440, 441, 442, 456, 457, 468, 478, 494], "alongsid": 17, "alpha": [6, 16, 24, 25, 26, 39, 42, 43, 47, 51, 53, 60, 69, 77, 78, 79, 83, 113, 133, 159, 164, 169, 176, 180, 239, 240, 242, 309, 310, 312, 316, 318, 319, 321, 325, 326, 339, 342, 363, 366, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 429, 435, 436, 438, 440, 441, 442, 443, 445, 446, 466, 494], "alpha_": [60, 240], "alpha_cmap": [53, 168], "alpha_grids_": [309, 310], "alpha_i": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442], "alpha_max": [309, 310], "alpha_min": [309, 310], "alphabet": [118, 150, 162, 187, 189], "alreadi": [22, 35, 36, 52, 73, 91, 96, 104, 107, 111, 112, 113, 121, 132, 133, 150, 157, 162, 168, 170, 171, 178, 186, 191, 281, 283, 339, 341, 360, 390, 456], "also": [0, 3, 4, 7, 12, 13, 15, 16, 17, 18, 23, 24, 26, 31, 33, 36, 41, 45, 46, 52, 53, 54, 58, 59, 65, 66, 68, 69, 71, 72, 74, 77, 79, 81, 88, 91, 93, 95, 96, 97, 101, 111, 113, 120, 121, 125, 127, 129, 130, 132, 134, 135, 140, 141, 143, 147, 150, 153, 156, 157, 159, 162, 163, 164, 165, 168, 169, 171, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 204, 205, 209, 216, 224, 225, 233, 237, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 311, 312, 326, 328, 329, 333, 339, 351, 355, 356, 359, 364, 365, 367, 373, 376, 381, 382, 383, 384, 385, 386, 387, 427, 428, 433, 434, 436, 440, 441, 442, 443, 445, 446, 454, 457, 458, 462, 463, 466, 489, 494, 497], "alter": [16, 154, 162], "altern": [6, 7, 10, 17, 21, 23, 55, 57, 61, 68, 73, 166, 167, 175, 184, 191, 233, 316, 318, 319, 390, 497], "although": [35, 42, 52, 81, 171, 184, 187, 191], "altman": [134, 162, 425], "altruism_regparam": 107, "altruistic_motivation_regparam": 107, "alumit": [3, 33, 34, 40, 101, 118, 217, 270], "alveolar_regparam": 107, "alwai": [2, 16, 17, 19, 21, 22, 32, 38, 43, 45, 46, 51, 53, 89, 90, 103, 106, 110, 163, 170, 173, 177, 178, 180, 191, 248, 305, 310, 316, 318, 319, 323, 367, 449, 450, 452, 459, 494], "alzheim": 227, "am": [0, 118, 205, 252], "amadeu": [0, 140, 162], "amag": 0, "amal": [118, 218], "amanda": [118, 228, 257], "amax": 109, "ambi": 246, "ambidextr": 246, "america": 308, "american": [118, 216], "ami": 118, "amodal_representation_regparam": 107, "among": [6, 81, 128, 162, 180, 184, 250, 304, 305, 306, 307], "amongst": [390, 494], "amount": [0, 25, 36, 38, 53, 68, 97, 111, 171, 173, 178, 185, 186, 187, 239, 281, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 345, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 455, 456], "amp": [479, 480], "amplifi": 177, "amplitud": [66, 69, 246, 328, 333, 448, 450, 452], "amsterdam": 0, "amunt": [118, 219], "amygdala": [231, 266], "an": [0, 2, 3, 4, 7, 12, 15, 16, 17, 19, 21, 22, 23, 26, 27, 31, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 57, 58, 59, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 81, 82, 85, 86, 89, 90, 91, 93, 94, 96, 99, 103, 104, 105, 106, 107, 109, 110, 111, 113, 116, 118, 120, 121, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 157, 159, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 186, 187, 189, 190, 191, 193, 196, 197, 198, 203, 204, 216, 218, 224, 227, 234, 237, 238, 239, 240, 244, 248, 251, 252, 256, 262, 267, 276, 277, 279, 281, 283, 286, 293, 297, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 322, 326, 333, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 464, 466, 468, 469, 472, 476, 477, 478, 482, 489, 496, 497], "ana": [0, 150, 154, 156, 162], "anaconda": [147, 162, 495], "anal": [52, 118, 455, 461], "analog": 96, "analogical_reasoning_regparam": 107, "analogy_regparam": 107, "analu": [144, 147, 162], "analys": [70, 103, 105, 118, 129, 162, 170, 175, 179, 180, 181, 183, 184, 185, 191, 208, 222, 495], "analysi": [1, 7, 8, 16, 30, 31, 33, 35, 36, 41, 48, 51, 52, 66, 68, 69, 72, 73, 74, 75, 79, 80, 81, 82, 84, 97, 101, 115, 118, 119, 121, 132, 134, 162, 164, 165, 169, 171, 174, 176, 181, 182, 183, 184, 185, 186, 190, 191, 205, 207, 208, 209, 216, 222, 229, 234, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 273, 275, 276, 277, 283, 286, 287, 292, 293, 303, 304, 308, 311, 313, 317, 318, 319, 326, 329, 339, 341, 342, 349, 351, 354, 355, 356, 357, 363, 366, 367, 368, 369, 370, 376, 390, 403, 418, 425, 427, 430, 431, 435, 436, 442, 446, 447, 456, 464, 465, 474, 479, 483, 491, 495, 496, 497], "analyz": [3, 35, 41, 52, 63, 64, 70, 73, 76, 96, 104, 113, 116, 169, 178, 180, 182, 184, 186, 188, 201, 219, 390, 479, 481, 497], "anand": [0, 132, 162], "anat": [3, 4, 6, 16, 17, 18, 19, 27, 31, 32, 34, 45, 46, 96, 120, 170, 189, 191, 203, 217, 233, 234, 236, 262, 270, 274, 276, 287, 288, 364], "anat_combin": [367, 368], "anat_img": [144, 162, 427], "anat_separ": 367, "anatom": [3, 4, 6, 12, 18, 19, 23, 27, 32, 34, 38, 65, 96, 106, 118, 121, 143, 162, 168, 175, 184, 191, 198, 201, 205, 207, 217, 218, 228, 231, 236, 246, 248, 250, 252, 260, 267, 270, 271, 274, 276, 367, 427, 436, 440, 442, 449, 465, 494], "anatomi": [6, 45, 70, 77, 203, 231, 262], "anatomical_imag": [343, 355], "anats_all_subject": 4, "anats_all_subjects_smooth": 4, "anchor": 86, "anchoredoffsetbox": [391, 393, 394], "anchoredsizebar": [391, 393, 394], "anchoring_regparam": 107, "ander": [23, 118, 205, 210, 211, 212, 213, 214, 216, 252, 260, 289], "anderson": [106, 118, 196, 197, 246, 390], "andi": 7, "andr": [52, 118, 170, 186, 455, 461], "andrea": [51, 118, 164, 169, 238, 311], "andrew": [118, 165, 196, 200, 204, 218, 246, 249, 251], "andr\u00e9": [0, 118, 150, 162, 172, 186, 205, 252, 306, 307], "angel": 0, "angela": [118, 200, 232, 249, 259], "angl": [25, 86, 128, 162, 184, 312, 443, 445, 446], "angular": [93, 480], "anhedonia_regparam": 107, "ani": [4, 6, 26, 52, 59, 61, 72, 77, 83, 103, 107, 108, 120, 127, 151, 153, 159, 162, 163, 165, 167, 170, 171, 174, 175, 177, 178, 179, 180, 184, 187, 191, 246, 270, 281, 283, 346, 351, 355, 361, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 437, 440, 442, 456, 460, 465, 468, 474, 478, 494, 495], "anim": [118, 201, 218], "animacy_decision_regparam": 107, "animacy_perception_regparam": 107, "anish": [118, 367], "anisotrop": 191, "anisotropi": 96, "ann": [0, 61, 118, 128, 162, 208, 229, 264, 265], "anna": [118, 226], "annot": [96, 119, 129, 132, 142, 153, 162, 205, 225, 230, 235, 258, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 433, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 449, 452, 476, 494, 497], "annual": [118, 197, 201], "annunzio": 0, "anoth": [6, 10, 42, 68, 70, 81, 91, 111, 139, 144, 162, 170, 177, 178, 180, 186, 187, 188, 189, 238, 309, 310, 345, 346, 365, 464, 494], "anova": [3, 30, 37, 41, 45, 48, 109, 110, 116, 142, 162, 174, 175, 176, 184, 191, 270, 304, 305, 306, 307, 309, 310, 351, 442, 447, 449, 496, 497], "anova_lda": 101, "anova_svc": 101, "answer": [3, 495], "ant": [54, 480], "anterior": [72, 93, 118, 144, 162, 198, 216, 264, 266, 358, 443, 445, 446], "antialias": 19, "anticorrel": [54, 118, 368], "antoinett": [74, 118, 203, 209, 276], "anton": [118, 209], "antonia": [118, 207, 253], "antonio": [118, 203, 276], "anupriya": [0, 132, 162], "anwar": [118, 226], "anylin": 0, "anymor": [127, 159, 162, 187, 368], "anyon": [163, 495], "anyth": [7, 114, 121, 177, 178], "ap": 364, "apart": [88, 142, 162, 167, 168, 177], "apertur": [26, 118], "apertureneuro": [26, 118], "api": [10, 47, 107, 108, 112, 125, 126, 127, 128, 129, 130, 131, 134, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 163, 187, 386, 436, 453, 455, 497], "apo": [118, 197], "app": [65, 163, 231, 329], "appear": [37, 57, 72, 73, 91, 163, 193, 237, 326, 339, 341, 430, 465, 489], "append": [35, 36, 41, 43, 44, 47, 53, 54, 56, 74, 103, 107, 111, 112, 113, 114, 163, 168, 472, 473], "appli": [3, 26, 31, 33, 34, 45, 47, 53, 59, 64, 68, 70, 77, 81, 82, 91, 94, 96, 101, 103, 104, 105, 107, 108, 113, 119, 121, 127, 129, 130, 131, 132, 138, 140, 144, 147, 150, 155, 156, 157, 162, 164, 165, 166, 169, 171, 172, 173, 175, 179, 183, 184, 188, 197, 201, 204, 216, 231, 238, 246, 281, 303, 304, 305, 306, 307, 308, 311, 312, 317, 326, 339, 341, 342, 343, 344, 355, 361, 363, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 427, 435, 436, 437, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 465, 466, 467, 468, 478, 480, 485, 497], "applic": [44, 118, 155, 162, 165, 171, 177, 185, 201, 363, 373, 390, 459, 460, 466, 494, 495, 497], "apply_along_axi": [443, 445, 446], "apply_mask": [27, 134, 162, 190, 373, 376], "appreci": [178, 189], "approach": [26, 35, 36, 41, 43, 44, 50, 51, 52, 68, 70, 113, 118, 147, 162, 166, 169, 170, 171, 175, 177, 178, 179, 180, 185, 308, 344, 367, 368, 468, 478, 479, 495, 497], "appropri": [23, 103, 111, 114, 118, 130, 131, 162, 178, 191, 201, 218, 248, 267, 326, 328, 333, 366, 425, 426, 436, 457], "approv": [178, 197], "approxim": [52, 72, 73, 118, 167, 201, 318, 319, 366, 455, 461], "apr": [118, 228, 257], "april": [118, 128, 131, 139, 142, 148, 149, 158, 162, 197, 216, 278], "ar": [0, 3, 4, 6, 7, 10, 11, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 86, 88, 89, 91, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 121, 125, 127, 128, 129, 130, 131, 132, 134, 140, 142, 143, 145, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 187, 189, 190, 191, 197, 198, 199, 201, 203, 204, 206, 207, 218, 219, 221, 225, 227, 230, 233, 234, 235, 236, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 322, 323, 326, 328, 329, 333, 335, 339, 341, 343, 344, 348, 350, 356, 358, 359, 360, 361, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 462, 463, 464, 465, 466, 468, 476, 477, 478, 480, 488, 494, 495], "ar1": [6, 26, 35, 64, 68, 70, 73, 113, 326, 329, 335, 479], "ar3": [68, 335], "arami": 0, "arang": [23, 32, 34, 35, 36, 41, 51, 54, 66, 68, 96], "arbitrari": [6, 23, 67, 78, 163, 180, 187, 308, 339, 341], "arbitrarili": [6, 233, 305, 310], "archi": 74, "architectur": [118, 167, 232, 259], "archiv": 227, "arctanh": 58, "area": [0, 24, 34, 41, 82, 96, 118, 155, 162, 168, 170, 175, 179, 180, 184, 185, 186, 191, 209, 210, 211, 212, 213, 214, 215, 216, 223, 261, 271, 289, 348, 378, 379, 391, 393, 394, 403, 406, 443, 444, 445, 446, 452], "area_left": [210, 211, 212, 213, 214, 215, 289], "area_right": [210, 211, 212, 213, 214, 215, 289], "aren": [130, 162, 189], "arg": [16, 51, 55, 81, 306, 307], "argmax": 12, "argsort": [37, 45, 46, 107], "arguabl": 68, "argument": [2, 6, 10, 11, 15, 16, 17, 18, 19, 21, 22, 32, 38, 43, 45, 46, 50, 51, 53, 58, 61, 69, 71, 82, 89, 90, 91, 96, 106, 110, 113, 121, 128, 129, 130, 132, 134, 139, 140, 142, 143, 144, 145, 147, 148, 150, 153, 154, 155, 156, 157, 159, 162, 170, 171, 173, 175, 177, 178, 179, 183, 187, 189, 242, 246, 254, 255, 281, 291, 304, 305, 306, 307, 308, 329, 339, 341, 344, 355, 358, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 450, 453, 455, 468, 474, 494], "argument_dict": 51, "ariel": [0, 135, 147, 162], "aris": [96, 118, 180, 201, 367, 368], "arithmet": [118, 186], "arm": [154, 162], "armi": 191, "armodel": 317, "aroma": [118, 165, 367, 368], "around": [15, 25, 26, 36, 86, 88, 146, 148, 162, 177, 178, 240, 341, 348, 359, 377, 391, 393, 394, 404, 472, 473, 478], "arr": [61, 361], "arrai": [3, 5, 7, 10, 21, 23, 28, 35, 36, 38, 41, 43, 44, 45, 46, 47, 51, 52, 53, 54, 56, 58, 59, 61, 64, 69, 73, 81, 86, 89, 91, 96, 101, 109, 110, 111, 119, 131, 132, 133, 134, 142, 144, 150, 153, 156, 157, 159, 162, 164, 167, 168, 170, 173, 177, 188, 189, 191, 196, 238, 239, 240, 242, 244, 245, 253, 278, 279, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 349, 351, 359, 360, 363, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 387, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 427, 429, 433, 435, 438, 442, 443, 444, 445, 446, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 466, 468, 469, 470, 471, 472, 476, 477, 478, 486], "arrang": [118, 148, 162, 401, 403, 406, 420, 427, 433, 436, 440, 441, 442, 494], "array_lik": [326, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 438], "arriv": 169, "arrmean": 61, "arrow": [73, 479], "art": [153, 162, 171, 304, 305, 306, 307], "arthur": [0, 51, 118, 126, 135, 137, 140, 162, 169, 207, 253, 312], "articl": [44, 118, 163, 177, 186, 200, 209, 250], "articul": 170, "artifact": [59, 118, 163, 191, 344, 367, 368, 468], "artifici": [118, 201], "arvind": [118, 200, 249], "arxiv": [118, 164, 170, 177, 186, 239, 242], "asanyarrai": 61, "asarrai": [7, 25, 44, 54, 107, 315, 320, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456], "ascend": [155, 162, 354], "ascertain": 179, "asd": 196, "ashbi": [103, 118, 170], "ask": [67, 121, 147, 150, 162, 178, 187, 225], "aspect": [13, 41, 43, 146, 162, 173, 177, 191, 326, 339, 367, 466], "asperg": 246, "assembl": [82, 119, 180], "assert": 32, "assess": [71, 80, 118, 170, 177, 178, 179, 199, 246, 308, 390, 425, 428], "assign": [16, 88, 96, 134, 162, 167, 168, 180, 208, 219, 254, 255, 264, 266, 456, 457, 461, 478], "assist": [118, 164, 238], "associ": [6, 15, 50, 74, 77, 79, 109, 113, 127, 132, 162, 170, 175, 178, 180, 183, 184, 248, 286, 308, 314, 341, 367, 368, 390, 425, 465, 478], "assum": [65, 66, 68, 73, 74, 80, 81, 103, 104, 113, 175, 180, 187, 245, 286, 316, 317, 318, 319, 323, 326, 339, 341, 344, 359, 362, 389, 439, 467, 468], "assumpt": [81, 175, 180, 224], "assur": 65, "astyp": [12, 24, 38, 43, 44, 46, 47, 69, 77, 86, 96, 111], "asv": [163, 178], "asv_benchmark": 178, "aswin": [0, 129, 162], "asym": [201, 250], "asymmetr": [201, 218, 250, 271, 272, 294, 295, 296, 297, 298, 299], "asymmetri": [118, 201], "atla": [9, 12, 24, 29, 49, 51, 53, 62, 85, 93, 96, 99, 111, 116, 118, 121, 126, 128, 129, 130, 132, 134, 138, 139, 141, 142, 143, 144, 147, 150, 153, 154, 155, 156, 158, 159, 162, 166, 168, 177, 184, 190, 191, 193, 237, 238, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 271, 292, 293, 351, 363, 370, 371, 372, 374, 375, 378, 403, 422, 423, 424, 428, 429, 439, 440, 441, 442, 445, 447, 448, 449, 450, 452, 456, 457, 458, 459, 460, 464, 474, 478, 480, 489, 490, 494, 496, 497], "atlantiqu": 0, "atlas": [6, 10, 11, 23, 49, 61, 62, 65, 116, 118, 121, 130, 131, 134, 154, 155, 162, 163, 166, 169, 180, 184, 189, 190, 191, 201, 204, 207, 216, 218, 225, 237, 238, 253, 254, 255, 262, 267, 346, 349, 357, 370, 371, 372, 374, 375, 402, 404, 422, 423, 429, 436, 440, 441, 444, 445, 447, 448, 449, 451, 465, 478, 480, 489, 496, 497], "atlas_data": [12, 21], "atlas_filenam": [21, 55, 57, 59, 165], "atlas_ho_filenam": 11, "atlas_img": [12, 56, 111], "atlas_ju_filenam": 11, "atlas_nam": [254, 255], "atlas_network": 89, "atlas_path": 111, "atlas_region_coord": [56, 165], "atlas_typ": [22, 134, 162, 178, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "atlas_valu": 12, "atlas_yeo": 88, "atlas_yeo_2011": 88, "atlasread": [6, 65, 465], "atleast_2d": [104, 114], "atom": [178, 184], "atr": 223, "att": 54, "attempt": [150, 162, 163, 329], "attent": [77, 80, 333], "attila": [118, 218], "attribut": [38, 47, 51, 52, 53, 86, 91, 120, 121, 129, 130, 132, 134, 145, 154, 155, 157, 158, 159, 162, 164, 167, 168, 169, 175, 189, 191, 201, 204, 228, 238, 239, 240, 247, 251, 253, 256, 267, 269, 270, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 326, 346, 354, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 443, 444, 445, 446, 452, 453, 454, 455, 456, 471, 472, 473, 474, 475, 477, 478], "attributeerror": [146, 162], "au": 41, "auc": [32, 34, 41, 170, 184], "aud": 54, "audio": [67, 68, 70], "audio_comput": [67, 68, 70, 221], "audio_left_hand_button_press": [67, 68, 70, 221], "audio_right_hand_button_press": [67, 68, 70, 221], "audiominusvisu": 70, "auditori": [6, 26, 68, 70, 74, 79, 109, 180, 193, 203, 266, 275, 276, 282, 287], "auditory_bold": 6, "auditory_calculation_vs_baselin": 282, "auditory_imag": 26, "audrei": [0, 127, 162], "august": [118, 140, 147, 159, 162], "aureli": [118, 209], "austin": 0, "australia": 0, "australian": [106, 118, 390], "austria": 0, "author": [0, 118, 163, 177, 178, 187], "autism": [118, 196, 246], "auto": [13, 35, 41, 64, 70, 73, 113, 140, 155, 162, 191, 311, 312, 354, 371, 372, 373, 374, 375, 376, 377, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 427, 429, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 448, 449, 451, 478, 479], "auto_exampl": [8, 29, 48, 62, 75, 84, 99, 115, 117, 185, 187, 450], "auto_examples_jupyt": 116, "auto_examples_python": 116, "auto_fit": 439, "auto_resampl": [72, 345], "autocorrel": 3, "autoformatt": 178, "autogener": 466, "autom": [118, 121, 187, 198, 201, 216, 225, 235, 248, 261, 281, 283], "automat": [3, 16, 17, 20, 23, 26, 35, 36, 43, 57, 91, 94, 96, 105, 113, 118, 119, 125, 128, 140, 142, 154, 155, 156, 162, 163, 168, 175, 178, 187, 189, 190, 191, 205, 246, 252, 260, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 341, 359, 366, 372, 375, 390, 401, 421, 427, 433, 436, 440, 441, 442, 449, 454, 456, 458, 466, 480, 483, 494], "autoregress": [68, 326, 335], "aux_fil": [59, 105], "avail": [0, 3, 16, 24, 25, 33, 42, 45, 65, 70, 77, 82, 91, 96, 104, 110, 113, 121, 128, 150, 155, 162, 165, 168, 171, 173, 177, 178, 179, 183, 186, 187, 197, 201, 207, 219, 222, 227, 230, 233, 234, 236, 246, 250, 253, 259, 267, 276, 278, 280, 285, 309, 310, 329, 379, 439, 444, 478, 495, 497], "avenir": 0, "averag": [6, 10, 25, 32, 39, 52, 54, 71, 96, 118, 134, 153, 156, 162, 167, 171, 172, 182, 183, 184, 201, 210, 211, 212, 213, 214, 218, 222, 246, 289, 304, 305, 356, 361, 367, 378, 439, 443, 445, 446, 454, 478, 480], "avg_method": [129, 131, 155, 162, 443, 445, 446], "aviv": 0, "avoi": 198, "avoid": [10, 24, 55, 56, 57, 61, 72, 132, 145, 150, 159, 162, 163, 175, 177, 178, 180, 189, 290, 304, 305, 306, 307, 314, 339, 341, 348, 353, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 467, 494], "avram": [118, 230, 258], "awai": [71, 177, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "awar": [101, 240, 467], "awesom": [147, 162], "ax": [2, 11, 12, 13, 16, 19, 21, 22, 23, 25, 26, 32, 33, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 60, 64, 66, 67, 68, 70, 71, 77, 80, 81, 82, 86, 89, 90, 93, 98, 103, 104, 106, 109, 110, 113, 114, 132, 144, 154, 155, 162, 358, 359, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "ax1": [46, 66, 77, 80, 426], "ax2": [46, 66, 426], "ax3": 66, "ax_binari": 41, "ax_im": 43, "ax_multi": 41, "ax_pair": 82, "ax_row": 114, "ax_unpair": 82, "axelson": [118, 186], "axesimag": [55, 57, 59], "axessubplot": [6, 67, 68], "axhlin": [36, 401, 403, 406, 408, 410, 412, 414, 416, 418], "axi": [3, 12, 17, 23, 27, 31, 32, 33, 36, 40, 43, 44, 47, 50, 53, 61, 86, 87, 96, 105, 107, 108, 112, 114, 129, 157, 159, 162, 168, 190, 201, 250, 304, 305, 306, 307, 309, 310, 334, 359, 361, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 421, 425, 427, 429, 430, 433, 435, 436, 438, 440, 441, 442], "axial": [6, 15, 96, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 427, 429, 433, 435, 436, 438, 440, 441, 442, 466], "axs1": 71, "axs2": 71, "axvlin": 54, "ayesha": [118, 226], "az1113": 163, "azim": [23, 443, 445, 446], "b": [15, 16, 26, 32, 43, 44, 59, 93, 105, 118, 178, 187, 197, 198, 205, 207, 210, 211, 212, 213, 214, 230, 232, 236, 248, 252, 258, 259, 262, 268, 286, 289, 317, 367, 368, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 494], "b2fd65a88d22090da62c3fb828be840": 4, "b_model001_task002_cope011_tstat1": 112, "ba": 261, "baar": [118, 218], "back": [7, 11, 38, 44, 45, 51, 58, 101, 103, 106, 108, 120, 135, 143, 144, 162, 163, 167, 175, 178, 191, 311, 312, 370, 373, 376, 378, 380, 389, 421, 453, 454, 455], "backend": [33, 35, 37, 38, 39, 42, 45, 46, 47, 51, 53, 56, 60, 61, 101, 106, 109, 128, 137, 147, 152, 157, 160, 162, 312, 447], "background": [3, 9, 10, 11, 15, 16, 17, 23, 24, 29, 32, 33, 43, 47, 52, 59, 70, 93, 94, 96, 108, 113, 114, 116, 120, 128, 131, 134, 138, 140, 142, 143, 144, 145, 147, 150, 153, 159, 162, 178, 184, 190, 191, 201, 236, 254, 255, 261, 262, 274, 280, 304, 305, 306, 307, 311, 312, 371, 373, 374, 376, 378, 382, 385, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 427, 429, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 454, 457, 459, 460, 466, 480, 494, 496, 497], "background_img": [33, 46], "background_label": [52, 59, 93, 191, 371, 374, 378, 422, 459, 462, 480], "backslash": [130, 162], "backward": [144, 157, 162, 178, 254, 255, 464], "bad": [59, 109, 177, 178], "badg": [178, 187], "bag": [174, 309, 310, 497], "balanc": [3, 52, 157, 162, 167], "baldassarr": [118, 176, 201], "ball": [25, 126, 162, 175, 177, 184, 308, 478], "ball_radiu": 25, "ball_sample_point": 25, "baltimor": 0, "band": [54, 61, 159, 162, 246, 367, 467, 468], "band_pass_filt": 246, "bandettini": [26, 118, 175, 186, 308], "bandpass": 58, "bandwidth": 259, "bangalor": 0, "bangaru": [118, 226], "baptist": [51, 52, 74, 118, 121, 164, 167, 169, 203, 225, 239, 276, 281, 283, 311], "bar": [16, 45, 106, 109, 111, 130, 131, 134, 147, 162, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 497], "baratz": [0, 152, 162], "barbar": 0, "barbara": [118, 226], "barcelonabeta": 0, "barch": [61, 118, 197, 207, 208, 264], "barh": [32, 51, 54, 102], "barn": [61, 118, 201, 208, 229, 264, 265, 367, 368], "baronnet": [118, 164, 238], "bart": 65, "basal": [54, 231], "basalganglia": 266, "basc": [138, 162, 193, 237, 250], "basc_multiscale_2015": [20, 111], "base": [2, 7, 9, 21, 29, 30, 31, 36, 41, 47, 48, 50, 51, 52, 54, 57, 58, 63, 64, 68, 72, 75, 76, 83, 84, 90, 91, 93, 94, 100, 101, 102, 109, 115, 116, 118, 121, 127, 129, 130, 132, 134, 138, 142, 150, 153, 155, 158, 162, 164, 165, 166, 167, 169, 170, 173, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 191, 193, 199, 201, 203, 205, 206, 207, 216, 223, 224, 225, 239, 242, 246, 252, 258, 260, 267, 270, 271, 272, 273, 276, 277, 278, 281, 283, 285, 292, 293, 300, 304, 305, 306, 307, 308, 310, 311, 312, 326, 329, 333, 339, 341, 342, 343, 344, 345, 349, 351, 355, 360, 363, 366, 367, 368, 370, 376, 377, 378, 384, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 431, 435, 436, 437, 440, 441, 442, 443, 445, 446, 447, 449, 453, 454, 456, 457, 458, 464, 468, 469, 470, 472, 473, 474, 479, 480, 494, 495, 496, 497, 498], "base_mask": [52, 55, 56, 59, 61], "base_url": 258, "baselin": [6, 32, 34, 118, 153, 154, 162, 171, 173, 200, 249, 314, 334], "basemask": [155, 162], "baseslic": [134, 162, 420], "bash": 187, "basi": [68, 70, 179, 201, 326, 328, 333, 367], "basic": [3, 7, 8, 9, 12, 16, 17, 19, 27, 29, 31, 32, 34, 36, 37, 38, 44, 45, 51, 52, 55, 56, 59, 61, 70, 77, 79, 91, 93, 94, 96, 97, 101, 103, 106, 108, 109, 110, 177, 179, 180, 184, 186, 187, 191, 254, 255, 262, 270, 291, 329, 339, 341, 361, 367, 368, 430, 436, 441, 447, 496], "basic_collection_term": 281, "basic_contrast": [70, 179], "basic_image_term": 281, "bassett": [59, 118, 367, 368], "bastien": [74, 118, 203, 276], "bat": 495, "batch": [107, 112, 312, 453], "batch_siz": [51, 53, 312, 453], "baum": [59, 118, 367, 368], "bayesian": [47, 180], "bayesian_ridg": 47, "bayesianridg": 47, "bazeil": [0, 150, 153, 156, 157, 162], "bazemont": 0, "bbox_to_anchor": 32, "bdg": [178, 187], "beaten": 119, "beauti": 46, "becaus": [3, 6, 12, 16, 19, 32, 33, 34, 38, 42, 45, 46, 47, 57, 68, 71, 72, 81, 86, 104, 105, 106, 111, 113, 127, 150, 162, 163, 165, 170, 175, 177, 178, 180, 187, 281, 305, 309, 310, 437, 443, 445, 446, 450, 452, 478], "beckmann": [118, 164, 197, 232, 259, 367, 368], "becom": [3, 68, 121, 130, 162, 171, 172, 173, 180, 365], "bedetti": [144, 147, 162], "been": [0, 6, 34, 38, 39, 42, 43, 44, 45, 55, 58, 64, 68, 74, 77, 81, 83, 87, 91, 93, 95, 96, 108, 113, 127, 128, 130, 132, 134, 135, 137, 140, 141, 147, 149, 150, 152, 153, 155, 156, 157, 158, 159, 162, 163, 169, 176, 177, 178, 179, 183, 184, 187, 191, 201, 204, 220, 227, 233, 234, 239, 250, 281, 339, 341, 350, 368, 382, 383, 384, 385, 386, 387, 390, 460, 469, 478, 479], "befor": [2, 16, 24, 52, 58, 59, 72, 73, 91, 96, 98, 101, 107, 111, 120, 127, 129, 131, 147, 150, 153, 155, 157, 159, 162, 163, 167, 168, 170, 171, 173, 178, 179, 180, 183, 186, 187, 189, 190, 191, 197, 242, 278, 281, 283, 311, 312, 326, 328, 333, 344, 348, 350, 367, 368, 371, 372, 374, 375, 377, 378, 379, 428, 443, 445, 446, 450, 452, 454, 459, 460, 468, 469, 480, 494], "beforehand": 187, "begin": [43, 65, 68, 72, 111, 153, 162, 178, 184, 197, 467], "beginn": [178, 186], "beh": 65, "behav": [106, 326, 328, 333], "behavior": [2, 16, 19, 21, 22, 32, 33, 36, 37, 38, 41, 43, 45, 46, 51, 53, 77, 79, 89, 90, 98, 101, 106, 110, 118, 120, 128, 129, 130, 134, 135, 137, 144, 147, 154, 159, 160, 162, 170, 171, 173, 174, 178, 184, 188, 191, 196, 197, 227, 232, 238, 250, 251, 259, 278, 366, 428], "behavioral_data": 41, "behavioral_target": 42, "behaviour": [47, 118, 176], "behind": 67, "behren": [118, 197], "behzadi": [118, 350, 367, 368, 469], "beij": 0, "being": [16, 72, 91, 96, 111, 127, 128, 129, 147, 150, 157, 162, 164, 177, 178, 180, 182, 184, 193, 237, 246, 311, 333, 366, 372, 375, 377, 379, 385, 387, 428, 443, 445, 446, 450, 452, 456, 489], "bellec": [0, 118, 147, 148, 162, 201, 250], "belong": [3, 32, 34, 157, 162, 170, 184, 191, 198], "below": [6, 10, 16, 17, 21, 23, 26, 42, 47, 50, 52, 55, 57, 61, 67, 71, 96, 98, 118, 142, 162, 167, 170, 171, 175, 177, 178, 179, 180, 182, 183, 187, 190, 191, 193, 196, 197, 237, 239, 240, 242, 246, 267, 304, 305, 306, 307, 309, 310, 311, 312, 344, 364, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 428, 433, 435, 436, 437, 440, 441, 442, 443, 445, 446, 449, 454, 456, 467, 468, 489, 494, 498], "ben": [0, 59, 118, 122, 123, 125, 135, 137, 162, 368], "benali": [118, 201, 250], "benchmark": [54, 59, 102, 118, 176, 178, 367, 368], "benedetto": 0, "benedict": [118, 226], "benefit": [45, 52, 59, 68, 150, 162, 178, 190], "benjamin": [103, 118, 170, 231, 266], "benjamini": [157, 162, 180, 325], "bennett": [118, 226], "bent": [118, 216], "berg": [118, 197], "berlin": [0, 118, 164, 218, 224, 238, 256], "bertrand": [0, 47, 51, 52, 54, 74, 102, 118, 122, 125, 129, 132, 135, 140, 144, 147, 148, 150, 157, 158, 162, 164, 167, 168, 169, 170, 172, 176, 186, 203, 207, 224, 238, 239, 253, 256, 276, 306, 307, 311, 312, 455, 456, 461], "besid": 186, "besnard": [0, 132, 155, 162], "best": [3, 36, 41, 45, 46, 47, 97, 153, 159, 162, 170, 171, 172, 175, 177, 178, 180, 190, 304, 305, 306, 307, 309, 310, 366, 403, 406, 453, 454], "best_alpha": [304, 305, 306, 307], "best_c": [36, 304, 305, 306, 307], "best_dual": 36, "best_model_params_": [309, 310], "best_penalti": 36, "beta": [6, 26, 28, 42, 45, 68, 100, 115, 116, 118, 130, 158, 179, 184, 197, 273, 278, 304, 305, 306, 307, 313, 316, 317, 318, 319, 326, 329, 345, 370, 376, 377, 403, 431, 442, 447, 496], "beta_map": 103, "betamap": 279, "better": [2, 3, 26, 32, 35, 45, 46, 52, 68, 96, 103, 107, 111, 118, 126, 128, 129, 134, 138, 141, 147, 155, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 177, 179, 190, 239, 440, 456, 478, 497], "between": [2, 7, 10, 17, 23, 24, 25, 26, 32, 43, 45, 52, 53, 54, 58, 65, 68, 70, 72, 74, 77, 79, 81, 82, 88, 98, 102, 103, 106, 109, 111, 113, 132, 135, 142, 147, 150, 153, 156, 162, 164, 165, 166, 168, 170, 171, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 197, 201, 217, 233, 246, 258, 278, 297, 306, 307, 312, 326, 329, 341, 344, 384, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 426, 427, 429, 432, 435, 436, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 454, 465, 466, 468, 478, 480, 497], "bewar": [187, 189], "beyond": [73, 158, 162], "bg_color": [391, 393, 394], "bg_filenam": 45, "bg_img": [3, 6, 17, 18, 26, 31, 32, 35, 38, 43, 45, 70, 71, 72, 73, 77, 90, 95, 113, 120, 144, 150, 156, 162, 170, 191, 326, 339, 366, 436, 440, 441, 442, 449, 466], "bg_map": [10, 23, 24, 39, 70, 114, 437, 443, 445, 446, 450, 452, 494], "bg_on_data": [10, 23, 24, 114, 437, 443, 445, 446, 450, 452], "bgcolor": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "bharat": [118, 226], "bhg087": [118, 205, 252], "bhn256": 118, "bhp157": [118, 197], "bhx179": [118, 230, 258], "bi": 233, "bia": [171, 304, 305, 306, 307, 309, 310], "biap8": [150, 162], "bias": [26, 68, 118], "bib": 118, "bibtex": [128, 159, 162], "bic": [218, 316], "bicr": 223, "bid": [6, 7, 11, 63, 70, 74, 75, 77, 100, 103, 115, 116, 127, 129, 131, 134, 150, 153, 155, 157, 159, 162, 178, 179, 180, 184, 193, 233, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 268, 273, 286, 302, 303, 326, 329, 339, 367, 368, 369, 371, 374, 376, 378, 430, 435, 441, 445, 447, 464, 465, 491, 496], "bielefeld": 0, "big": [3, 35, 44, 52, 65, 147, 162, 167, 170, 178, 189, 191, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "big_fsaverage_mesh": 10, "big_fsaverage_sulc": 10, "big_img": 10, "bigger": [42, 46, 193, 237, 489], "bigler": [118, 196, 246], "bihan": [74, 118, 203, 276], "bilder": [118, 268, 286], "bilkent": 0, "bin": [35, 52, 178, 326, 335, 495], "bin_p_valu": 96, "bin_p_values_and_vt": 96, "bin_p_values_and_vt_img": 96, "binar": [44, 96, 156, 162, 246, 343, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "binari": [43, 44, 68, 77, 127, 134, 159, 162, 184, 187, 191, 272, 304, 305, 306, 307, 309, 310, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 425, 426, 441, 456, 465, 468], "binarize_img": [130, 132, 156, 162], "binary_clos": [272, 295, 298], "binary_dil": [96, 190, 382, 383, 384, 385, 386, 387], "binary_eros": [382, 383, 384, 385, 386, 387], "binary_plt": 41, "binaur": 233, "binder": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 152, 162], "bingen": [118, 176], "binh": [0, 150, 153, 155, 162], "binyam": [61, 118, 208, 264], "biolog": [114, 118, 216], "biologi": 497, "biomed": [51, 118, 169, 227, 311, 312], "biorxiv": [118, 344, 468], "biostatist": [0, 118, 164], "bipolar": [118, 216], "birmah": [118, 186], "birn": 227, "birth": [118, 218], "biswal": [118, 226], "bit": [38, 41, 43, 44, 67, 68, 77, 81, 106, 135, 148, 159, 162, 164, 176, 189, 190, 272], "bitpix": [59, 105], "black": [15, 26, 43, 108, 128, 129, 132, 162, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 433, 435, 436, 438, 440, 441, 442, 449, 450, 452], "black_bg": [6, 14, 15, 26, 38, 72, 156, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 433, 435, 436, 438, 440, 441, 442, 449, 450, 452], "black_blu": 21, "black_green": 21, "black_pink": 21, "blacker": [118, 216], "bland": [134, 162, 425], "blend": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442], "blob": [89, 96, 169, 190, 236, 258], "blobbi": 176, "block": [26, 35, 54, 59, 61, 66, 103, 104, 119, 129, 162, 170, 177, 190, 201, 209, 233, 439, 482], "blog": 7, "blood": [68, 180, 184], "bloomberg": 0, "bludau": 118, "blue": [16, 19, 43, 52, 71, 88, 131, 162], "blues_r": 98, "blueski": 178, "blur": 201, "bm": 163, "bm10": [232, 259], "bm20": [22, 232, 259], "bm70": [232, 259], "bmc": [68, 74, 118, 203, 276], "board": 178, "bodi": [66, 201, 464], "bogdan": [0, 127, 133, 162], "boil": 177, "bold": [3, 6, 17, 19, 27, 31, 32, 34, 36, 37, 38, 51, 65, 66, 67, 68, 70, 78, 81, 96, 103, 104, 106, 113, 118, 120, 121, 129, 130, 150, 154, 162, 169, 170, 179, 181, 184, 189, 207, 217, 223, 233, 253, 270, 280, 329, 364, 367, 368, 469, 497], "bonferroni": [6, 83, 106, 109, 110, 175, 180, 184, 342, 466, 479], "boo": [0, 144, 147, 150, 162], "book": [148, 162], "bool": [47, 96, 107, 111, 238, 239, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 264, 266, 267, 270, 271, 272, 273, 276, 278, 279, 280, 281, 283, 285, 290, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 323, 326, 339, 341, 342, 343, 344, 345, 348, 350, 354, 356, 357, 358, 359, 360, 363, 364, 365, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 425, 426, 427, 428, 429, 430, 431, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 465, 466, 467, 468, 469], "boolean": [96, 121, 154, 159, 162, 308, 357, 377, 462, 463, 468], "bootstrap": [118, 250], "border": [82, 348, 382, 385, 391, 393, 394], "border_s": [382, 385], "borderpad": [391, 393, 394], "bori": [118, 186], "boston": 0, "both": [3, 4, 6, 10, 16, 25, 39, 42, 50, 52, 54, 61, 66, 70, 81, 82, 87, 91, 96, 98, 103, 109, 111, 113, 114, 121, 129, 130, 132, 134, 150, 157, 162, 163, 164, 167, 169, 175, 176, 178, 179, 184, 189, 190, 191, 196, 197, 219, 228, 238, 245, 257, 267, 292, 326, 328, 333, 341, 342, 344, 363, 378, 379, 380, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 435, 437, 439, 442, 443, 444, 445, 446, 452, 456, 458, 468, 472, 473, 474, 478, 495], "both_hemispher": 10, "botteron": [118, 201, 218], "bottl": [32, 34, 35, 36, 41, 189], "bottleneck": 177, "bottom": [13, 16, 27, 41, 43, 69, 163, 190, 439], "bottomrul": 65, "bougacha": [0, 122, 125, 135, 137, 144, 147, 148, 162], "bound": [15, 86, 91, 134, 143, 150, 162, 190, 311, 359, 391, 393, 394, 427, 428, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 450, 452], "boundari": [165, 175, 190, 404, 440, 441, 443, 445, 446], "bounding_box": [391, 393, 394], "boundingboxerror": 359, "bowr": [118, 425], "box": [86, 101, 108, 143, 162, 171, 178, 190, 231, 359], "boxplot": [37, 96], "boyd": 118, "brad": [118, 176], "bradford": [118, 216], "bradlei": [61, 118, 197, 201, 208, 216, 229, 231, 264, 265, 266, 367, 368], "brain": [0, 2, 3, 4, 6, 7, 10, 16, 21, 22, 23, 24, 26, 29, 33, 34, 35, 38, 39, 41, 42, 44, 46, 47, 49, 55, 57, 58, 62, 64, 68, 70, 71, 73, 78, 80, 81, 82, 87, 91, 94, 96, 99, 101, 103, 104, 108, 111, 112, 113, 118, 120, 121, 128, 134, 135, 138, 140, 141, 142, 144, 145, 147, 148, 150, 153, 155, 156, 162, 164, 166, 170, 171, 172, 173, 175, 176, 178, 179, 180, 184, 185, 186, 187, 189, 191, 193, 196, 197, 198, 201, 204, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 237, 238, 239, 246, 248, 250, 251, 253, 254, 256, 257, 259, 261, 264, 265, 266, 267, 270, 271, 272, 278, 280, 281, 283, 289, 294, 297, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 344, 346, 349, 351, 356, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 429, 433, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 464, 468, 479, 480, 483, 486, 489, 495, 496, 497], "brain_color": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "brain_mask": [58, 103], "brain_parcel": [230, 258], "brain_parcellation_cambridge_basc_multiscale_": 201, "brain_time_seri": 58, "brainhack": [138, 143, 162], "brainlin": 280, "brainmap": [2, 22, 232, 259], "brainmask": 343, "brainom": [118, 147, 162, 193, 276], "brainomics_data": [79, 109], "brainomics_loc": [18, 78, 79, 81, 82, 83, 109, 110], "brainpedia": 121, "brainpedia_subset": 121, "brainsprit": [147, 148, 162, 494], "brammer": [118, 186], "branch": [159, 162, 163, 178, 187], "brandon": [118, 196, 246], "braver": [118, 175], "break": [2, 85, 99, 116, 142, 162, 167, 175, 178, 187, 262, 441, 447, 457, 496], "breakag": 314, "breath": [67, 68, 77], "breez": [118, 216], "brest": 0, "brian": [118, 176, 216, 226, 344, 468], "bridg": 101, "brief": [96, 178, 180], "briefli": 175, "brien": [118, 216], "brigham": 0, "bright": 91, "brighter": 120, "bring": [43, 51, 172, 178, 186, 389], "brisban": 0, "brito": [0, 129, 162], "broader": [183, 196], "brodmann": 261, "brok": [125, 162], "broke": [149, 162], "broken": [88, 140, 148, 162, 175], "brought": 191, "brown": [118, 226], "brows": [61, 121, 157, 162, 225, 480], "browsabl": 163, "browser": [2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 147, 150, 152, 162, 191, 326, 339, 404, 448, 449, 450, 451, 452, 464, 466, 494], "bruce": [23, 118, 205, 210, 211, 212, 213, 214, 216, 230, 236, 252, 258, 260, 262, 289], "bruno": [118, 201], "brute": 177, "bryan": [118, 200, 249], "bsd": 0, "buck": [0, 128, 162], "bucket": 65, "buckner": [118, 201, 216, 227, 230, 236, 258, 262], "buf": 111, "buffer": 111, "bug": [125, 128, 129, 132, 133, 140, 141, 142, 146, 159, 186, 187, 443, 445, 446, 479, 480], "bugfix": [124, 125, 136, 137, 140, 158, 162, 178], "build": [12, 19, 22, 44, 49, 52, 53, 54, 61, 103, 116, 119, 127, 128, 129, 130, 132, 142, 162, 166, 171, 173, 175, 180, 189, 191, 326, 454, 497], "build_doc": 163, "build_tool": [163, 187], "built": [16, 45, 51, 128, 131, 162, 163, 180, 187, 304, 305, 306, 307, 454, 479, 480], "builtin": [127, 162], "buitelaar": [118, 367, 368], "bullmor": [118, 165], "bump": [127, 130, 132, 147, 150, 155, 156, 157, 162, 171, 173, 187], "bunch": [83, 120, 130, 142, 162, 178, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292], "burden": 178, "burkhardt": [0, 132, 162], "burn": 178, "busa": [118, 205, 252], "bush": [103, 118], "busi": [118, 390], "bustillo": [118, 200, 249], "butterworth": [61, 127, 128, 155, 159, 162, 344, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 468], "butterworth__": [344, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 468], "butterworth__padtyp": 61, "butterwoth": [155, 162], "button": [61, 68, 70, 74, 78, 79, 81, 82, 109, 157, 162, 178, 180, 274, 276, 284, 301, 480], "bwr": [20, 24, 39, 148, 162, 432], "bwr_r": 20, "byte": [3, 4, 6, 10, 18, 22, 42, 67, 72, 104, 105, 111, 157, 162, 353, 359], "bzdok": [0, 122, 123, 125, 126, 135, 137, 162], "c": [3, 26, 36, 41, 43, 44, 45, 46, 47, 52, 59, 61, 71, 101, 102, 106, 114, 118, 121, 171, 175, 178, 197, 198, 201, 205, 208, 216, 218, 223, 225, 227, 229, 232, 235, 250, 252, 259, 261, 264, 265, 271, 272, 280, 281, 283, 294, 295, 296, 297, 298, 299, 318, 319, 344, 359, 360, 367, 368, 389, 390, 459, 462, 468], "c0": 66, "c1": 66, "c3": 66, "c43afa": 11, "c_ra": [159, 162], "ca": 218, "cac0ef0f4307834e60fedd2a0448862a": 67, "cach": [45, 46, 52, 106, 126, 135, 162, 167, 239, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 345, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 454, 455, 456, 478], "caffo": [118, 344, 468], "caglar": [0, 159, 162], "caitlin": [118, 226], "cakan": [0, 159, 162], "cal_max": [59, 105], "cal_min": [59, 105], "calc_beta": 317, "calcul": [0, 3, 33, 41, 44, 50, 51, 61, 94, 100, 115, 116, 128, 134, 148, 162, 179, 203, 275, 276, 304, 305, 306, 307, 311, 312, 316, 318, 319, 334, 341, 349, 363, 367, 370, 373, 376, 383, 386, 390, 401, 418, 427, 433, 436, 440, 441, 442, 447, 449, 454, 466, 496], "calculu": 44, "calhoun": [26, 118, 200, 226, 249], "california": 0, "call": [2, 4, 6, 10, 15, 16, 17, 35, 51, 52, 53, 55, 56, 59, 61, 68, 70, 74, 78, 83, 89, 91, 93, 96, 101, 108, 120, 121, 130, 132, 150, 162, 163, 164, 165, 167, 168, 170, 171, 175, 177, 178, 179, 180, 183, 184, 187, 189, 191, 195, 201, 238, 240, 242, 250, 262, 281, 283, 286, 305, 310, 312, 315, 320, 329, 344, 354, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 428, 429, 438, 454, 468, 472, 494], "callabl": [121, 157, 162, 242, 281, 304, 305, 306, 307, 308], "caller": [274, 275], "cambridg": [0, 201], "camelcas": 178, "cameron": [59, 118, 164, 165, 204, 224, 226, 251, 256], "camil": [118, 121, 225, 281, 283, 425], "campagn": [118, 209], "can": [0, 2, 3, 4, 6, 7, 10, 11, 12, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 31, 32, 34, 35, 36, 38, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 121, 127, 128, 130, 131, 132, 133, 134, 135, 138, 140, 142, 147, 148, 150, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 189, 190, 191, 193, 197, 206, 207, 224, 225, 227, 228, 237, 239, 240, 242, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 262, 276, 278, 281, 285, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 326, 328, 329, 333, 339, 341, 344, 345, 346, 351, 354, 355, 356, 359, 360, 363, 364, 366, 367, 368, 373, 376, 379, 382, 383, 384, 385, 386, 387, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 426, 427, 428, 429, 430, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 456, 457, 458, 464, 465, 466, 467, 468, 478, 479, 480, 489, 494, 495, 497], "canada": 0, "canadian": 0, "cancel": 171, "candid": 102, "canica": [53, 127, 128, 134, 145, 156, 162, 166, 184, 312, 373, 480, 497], "canica_components_img": 51, "canica_resting_st": 51, "canni": 494, "cannon": [118, 268, 286], "cannot": [3, 38, 43, 44, 51, 54, 59, 65, 81, 88, 94, 103, 104, 106, 113, 121, 147, 159, 162, 163, 164, 170, 173, 178, 191, 329, 363, 449, 450, 452, 472, 473], "canon": [6, 35, 53, 68, 70, 86, 113, 140, 162, 184, 195, 311], "cap": [79, 81], "capabl": [70, 131, 157, 162, 191], "capit": 223, "caprihan": [118, 200, 249], "captur": [24, 54, 61, 68, 107, 165, 166, 167, 170, 203, 238, 276], "care": [54, 102, 120, 170, 171, 173, 177, 187, 231, 313], "carefulli": 113, "carpet": [9, 29, 116, 131, 153, 162, 247, 271, 345, 357, 384, 428, 496], "carpet_plot": [159, 162], "carri": [180, 184], "carrier": [118, 197], "case": [13, 16, 24, 26, 36, 41, 43, 50, 51, 52, 53, 57, 61, 65, 67, 68, 69, 74, 86, 91, 93, 94, 98, 103, 104, 105, 111, 113, 121, 140, 150, 153, 162, 164, 165, 167, 170, 171, 175, 177, 186, 187, 189, 198, 245, 248, 252, 254, 255, 304, 305, 306, 307, 309, 310, 326, 328, 333, 339, 341, 342, 351, 359, 360, 361, 362, 365, 366, 372, 373, 374, 375, 376, 377, 384, 422, 427, 428, 429, 433, 435, 436, 437, 440, 441, 442, 449, 465, 466, 478, 480, 494], "cast": [132, 137, 150, 162, 191, 198, 248, 357], "castellano": [118, 226], "castillo": [26, 118], "cat": [32, 34, 35, 41, 101, 120, 170, 185, 189], "catarina": [118, 235, 261], "catch_warn": [34, 42, 72, 107], "categor": [171, 187], "categori": [32, 34, 35, 42, 101, 106, 120, 170, 172, 178, 189, 270], "caterina": [118, 231, 266], "caus": [46, 50, 51, 52, 86, 133, 135, 162, 187, 362], "caution": 362, "cautious": [144, 162], "caveat": [118, 170], "cavi": [118, 205, 216, 252], "cbar": 41, "cbar_tick_format": [6, 27, 154, 157, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 435, 436, 437, 441, 442, 443, 445, 446], "cbar_vmax": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 443], "cbar_vmin": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 443], "cbf": 121, "cbig": [230, 236, 258], "cbv": 121, "cc": 246, "cc0": 225, "cd": [51, 53, 178, 187, 312], "cd3e4e": 11, "ce": [326, 329, 339, 466], "cea": [0, 203], "cecil": [118, 186], "ceil": 104, "cell": [3, 10, 17, 23, 38, 52, 55, 56, 57, 61, 65, 77, 79, 180, 184], "censor": [130, 159, 162, 468], "center": [0, 13, 15, 38, 50, 53, 54, 58, 61, 64, 81, 102, 109, 110, 114, 148, 159, 162, 165, 168, 191, 198, 216, 220, 227, 238, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 428, 432, 453, 454, 456, 465, 478], "cento": 201, "centr": 0, "central": [0, 93, 246, 425], "centroid": [404, 453], "cercor": [118, 197, 205, 230, 252, 258], "cereb": 54, "cerebellar": [231, 266], "cerebellum": [61, 118, 197, 208, 231, 264, 266], "cerebr": [118, 180, 197, 203, 205, 208, 216, 230, 236, 252, 258, 262, 264, 276], "cerebrospin": [12, 59, 218, 271, 367], "certain": [6, 17, 59, 98, 113, 147, 162, 170, 178, 180, 187, 197, 281, 359, 363, 440], "certif": 197, "cf": [118, 191, 197], "cff": [163, 178], "cfg": [158, 162], "chain": [96, 190, 238, 239], "chair": [30, 32, 34, 35, 41, 48, 116, 128, 162, 189, 270, 306, 351, 356, 439, 442, 447, 496], "challeng": 164, "chamma": [0, 127, 128, 129, 156, 157, 159, 162], "chan": 0, "chanc": [6, 35, 39, 54, 79, 81, 154, 162, 174, 175, 180], "chance_level": 35, "chandra": 0, "chang": [15, 16, 20, 41, 43, 45, 54, 65, 69, 70, 105, 106, 109, 110, 111, 123, 163, 171, 173, 177, 178, 180, 187, 188, 238, 239, 240, 289, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 334, 339, 353, 357, 359, 362, 363, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 390, 437, 443, 445, 446, 450, 452, 453, 454, 455, 456, 459, 460, 462, 465, 468, 478, 495], "changelog": [127, 142, 187], "channel": [147, 162], "chaogan": [118, 226], "chapra": [0, 132, 162], "chapter": [190, 191], "charact": [159, 162, 335], "character": [67, 68, 118, 186, 218, 367], "characterist": [41, 80, 170, 184, 368], "chawla": [0, 147, 148, 149, 150, 151, 152, 153, 162], "cheap": 171, "check": [2, 3, 11, 13, 16, 22, 26, 66, 79, 95, 96, 105, 109, 120, 128, 131, 132, 137, 140, 162, 163, 165, 170, 173, 177, 178, 184, 186, 187, 189, 191, 238, 239, 240, 242, 272, 291, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 327, 339, 354, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 453, 454, 455, 456, 494], "check_ev": [129, 162], "check_look_up_t": 178, "check_mask_img": 178, "check_matplotlib": [25, 40, 43, 47, 52, 69, 80, 93, 109, 110, 114], "check_random_st": [46, 47], "checkerboard": [68, 74, 82, 276], "checklist": 163, "checkmk": 0, "checkout": [142, 162, 178, 187], "chee": [39, 118], "chen": [0, 26, 39, 118, 132, 159, 162, 197], "cheung": [118, 226], "chevali": [0, 147, 150, 162], "chiang": [144, 162], "chieti": 0, "child": [0, 54, 267], "child_adult": [54, 102], "childmind": 196, "children": [51, 102, 150, 162, 185, 206, 267], "china": 0, "chiu": [118, 216], "choic": [10, 20, 68, 69, 114, 137, 162, 164, 165, 171, 173, 174, 177, 178, 240, 251, 309, 310, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 456], "choos": [15, 16, 25, 35, 36, 47, 50, 89, 113, 173, 174, 180, 191, 304, 305, 306, 307, 368, 427, 429, 433, 435, 436, 438, 440, 441, 442, 453, 454, 466, 478, 497], "chose": 170, "chosen": [23, 36, 68, 103, 163, 177, 238, 443, 445, 446, 449, 450, 452, 478], "chri": [0, 122, 135, 150, 162], "christian": [0, 118, 128, 144, 147, 162, 164, 197, 232, 259, 367, 368], "christin": [52, 118, 226], "christina": [0, 61, 118, 130, 162, 208, 264], "christo": [59, 118, 367, 368], "christoph": [23, 118, 144, 147, 162, 205, 252, 260], "chun": [39, 118], "chunk": [3, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 101, 106], "church": [61, 118, 208, 229, 264, 265], "chyzhyk": [54, 102, 118], "ci": [178, 187, 316, 318, 319], "cibit": 0, "cidx": 81, "cing": 54, "cingul": [24, 58, 61, 64, 93, 179, 198], "cingulo": 61, "cinguloopercular": 266, "cionca": [0, 129, 162], "cipollini": [0, 122, 123, 125, 135, 137, 162], "circl": 86, "circleci": [137, 142, 162, 163], "circular": [78, 201], "ciric": [59, 118, 367, 368], "cisler": [103, 118], "citat": [0, 163, 178], "cite": [167, 203, 219, 224, 256, 267, 276], "cit\u00e9": 0, "ciuciu": [118, 209, 311], "civet": [118, 201], "clair": [118, 197], "clare": [118, 197, 226, 232, 259], "clarifi": [68, 155, 162], "clariti": 56, "clark": [0, 118, 127, 162, 175, 200, 249], "class": [3, 7, 10, 30, 45, 46, 48, 52, 54, 57, 59, 61, 93, 96, 101, 102, 105, 116, 126, 127, 128, 130, 132, 133, 134, 135, 137, 143, 144, 145, 148, 150, 153, 155, 156, 157, 159, 162, 169, 170, 174, 177, 178, 179, 183, 191, 238, 239, 240, 270, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 326, 339, 345, 357, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 427, 429, 433, 435, 436, 438, 439, 440, 441, 442, 447, 453, 454, 455, 456, 457, 458, 464, 470, 471, 472, 473, 474, 475, 480, 483, 496, 497], "class_prior": [304, 305, 306, 307], "classes_": [41, 304, 305, 306, 307, 309, 310], "classic": [31, 36, 96, 171, 189, 217], "classif": [3, 32, 33, 34, 35, 37, 41, 46, 49, 52, 62, 101, 103, 116, 118, 120, 130, 153, 162, 164, 169, 170, 174, 175, 176, 184, 185, 186, 196, 238, 246, 256, 267, 304, 305, 306, 307, 309, 368, 370, 375, 429, 439, 447, 495, 496, 497], "classifi": [3, 30, 34, 35, 38, 41, 44, 48, 54, 101, 102, 116, 150, 153, 154, 162, 170, 171, 172, 173, 174, 184, 185, 186, 270, 304, 306, 307, 308, 309, 349, 351, 356, 442, 447, 496], "classification_accuraci": [35, 101], "classification_target": [32, 34], "classifier_nam": 32, "classifiers_data": 32, "classmethod": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 474], "claus": 0, "clean": [33, 35, 42, 43, 46, 52, 53, 55, 56, 59, 61, 65, 71, 77, 107, 118, 127, 128, 130, 132, 134, 140, 146, 147, 150, 154, 155, 157, 162, 187, 190, 191, 238, 311, 312, 326, 344, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 428, 454, 456], "clean__": [344, 371, 372, 373, 374, 375, 376, 377], "clean__butterworth__": [344, 371, 372, 373, 374, 375, 376, 377], "clean__sample_mask": [130, 162], "clean_arg": [52, 55, 56, 57, 59, 61, 91, 93, 94, 134, 162, 191, 378, 379, 380, 480], "clean_img": [71, 130, 134, 140, 142, 147, 157, 162, 190, 468], "clean_kwarg": [52, 55, 56, 59, 61], "clean_map": [6, 26], "cleaned_sign": 468, "cleaner": [51, 68, 147, 162], "cleanup": 111, "clear": [41, 96, 121, 127, 132, 150, 159, 162, 178, 304, 305, 306, 307, 311, 312, 373, 376, 454], "clearer": [45, 178], "clearli": [129, 157, 162, 178, 193, 237, 489], "clever": [120, 177], "clf": [44, 144, 162], "cli": 182, "click": [26, 121, 163, 180, 191, 276, 494], "clikc": 163, "clinic": [0, 26, 54, 102, 118, 171, 186], "clip": [61, 86, 359, 360], "cllip": 360, "clock": 177, "clone": 178, "close": [16, 24, 39, 43, 52, 88, 111, 157, 162, 164, 171, 177, 178, 180, 184, 272, 304, 305, 306, 307, 382, 383, 384, 385, 386, 387, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 461, 494], "closer": [43, 52, 177, 465], "closest": [86, 359], "cluster": [6, 20, 26, 33, 35, 42, 49, 62, 64, 65, 70, 73, 76, 77, 81, 83, 84, 88, 93, 104, 113, 116, 118, 127, 128, 134, 150, 153, 157, 158, 159, 162, 166, 172, 173, 175, 180, 183, 184, 185, 186, 198, 204, 250, 251, 267, 276, 306, 307, 321, 326, 335, 339, 341, 342, 349, 351, 356, 363, 374, 390, 410, 433, 439, 441, 442, 447, 453, 454, 455, 459, 461, 462, 465, 466, 479, 480, 496, 497], "cluster_level_infer": [78, 157, 162, 183], "cluster_percentil": [306, 307], "cluster_roi": [204, 251], "cluster_s": [158, 162], "cluster_threshold": [6, 26, 64, 65, 71, 83, 98, 157, 162, 326, 339, 342, 363, 366, 465, 466], "clustering_percentil": [306, 307], "cm": [13, 21, 41, 53, 61, 129, 147, 162, 168, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 494], "cma": 216, "cmap": [3, 6, 10, 11, 13, 15, 17, 20, 21, 23, 24, 26, 33, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 71, 72, 78, 79, 81, 82, 83, 88, 89, 91, 93, 94, 96, 98, 106, 109, 110, 114, 129, 148, 150, 159, 162, 168, 191, 203, 274, 275, 276, 372, 373, 374, 375, 376, 378, 379, 380, 425, 427, 428, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 480, 494], "cmap_filenam": [83, 110], "cmap_label": [159, 162, 428], "cmaps_leftauditoryclick": [79, 109], "cmrmap_r": [52, 55, 56, 57, 59, 93, 372, 373, 374, 375, 480], "cn2h9c": [118, 164, 238], "cnr": [0, 198, 248], "co": [5, 25, 86, 118, 179, 197, 210, 211, 212, 213, 214, 235, 261, 289], "coactiv": 169, "coalson": [61, 118, 208, 264], "coars": 39, "cobr": [129, 138, 142, 162], "code": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 168, 169, 171, 173, 177, 179, 184, 191, 246, 308, 312, 326, 339, 372, 375, 377, 379, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 438, 456, 464, 466, 479, 480, 488, 491, 495], "codebas": [129, 162, 163, 178], "codecov": [142, 162], "coef": [33, 47, 101, 326, 335], "coef_": [3, 43, 47, 101, 114, 120, 178, 304, 305, 306, 307, 309, 310], "coef_img": [3, 32, 46, 114, 120], "coef_img_": [3, 31, 32, 33, 42, 45, 46, 114, 170, 191, 304, 305, 306, 307, 309, 310], "coeffici": [3, 6, 24, 41, 42, 43, 47, 54, 101, 102, 134, 143, 159, 162, 164, 170, 171, 172, 176, 177, 178, 180, 184, 238, 240, 305, 309, 310, 315, 317, 320, 326, 335, 466], "coerc": [12, 290], "coffe": [35, 65], "coffei": [118, 226], "cognit": [0, 41, 74, 103, 107, 118, 170, 180, 184, 191, 203, 222, 227, 232, 233, 259, 268, 276, 286], "cognitive_paradigm_cogatla": 112, "cohen": [61, 118, 208, 229, 264, 265], "coher": [184, 186], "cohort": [54, 102], "coil": 71, "coimbra": 0, "col": [41, 316, 318, 319], "colcomb": [118, 226], "cold_hot": [13, 26, 45, 46, 146, 162], "colin": [0, 150, 162], "colin27": 219, "colinear": 68, "collaps": [70, 77, 104, 113], "collect": [61, 103, 107, 112, 118, 119, 163, 178, 184, 196, 200, 204, 223, 225, 281, 282, 283, 284, 367, 472, 473, 497], "collection_1257": 107, "collection_1952": 107, "collection_4008": 107, "collection_413": 112, "collection_42": 112, "collection_423": 112, "collection_79": 107, "collection_98": 112, "collection_filt": [121, 281], "collection_id": [107, 112, 121, 281, 283], "collection_metadata": [121, 281], "collection_term": [121, 281], "collections_meta": [121, 225, 281, 282, 283, 284], "colleg": [0, 184], "collin": [118, 198, 201, 218, 248], "color": [10, 11, 15, 16, 19, 22, 25, 26, 32, 34, 36, 41, 52, 53, 54, 71, 88, 90, 111, 130, 131, 133, 134, 148, 150, 153, 155, 159, 162, 167, 168, 178, 180, 187, 236, 372, 374, 375, 376, 378, 379, 380, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 480, 494], "color_map": 13, "color_map_nam": 13, "colorado": 0, "colorbar": [2, 10, 11, 15, 16, 21, 22, 24, 26, 27, 38, 41, 43, 51, 53, 60, 71, 81, 88, 89, 90, 96, 98, 104, 107, 114, 125, 127, 130, 131, 139, 142, 147, 148, 150, 154, 155, 156, 157, 158, 162, 168, 190, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 452, 494], "colorbar_fonts": [448, 450, 452], "colorbar_height": [448, 450, 452], "colormap": [6, 9, 15, 20, 22, 24, 26, 29, 88, 116, 131, 134, 142, 145, 146, 147, 148, 150, 155, 162, 262, 301, 372, 374, 375, 376, 378, 379, 380, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 425, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 496, 497], "colors_17": [236, 262], "colors_7": [236, 262], "column": [3, 6, 11, 41, 59, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 101, 103, 104, 109, 110, 113, 121, 129, 130, 134, 154, 162, 180, 239, 240, 242, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 304, 305, 306, 307, 313, 316, 317, 318, 319, 324, 326, 333, 339, 340, 341, 344, 359, 366, 367, 368, 369, 371, 374, 378, 390, 401, 403, 406, 420, 427, 430, 431, 433, 434, 436, 439, 440, 441, 442, 445, 463, 465, 466, 467, 468, 469, 480], "column_nam": [65, 369], "column_or_1d": [109, 110], "com": [0, 20, 159, 162, 163, 178, 218, 226, 230, 231, 236, 250, 258, 368, 494, 495], "combin": [6, 7, 16, 43, 44, 73, 106, 108, 111, 118, 127, 130, 156, 162, 163, 170, 175, 180, 184, 191, 197, 201, 216, 219, 223, 231, 246, 280, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 341, 367, 409, 410, 413, 414, 415, 416, 430], "come": [2, 3, 11, 17, 45, 55, 57, 61, 77, 82, 96, 120, 128, 131, 162, 165, 170, 171, 177, 178, 186, 187, 190, 191, 267, 494], "comer": 186, "comfort": [120, 178], "comma": 189, "command": [178, 186, 187, 495], "comment": [178, 191], "commerci": [196, 199, 201, 203, 204, 206, 207, 224, 251], "commit": 187, "commit_sha": 187, "committe": 197, "commod": 177, "common": [12, 26, 52, 68, 69, 72, 96, 103, 142, 150, 156, 158, 162, 164, 170, 173, 175, 177, 178, 180, 183, 188, 190, 196, 201, 204, 234, 242, 251, 351, 359, 360, 364, 373, 385, 387], "commonli": [54, 167, 179, 184, 186, 191, 368], "commun": [0, 118, 178, 185, 187, 196, 206, 267, 495], "comp": [51, 200, 249], "compact": [2, 96, 190, 272], "compar": [3, 6, 11, 32, 33, 35, 37, 42, 44, 49, 54, 59, 61, 62, 66, 68, 79, 81, 82, 85, 88, 96, 99, 102, 105, 111, 116, 118, 121, 123, 134, 150, 162, 165, 166, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 182, 184, 191, 204, 224, 238, 240, 253, 256, 262, 267, 346, 349, 355, 356, 357, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 402, 422, 423, 426, 429, 442, 447, 468, 480, 494, 496, 497], "compare_load": 178, "comparison": [45, 52, 54, 60, 65, 68, 83, 95, 102, 103, 106, 111, 118, 121, 134, 162, 164, 167, 174, 175, 176, 181, 184, 187, 200, 204, 249, 497], "compat": [10, 38, 43, 44, 70, 74, 81, 113, 128, 130, 137, 157, 159, 162, 173, 178, 179, 238, 239, 240, 254, 255, 311, 312, 326, 339, 341, 351, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 430, 453, 454, 455, 456, 464, 468], "compcor": [59, 68, 118, 130, 157, 162, 165, 267, 350, 367, 368, 469], "complementari": [98, 118, 222], "complet": [26, 36, 63, 75, 96, 116, 120, 121, 150, 162, 163, 164, 170, 172, 179, 187, 190, 191, 268, 270, 286, 303, 326, 329, 366, 369, 376, 390, 427, 428, 429, 430, 433, 435, 436, 438, 439, 440, 441, 442, 447, 454, 465, 479, 496], "complex": [68, 79, 89, 118, 121, 170, 172, 175, 178, 183, 186, 191], "compli": [178, 197, 367, 370], "complianc": [129, 134, 162, 178], "compliant": [103, 128, 134, 162, 178, 191, 286, 302, 368, 441, 445], "complic": [177, 189, 316, 318, 319], "compon": [7, 51, 53, 57, 68, 94, 96, 100, 115, 116, 118, 135, 142, 143, 145, 153, 162, 165, 166, 167, 168, 180, 184, 189, 190, 200, 201, 238, 239, 240, 249, 259, 267, 278, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 326, 339, 351, 353, 356, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 424, 442, 447, 453, 454, 455, 456, 457, 458, 469, 483, 496], "component_img": 108, "components_": [107, 145, 162, 311, 312], "components_img": [51, 53, 168], "components_img_": [51, 53, 145, 162, 168, 169, 311, 312], "components_mask": [94, 108], "compos": [21, 101, 184, 190, 191, 196, 265, 304, 305, 306, 307], "composit": [36, 41], "comprehens": [118, 178, 186, 201, 203, 276, 302], "compress": [51, 118, 147, 162, 166, 169, 189, 312], "compressed_img_rena": 52, "compris": [66, 68, 88, 457, 465], "compromis": [180, 368], "comptat": 68, "comput": [0, 3, 6, 10, 16, 17, 23, 24, 26, 27, 31, 32, 33, 35, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 54, 64, 65, 66, 67, 68, 69, 70, 72, 74, 77, 79, 81, 83, 85, 87, 92, 94, 97, 101, 102, 103, 104, 106, 107, 108, 111, 113, 114, 116, 118, 119, 121, 129, 132, 135, 147, 153, 154, 155, 157, 162, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 184, 185, 186, 188, 189, 192, 238, 240, 242, 256, 267, 270, 280, 289, 292, 293, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 322, 323, 325, 326, 328, 333, 335, 339, 341, 342, 349, 350, 351, 354, 355, 356, 357, 361, 363, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 424, 429, 432, 433, 439, 440, 441, 442, 447, 448, 450, 453, 454, 455, 456, 464, 466, 467, 469, 478, 479, 486, 494, 497], "computation": [68, 171, 175], "computationminussent": 70, "computationnali": 171, "compute_alpha_max": 177, "compute_background_mask": [190, 304, 305, 306, 307, 311, 312, 373, 376, 454], "compute_brain_mask": [153, 156, 162, 190, 304, 305, 306, 307, 311, 312, 373, 376, 386, 454], "compute_contrast": [6, 26, 35, 64, 65, 67, 68, 70, 71, 72, 73, 77, 78, 79, 81, 82, 83, 103, 104, 113, 127, 130, 131, 132, 162, 179, 182, 326, 339, 341, 466], "compute_epi_mask": [12, 27, 71, 91, 190, 191, 304, 305, 306, 307, 311, 312, 373, 376, 454], "compute_fixed_effect": [73, 182], "compute_gray_matter_mask": [153, 157, 162], "compute_multi_background_mask": [132, 162, 190, 373], "compute_multi_brain_mask": [51, 127, 156, 162, 373], "compute_multi_epi_mask": [127, 162, 190, 373], "compute_multi_gray_matter_mask": [127, 162], "compute_multi_grey_matter_mask": [156, 162], "compute_regressor": [69, 128, 157, 162, 179], "computed_regressor": 328, "con": [13, 322], "con_id": [69, 328], "con_val": 322, "concat_img": [2, 12, 72, 103, 111, 134, 141, 162, 190, 351], "concat_niimg": [130, 162], "concaten": [39, 41, 50, 52, 56, 60, 103, 111, 164, 190, 345, 351, 367, 456], "concentr": [46, 178, 180, 184], "concept": [68, 101, 150, 162, 170, 171, 178, 184, 188, 219, 497], "conceptu": 180, "concern": [178, 184], "concis": 281, "concordia": 0, "concret": [67, 111, 178, 180], "concurr": [33, 35, 37, 38, 39, 42, 45, 46, 47, 51, 53, 56, 60, 61, 101, 104, 106, 109], "cond": [96, 103, 328], "cond_": 65, "cond_id": [157, 162], "cond_map": 96, "conda": [178, 495], "condit": [3, 6, 26, 31, 32, 33, 35, 37, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 82, 96, 101, 104, 106, 113, 120, 132, 154, 157, 159, 162, 164, 170, 177, 182, 184, 187, 190, 207, 209, 217, 233, 234, 253, 326, 328, 333, 339, 341, 430], "condition_": 35, "condition_count": 103, "condition_effect": 82, "condition_id": 74, "condition_mask": [3, 31, 32, 33, 36, 38, 39, 101, 106, 120], "condition_mask_test": 33, "condition_mask_train": 33, "condition_nam": [96, 103], "conditions_encod": 106, "conditions_label": 35, "conditions_per_run": 106, "conditions_run": 35, "conditions_test": 3, "conditions_to_modul": 74, "conditions_train": 3, "conduct": [34, 121, 131, 162, 180, 233], "conf": 163, "conf_int": [316, 318, 319], "confer": [146, 162], "confid": [304, 305, 306, 307, 309, 310, 316, 318, 319], "confidence_interv": [316, 318, 319], "config": 163, "configur": [10, 16, 26, 128, 129, 162, 178, 187, 190, 191, 368], "confirm": [2, 31, 72, 129, 162, 178], "conform": [159, 162, 180], "confound": [50, 52, 53, 54, 55, 56, 57, 58, 61, 65, 79, 80, 102, 103, 104, 109, 113, 118, 120, 125, 128, 129, 130, 132, 133, 134, 137, 147, 153, 154, 155, 157, 159, 162, 165, 168, 169, 170, 177, 184, 188, 190, 199, 206, 238, 247, 267, 311, 312, 326, 329, 339, 340, 341, 344, 350, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 454, 456, 468, 469, 484], "confound_fil": 54, "confound_filenam": [56, 58], "confounding_var": 390, "confounds_": 329, "confounds_datafram": 165, "confounds_fd_threshold": 329, "confounds_filenam": 61, "confounds_minimal_no_gsr": 59, "confounds_mot": 329, "confounds_regressor": 65, "confounds_scrub": [59, 329], "confounds_simpl": 59, "confounds_std_dvars_threshold": 329, "confounds_strategi": 329, "confounds_wm_csf": 329, "conftest": 178, "confus": [128, 162, 171, 362], "confusion_matrix": [33, 37, 171], "congdon": [118, 268, 286], "congruent": 182, "conjunct": 96, "connect": [7, 9, 23, 28, 29, 52, 53, 61, 62, 90, 96, 100, 115, 118, 130, 131, 132, 135, 140, 142, 143, 150, 153, 158, 162, 165, 167, 169, 178, 179, 180, 184, 185, 186, 190, 196, 197, 201, 230, 232, 236, 238, 239, 240, 246, 250, 256, 258, 259, 260, 262, 267, 273, 278, 292, 293, 300, 326, 329, 342, 345, 353, 363, 367, 368, 370, 375, 376, 377, 378, 382, 383, 384, 385, 386, 387, 388, 403, 404, 424, 429, 431, 439, 442, 445, 446, 447, 448, 454, 457, 458, 470, 472, 473, 474, 483, 494, 495, 496, 497], "connect_diag": [88, 457], "connected_compon": [456, 458], "connected_label_region": [88, 142, 162, 167, 190, 456, 458], "connected_region": [90, 135, 148, 162, 168, 190, 456, 457], "connection": 186, "connectivity_": 454, "connectivity__kind": 102, "connectivity_measur": 61, "connectivitymatrix": 238, "connectivitymeasur": [50, 53, 54, 57, 59, 61, 102, 114, 129, 135, 137, 140, 143, 153, 162, 164, 165, 168], "connectom": [0, 9, 13, 29, 49, 51, 52, 54, 57, 59, 60, 62, 102, 114, 116, 118, 123, 135, 139, 140, 144, 147, 148, 150, 153, 155, 162, 166, 168, 169, 184, 185, 186, 191, 196, 197, 199, 201, 224, 246, 253, 256, 262, 264, 265, 267, 278, 311, 312, 346, 349, 351, 357, 368, 370, 371, 372, 374, 375, 377, 402, 403, 422, 423, 424, 427, 429, 438, 439, 440, 442, 447, 448, 449, 451, 456, 464, 480, 483, 496, 497], "connectome_measur": [50, 53, 114, 168], "connectomedb": 197, "connectomeview": [448, 451], "connor": [0, 159, 162], "conscious": 0, "consecut": [131, 162, 198, 248, 250, 252, 258, 261, 262, 453], "consensu": [169, 178, 201], "consequ": [3, 16, 88, 191, 368], "conserv": [6, 79, 81, 106, 175, 180, 201, 239, 244], "consid": [6, 26, 56, 57, 58, 68, 69, 82, 94, 96, 106, 108, 111, 120, 137, 150, 157, 162, 175, 178, 197, 219, 236, 246, 262, 304, 305, 306, 307, 309, 310, 311, 312, 313, 317, 326, 328, 329, 333, 339, 341, 348, 354, 365, 372, 373, 375, 376, 378, 379, 384, 387, 390, 394, 441, 454, 457, 459, 460, 480], "consider": [165, 171, 231, 246, 341, 390], "consist": [3, 7, 36, 43, 47, 68, 120, 128, 129, 140, 146, 147, 148, 157, 160, 162, 170, 171, 174, 175, 177, 178, 180, 184, 196, 201, 206, 233, 240, 250, 278, 305, 310, 329, 371, 374, 378, 379, 453, 455, 458], "consolid": [96, 158, 162], "conson": [104, 220], "consortium": [268, 286], "constant": [68, 114, 177, 190, 304, 305, 306, 307, 309, 310, 341, 390, 432, 467, 494], "constant_features_idx": 114, "constitut": [21, 169], "constrain": [52, 53, 118, 167, 185, 204, 217, 224, 231, 232, 251, 256, 270, 454], "constrained_layout": [32, 34, 51, 54, 58, 61, 66, 70, 71, 77, 80, 82, 102, 104, 113], "constraint": [52, 167, 177, 364], "construct": [10, 43, 55, 57, 101, 118, 134, 162, 166, 169, 175, 178, 179, 185, 186, 198, 313, 317, 340, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 464], "constructor": [2, 121, 132, 162, 318, 319, 351], "consult": [104, 197], "consum": [148, 162, 173, 177, 187, 189, 377], "consumpt": [190, 326, 339, 372, 375, 467], "contact": 233, "contain": [2, 3, 4, 6, 23, 24, 38, 43, 44, 52, 55, 58, 65, 66, 70, 73, 74, 81, 86, 93, 96, 104, 105, 110, 112, 113, 120, 121, 128, 129, 130, 131, 133, 134, 137, 142, 147, 150, 159, 162, 163, 164, 170, 171, 174, 177, 178, 180, 184, 187, 189, 191, 197, 198, 199, 200, 201, 204, 206, 209, 216, 217, 219, 223, 225, 226, 227, 228, 234, 238, 239, 240, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 280, 281, 282, 283, 284, 285, 288, 290, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 318, 319, 320, 326, 329, 339, 340, 341, 344, 345, 353, 359, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 437, 438, 441, 443, 444, 445, 446, 450, 452, 453, 454, 455, 456, 457, 459, 460, 464, 466, 468, 472, 473, 474, 476, 477, 478, 485, 497], "contast": 73, "content": [68, 70, 86, 129, 162, 174, 178, 186, 326, 365, 434], "contest": 209, "context": [7, 96, 103, 118, 129, 130, 162, 178, 184], "contigu": [167, 177, 233, 390], "continu": [22, 24, 42, 46, 59, 160, 162, 165, 170, 171, 172, 176, 184, 191, 281, 354, 358, 359, 360, 371, 372, 373, 374, 375, 376, 377, 435, 436, 440, 441, 442, 449, 457, 458], "contour": [10, 16, 19, 22, 51, 53, 89, 90, 129, 132, 142, 150, 153, 155, 159, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 440, 441, 444, 497], "contour_fil": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "contourf": [16, 22, 51, 53, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "contrari": [184, 365, 371, 372, 480], "contrarili": [57, 93, 374, 375, 480], "contrast": [6, 9, 15, 16, 26, 29, 35, 67, 69, 72, 77, 78, 79, 80, 81, 82, 83, 90, 92, 95, 104, 109, 110, 113, 116, 128, 129, 130, 132, 140, 144, 145, 154, 157, 162, 169, 175, 180, 181, 182, 183, 184, 198, 203, 223, 274, 275, 276, 282, 284, 301, 315, 316, 318, 319, 320, 322, 323, 324, 326, 339, 341, 366, 427, 430, 440, 441, 442, 447, 449, 453, 466, 479, 494, 496], "contrast_def": [6, 326, 430, 466], "contrast_definit": 112, "contrast_dim": 314, "contrast_fig": [70, 77], "contrast_id": [67, 68, 70, 72, 73], "contrast_img": [73, 323], "contrast_map_filenam": [79, 109], "contrast_matrix": [67, 68, 70], "contrast_plot": [70, 77], "contrast_typ": [65, 130, 162, 314, 322, 366], "contrast_v": [67, 68, 70, 73], "contribut": [127, 144, 147, 148, 149, 150, 151, 152, 156, 157, 159, 162, 171, 180, 187, 228, 495], "contributor": [122, 123, 125, 126, 178, 187], "control": [6, 9, 10, 12, 15, 16, 21, 24, 26, 29, 35, 40, 43, 51, 59, 64, 70, 73, 78, 81, 101, 104, 113, 116, 118, 128, 130, 132, 135, 143, 144, 148, 150, 154, 162, 164, 168, 169, 170, 171, 174, 175, 177, 178, 180, 184, 188, 196, 199, 201, 238, 246, 274, 281, 283, 312, 321, 325, 342, 363, 367, 368, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 428, 433, 435, 436, 437, 441, 442, 443, 445, 446, 447, 453, 466, 478, 479, 494, 496, 497], "controversi": 246, "convei": [178, 390], "conveni": [121, 190, 191, 206, 267], "convent": [23, 74, 127, 129, 159, 162, 178, 187, 302, 362, 364, 365, 427, 433, 435, 442, 453, 455], "converg": [36, 94, 108, 177, 239, 242, 309, 310, 453], "convergencewarn": [36, 42, 94, 108], "convers": [41, 191, 198], "convert": [3, 6, 21, 38, 43, 44, 45, 51, 53, 68, 81, 96, 112, 120, 150, 155, 157, 159, 162, 168, 170, 175, 184, 190, 308, 324, 345, 346, 354, 371, 372, 373, 374, 375, 376, 377], "convex": 177, "convolut": [69, 180, 328, 333], "convolv": [35, 70, 113, 179, 328], "coord": [16, 43, 53, 55, 57, 61, 71, 89, 103, 148, 150, 162, 168, 391, 393, 394, 422, 423, 429, 443, 444, 445, 446, 452, 494], "coord_transform": [43, 50, 144, 162], "coordin": [7, 17, 20, 23, 39, 43, 52, 55, 57, 71, 96, 103, 118, 120, 126, 130, 139, 142, 144, 145, 147, 153, 157, 159, 162, 166, 168, 177, 179, 180, 184, 191, 198, 199, 205, 208, 210, 211, 212, 213, 214, 219, 229, 231, 232, 256, 264, 265, 266, 289, 312, 346, 355, 359, 377, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 427, 428, 429, 433, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 465, 466, 470, 471, 475, 477, 478, 480, 494, 497], "coords_connectom": [53, 168], "copenhagen": 0, "copi": [3, 21, 38, 41, 43, 50, 51, 53, 56, 90, 98, 100, 103, 114, 115, 116, 120, 131, 132, 150, 162, 163, 177, 178, 189, 197, 227, 247, 286, 311, 312, 343, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 363, 370, 373, 376, 467, 496], "copy_head": [3, 6, 16, 17, 19, 26, 27, 32, 33, 35, 38, 43, 52, 68, 71, 72, 73, 77, 83, 86, 90, 91, 94, 95, 96, 97, 98, 105, 106, 108, 111, 343, 348, 356, 357, 358, 359, 360, 363], "copy_header_from": [105, 132, 162, 355], "copy_img": [130, 135, 162], "copyto": 111, "corbetta": [118, 368], "core": [3, 17, 21, 31, 45, 46, 51, 53, 61, 177, 178, 187, 495], "coregist": [39, 70, 193, 201, 237, 489], "coregistr": [16, 139, 162, 184, 201], "corei": [118, 200, 249], "corner": [47, 140, 162, 178, 361], "coron": [15, 96, 391, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 427, 429, 433, 435, 436, 438, 440, 441, 442, 466], "corr": [23, 426], "corrcoef": 50, "correct": [6, 33, 35, 42, 45, 46, 50, 51, 59, 77, 79, 81, 83, 104, 106, 109, 110, 118, 127, 128, 150, 153, 159, 162, 164, 175, 178, 180, 181, 184, 187, 201, 286, 302, 304, 305, 306, 307, 309, 310, 341, 342, 363, 367, 368, 390, 428, 443, 444, 445, 446, 469, 497], "correctli": [59, 68, 95, 130, 148, 150, 151, 159, 162, 173, 180, 187, 304, 326, 367, 368, 495], "correl": [24, 28, 35, 45, 46, 49, 50, 55, 62, 64, 70, 73, 102, 103, 113, 114, 116, 118, 132, 162, 168, 170, 177, 180, 184, 186, 191, 197, 201, 217, 223, 238, 241, 243, 245, 267, 278, 311, 367, 368, 370, 376, 377, 403, 426, 432, 442, 479, 494, 496], "correlation_matric": [28, 50, 54, 197, 278], "correlation_matrix": [57, 59, 494], "correlation_measur": [54, 57, 59], "correspond": [2, 3, 6, 7, 15, 25, 31, 32, 35, 36, 38, 41, 42, 43, 47, 52, 58, 59, 66, 67, 68, 71, 74, 79, 80, 81, 82, 83, 88, 93, 94, 96, 104, 106, 113, 118, 129, 134, 152, 154, 162, 163, 165, 170, 171, 173, 175, 177, 178, 180, 184, 185, 187, 191, 198, 201, 203, 227, 232, 235, 238, 248, 253, 256, 259, 266, 272, 276, 283, 294, 295, 298, 304, 305, 306, 307, 308, 309, 310, 311, 312, 322, 323, 326, 328, 329, 333, 335, 339, 340, 341, 355, 356, 359, 364, 366, 371, 373, 374, 375, 376, 378, 382, 383, 384, 385, 386, 387, 388, 390, 404, 419, 420, 425, 426, 427, 428, 433, 436, 438, 440, 441, 442, 443, 444, 445, 446, 454, 456, 457, 459, 460, 462, 465, 466, 478], "cort": [11, 22, 59, 93, 165, 254, 255], "cortex": [3, 7, 24, 33, 34, 35, 40, 41, 58, 59, 61, 64, 70, 72, 77, 81, 82, 93, 101, 107, 118, 168, 170, 175, 179, 180, 197, 198, 205, 208, 216, 217, 223, 230, 236, 252, 258, 262, 264, 270, 280], "cortexl": 266, "cortexmid": 266, "cortexr": 266, "cortic": [9, 10, 24, 25, 29, 30, 48, 58, 59, 70, 93, 116, 118, 132, 142, 144, 147, 153, 162, 165, 179, 185, 205, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 230, 231, 236, 252, 260, 262, 266, 270, 289, 292, 293, 351, 429, 445, 446, 447, 448, 449, 450, 451, 452, 474, 478, 496, 497], "corticalparcellation_yeo2011": [236, 262], "cortl": 254, "cosin": [6, 26, 35, 64, 68, 70, 71, 72, 73, 113, 127, 129, 155, 162, 201, 326, 329, 333, 367, 468, 479], "cosine00": 59, "cosine01": 59, "cosine02": 59, "cosine03": 59, "cosmo": [0, 129, 162], "cost": [33, 42, 56, 81, 111, 153, 162, 167, 171, 172, 176, 177, 178, 184, 191, 306, 307], "costli": [171, 175, 341, 390], "could": [4, 6, 26, 38, 52, 61, 68, 70, 71, 81, 87, 88, 95, 103, 105, 109, 111, 120, 121, 137, 153, 157, 158, 162, 163, 170, 173, 175, 177, 178, 180, 182, 186, 191, 314, 352, 441, 478], "couldn": 177, "counfound": 50, "count": [52, 72, 104, 129, 162, 281, 283], "counterpart": [132, 162, 171], "countvector": [281, 283], "coupl": [69, 164, 187], "cours": [70, 167, 180, 184, 372, 375, 379], "courtnei": [118, 226], "cov": [56, 316, 318, 319, 495], "cov_estim": 238, "cov_estimator_": 238, "cov_to_corr": [142, 162], "covari": [6, 45, 49, 60, 61, 62, 64, 70, 106, 116, 118, 143, 162, 165, 166, 168, 185, 197, 238, 239, 240, 241, 242, 256, 267, 313, 315, 316, 317, 318, 319, 370, 375, 390, 423, 429, 439, 447, 448, 496, 497], "covariance_": [55, 56, 61, 164], "covariance_estim": 61, "covariances_": [56, 164, 239, 240], "cover": [59, 178, 191, 208, 216, 264, 266, 421], "coverag": [132, 162, 163, 178, 495], "coveral": [142, 162], "covertli": 220, "cox": [26, 118, 226], "cpac": 246, "cpu": [3, 45, 106, 109, 163, 173, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 335, 339, 341, 356, 371, 372, 373, 385, 387, 390, 454], "cr": [118, 218], "craddock": [59, 118, 159, 162, 164, 165, 193, 224, 226, 246, 251, 256, 489], "crash": [150, 162], "creat": [2, 3, 6, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 26, 28, 32, 35, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 58, 67, 68, 70, 72, 73, 74, 77, 81, 86, 89, 90, 96, 101, 103, 104, 106, 110, 112, 114, 119, 120, 127, 132, 134, 139, 147, 159, 162, 163, 164, 165, 169, 170, 171, 173, 178, 179, 180, 182, 184, 185, 187, 188, 189, 191, 281, 283, 303, 311, 312, 326, 329, 339, 340, 351, 357, 366, 392, 401, 402, 403, 406, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 455, 462, 463, 465, 472, 474, 494, 495, 497], "create_fake_bids_dataset": [128, 162], "create_large_fmri": 111, "create_mask": 111, "create_simulation_data": 47, "creation": [77, 127, 150, 162, 311, 312, 466], "creativ": [201, 204, 251], "creativecommon": 251, "credit": 0, "criteo": 0, "criteria": [121, 178, 184, 231, 246, 281], "criterion": [201, 390, 455], "critic": [133, 162, 175, 177], "criugm": 0, "crivello": [118, 198, 248], "cron": 163, "crop": [190, 191, 348], "crop_img": 359, "croppabl": 348, "cross": [30, 34, 35, 38, 39, 43, 45, 47, 48, 54, 58, 100, 102, 115, 116, 118, 121, 128, 129, 134, 153, 162, 164, 171, 174, 227, 240, 270, 281, 285, 294, 304, 305, 306, 307, 308, 309, 310, 351, 361, 370, 376, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 427, 433, 436, 440, 441, 442, 447, 449, 494, 496], "cross_val_scor": [37, 101, 173], "cross_valid": [36, 101, 147, 162, 173, 304, 305, 306, 307], "crossbar": [401, 403, 406, 408, 410, 412, 414, 416, 418], "crowd": 228, "crucial": 175, "csernanski": [118, 227], "csf": [12, 22, 59, 218, 267, 271, 329, 367, 368], "css": [131, 162, 246], "csv": [3, 6, 31, 43, 50, 58, 120, 134, 137, 162, 163, 165, 170, 199, 207, 221, 224, 227, 246, 247, 277, 285, 311, 312, 326, 333, 339, 341, 344, 372, 375, 454, 456, 468], "csv_file": 165, "csv_to_arrai": [137, 162], "ctan": 187, "cube": [191, 465], "cubic": [127, 162, 191, 242, 468], "cubicsplin": [130, 162], "cue": [79, 109, 275, 276], "cumbersom": 180, "cumsum": 66, "cumul": [154, 162, 314], "cuneal": 93, "cur_img": [51, 89], "current": [2, 16, 19, 21, 22, 32, 38, 43, 45, 46, 51, 53, 55, 69, 73, 89, 90, 106, 110, 111, 159, 162, 163, 175, 177, 178, 184, 187, 227, 242, 250, 251, 257, 259, 286, 314, 364, 366, 372, 375, 377, 379, 443, 445, 446, 449, 456], "current_collect": 112, "currentmodul": 187, "curs": [26, 96, 118], "curv": [41, 155, 162, 170, 171, 173, 177, 184, 443, 444, 445, 446, 452, 476], "curv_left": [210, 211, 212, 213, 214, 215, 289], "curv_right": [210, 211, 212, 213, 214, 215, 289], "curv_sign": 10, "curvatur": [10, 24, 113, 128, 132, 162, 210, 211, 212, 213, 214, 215, 289, 293], "custom": [10, 15, 16, 24, 41, 50, 59, 69, 128, 147, 155, 157, 162, 165, 175, 188, 304, 305, 326, 328, 333, 368, 404, 443, 445, 446, 464, 494], "custom_funct": [443, 445, 446], "customis": 368, "customiz": 368, "cut": [15, 52, 68, 96, 130, 131, 135, 145, 147, 148, 159, 162, 185, 201, 326, 383, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 427, 429, 433, 435, 436, 438, 440, 441, 442, 449, 466, 494], "cut_coord": [2, 6, 10, 16, 17, 18, 19, 21, 26, 32, 33, 38, 42, 43, 45, 46, 51, 52, 53, 58, 64, 67, 68, 71, 72, 73, 77, 79, 81, 83, 88, 89, 90, 92, 94, 95, 96, 98, 103, 106, 110, 112, 127, 135, 162, 168, 326, 339, 366, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 427, 433, 436, 440, 441, 442, 449, 466, 494], "cut_scor": 43, "cutax": [408, 410, 412, 414, 416, 418], "cutoff": [6, 68, 70, 72, 91, 155, 162, 188, 304, 305, 306, 307, 309, 310, 311, 312, 344, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 456, 467, 468], "cv": [3, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 47, 54, 61, 101, 102, 114, 144, 162, 170, 175, 240, 304, 305, 306, 307, 308, 309, 310], "cv_": [304, 305, 306, 307, 309, 310], "cv_alphas_": 240, "cv_params_": [3, 36, 128, 129, 162, 304, 305, 306, 307], "cv_results_": 102, "cv_score": [36, 101], "cv_scores_": [3, 31, 32, 34, 35, 36, 41, 45, 114, 170, 240, 304, 305, 306, 307, 309, 310], "cv_scores_ova": 37, "cv_scores_ovo": 37, "cwd": [3, 4, 6, 7, 16, 24, 31, 35, 44, 51, 52, 58, 64, 65, 70, 73, 74, 77, 88, 96, 104, 111, 113], "cyan": 494, "cycl": [73, 128, 129, 162, 479], "cyclic": 13, "cytoarchitecton": 219, "cytoarchitectur": 118, "czarina": [0, 129, 162], "c\u00e9line": [0, 150, 162], "d": [0, 26, 28, 44, 54, 59, 61, 78, 103, 118, 121, 164, 177, 178, 186, 198, 201, 207, 208, 218, 225, 229, 232, 248, 259, 264, 265, 268, 281, 283, 286, 314, 321, 344, 367, 368, 428, 439, 468, 482], "d03f51": 480, "d03f52": 480, "d03f53": 480, "d03f54": 480, "d0404d": 480, "d_i": [318, 319], "daan": [118, 367, 368], "daddi": [0, 125, 135, 137, 140, 144, 145, 147, 150, 154, 162], "dadi": [54, 102, 118, 207, 253], "daejeon": 0, "dai": 187, "dale": [23, 118, 205, 210, 211, 212, 213, 214, 216, 252, 260, 289], "dalenberg": [0, 127, 128, 162], "damaraju": [118, 200, 249], "damien": [61, 118, 208, 264], "dan": [0, 118, 147, 150, 162, 235, 261], "danger": [178, 180], "danial": [118, 230, 236, 258, 262], "daniel": [0, 59, 118, 121, 147, 150, 156, 159, 162, 197, 225, 226, 227, 281, 283, 367, 368], "danilo": [0, 122, 123, 125, 126, 135, 137, 162], "danish": 0, "daphn": [118, 177], "dark": [7, 10, 23, 24, 39, 70, 114, 129, 162, 178, 187, 443, 445, 446, 450, 452], "dartel": [227, 285], "dartel_vers": [227, 285], "dartmouth": 0, "darya": [54, 102, 118], "data": [0, 1, 2, 8, 13, 16, 17, 19, 20, 21, 22, 25, 28, 30, 33, 36, 38, 39, 40, 41, 46, 48, 49, 53, 54, 56, 61, 62, 63, 65, 66, 67, 69, 71, 74, 75, 78, 79, 80, 81, 82, 83, 86, 89, 90, 92, 93, 94, 97, 98, 102, 104, 105, 108, 109, 110, 111, 113, 114, 116, 118, 119, 121, 127, 128, 129, 130, 132, 133, 134, 137, 140, 141, 142, 143, 144, 145, 147, 148, 150, 153, 154, 155, 157, 158, 159, 162, 163, 165, 166, 168, 171, 172, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 193, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 228, 231, 232, 233, 234, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 326, 329, 333, 334, 335, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 426, 427, 428, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 466, 468, 472, 474, 476, 478, 479, 480, 481, 482, 483, 484, 489, 494, 496, 497], "data_2d": [391, 393, 394], "data_bound": [391, 393, 394], "data_dir": [65, 103, 104, 113, 156, 162, 189, 220, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300], "data_figure_run01": [44, 91], "data_fil": 33, "data_gen": [60, 128, 159, 162, 177], "data_img": [382, 385], "data_mask": [68, 108], "data_nam": [287, 288], "data_softwar": 231, "data_to_wrap": 55, "data_typ": [10, 23, 24, 39, 59, 70, 105, 113, 114, 293], "data_usage_agr": [227, 285], "databas": [74, 107, 118, 203, 232, 276, 281], "dataconversionwarn": [109, 110], "datad": 13, "datadb": [217, 270], "datafam": 267, "datafram": [11, 35, 65, 66, 68, 73, 74, 77, 78, 79, 80, 81, 82, 83, 103, 104, 113, 121, 129, 134, 153, 157, 158, 162, 238, 246, 247, 248, 250, 252, 253, 254, 255, 257, 258, 260, 261, 262, 264, 265, 266, 269, 278, 279, 285, 290, 311, 312, 326, 327, 329, 333, 339, 340, 341, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 430, 431, 432, 434, 441, 445, 454, 456, 465, 466, 468], "dataia": 0, "dataset": [1, 3, 4, 7, 8, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 43, 48, 50, 55, 57, 58, 59, 60, 63, 68, 70, 71, 72, 73, 75, 76, 79, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 105, 107, 108, 111, 112, 114, 115, 116, 118, 120, 121, 128, 129, 130, 131, 132, 134, 137, 138, 142, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 162, 164, 165, 166, 169, 170, 171, 174, 176, 179, 183, 184, 185, 186, 187, 188, 191, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 216, 218, 219, 222, 224, 227, 228, 229, 230, 231, 232, 235, 236, 304, 305, 306, 307, 310, 311, 326, 329, 333, 339, 342, 343, 346, 349, 351, 355, 356, 360, 364, 366, 367, 368, 369, 370, 376, 377, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 430, 431, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 449, 450, 457, 464, 465, 474, 478, 479, 480, 483, 494, 496, 497], "dataset_descript": [65, 77, 366], "dataset_fil": 46, "dataset_ho": 11, "dataset_ju": 11, "dataset_path": [103, 113, 329], "dataset_vers": 286, "dataset_yeo": 11, "datatyp": [59, 105], "date": [0, 35, 64, 70, 73, 104, 113, 156, 162, 249, 252, 271, 281, 283, 479], "davatziko": [59, 118, 367, 368], "david": [0, 59, 118, 121, 159, 162, 186, 197, 205, 216, 225, 226, 232, 252, 259, 281, 283, 367, 368, 390], "davidson": [118, 318, 319], "dawn": [118, 226], "db": [47, 197, 278], "db_name": [59, 105], "dc": [118, 197], "dcf8a4": 11, "ddof": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 468], "de": [0, 147, 150, 162, 197, 334], "deactiv": [6, 13, 73, 479], "dead": 163, "deal": [38, 43, 44, 69, 81, 120, 125, 153, 162, 180, 373, 480], "deanna": [61, 118, 197, 208, 231, 264, 266], "debat": 167, "debia": [309, 310], "debian": [126, 162], "debias": [309, 310], "deborah": [118, 216], "debug": [177, 178, 186, 240, 242], "decai": 467, "decemb": [118, 133, 135, 136, 150, 162, 201, 268, 286], "decent": 187, "decid": 180, "decim": [153, 162, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 436], "decis": [103, 118, 171, 175, 304, 305, 306, 307, 309, 310, 314], "decision_funct": [304, 305, 306, 307, 309, 310], "declar": [6, 178, 180, 239, 242], "decod": [1, 8, 38, 42, 43, 45, 47, 48, 52, 100, 107, 115, 118, 120, 121, 128, 129, 130, 132, 134, 142, 143, 147, 150, 153, 154, 155, 156, 157, 158, 162, 171, 175, 179, 184, 185, 186, 191, 223, 225, 270, 273, 280, 292, 293, 326, 329, 345, 349, 351, 356, 370, 376, 377, 403, 431, 433, 439, 441, 442, 446, 447, 449, 464, 474, 483, 495, 496, 497], "decoderifitteddecod": 3, "decoderregressor": [45, 132, 150, 153, 154, 162, 171, 304, 307], "decompos": [53, 164, 168, 180, 456], "decomposit": [51, 53, 94, 100, 107, 115, 116, 118, 128, 135, 142, 145, 153, 159, 162, 168, 169, 185, 232, 267, 350, 351, 356, 370, 373, 376, 442, 447, 456, 469, 480, 483, 496], "decompositionestim": [311, 312, 454], "decompress": 189, "deconvolv": [103, 118, 170], "decor": [129, 156, 162, 178], "decorrel": 177, "decreas": [26, 56, 68, 97, 118, 177, 178, 216, 427, 440, 441, 442, 449], "ded3a": 42, "dedic": [178, 227], "deem": [127, 162], "deep": [71, 77, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "deephealth": 0, "def": [13, 43, 44, 47, 50, 56, 68, 69, 103, 111, 112, 178, 187, 443, 445, 446], "def_dofmax": 314, "def_tini": 314, "default": [3, 9, 10, 11, 13, 15, 16, 24, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 41, 45, 58, 59, 63, 65, 66, 68, 75, 81, 85, 91, 96, 99, 105, 106, 107, 114, 116, 121, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 146, 147, 148, 150, 153, 154, 155, 156, 157, 159, 162, 163, 170, 171, 175, 177, 178, 179, 187, 189, 190, 191, 193, 218, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 350, 351, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 478, 479, 480, 489, 494, 496], "default_rng": [7, 66, 178], "defaultmod": 266, "defin": [3, 6, 7, 10, 22, 31, 32, 34, 35, 38, 39, 41, 45, 50, 52, 57, 61, 64, 68, 70, 72, 73, 74, 78, 79, 82, 83, 93, 101, 104, 111, 118, 127, 128, 154, 155, 156, 157, 162, 163, 165, 167, 168, 169, 170, 175, 178, 179, 180, 183, 184, 187, 190, 191, 197, 198, 219, 223, 231, 246, 248, 252, 266, 280, 304, 305, 306, 307, 309, 310, 313, 317, 321, 326, 328, 329, 333, 359, 367, 378, 379, 404, 427, 428, 429, 433, 435, 436, 437, 438, 440, 441, 442, 456, 457, 458, 459, 460, 462, 463, 480, 487], "definit": [57, 65, 93, 96, 129, 162, 165, 173, 174, 177, 178, 179, 180, 184, 188, 207, 224, 228, 253, 366, 371, 372, 374, 375, 377, 378, 430, 459, 460, 462, 463, 480], "deg_of_freedom": 112, "degre": [59, 69, 103, 112, 180, 246, 314, 317, 323, 368, 425, 443, 445, 446], "degree_binar": 246, "degree_weight": 246, "dehaen": [74, 118, 186, 203, 209, 276], "del": [0, 47, 111], "delai": [69, 111, 131, 162, 187, 326, 328, 333], "delcroix": [118, 198, 248], "deleg": [159, 162], "delettr": [0, 150, 162], "delimit": [3, 43, 44, 101, 103, 120, 189], "delin": 22, "deliv": [180, 184], "delta": [66, 179, 333, 434], "demand": 227, "demean": [157, 162, 367, 368], "dement": [118, 227], "dementia": 227, "demian": [0, 118, 125, 147, 162, 207, 253], "demo": [39, 100, 103, 104, 113, 115, 116, 120, 132, 153, 157, 162, 178, 193, 202, 238, 260, 273, 292, 293, 300, 304, 363, 378, 380, 439, 443, 447, 474, 496], "demograph": [118, 197], "demonstr": [15, 16, 26, 41, 42, 43, 59, 65, 67, 96, 108, 111, 132, 158, 162, 169, 170, 231, 390, 494], "den": 329, "denghien": [118, 209], "deni": [74, 118, 170, 203, 209, 276], "denmark": 0, "denois": [113, 368], "denoise_strategi": [59, 130, 162, 368], "denot": [3, 6, 16, 147, 162, 180, 189, 190, 191, 223, 367, 368, 401, 423, 441, 456, 457, 458, 459], "dens": [55, 57, 164, 177, 384], "densiti": [45, 60, 77, 177, 183, 185, 218, 227, 246, 271, 285], "denver": 0, "deoxi": 180, "deoxyhaemoglobin": [180, 184], "depart": [0, 184, 233], "depend": [6, 15, 16, 41, 42, 65, 68, 73, 91, 97, 103, 105, 106, 109, 118, 127, 130, 137, 142, 147, 150, 162, 163, 171, 175, 177, 178, 180, 184, 187, 189, 246, 250, 251, 254, 255, 259, 262, 267, 278, 304, 305, 306, 307, 309, 310, 313, 317, 339, 341, 342, 349, 373, 376, 389, 390, 440, 454, 465, 466, 494], "depict": [58, 178, 190], "deploi": [127, 162], "deploy": 178, "deploy_doc": 187, "deploy_typ": 187, "deprec": [127, 128, 129, 130, 132, 134, 137, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 155, 157, 159, 162, 178, 187, 202, 238, 250, 251, 259, 263, 284, 288, 304, 305, 306, 307, 311, 312, 314, 322, 330, 331, 332, 336, 337, 338, 367, 368, 371, 372, 373, 374, 375, 376, 377, 390, 428, 454, 459, 460, 464], "deprecated_cal": [132, 162], "deprecated_cmap": 13, "deprecationwarn": [132, 162, 248, 250, 251, 257, 259, 323], "dept": 0, "depth": [3, 23, 24, 25, 118, 153, 162, 205, 210, 211, 212, 213, 214, 215, 252, 289, 437, 443, 445, 446, 450, 452, 478], "der": [118, 205, 252], "derek": [0, 150, 162], "deriv": [6, 49, 62, 65, 69, 70, 72, 77, 103, 104, 108, 113, 116, 129, 154, 156, 157, 162, 169, 177, 179, 184, 185, 191, 201, 204, 216, 218, 220, 232, 234, 246, 267, 311, 312, 326, 328, 329, 330, 332, 333, 336, 338, 339, 341, 352, 364, 365, 366, 367, 368, 374, 378, 391, 392, 419, 428, 440, 442, 443, 445, 446, 447, 454, 496], "derivatives_fold": [65, 329], "derived_response_funct": 69, "desc": [103, 104, 113, 329, 367, 368], "descent": [177, 312], "describ": [0, 6, 19, 39, 41, 66, 68, 74, 111, 119, 120, 121, 130, 134, 162, 171, 177, 178, 180, 186, 187, 191, 203, 221, 231, 239, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 276, 277, 321, 324, 327, 329, 333, 341, 368, 390, 431], "descrip": [59, 105], "descript": [6, 24, 26, 28, 35, 42, 45, 46, 61, 64, 70, 72, 73, 77, 104, 113, 114, 119, 121, 127, 129, 130, 131, 153, 157, 162, 178, 187, 189, 190, 201, 209, 221, 230, 233, 237, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 271, 272, 273, 277, 278, 279, 281, 282, 283, 284, 285, 287, 288, 290, 292, 294, 295, 296, 297, 298, 299, 300, 328, 341, 344, 348, 356, 361, 362, 368, 390, 425, 479, 489], "descriptor": [175, 327, 390], "deserv": [0, 191], "design": [6, 35, 44, 47, 63, 64, 65, 67, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 104, 109, 113, 116, 118, 128, 132, 133, 153, 154, 155, 157, 162, 170, 173, 177, 178, 180, 181, 182, 183, 184, 186, 198, 209, 221, 269, 276, 313, 316, 317, 318, 319, 324, 326, 327, 333, 335, 339, 340, 341, 342, 349, 355, 366, 369, 430, 431, 432, 442, 447, 466, 479, 496, 497], "design_column": [65, 324], "design_matric": [64, 65, 73, 103, 179, 326], "design_matrices_": [6, 67, 68, 70, 103], "design_matrix": [6, 44, 64, 65, 67, 68, 70, 77, 78, 79, 80, 81, 82, 83, 113, 327, 333, 339, 340, 341, 369, 430, 431, 432], "design_matrix1": [73, 209, 269], "design_matrix2": [73, 209, 269], "desikan": [118, 216], "desir": [2, 65, 187, 191, 311, 312, 325, 326, 328, 333, 339, 341, 342, 364, 366, 419, 420, 454, 466], "despit": 186, "destin": [435, 436, 441, 442, 449], "destination_path": 466, "destri": 10, "destrieux": [10, 24, 114, 118, 126, 129, 142, 153, 162, 193, 237, 252, 260, 494], "destrieux2009": 10, "destrieux_2009": 10, "destrieux_atla": [10, 23, 24], "destrieux_surfac": [10, 23, 24, 114], "det": [150, 162, 257], "detail": [2, 3, 7, 9, 10, 15, 16, 17, 20, 23, 24, 28, 30, 31, 33, 35, 42, 49, 51, 53, 55, 57, 61, 63, 64, 65, 70, 73, 74, 76, 83, 85, 93, 97, 103, 104, 106, 107, 112, 113, 116, 120, 121, 123, 142, 147, 150, 159, 162, 163, 164, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 181, 187, 188, 189, 191, 193, 209, 216, 219, 238, 246, 254, 255, 258, 267, 272, 276, 294, 295, 296, 297, 298, 299, 304, 305, 306, 307, 311, 312, 319, 326, 329, 339, 344, 348, 356, 361, 362, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 434, 450, 453, 454, 456, 458, 479, 480, 485, 486, 494, 495], "details": 51, "detect": [16, 26, 45, 69, 79, 81, 91, 103, 106, 110, 118, 164, 175, 180, 184, 191, 238, 367, 368, 453, 494], "determin": [11, 64, 81, 96, 103, 104, 106, 112, 175, 177, 178, 204, 219, 240, 305, 310, 329, 340, 364, 382, 383, 384, 385, 386, 387, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 435, 436, 437, 441, 442, 443, 445, 446, 449, 453, 478], "determinist": [131, 134, 158, 162, 178, 184, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 453, 478], "detrend": [43, 44, 52, 54, 55, 56, 57, 58, 59, 61, 64, 91, 93, 94, 96, 102, 103, 111, 120, 125, 147, 155, 157, 162, 190, 191, 311, 312, 344, 350, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 428, 454, 456, 468, 469, 480], "detrended_data": 91, "detriment": [45, 368], "dev": [163, 178, 187, 217, 270, 498], "dev46": [35, 64, 70, 73, 104, 113, 479, 480], "develop": [50, 58, 59, 87, 91, 93, 94, 118, 130, 145, 150, 162, 163, 164, 165, 167, 169, 177, 178, 186, 187, 193, 216, 228, 235, 240, 261, 267, 428], "development_dataset": [54, 102], "development_fmri": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 87, 91, 93, 94, 97, 102, 108], "developmental_fmri": [151, 162], "deviat": [54, 164, 304, 305, 306, 307, 309, 310], "devis": 177, "df": [103, 112], "df_den": [315, 316, 318, 319, 320], "df_model": [313, 317], "df_num": [315, 316, 318, 319], "df_resid": [159, 162], "df_residu": 317, "dhrf": [330, 332, 336, 338], "di": 118, "diag": [66, 190, 432, 439], "diagnosi": [184, 186], "diagnost": [170, 174, 199], "diagon": [56, 57, 59, 61, 88, 140, 162, 177, 190, 238, 242, 244, 245, 358, 359, 421, 432, 439, 457], "diagram": [32, 180], "diamagnet": [180, 184], "diamet": 184, "diamond": 86, "dichotom": [26, 118], "dickerson": [118, 216], "dict": [45, 103, 106, 109, 121, 129, 132, 162, 198, 200, 238, 239, 240, 249, 250, 251, 259, 281, 282, 283, 284, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 317, 322, 326, 329, 335, 339, 341, 344, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 428, 429, 437, 438, 445, 446, 450, 453, 454, 455, 456, 464, 466, 468, 472, 474], "dict_init": [51, 53, 312], "dict_kei": 61, "dict_learn": [51, 53, 168], "dict_learning_onlin": [51, 53], "dictionari": [7, 22, 35, 39, 49, 62, 68, 70, 104, 108, 111, 116, 118, 121, 134, 154, 162, 166, 170, 171, 184, 185, 191, 198, 207, 224, 225, 238, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 304, 305, 306, 307, 311, 312, 326, 339, 341, 351, 352, 365, 366, 370, 371, 374, 375, 378, 390, 401, 403, 423, 424, 427, 428, 429, 437, 439, 440, 442, 447, 450, 456, 472, 473, 474, 496, 497], "dictionary_learning_resting_st": 51, "dictlearn": [51, 53, 128, 134, 135, 145, 162, 168, 169], "dictlearning_components_img": 51, "did": [59, 94, 108, 141, 157, 162, 180], "didact": [3, 140, 162, 171, 173, 178], "didn": 178, "diego": [0, 118, 197], "dieterich": [118, 216], "diff": [159, 162], "differ": [2, 7, 10, 16, 20, 21, 22, 24, 26, 30, 31, 41, 48, 49, 54, 55, 57, 58, 61, 62, 66, 68, 69, 70, 71, 72, 73, 74, 77, 81, 82, 83, 91, 93, 96, 101, 102, 103, 105, 106, 107, 111, 116, 118, 120, 127, 129, 130, 134, 148, 154, 156, 162, 163, 165, 166, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 184, 188, 189, 197, 201, 207, 209, 217, 230, 238, 240, 253, 262, 267, 270, 294, 295, 296, 297, 298, 299, 304, 306, 307, 309, 310, 318, 319, 322, 326, 328, 329, 333, 335, 339, 345, 346, 349, 351, 355, 356, 357, 364, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 389, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 425, 427, 429, 433, 435, 436, 439, 440, 441, 442, 447, 454, 456, 465, 466, 478, 479, 480, 496, 497], "differenti": [41, 68, 72], "difficult": [41, 88, 164, 171, 176, 191], "difficulti": 36, "diffus": [118, 170, 184], "difumo": [22, 50, 154, 162, 193, 253, 489], "difumo_atlas": [50, 480], "digicosm": 0, "digit": [118, 198], "dil_bin_p_values_and_vt": 96, "dil_bin_p_values_and_vt_img": 96, "dilat": [91, 96, 184, 190, 272, 295, 298, 382, 383, 384, 385, 386, 387], "dillon": [147, 162], "dim": [3, 22, 24, 31, 50, 59, 105, 138, 140, 144, 162, 170, 314, 316, 318, 319, 427, 440, 441, 442, 449], "dim_info": [59, 105], "dimartino": [118, 226], "dimens": [2, 16, 22, 31, 35, 36, 41, 43, 50, 52, 68, 89, 96, 120, 130, 155, 162, 174, 180, 184, 190, 191, 197, 227, 238, 244, 245, 253, 259, 278, 304, 305, 306, 307, 311, 312, 314, 316, 318, 319, 326, 341, 344, 345, 351, 352, 355, 356, 361, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 423, 425, 428, 439, 440, 454, 456, 468], "dimension": [6, 26, 28, 52, 72, 96, 118, 132, 137, 154, 159, 162, 177, 186, 199, 207, 244, 245, 253, 259, 278, 311, 312, 314, 345, 389, 453, 454, 455], "dimitri": [0, 118, 127, 135, 147, 162, 168, 177, 178, 203, 239, 242, 276, 456], "dimitripapadopoulo": 178, "diogo": [0, 159, 162], "dir": [70, 77, 163, 329, 364], "dirac": [326, 328, 333], "direct": [16, 43, 54, 96, 101, 144, 153, 162, 165, 166, 178, 187, 191, 207, 209, 226, 233, 253, 304, 305, 361, 363, 364, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 409, 410, 411, 413, 414, 415, 416, 417, 420, 421, 427, 429, 433, 435, 436, 438, 440, 441, 442, 457, 466, 494, 497], "directli": [3, 6, 34, 35, 41, 50, 51, 54, 65, 70, 73, 88, 91, 98, 111, 114, 132, 139, 143, 145, 147, 162, 167, 170, 173, 178, 180, 189, 191, 281, 329, 390, 404, 440], "directori": [3, 6, 65, 73, 96, 104, 113, 116, 167, 178, 189, 239, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 303, 304, 305, 306, 307, 309, 310, 311, 312, 326, 329, 339, 345, 364, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 426, 454, 455, 456], "disabl": [121, 129, 130, 148, 150, 154, 162, 177, 453], "disadvantag": 191, "disagr": 425, "discard": [6, 121, 180, 245, 281, 303, 329, 364, 384, 387, 468, 478], "discard_diagon": [238, 244], "discount": 68, "discourag": 178, "discov": [2, 178, 185], "discoveri": [6, 78, 79, 81, 83, 118, 180, 184, 186, 226, 321], "discrep": [68, 177], "discret": [68, 72, 127, 154, 155, 162, 201, 326, 335, 354, 367, 371, 372, 373, 374, 375, 376, 377, 468], "discrete_atlas_img": 12, "discrete_vers": 12, "discrimin": [3, 31, 33, 54, 96, 102, 118, 120, 170, 185, 186], "discriminant_analysi": 101, "discuss": [52, 59, 147, 162, 167, 170, 173, 175, 180, 183, 187, 190, 368, 390, 495], "diseas": 227, "disk": [2, 3, 4, 6, 104, 107, 111, 112, 113, 120, 121, 127, 132, 134, 147, 153, 154, 159, 162, 170, 178, 189, 190, 191, 220, 263, 273, 281, 283, 286, 304, 305, 326, 339, 381, 443, 445, 446, 464, 466, 470, 471, 475], "disord": [118, 184, 186, 216], "dispers": [6, 68, 69, 179, 316, 318, 319, 326, 328, 330, 333, 336], "displac": [59, 201, 267, 367], "displai": [2, 3, 4, 6, 11, 12, 14, 15, 17, 18, 19, 21, 22, 26, 27, 28, 32, 38, 42, 43, 45, 46, 50, 51, 52, 53, 54, 58, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 83, 86, 89, 90, 91, 93, 94, 95, 96, 98, 101, 102, 103, 106, 109, 110, 127, 130, 131, 132, 134, 139, 144, 145, 147, 148, 150, 154, 155, 157, 159, 162, 163, 165, 168, 169, 175, 180, 185, 190, 326, 333, 339, 372, 375, 377, 379, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 456, 464, 466, 480, 488, 497], "display_mod": [2, 6, 10, 14, 15, 16, 17, 19, 26, 32, 33, 38, 42, 43, 45, 46, 51, 52, 56, 61, 65, 67, 68, 71, 72, 77, 78, 81, 89, 90, 94, 98, 104, 106, 109, 110, 112, 120, 140, 157, 162, 326, 339, 366, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 427, 429, 433, 435, 436, 438, 440, 441, 442, 466, 494], "displayed_map": [57, 372, 375, 379, 456], "displayed_spher": [61, 377], "disregard": [305, 310], "dist": 187, "distanc": [35, 64, 73, 104, 309, 310, 421, 425, 465, 466, 478, 479], "distinct": [82, 103, 118, 177, 197, 252], "distinguish": [13, 54, 96, 101, 102, 171, 175, 180, 185, 189], "distort": [159, 162, 367], "distribut": [3, 6, 15, 16, 23, 33, 34, 40, 51, 52, 58, 81, 96, 101, 118, 154, 158, 162, 170, 175, 177, 180, 184, 205, 210, 211, 212, 213, 214, 217, 225, 260, 270, 314, 341, 390, 425, 426], "dive": 186, "diverg": [13, 15, 26, 432], "divers": [134, 162], "divid": [58, 78, 79, 81, 140, 162, 171, 180, 184, 244, 454], "divis": [0, 93, 231], "dl": [118, 218], "dm_titl": 103, "dmn": [21, 54, 64, 479], "dmn_contrast": 64, "dmn_coord": [61, 191, 494], "dmn_network": 89, "dmn_node": 21, "dmn_z_map": 64, "dni": 223, "do": [0, 3, 6, 10, 23, 24, 25, 27, 32, 33, 35, 36, 39, 41, 43, 45, 52, 53, 54, 60, 64, 65, 67, 68, 69, 71, 77, 79, 81, 82, 96, 101, 103, 104, 105, 111, 113, 114, 120, 131, 133, 134, 144, 148, 153, 157, 162, 163, 164, 168, 169, 170, 171, 173, 175, 177, 186, 187, 189, 190, 191, 193, 198, 237, 238, 240, 248, 272, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 335, 339, 341, 344, 356, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 387, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 454, 468, 478, 489, 494], "do_cca": 311, "doc": [2, 3, 4, 11, 15, 16, 17, 19, 21, 22, 26, 31, 32, 36, 38, 43, 45, 46, 50, 51, 53, 55, 61, 70, 77, 81, 89, 90, 94, 104, 106, 108, 109, 110, 113, 114, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 147, 150, 152, 153, 156, 157, 158, 159, 162, 178, 216, 219, 368], "dock": [0, 129, 130, 132, 140, 144, 146, 147, 148, 150, 151, 159, 162], "docstr": [127, 128, 132, 148, 153, 156, 159, 162, 178, 187, 316, 318, 319], "doctest": [129, 162], "doctre": 178, "document": [0, 2, 3, 4, 13, 20, 28, 46, 47, 52, 53, 55, 56, 59, 61, 101, 103, 107, 112, 119, 120, 123, 125, 128, 130, 131, 135, 137, 139, 140, 141, 142, 147, 150, 152, 157, 158, 162, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 182, 185, 186, 189, 191, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 494, 495], "doe": [3, 6, 26, 31, 41, 52, 68, 69, 77, 106, 120, 121, 131, 137, 146, 150, 159, 162, 163, 170, 171, 175, 177, 178, 179, 180, 186, 191, 248, 270, 315, 317, 320, 329, 350, 362, 364, 366, 368, 386, 394, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 441, 445, 453, 465, 469, 494], "doesn": [107, 178], "dof": [180, 314, 323], "dofmax": 314, "dohmatob": [0, 52, 118, 122, 125, 135, 137, 140, 162, 167, 168, 176, 456], "doi": [0, 3, 23, 26, 33, 34, 39, 40, 43, 44, 47, 51, 52, 54, 59, 61, 78, 101, 102, 106, 118, 121, 164, 165, 167, 169, 171, 172, 175, 176, 184, 186, 196, 197, 198, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 238, 246, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 270, 276, 280, 281, 283, 286, 289, 306, 307, 311, 312, 321, 341, 344, 367, 368, 390, 428, 455, 461, 468, 469], "domain": [41, 186, 312], "domin": [170, 290], "don": [10, 25, 26, 35, 68, 83, 111, 118, 121, 130, 162, 178, 186, 187, 281, 283, 437, 478, 494], "donald": 118, "donder": 0, "done": [2, 3, 4, 6, 7, 10, 11, 18, 20, 22, 28, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 60, 61, 65, 67, 68, 72, 73, 74, 77, 79, 81, 82, 83, 96, 101, 102, 104, 105, 106, 107, 109, 111, 120, 121, 134, 157, 159, 160, 162, 163, 164, 165, 167, 170, 171, 173, 175, 177, 180, 187, 190, 239, 240, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 344, 345, 353, 363, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 454, 455, 456, 468], "dor": 54, "dorsal": [24, 114, 443, 445, 446, 480], "dorsalattent": 266, "dosenbach": [118, 138, 162, 231, 246, 264, 266], "dot": [44, 47, 58, 103, 107, 177, 316, 317, 318, 319, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "doubl": [178, 179, 254, 255], "dougla": [118, 318, 319], "down": [2, 71, 107, 167, 177, 178, 306], "downlo": 22, "download": [4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 137, 138, 140, 141, 143, 147, 150, 153, 154, 156, 162, 163, 164, 165, 167, 170, 178, 186, 193, 197, 206, 207, 209, 218, 220, 223, 224, 226, 227, 231, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 303, 497], "download_new": [281, 283], "downloaded_fil": [220, 263, 273, 286], "downsampl": [113, 168, 190, 206, 267, 428], "downsid": [59, 68], "downsiz": 167, "downstream": [105, 129, 162], "dparsf": 246, "dpi": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "dr": [163, 227], "draft": 178, "drag": 187, "draw": [15, 16, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 431, 478], "draw_2d": [391, 393, 394], "draw_cross": [26, 53, 79, 98, 168, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 436, 440, 441, 442, 449], "draw_left_right": [391, 393, 394], "draw_posit": [391, 393, 394], "draw_scale_bar": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "drawback": 68, "drawn": [25, 68, 96, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 436, 440, 441, 442, 449, 466, 478], "drf": 69, "drift": [6, 35, 64, 70, 71, 72, 73, 103, 113, 201, 326, 333, 367, 432, 468, 479], "drift_model": [6, 26, 35, 64, 66, 68, 70, 71, 72, 73, 113, 179, 326, 329, 333, 479], "drift_ord": [66, 68, 179, 326, 329, 333], "drive": 58, "driven": [68, 169, 178, 186, 201, 250, 333], "drop": [68, 71, 103, 132, 142, 143, 144, 148, 162, 178, 186, 187, 378], "ds000005": 222, "ds000030": [65, 268], "ds000030_r1": [65, 286], "ds000228": [206, 267], "dseg": [178, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 371, 374, 378], "dsm_iv_tr": 246, "dsp": 209, "dsp_minus_ssp": [73, 479], "dsp_minus_ssp_for_dst": [73, 479], "dsst": 0, "dst": 209, "dst_minus_sst": [73, 479], "dst_minus_sst_for_dsp": [73, 479], "dstdsp": 209, "dstdsp_minus_sstssp": [73, 479], "dstssp": 209, "dt": 69, "dtseri": [367, 368], "dtype": [3, 21, 24, 35, 38, 43, 44, 46, 47, 51, 52, 53, 55, 56, 57, 59, 61, 69, 72, 79, 81, 91, 93, 94, 104, 107, 111, 141, 142, 143, 147, 148, 160, 162, 189, 327, 330, 331, 332, 336, 337, 338, 343, 345, 353, 354, 357, 359, 371, 372, 373, 374, 375, 376, 377, 381, 453, 455, 462, 472, 474, 480], "dtypelik": [472, 474], "dtyulman": [147, 162], "dua": 227, "dual": [36, 54, 56, 101, 102, 118, 177, 239, 246, 304, 306], "dual_regress": 246, "dualiti": 242, "duan": [118, 226], "dubi": [61, 118, 208, 264], "dubnica": 0, "duchi": [118, 177], "due": [15, 36, 38, 42, 43, 44, 68, 72, 81, 96, 111, 127, 131, 134, 150, 156, 157, 158, 159, 162, 167, 171, 173, 178, 180, 246, 309, 310, 494], "duff": [118, 197], "dugr\u00e9": [0, 129, 162], "duke": 0, "dummi": [3, 102, 114, 134, 155, 162, 170, 171, 173, 178, 304, 305, 306, 307, 333, 455], "dummy_classifi": [3, 34, 304, 306], "dummy_decod": 3, "dummy_output_": [304, 305, 306, 307], "dummy_regressor": [171, 305, 307], "dummyclassifi": [101, 102, 155, 162, 173, 304, 305, 306, 307], "dummyregressor": [304, 305, 306, 307], "duplic": [150, 162, 202], "dupr": [0, 144, 148, 150, 151, 152, 162], "duran": [0, 127, 162], "durat": [6, 35, 66, 68, 69, 74, 129, 162, 179, 180, 189, 328, 333, 434], "dure": [3, 6, 58, 59, 67, 96, 98, 103, 104, 118, 120, 130, 147, 154, 162, 170, 171, 177, 178, 180, 184, 186, 187, 191, 220, 221, 232, 240, 242, 246, 259, 339, 341, 382, 383, 384, 385, 386, 387, 437, 453], "dutch": 0, "dvar": [59, 367], "dvipng": 187, "dviwar": 187, "dwi": 65, "dwindl": 177, "dx_group": 246, "dylan": [39, 118, 175, 226], "dynam": [31, 118, 170, 368], "e": [3, 6, 16, 23, 25, 31, 42, 43, 47, 50, 51, 59, 61, 68, 78, 90, 96, 103, 106, 107, 109, 111, 118, 120, 121, 128, 135, 153, 155, 156, 159, 162, 164, 165, 168, 170, 173, 175, 176, 177, 178, 179, 180, 183, 184, 186, 187, 190, 191, 197, 201, 204, 205, 207, 208, 216, 225, 229, 231, 232, 238, 239, 240, 242, 251, 252, 259, 264, 265, 266, 268, 281, 283, 286, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 326, 333, 339, 341, 342, 343, 344, 345, 346, 348, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 429, 437, 440, 443, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 459, 460, 462, 468, 478, 494], "e15ebc98c2f13c57d7605faf05fe3de3": 22, "e29482": [118, 186], "e69422": 11, "e_i": [318, 319], "each": [2, 3, 6, 7, 11, 15, 16, 19, 21, 22, 23, 24, 25, 31, 32, 36, 38, 39, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 58, 59, 61, 64, 65, 66, 70, 71, 72, 73, 80, 82, 88, 89, 90, 96, 101, 102, 103, 104, 106, 109, 110, 111, 113, 114, 121, 134, 142, 147, 148, 150, 153, 155, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 182, 184, 186, 187, 189, 190, 191, 197, 198, 201, 203, 206, 207, 216, 219, 222, 225, 230, 231, 233, 238, 239, 240, 242, 246, 249, 260, 262, 266, 267, 278, 281, 283, 290, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 326, 328, 329, 333, 339, 341, 344, 350, 356, 361, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 387, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 425, 426, 427, 429, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 453, 454, 455, 456, 457, 458, 459, 460, 462, 466, 468, 469, 470, 477, 478, 479, 494], "each_index_of_map3": [53, 168], "earli": [118, 176, 281, 283, 453], "earlier": [2, 16, 19, 21, 22, 32, 38, 43, 45, 46, 51, 53, 89, 90, 106, 110, 111], "early_stop": [177, 240], "earlystopprob": 177, "eas": 178, "easi": [17, 64, 70, 77, 96, 111, 120, 121, 168, 169, 171, 174, 178, 179, 184, 186, 191, 367], "easier": [6, 24, 41, 68, 111, 136, 141, 156, 162, 169, 170, 177, 178, 436], "easiest": [165, 170, 171], "easili": [2, 3, 10, 16, 24, 32, 33, 41, 42, 52, 61, 65, 96, 120, 121, 132, 134, 157, 162, 170, 171, 173, 175, 176, 177, 178, 179, 184, 187, 254, 255, 276, 339, 341], "ec": 52, "eccentr": [455, 461], "echo": [184, 329], "econom": [118, 390], "econometr": [118, 313, 317, 318, 319], "econometricanalysi": [118, 313, 317], "ecosystem": 185, "ed": [118, 165, 318, 319], "edg": [50, 55, 57, 61, 96, 150, 162, 164, 165, 184, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 429, 439, 448, 497], "edge_cmap": [148, 150, 162, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 448], "edge_kwarg": [395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429], "edge_threshold": [23, 50, 53, 56, 57, 61, 148, 150, 162, 168, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 448, 494], "edge_vmax": [56, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429], "edge_vmin": [56, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429], "edgecolor": [34, 43, 129, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 433, 435, 436, 438, 440, 441, 442], "edinburgh": 118, "edit": [118, 155, 162, 163, 178, 187, 313, 317], "editor": [118, 164, 218, 238], "edmond": [0, 155, 162], "edu": [118, 227, 231, 236, 262, 285, 313, 317], "educ": [118, 227, 233, 278, 313, 317, 449], "edward": [118, 186], "ee9e0d5a40146477e9197f0d13da9b32": 40, "eeg": 184, "eff_map": 6, "effect": [26, 35, 52, 56, 64, 68, 70, 71, 72, 77, 81, 82, 91, 97, 98, 103, 106, 113, 118, 129, 130, 146, 162, 163, 169, 171, 175, 177, 179, 180, 187, 191, 216, 238, 239, 240, 254, 255, 282, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 322, 323, 326, 329, 339, 341, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 427, 440, 441, 442, 447, 449, 453, 454, 455, 456, 464, 479], "effect_s": [6, 73, 82, 103, 184, 314, 326, 339], "effect_statmap": [65, 77, 366], "effect_vari": [73, 82, 314, 326, 339], "effects_map_path": [339, 341], "effects_of_interest": [73, 479], "effficieni": 66, "efficaci": [59, 118, 368], "effici": [31, 68, 111, 118, 129, 162, 169, 171, 177, 178, 239, 242, 281, 306, 307], "effort": [178, 187], "eg": [88, 91, 144, 147, 153, 162, 164, 165, 170, 190, 191, 422, 423, 464], "eger": [47, 52, 118, 176], "eichel": [118, 200, 249], "eickenberg": [0, 118, 122, 162, 176], "eickhoff": [59, 118, 230, 232, 258, 259, 367, 368], "eigen": [28, 197, 278], "eigen_regress": [28, 278], "eigenvector": 246, "eigenvector_binar": 246, "eigenvector_weight": 246, "eileen": [118, 216], "either": [2, 4, 10, 37, 38, 42, 43, 44, 45, 50, 54, 55, 56, 57, 58, 59, 61, 64, 71, 91, 93, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 120, 134, 147, 154, 156, 162, 165, 167, 178, 179, 183, 184, 189, 191, 201, 259, 262, 270, 304, 305, 306, 307, 316, 318, 319, 342, 343, 372, 374, 375, 376, 378, 379, 380, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 425, 427, 428, 429, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 454, 456, 466, 476, 477, 478, 494, 495], "ej": [118, 197], "ekman": [0, 122, 162], "elabor": [44, 135, 162, 494], "elaps": [33, 35, 37, 38, 39, 42, 45, 46, 47, 51, 53, 56, 60, 61, 101, 106, 109], "elapsed_tim": 47, "elast": 47, "elasticnetcv": 47, "electr": 184, "electroencephalographi": 184, "electrophysiolog": 118, "element": [21, 26, 51, 52, 53, 105, 140, 159, 162, 169, 175, 184, 238, 244, 245, 248, 304, 305, 306, 307, 308, 344, 361, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 404, 437, 456, 462, 468, 478], "elementari": 120, "elena": [26, 118, 200, 249], "elev": [23, 404, 443, 445, 446], "elicit": [66, 74, 81], "elif": [10, 114], "elimin": [47, 101, 173, 176, 440, 441], "elizabeth": [0, 118, 144, 148, 150, 151, 152, 162, 318, 319], "ell": [313, 317], "elli": [0, 159, 162], "elliott": [39, 59, 118, 367, 368], "els": [26, 47, 50, 69, 74, 96, 97, 103, 114, 279, 304, 305, 306, 307, 309, 310, 444], "elvi": [0, 52, 118, 122, 125, 135, 137, 140, 162, 167, 168, 176, 456], "emb": 494, "embed": [54, 102, 464], "emerg": 178, "emerton": 0, "emiliano": [118, 201], "emit": 447, "emma": [118, 197], "emot": 184, "emp_cov": 242, "emphas": [204, 251], "empir": [52, 167, 174, 175, 176, 177, 239, 242, 368, 497], "emploi": [65, 183, 184, 217, 465, 466], "empti": [15, 106, 113, 121, 129, 131, 132, 150, 158, 162, 178, 187, 198, 254, 255, 270, 304, 305, 306, 307, 364, 371, 374, 375, 424, 439, 459, 460, 472, 473, 480], "empty_filt": 281, "en": [0, 59, 163, 180, 198, 223, 248, 368, 371], "enabl": [15, 17, 26, 81, 108, 129, 130, 153, 157, 162, 170, 173, 185, 191, 367, 395, 396, 397, 398, 399, 400, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 495], "enable_metadata_rout": [238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "encapsul": [68, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "enclos": 178, "encod": [30, 41, 44, 48, 72, 77, 86, 116, 118, 171, 172, 191, 280, 306, 307, 346, 363, 370, 373, 376, 418, 442, 447, 480, 496], "encompass": [245, 311, 312], "encount": [61, 79, 81, 114, 443, 445, 446], "encourag": [157, 162, 178], "end": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 130, 144, 154, 162, 175, 177, 178, 190, 201, 291, 365, 366, 467, 468], "endian": [59, 93, 105, 143, 162, 353, 359], "endswith": 13, "energi": [177, 201], "enet_cv": 47, "enforc": [52, 91, 159, 160, 162, 164, 177, 178, 309, 310, 326, 472, 474], "engag": 495, "engemann": [118, 170], "engin": [0, 10, 129, 131, 157, 162, 186, 191, 379, 404, 437, 443, 445, 446, 494, 495], "enh": 178, "enhanc": [24, 26, 68, 69, 73, 118, 184, 187, 193, 290, 300, 314, 341, 390], "enough": [15, 61, 170, 177, 186, 191, 359], "ensembl": [3, 33, 42, 45, 118, 170, 171, 174, 176, 184, 185, 218, 306, 307, 497], "ensur": [2, 16, 19, 21, 22, 32, 38, 43, 45, 46, 51, 53, 59, 61, 89, 90, 103, 106, 110, 114, 131, 133, 134, 147, 154, 162, 175, 177, 178, 180, 187, 286, 314, 339, 341, 371, 374, 391, 393, 394, 459], "ensure_finit": [142, 162, 344, 381, 384, 468], "ensure_ndim": 345, "enter": [35, 70, 113, 180], "entir": [111, 163, 170, 175, 191, 371, 374, 459], "entiti": [129, 162, 365], "entri": [86, 127, 129, 162, 178, 187, 304, 305, 306, 307, 316, 318, 319, 348, 404, 444, 478], "enumer": [3, 23, 24, 36, 43, 50, 51, 54, 60, 67, 68, 69, 70, 73, 74, 81, 96, 103, 104, 106, 107, 109, 113, 114], "env": 187, "environ": [3, 38, 52, 55, 56, 61, 65, 77, 79, 111, 118, 130, 147, 148, 150, 157, 162, 163, 170, 186, 187, 189, 201, 291, 449, 495], "ep": [42, 309, 310], "epi": [3, 6, 12, 16, 27, 32, 33, 94, 96, 97, 108, 184, 186, 190, 191, 233, 304, 305, 306, 307, 311, 312, 373, 376, 384, 433, 436, 442, 454, 480, 494], "epi_filenam": [91, 191], "epi_img": [67, 68, 70, 91, 191, 221, 277, 384, 387, 433], "epoch": [68, 312], "eproc_bold": 65, "equal": [13, 79, 101, 150, 157, 159, 162, 173, 182, 201, 251, 256, 262, 304, 305, 306, 307, 309, 310, 311, 312, 314, 326, 339, 356, 359, 363, 371, 373, 374, 376, 378, 382, 384, 385, 387, 449, 450, 452, 454], "equip": 233, "equival": [15, 83, 109, 127, 162, 175, 177, 180, 187, 204, 276, 304, 305, 306, 307, 311, 312, 355, 372, 373, 375, 376, 382, 383, 384, 385, 386, 387, 447, 454], "erhardt": [26, 118, 200, 249], "eric": [0, 23, 61, 118, 131, 144, 147, 148, 150, 162, 205, 208, 252, 260, 264], "erik": [26, 118, 200, 249], "erin": [118, 196, 246], "eros": [91, 184, 272, 295, 298, 382, 383, 384, 385, 386, 387], "erramuzp": [147, 162], "errant": [131, 162], "erron": [153, 162, 258], "error": [3, 6, 45, 46, 68, 78, 81, 83, 86, 96, 107, 127, 129, 132, 133, 137, 144, 147, 150, 159, 162, 163, 165, 170, 171, 175, 178, 180, 184, 187, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 326, 333, 339, 341, 342, 344, 345, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 453, 454, 455, 456, 495], "errorts_statmap": [65, 77, 366], "especi": [96, 148, 157, 162, 164, 170, 189, 450, 497], "esposito": [103, 118], "essen": [118, 121, 197, 225, 281, 283, 368], "essenc": 179, "essenti": [16, 41, 69, 82, 184], "establish": [96, 176, 178, 231], "esteban": [0, 147, 162], "estim": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 66, 67, 69, 71, 72, 73, 74, 77, 80, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 127, 129, 130, 134, 145, 153, 154, 159, 162, 164, 169, 172, 174, 175, 180, 182, 183, 184, 186, 187, 197, 201, 227, 230, 236, 238, 239, 240, 242, 258, 262, 278, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 322, 323, 326, 339, 341, 345, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 439, 447, 453, 454, 455, 456, 487, 496, 497], "estimator_nam": 41, "est\u00e8v": [0, 122, 123, 125, 126, 135, 137, 140, 162], "eswar": [118, 200, 249], "et": [3, 23, 26, 30, 33, 39, 41, 47, 48, 51, 52, 54, 59, 61, 68, 74, 78, 101, 102, 103, 106, 116, 121, 142, 147, 162, 164, 167, 170, 171, 172, 175, 176, 177, 186, 191, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 238, 239, 242, 246, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 276, 278, 279, 280, 281, 283, 289, 304, 307, 310, 311, 312, 318, 319, 321, 344, 346, 351, 363, 367, 368, 370, 373, 376, 390, 418, 425, 442, 447, 455, 456, 461, 468, 480, 496], "etard": [118, 198, 248], "etc": [7, 41, 45, 46, 82, 91, 94, 96, 105, 111, 121, 163, 176, 184, 189, 278, 304, 305, 306, 307, 309, 310, 318, 376, 480], "ethic": 197, "etzel": [118, 175], "eugen": [118, 197], "eux2009": 10, "ev": 163, "eva": [118, 226], "eval": [326, 339, 341, 430], "evalu": [59, 118, 173, 177, 184, 204, 233, 235, 261, 304, 305, 306, 307, 313, 317, 368, 425, 465, 466], "evan": [0, 118, 155, 162, 198, 201, 218, 230, 235, 250, 258, 261], "evanston": 0, "evelina": [118, 205, 252], "evelyn": [47, 52, 118, 176], "even": [33, 45, 52, 53, 61, 67, 81, 103, 111, 121, 129, 132, 133, 134, 150, 155, 162, 163, 177, 178, 186, 281, 283, 467], "evenli": [177, 344, 468], "event": [6, 26, 41, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 103, 104, 113, 116, 118, 129, 132, 133, 153, 154, 162, 170, 180, 181, 221, 233, 277, 287, 326, 327, 328, 329, 333, 431, 434, 447, 495, 496, 497], "events1": [72, 234, 288], "events2": [72, 234, 288], "events_": 35, "events_datafram": 72, "events_df": 103, "events_fil": [67, 68], "eventu": [58, 494], "everi": [114, 121, 163, 164, 165, 169, 170, 171, 175, 177, 178, 180, 187, 191, 240, 254, 255, 281, 372, 375, 404, 427, 433, 436, 440, 441, 442, 444, 459, 460, 466, 495], "everyon": [178, 197], "everyth": [103, 187], "everywher": 176, "evid": [118, 201], "ew": [118, 200, 249], "ex": [157, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 435, 436, 437, 441, 442, 443, 445, 446], "exact": [45, 175, 178, 180, 218, 271, 272, 294, 295, 296, 297, 298, 299, 494], "exactli": [6, 86, 96, 101, 111, 130, 162, 177, 178, 304, 305, 306, 307, 308, 364, 449, 478], "examin": [3, 118, 184, 268, 286], "exampl": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 128, 129, 130, 131, 134, 135, 140, 141, 142, 143, 144, 147, 148, 150, 152, 153, 156, 157, 158, 163, 168, 171, 172, 173, 174, 177, 178, 179, 180, 182, 183, 187, 189, 198, 234, 246, 263, 309, 316, 318, 319, 335, 343, 364, 379, 392, 466, 482, 483, 485, 491, 495, 496, 497], "exce": [61, 77], "exceed": [59, 144, 162], "excel": 36, "except": [5, 24, 41, 42, 52, 74, 102, 103, 107, 154, 157, 162, 176, 178, 198, 305, 310, 354, 390], "excerpt": 191, "excess": [201, 367, 378], "exchang": [106, 108, 196, 246], "exclud": [68, 121, 457], "exclude_this_vertex": 24, "exclude_zero": [132, 162, 384, 387], "excluded_label": 24, "exclus": [134, 162, 303, 309, 310, 371, 372, 373, 374, 375, 376, 377, 378], "exclusion_filt": [65, 303], "exclusion_pattern": 65, "exec": 187, "execut": [8, 22, 29, 48, 62, 75, 84, 89, 99, 115, 116, 117, 178, 191, 359, 443, 445, 446, 494, 495, 496], "executor": 46, "exemplarili": 58, "exercis": [4, 186], "exhaust": [178, 186], "exhibit": [51, 180, 191], "exist": [4, 21, 51, 106, 168, 175, 178, 187, 190, 231, 238, 239, 240, 281, 283, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 353, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 439, 453, 454, 455, 456, 494], "exist_ok": [3, 4, 6, 7, 16, 24, 31, 35, 44, 51, 52, 58, 64, 65, 70, 73, 74, 77, 88, 96, 104, 111, 113], "existenti": 7, "exp": 47, "exp_condit": [69, 328], "expand": [133, 139, 162, 184, 189, 354, 453, 455], "expans": 188, "expect": [6, 64, 66, 68, 80, 81, 83, 97, 104, 109, 110, 121, 134, 135, 150, 159, 162, 168, 175, 178, 180, 184, 187, 190, 191, 305, 310, 326, 328, 333, 339, 341, 345, 364], "expens": 46, "experi": [3, 6, 31, 35, 36, 44, 68, 71, 96, 118, 119, 174, 179, 180, 184, 209, 233], "experiment": [3, 66, 67, 68, 70, 73, 82, 96, 127, 129, 132, 153, 154, 157, 162, 170, 177, 180, 190, 207, 209, 234, 253, 326, 329, 333, 443, 445, 446], "experimental_paradigm": [129, 162], "expert": [178, 186], "explain": [6, 7, 13, 43, 45, 51, 59, 68, 71, 133, 153, 162, 167, 170, 178, 180, 186, 191, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "explan": [36, 86, 106, 170, 171, 172, 173, 178, 189, 191, 199, 247], "explanatori": [341, 390], "explicit": [12, 51, 74, 150, 156, 162, 178, 184, 186, 283, 342, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456, 468], "explicitli": [68, 105, 112, 130, 132, 134, 147, 159, 162, 170, 178, 281, 366, 368, 454], "exploit": [65, 169, 177], "explor": [111, 118, 169, 173, 177, 179, 185, 186, 233, 240, 268, 281, 304, 305, 306, 307, 425], "exploratori": 68, "export": [74, 178, 187, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446], "expos": [47, 52, 121, 129, 130, 139, 143, 144, 162, 178, 189, 281, 282, 283, 284], "express": [72, 73, 121, 127, 135, 162, 184, 189, 281, 309, 310, 324, 326, 329, 354, 440], "ext_var": [45, 46, 77, 79, 81, 109, 227, 285], "extend": [23, 96, 129, 132, 134, 153, 158, 162, 180, 191, 231, 359], "extens": [16, 142, 156, 162, 196, 365, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446], "extent": [59, 97, 105, 184, 403, 406], "extern": [46, 171, 174, 227], "extra": [80, 121, 172, 187, 188, 246, 366, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 432, 433, 434, 435, 436, 439, 440, 441, 442, 444, 474, 494], "extra_info_subject": 80, "extract": [4, 6, 10, 11, 20, 22, 23, 28, 30, 32, 33, 34, 40, 41, 42, 43, 46, 48, 49, 51, 52, 62, 63, 65, 67, 72, 74, 75, 77, 85, 88, 94, 96, 99, 101, 103, 104, 105, 108, 111, 114, 116, 121, 126, 127, 128, 130, 132, 133, 135, 142, 143, 145, 146, 147, 148, 154, 158, 159, 162, 166, 167, 170, 173, 181, 184, 186, 187, 188, 193, 197, 200, 207, 227, 237, 238, 247, 253, 254, 256, 259, 264, 265, 267, 270, 278, 282, 304, 305, 306, 307, 308, 311, 312, 326, 333, 339, 340, 341, 350, 351, 353, 356, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 387, 403, 422, 423, 424, 427, 429, 438, 439, 440, 442, 447, 448, 450, 454, 456, 457, 458, 459, 460, 462, 464, 466, 469, 478, 479, 480, 483, 489, 490, 494, 496, 497], "extract_typ": 458, "extractor": [53, 89, 168, 456], "extrapol": [130, 162, 359, 468], "extrem": [58, 125, 162, 465], "extremum": 198, "ey": [25, 44, 47, 67, 68, 70, 72, 73, 82, 86, 91, 118, 178, 186, 218, 271], "eye_mask": [218, 271], "ez": 246, "f": [3, 4, 7, 10, 11, 12, 16, 17, 19, 22, 23, 24, 26, 27, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 72, 73, 74, 77, 79, 80, 81, 82, 83, 87, 88, 90, 91, 93, 94, 95, 96, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 129, 130, 162, 164, 168, 170, 173, 175, 176, 179, 197, 198, 208, 218, 231, 232, 248, 259, 264, 266, 268, 286, 304, 305, 306, 307, 314, 315, 316, 318, 319, 322, 326, 327, 339, 359, 360, 366, 367, 368, 381, 389, 459, 462], "f1": [44, 170, 304, 306], "f1_score": 44, "f1_score_to_print": 44, "f_classif": [37, 38, 41, 44, 96, 101, 173], "f_re": [316, 318, 319], "f_regress": [47, 106, 109, 110, 114], "f_score": [38, 174], "f_score_img": 38, "fa": 170, "fabian": [0, 118, 122, 162, 224, 256], "face": [7, 19, 23, 24, 30, 34, 35, 40, 41, 48, 72, 96, 100, 101, 103, 115, 116, 118, 120, 128, 130, 142, 155, 162, 170, 175, 179, 184, 185, 189, 190, 191, 217, 218, 234, 270, 271, 288, 304, 306, 308, 349, 351, 354, 355, 356, 357, 370, 376, 390, 404, 418, 436, 439, 442, 443, 444, 445, 446, 447, 449, 452, 470, 471, 475, 477, 478, 496], "face_mask": [218, 271], "facebook": 0, "facecolor": [19, 34, 43, 45, 110, 129, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 433, 435, 436, 438, 440, 441, 442], "facilit": [26, 129, 132, 162, 186, 187, 191, 207], "fact": [111, 177, 180, 184], "factor": [69, 71, 103, 108, 111, 118, 144, 162, 172, 184, 201, 207, 209, 316, 318, 319, 328, 330, 331, 332, 333, 336, 337, 338, 342, 427, 440, 441, 442, 449], "faculti": 0, "fade": 26, "fail": [36, 107, 127, 128, 130, 132, 150, 159, 162, 163, 177, 178, 187, 281, 283, 456], "failur": [107, 142, 162, 178, 187, 384], "fair": [0, 61, 118, 169, 208, 264], "fairli": [47, 171, 180], "fake": 178, "falff": 246, "fall": [11, 159, 162, 178, 437, 478], "fals": [2, 6, 10, 15, 17, 19, 21, 22, 23, 24, 26, 27, 35, 36, 38, 39, 43, 44, 45, 51, 52, 53, 55, 57, 59, 60, 61, 64, 65, 70, 71, 73, 74, 77, 79, 81, 82, 83, 88, 89, 90, 91, 93, 94, 96, 102, 103, 104, 106, 107, 110, 112, 113, 114, 121, 129, 150, 153, 154, 155, 157, 159, 162, 168, 175, 179, 180, 184, 190, 191, 227, 238, 239, 240, 242, 244, 246, 254, 255, 267, 270, 276, 279, 281, 283, 304, 305, 306, 307, 308, 309, 310, 311, 312, 323, 326, 329, 339, 341, 342, 343, 344, 345, 348, 356, 357, 358, 359, 360, 363, 364, 365, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 427, 429, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 462, 463, 465, 466, 467, 468, 479, 480, 494], "famili": [6, 83, 106, 127, 128, 144, 159, 162, 175, 178, 184, 341, 390, 456, 458], "familiar": [68, 178, 186], "fanci": 101, "far": [68, 177, 359, 365], "faraon": [118, 216], "farther": 404, "fashion": [201, 218], "fast": [3, 33, 42, 51, 52, 67, 68, 74, 103, 118, 150, 153, 162, 167, 169, 170, 171, 174, 177, 178, 184, 185, 203, 221, 276, 283, 306, 307, 312, 361, 454, 455, 461, 497], "fast_abs_percentil": [135, 162], "fast_ica": 107, "fast_svd": [142, 162], "faster": [41, 51, 52, 108, 144, 162, 176, 177, 178, 281, 312, 359, 360, 389, 435, 436, 441, 442, 449, 478], "fastest": 177, "fastica": [94, 107, 108, 311], "faulti": [150, 162], "favor": [159, 162], "fc": 19, "fcon_1000": [199, 226, 247], "fcontrast": [316, 318, 319], "fcontrastresult": [316, 318, 319], "fd_threshold": [59, 130, 162, 367, 368], "fdr": [6, 26, 77, 79, 83, 183, 184, 325, 342, 466, 479], "feasibl": 177, "feat": [65, 182], "featur": [31, 35, 36, 37, 45, 47, 52, 54, 66, 68, 96, 102, 107, 108, 114, 118, 120, 132, 145, 147, 148, 153, 157, 171, 172, 173, 174, 175, 176, 177, 178, 186, 187, 191, 239, 240, 242, 304, 305, 306, 307, 308, 309, 310, 311, 314, 368, 389, 453, 455, 456, 458, 468, 469, 480, 491, 492, 495], "feature_select": [37, 38, 41, 44, 45, 47, 96, 101, 106, 109, 110, 114, 173], "feature_selector": 41, "februari": [47, 118, 122, 123, 128, 137, 138, 142, 152, 162, 176, 186], "feczko": [61, 118, 208, 264], "federico": [118, 201], "feedback": [147, 162, 163, 178, 187], "feel": [147, 162, 178], "feldstein": [118, 200, 249], "femal": [216, 246], "fenna": [118, 230, 236, 258, 262], "fetch": [3, 4, 10, 15, 20, 25, 26, 31, 32, 34, 36, 37, 38, 39, 41, 44, 61, 70, 87, 88, 89, 90, 93, 96, 105, 107, 111, 121, 128, 130, 132, 134, 141, 142, 144, 146, 150, 162, 163, 166, 169, 178, 188, 197, 227, 246, 248, 253, 259, 267, 268, 271, 274, 275, 276, 279, 281, 282, 283, 284, 287, 289, 292, 293, 300, 483, 497], "fetch_abide_pcp": [130, 158, 162, 196], "fetch_adhd": [12, 64, 105, 111, 137, 162, 199], "fetch_atlas_a": [132, 139, 158, 162, 198], "fetch_atlas_allen_2011": [22, 142, 162, 200], "fetch_atlas_basc_multiscale_2015": [20, 111, 128, 129, 138, 162, 201], "fetch_atlas_craddock_2012": [128, 129, 162, 165, 204], "fetch_atlas_destrieux_2009": [10, 165, 205], "fetch_atlas_difumo": [22, 50, 154, 162, 207], "fetch_atlas_harvard_oxford": [11, 22, 59, 93, 137, 158, 162, 165, 178, 216, 255, 457], "fetch_atlas_juelich": [11, 156, 158, 162, 219, 254], "fetch_atlas_msdl": [21, 22, 54, 55, 56, 57, 102, 139, 162, 165, 224], "fetch_atlas_pauli_2017": [22, 147, 150, 162, 228], "fetch_atlas_schaefer_2018": [148, 150, 162, 230], "fetch_atlas_smith_2009": [2, 22, 89, 128, 129, 162, 232], "fetch_atlas_surf_destrieux": [10, 23, 24, 114, 129, 142, 162, 494], "fetch_atlas_talairach": [144, 162, 235], "fetch_atlas_yeo_2011": [11, 50, 88, 134, 162, 165, 236], "fetch_bids_langloc_dataset": [130, 162], "fetch_cobr": [138, 142, 153, 157, 162], "fetch_coords_dosenbach_2010": [61, 138, 141, 162, 208], "fetch_coords_power_2011": [61, 229], "fetch_coords_seitzman_2018": [148, 162, 231], "fetch_development_fmri": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 87, 91, 93, 94, 97, 102, 108, 150, 162, 164, 165, 167, 168, 186, 191, 206], "fetch_ds000030_url": [65, 159, 162, 286], "fetch_fiac_first_level": [73, 209], "fetch_fil": 178, "fetch_haxbi": [3, 4, 16, 17, 19, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 96, 101, 106, 120, 141, 162, 170, 178, 189, 217], "fetch_icbm152_2009": [12, 22, 77, 218, 272, 297], "fetch_icbm152_brain_gm_mask": [68, 77, 140, 162, 218, 271], "fetch_language_localizer_demo_dataset": [103, 104, 113, 130, 162, 179, 202, 220, 263], "fetch_localizer_button_task": [18, 132, 140, 162, 275, 276, 494], "fetch_localizer_calculation_task": [83, 110, 132, 162, 274, 276], "fetch_localizer_contrast": [26, 78, 79, 81, 82, 109, 132, 140, 162, 203, 274, 275], "fetch_localizer_first_level": [67, 68, 70, 221], "fetch_megatrawls_netmat": [28, 197], "fetch_mixed_gambl": [42, 158, 162, 222], "fetch_miyawaki2008": [43, 44, 91, 223], "fetch_neurosynth_word": [107, 121, 281, 283], "fetch_neurovault": [107, 112, 121, 143, 150, 154, 162, 282, 283, 284, 301], "fetch_neurovault_auditory_computation_task": [90, 147, 162, 284, 301], "fetch_neurovault_id": [112, 121, 143, 162, 281, 282, 284, 301], "fetch_neurovault_motor_task": [147, 162, 494], "fetch_nyu_rest": [152, 155, 162], "fetch_oasis_vbm": [45, 46, 77, 227], "fetch_openneuro_dataset": 65, "fetch_openneuro_dataset_index": [159, 162], "fetch_spm_auditori": [6, 26, 71, 233], "fetch_spm_multimodal_fmri": [72, 179, 234], "fetch_stimuli": [40, 270], "fetch_surf_fsaverag": [128, 147, 153, 155, 159, 162, 179, 210, 211, 212, 213, 214, 260, 437, 443, 444, 445, 446, 450, 478, 494], "fetch_surf_fsaverage5": [142, 147, 162], "fetch_surf_nki_enhanc": [142, 150, 162, 226], "fetcher": [32, 34, 129, 130, 134, 137, 138, 139, 142, 147, 150, 151, 154, 156, 157, 158, 159, 162, 179, 227, 248, 263, 267, 284, 288], "few": [2, 15, 16, 27, 41, 42, 43, 52, 79, 83, 93, 105, 106, 145, 146, 162, 169, 171, 174, 176, 178, 179, 187, 190, 454, 478], "fewer": [130, 162, 177, 428], "ff0000": 11, "ff98d5": 11, "ffff00": 11, "fh": [2, 16, 19, 32, 38, 43, 45, 46, 51, 89, 106, 110], "fiac": [73, 193, 269, 491], "fiac_nilearn": 73, "field": [12, 47, 105, 121, 150, 162, 180, 184, 189, 281, 304, 305, 306, 307, 311, 312, 327, 329, 359, 364, 365, 373, 376, 454, 477], "fifth": [105, 118, 272, 313, 317], "fig": [10, 12, 13, 19, 25, 26, 40, 41, 43, 44, 52, 60, 64, 66, 67, 69, 70, 74, 77, 80, 81, 93, 98, 103, 104, 109, 113, 114, 437, 443, 494], "fig1": 71, "fig2": 71, "fig_kwarg": 434, "figh": 13, "fight": 191, "figshar": [20, 250], "figsiz": [6, 12, 13, 16, 19, 26, 27, 32, 36, 37, 41, 43, 45, 47, 51, 54, 60, 64, 65, 66, 67, 68, 69, 74, 77, 80, 81, 93, 96, 98, 102, 103, 104, 109, 110, 111, 114, 190, 439], "figur": [2, 4, 6, 10, 13, 15, 16, 19, 21, 22, 23, 24, 25, 27, 32, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 77, 81, 86, 89, 90, 93, 96, 102, 103, 104, 109, 110, 111, 114, 129, 132, 134, 144, 153, 154, 157, 158, 159, 162, 163, 178, 179, 180, 190, 366, 372, 374, 375, 376, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 494], "figure_width": [26, 98], "fil": [6, 72, 233, 234, 287], "filbei": [118, 200, 249], "file": [3, 6, 7, 8, 10, 15, 20, 23, 24, 29, 35, 43, 48, 50, 51, 52, 54, 56, 58, 62, 63, 64, 65, 68, 70, 72, 73, 75, 77, 84, 87, 88, 93, 94, 96, 99, 103, 104, 107, 111, 112, 113, 115, 116, 117, 118, 120, 121, 129, 132, 134, 135, 137, 142, 146, 147, 148, 149, 150, 153, 157, 158, 159, 162, 163, 164, 165, 167, 168, 170, 178, 179, 187, 188, 191, 198, 199, 200, 201, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 223, 224, 227, 228, 234, 236, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 302, 304, 305, 311, 312, 326, 329, 333, 339, 341, 344, 354, 355, 357, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 378, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 454, 456, 464, 466, 468, 470, 471, 475, 476, 477, 478, 479, 480, 495, 496, 497], "file_basenam": 365, "file_field": 365, "file_list": 302, "file_nam": [40, 464], "file_path": [365, 470], "file_tag": [364, 365], "file_typ": [364, 365], "filemesh": [23, 24], "filenam": [3, 4, 11, 16, 53, 58, 64, 96, 120, 130, 140, 150, 157, 158, 162, 165, 168, 169, 178, 189, 190, 254, 255, 286, 302, 304, 305, 306, 307, 309, 310, 354, 365, 366, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 440, 470, 471, 472, 473, 475], "filename_pattern": 178, "filesystem": [159, 162], "filippini": [118, 197, 232, 259], "fill": [16, 22, 26, 65, 69, 96, 104, 113, 134, 142, 150, 156, 162, 177, 191, 201, 359, 360, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 440, 441, 464, 497], "fill_diagon": [57, 59], "fill_doc": [156, 162], "fill_valu": [359, 360], "fillard": [118, 164, 238], "filled_contour": [22, 53, 168, 440], "filter": [35, 54, 58, 59, 61, 64, 65, 68, 69, 70, 73, 96, 107, 113, 119, 120, 125, 127, 128, 147, 150, 155, 157, 159, 162, 170, 184, 188, 190, 227, 246, 281, 283, 303, 304, 305, 306, 307, 309, 310, 311, 312, 326, 329, 344, 361, 363, 364, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 456, 467, 468, 479, 497], "filter_and_extract": [52, 55, 56, 59, 61], "filter_arg": 51, "filtered_img": 361, "filtered_sign": 467, "filterwarn": [3, 34, 42], "filtfilt": 467, "final": [3, 4, 6, 15, 16, 26, 32, 44, 51, 56, 58, 59, 60, 66, 70, 86, 95, 96, 103, 111, 155, 162, 164, 171, 177, 178, 179, 186, 187, 190, 191, 201, 216, 240, 339, 364, 371, 372, 374, 375, 494], "find": [4, 32, 34, 47, 53, 59, 81, 103, 125, 162, 168, 169, 170, 172, 174, 177, 178, 180, 184, 187, 191, 201, 225, 234, 242, 250, 346, 384, 385, 387, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 424, 427, 449, 453, 455, 461, 494, 495, 497], "find_cut_coord": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "find_cut_slic": [135, 142, 162], "find_parcellation_cut_coord": [50, 61, 147, 157, 162, 165, 423, 429], "find_probabilistic_atlas_cut_coord": [50, 53, 56, 147, 162, 165, 168, 422, 429], "find_xyz_cut_coord": [53, 89, 137, 144, 162, 168], "fine": [10, 91, 118, 141, 162, 165, 191, 207, 253, 308, 311, 312, 367, 373, 376, 454, 494], "finer": [10, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "finish": [33, 35, 37, 38, 39, 42, 45, 46, 47, 51, 52, 53, 55, 56, 57, 59, 60, 61, 65, 77, 101, 106, 109, 129, 162, 163, 177, 178, 343, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 440, 448, 450, 452], "finit": [26, 63, 75, 79, 81, 107, 116, 143, 162, 179, 184, 277, 326, 328, 333, 344, 361, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 427, 430, 431, 441, 442, 468, 496], "fino": [78, 118, 321], "fir": [63, 66, 75, 116, 131, 162, 179, 184, 277, 326, 328, 333, 430, 431, 442, 496], "fir_delai": [66, 67, 326, 328, 329, 333], "first": [2, 6, 7, 12, 15, 16, 17, 19, 21, 27, 32, 34, 35, 37, 41, 43, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 71, 73, 75, 77, 79, 82, 83, 86, 88, 91, 93, 94, 95, 96, 97, 98, 100, 108, 109, 111, 114, 115, 118, 120, 121, 122, 128, 130, 132, 147, 148, 150, 153, 155, 157, 158, 162, 163, 164, 165, 167, 168, 169, 171, 173, 174, 177, 178, 180, 181, 182, 183, 187, 188, 189, 190, 193, 201, 240, 242, 268, 269, 272, 273, 277, 278, 281, 283, 286, 292, 293, 303, 304, 305, 306, 307, 311, 312, 326, 329, 339, 341, 345, 350, 351, 360, 361, 364, 366, 367, 369, 372, 375, 376, 377, 379, 386, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 430, 431, 435, 436, 441, 442, 443, 444, 445, 446, 447, 452, 453, 454, 456, 464, 465, 466, 468, 474, 480, 491, 496, 497], "first_epi_fil": 97, "first_level": [6, 26, 35, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 103, 104, 113, 129, 133, 155, 157, 159, 162, 179, 434, 466], "first_level_contrast": [104, 157, 162, 339, 341, 366, 466], "first_level_from_bid": [65, 103, 104, 113, 128, 129, 130, 132, 134, 162, 434], "first_level_glm": 113, "first_level_model": [64, 67, 68], "first_pipelin": 101, "first_plot": 52, "first_roi_data": 96, "first_roi_img": 96, "first_rsn": 2, "first_three_imag": 351, "firstlevelmodel": [6, 26, 64, 67, 68, 70, 71, 72, 73, 103, 113, 132, 133, 134, 155, 157, 159, 162, 179, 329, 339, 341, 366, 466], "firstlevelmodelifittedfirst": 65, "firstlevemodel": 68, "firstli": 59, "fischl": [23, 118, 205, 210, 211, 212, 213, 214, 216, 230, 236, 252, 258, 260, 262, 289], "fisher": [101, 118, 314], "fistlevelmodel": 179, "fit": [3, 6, 24, 26, 30, 32, 34, 37, 38, 39, 41, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 70, 75, 77, 78, 79, 81, 82, 83, 89, 91, 93, 94, 101, 102, 103, 107, 113, 114, 116, 120, 129, 130, 132, 133, 134, 147, 155, 157, 159, 162, 164, 166, 167, 168, 170, 171, 173, 175, 177, 178, 180, 181, 182, 184, 185, 186, 191, 238, 239, 240, 262, 269, 270, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 323, 326, 329, 335, 339, 341, 351, 356, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 390, 403, 406, 425, 426, 430, 442, 447, 453, 454, 455, 456, 459, 464, 466, 479, 480, 496, 497], "fit_intercept": [309, 310], "fit_param": [308, 311, 312, 370, 376, 453, 455], "fit_predict": [453, 455], "fit_transform": [37, 38, 41, 45, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 71, 91, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 120, 129, 133, 134, 162, 165, 168, 179, 191, 238, 308, 311, 312, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "fitted_pipelin": 101, "fitter": [129, 162], "five": [59, 68, 454], "five_mni_imag": 351, "fix": [17, 32, 35, 50, 51, 61, 72, 105, 113, 124, 163, 177, 178, 187, 190, 313, 314, 317, 323, 326, 329, 479], "fixed_fx_contrast": 73, "fixed_fx_contrast_img": 323, "fixed_fx_stat": 73, "fixed_fx_stat_img": 323, "fixed_fx_vari": 73, "fixed_fx_variance_img": 323, "fixed_fx_z_score_img": 323, "fixur": 178, "fl": 0, "flag": [132, 162, 178, 179, 367, 368], "flake8": [132, 137, 159, 162], "flash": 68, "flat": [24, 44, 128, 162, 190, 210, 211, 212, 213, 214, 215, 289, 292, 293, 300], "flat_left": [210, 211, 212, 213, 214, 215, 289], "flat_right": [210, 211, 212, 213, 214, 215, 289], "flatiron": 0, "flatten": [25, 43, 44, 71, 118, 205, 238, 244, 245, 292], "flavor": [2, 201], "fletcher": [118, 196, 246], "flexibl": [67, 136, 162], "flexibli": 59, "fliem": 226, "flip": [17, 107, 141, 162, 201, 250], "flirt": 216, "flm_object": [159, 162], "float": [3, 43, 44, 46, 51, 53, 69, 77, 131, 150, 153, 162, 239, 240, 242, 246, 272, 281, 283, 288, 290, 294, 295, 298, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 325, 326, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 348, 350, 359, 360, 363, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 428, 429, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 461, 464, 465, 466, 467, 468, 469, 478], "float32": [12, 35, 86, 105, 191, 345, 354, 371, 372, 373, 374, 375, 376, 377], "float64": [79, 132, 162], "flore": [118, 164, 238], "florent": [0, 118, 131, 162, 205, 216, 252], "florida": 0, "flow": [155, 162, 180, 184], "fluctuat": [51, 68, 177, 180, 184, 246], "fluenci": 79, "fluid": [12, 59, 218, 271, 367], "fmr": [51, 65], "fmri": [1, 8, 16, 27, 31, 32, 33, 34, 35, 38, 41, 43, 44, 47, 49, 58, 59, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 83, 84, 87, 91, 93, 96, 100, 103, 104, 105, 106, 113, 115, 116, 118, 120, 121, 132, 138, 145, 150, 162, 167, 168, 169, 171, 173, 176, 177, 179, 182, 183, 184, 185, 186, 189, 190, 191, 193, 199, 200, 201, 204, 207, 208, 217, 220, 223, 225, 226, 231, 247, 250, 251, 253, 259, 264, 267, 269, 270, 276, 277, 287, 304, 308, 311, 312, 321, 323, 326, 335, 339, 341, 342, 344, 345, 349, 351, 352, 354, 355, 356, 357, 360, 367, 368, 370, 376, 384, 387, 390, 410, 417, 425, 427, 428, 430, 431, 433, 435, 436, 440, 441, 442, 447, 449, 454, 456, 464, 465, 468, 469, 479, 481, 496, 497], "fmri_arrai": 111, "fmri_compress": 52, "fmri_data": [43, 96, 111, 326, 339], "fmri_fil": 103, "fmri_filenam": [3, 38, 39, 59, 96, 101, 120], "fmri_glm": [6, 26, 71, 72, 73, 179], "fmri_glm_multirun": 73, "fmri_glm_run_1": 73, "fmri_glm_run_2": 73, "fmri_img": [6, 36, 38, 39, 41, 67, 68, 71, 72, 73, 96, 111, 113, 179], "fmri_img_surf": 39, "fmri_mask": [38, 94, 101, 106, 109, 110, 120], "fmri_niimg": [3, 32, 36, 101, 170], "fmri_niimgs_condit": 32, "fmri_niimgs_test": 3, "fmri_niimgs_train": 3, "fmri_path": 111, "fmri_random_runs_filenam": 43, "fmri_reduc": 52, "fmri_reduced_rena": 52, "fmri_run": [35, 43], "fmrib": [2, 22, 181, 216, 219, 232, 259, 497], "fmripost": 368, "fmriprep": [65, 68, 113, 129, 130, 132, 157, 159, 162, 165, 169, 180, 184, 191, 218, 234, 267, 271, 272, 294, 295, 296, 297, 298, 299, 329], "fmt": 74, "fnhum": [118, 196, 246], "fnin": [52, 118, 167, 226], "fninf": [118, 121, 225, 281, 283], "fnsy": [118, 200, 249], "focu": [15, 81, 165, 167, 177, 456], "focus": [63, 76, 101, 111, 116, 120, 139, 145, 162, 164, 171, 174, 175, 178], "fold": [3, 31, 33, 36, 38, 43, 54, 70, 96, 101, 102, 170, 171, 173, 175, 177, 178, 191, 240, 304, 305, 306, 307, 308, 309, 310], "folder": [65, 96, 104, 113, 157, 162, 178, 187, 189, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 329, 354, 364], "follow": [2, 4, 7, 10, 15, 19, 22, 23, 24, 26, 31, 35, 36, 37, 38, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 74, 91, 93, 94, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 120, 121, 132, 144, 147, 148, 149, 150, 151, 152, 156, 162, 163, 164, 165, 168, 169, 175, 178, 179, 180, 182, 184, 186, 187, 189, 201, 209, 221, 227, 289, 291, 292, 293, 300, 326, 344, 350, 363, 364, 366, 367, 368, 372, 375, 377, 379, 382, 383, 384, 385, 386, 387, 450, 456, 468, 469, 479, 494, 495], "fonov": [118, 201, 218], "font": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 443, 445, 446], "fontproperti": [391, 393, 394], "fontsiz": [13, 27, 43, 52, 66, 80, 82, 109, 148, 150, 162, 190, 391, 393, 394, 448, 450, 451, 452], "footbibliographi": [155, 157, 159, 162], "footcit": [155, 157, 159, 162], "footer": [132, 162], "forc": [2, 96, 137, 162, 163, 177, 191, 201, 250, 259, 281, 283], "force_resampl": [68, 72, 77, 86, 95, 111, 132, 162, 359, 360], "ford": [118, 200, 249], "foreground": [90, 168], "forget": [96, 178], "fork": [163, 178], "form": [6, 7, 35, 43, 47, 52, 74, 109, 130, 162, 164, 165, 167, 168, 180, 184, 189, 216, 238, 239, 240, 286, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 326, 329, 333, 339, 341, 342, 364, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 426, 449, 453, 454, 455, 456, 465, 466], "formal": [6, 233], "format": [2, 41, 52, 58, 103, 120, 128, 129, 134, 154, 157, 159, 162, 178, 179, 191, 201, 205, 207, 246, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 363, 371, 374, 378, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 435, 436, 437, 441, 442, 443, 444, 445, 446, 451, 452, 476, 477, 478, 484], "formatstrformatt": 51, "formatt": [132, 162], "former": [171, 177, 281, 435, 437, 442, 446], "formerli": [93, 147, 162], "formula": [2, 132, 138, 162, 177, 339, 341, 355, 430], "fornito": [59, 118, 165, 368], "forschungszentrum": 0, "fortran": [177, 359, 360, 389, 390], "fortun": [3, 69], "forum": 178, "forward": [118, 235, 261], "foucault": [147, 162], "found": [3, 4, 6, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 70, 71, 73, 74, 77, 78, 79, 81, 82, 83, 87, 88, 89, 90, 91, 93, 94, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 121, 147, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 186, 187, 190, 191, 201, 225, 227, 281, 283, 285, 329, 344, 346, 364, 381, 384, 427, 441, 442, 468, 494], "four": [7, 43, 47, 68, 157, 162, 191, 236], "fourth": [83, 86, 155, 162, 326, 341, 367, 368, 423, 468], "fox": [118, 232, 235, 259, 261, 368], "fpr": [6, 35, 64, 73, 83, 104, 183, 184, 326, 339, 342, 466, 479], "fr": [0, 3, 10, 11, 28, 42, 105, 111, 198, 203, 224, 248, 256], "frac": [180, 305, 310, 313, 317], "frackowiak": [118, 344, 468], "fraction": [246, 326, 329, 384, 385, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 478], "frame": [35, 66, 91, 191, 201, 328, 351, 367, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 464], "frame_ax": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "frame_tim": [35, 66, 69, 179, 327, 328, 333], "frameon": [36, 391, 393, 394], "frames_tim": 333, "frametim": 64, "framewis": [59, 267, 367], "framework": [69, 164, 267], "fran": [61, 118, 229, 265], "franc": [0, 178], "francesca": [118, 200, 249], "francisco": [118, 226], "franz": [0, 148, 150, 152, 162], "fran\u00e7oi": [0, 129, 162], "frau": [0, 135, 162], "frazier": [118, 216], "free": [0, 118, 163, 171, 178, 180, 184, 341, 390], "freedman": [118, 390], "freedom": [59, 103, 112, 165, 180, 314, 317, 323, 368], "freeli": 233, "freesurf": [10, 23, 70, 113, 142, 147, 159, 162, 179, 205, 210, 211, 212, 213, 214, 219, 260, 289, 293, 404, 443, 444, 445, 446, 452, 470, 476, 477, 478], "freimer": [118, 268, 286], "freita": [118, 235, 261], "frem": [3, 30, 48, 116, 118, 128, 153, 162, 170, 171, 174, 176, 184, 185, 270, 279, 306, 307, 310, 351, 356, 439, 442, 447, 496, 497], "fremclassifi": [33, 132, 153, 154, 162, 171, 172, 304, 307], "fremregressor": [33, 42, 132, 153, 154, 162, 171, 172, 305, 306], "french": 0, "frequenc": [6, 68, 125, 162, 191, 246, 304, 305, 306, 307, 309, 310, 311, 312, 326, 333, 344, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 456, 467, 468], "frequent": [134, 162, 180, 478], "frequentist": 180, "frequentist_infer": 180, "fri": [118, 200, 249], "friedman": [118, 164], "friendli": [111, 127, 162, 495], "frisoni": [118, 197], "friston": [118, 233, 344, 468], "frith": [118, 344, 468], "fritsch": [0, 122, 162], "frmi_fil": 165, "from": [0, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 97, 98, 99, 100, 102, 104, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 143, 144, 147, 148, 150, 155, 156, 157, 159, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 193, 196, 197, 198, 199, 200, 201, 204, 206, 207, 208, 209, 216, 217, 218, 219, 221, 223, 225, 230, 231, 232, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 270, 272, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 290, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 323, 325, 326, 329, 333, 339, 340, 341, 343, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 427, 428, 430, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 478, 479, 480, 483, 486, 488, 489, 494, 495, 496, 497], "from_volum": [10, 39, 70, 113, 474], "fromkei": 103, "fromnumer": [3, 17, 31], "front": [313, 316], "frontal": [59, 72, 93, 118, 175, 427, 433, 435, 436, 441, 442], "frontier": [52, 118, 121, 167, 196, 200, 207, 225, 226, 246, 249, 281, 283], "frontiersin": 200, "fronto": [61, 104], "frontopariet": 266, "frouin": [118, 203, 276], "frustrat": 178, "fsaverag": [10, 23, 24, 25, 39, 65, 70, 113, 114, 128, 129, 132, 147, 155, 162, 193, 211, 212, 213, 214, 215, 236, 237, 289, 292, 293, 300, 437, 450, 478, 494], "fsaverage3": [155, 162, 193, 289, 292, 293, 300, 450], "fsaverage4": [155, 162, 193, 289, 292, 293, 300, 450], "fsaverage5": [10, 23, 24, 25, 70, 113, 114, 132, 142, 147, 162, 193, 205, 226, 260, 289, 290, 292, 293, 300, 329, 437, 450, 478], "fsaverage5_spher": [159, 162], "fsaverage6": [155, 162, 193, 289, 292, 293, 300, 450], "fsaverage7": [289, 292, 293, 300, 450], "fsaverage_data": [39, 70], "fsaverage_mesh": [10, 23, 24], "fsaverage_sulc": [10, 23, 24, 114], "fsavg": 474, "fsl": [11, 38, 43, 44, 59, 65, 81, 93, 133, 156, 157, 159, 162, 181, 189, 216, 219, 254, 255, 355, 497], "fsl3": [59, 93], "fsl_design_matrix_path": [65, 369], "fsl_z_map": 65, "fslmath": 355, "fslview": 190, "fswiki": [236, 262], "ftp": [199, 247], "fulcher": [59, 118, 368], "full": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 125, 127, 130, 162, 163, 167, 168, 169, 171, 173, 175, 177, 178, 179, 184, 190, 191, 197, 206, 217, 234, 254, 255, 267, 278, 304, 305, 306, 307, 311, 312, 313, 316, 317, 318, 319, 326, 339, 341, 361, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 432, 439, 454, 456, 458, 464, 479], "full_brain_info": [129, 162], "full_coef": 101, "full_correl": 278, "fullbrain": 270, "fulli": [26, 72, 118, 177, 180, 201, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442, 495], "func": [3, 6, 10, 12, 16, 17, 19, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 67, 68, 71, 73, 81, 87, 91, 93, 94, 96, 97, 101, 102, 103, 104, 105, 106, 108, 111, 113, 120, 130, 155, 162, 168, 178, 179, 189, 191, 199, 203, 206, 217, 223, 233, 247, 267, 270, 273, 280, 287, 364, 367, 368], "func1": [72, 73, 209, 234, 269, 288], "func2": [72, 73, 209, 234, 269, 288], "func_fil": 54, "func_filenam": [19, 27, 32, 33, 34, 35, 37, 51, 53, 56, 58, 61, 93, 94, 106, 108, 168, 190], "func_img": [31, 170], "func_left": [226, 290], "func_mask": 246, "func_mean": 246, "func_preproc": [158, 162, 246], "func_reduc": 106, "func_right": [226, 290], "function": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 22, 23, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 51, 52, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 70, 72, 74, 75, 76, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 105, 106, 108, 111, 113, 115, 118, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 167, 170, 171, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 196, 197, 198, 199, 201, 203, 204, 206, 207, 209, 220, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477, 478, 480, 483, 495, 496, 497], "functool": 51, "fundament": 184, "furei": [3, 33, 34, 40, 101, 118, 217, 270], "furo": [127, 159, 162], "further": [0, 15, 16, 24, 26, 41, 58, 68, 71, 86, 96, 111, 119, 164, 172, 174, 177, 187, 189, 193, 201, 231, 281, 326, 339, 367, 404, 485, 486, 494, 497], "furthermor": [6, 41, 45, 58], "fusifor": 480, "fusiform": [93, 175], "futur": [0, 2, 6, 16, 19, 21, 22, 32, 38, 43, 45, 46, 51, 53, 89, 90, 106, 110, 132, 141, 147, 153, 159, 162, 177, 184, 189, 191, 314, 464], "fv": 163, "fwe": [109, 390], "fwer": [79, 83, 183, 184, 341], "fwhm": [4, 68, 96, 97, 107, 109, 144, 150, 162, 184, 186, 190, 191, 361], "g": [0, 6, 10, 15, 23, 25, 26, 32, 33, 43, 45, 46, 50, 51, 58, 64, 69, 96, 102, 103, 109, 118, 128, 155, 159, 162, 165, 175, 177, 178, 179, 180, 183, 184, 186, 190, 191, 197, 198, 204, 207, 227, 235, 238, 239, 240, 251, 261, 304, 305, 306, 307, 308, 309, 310, 311, 312, 318, 319, 326, 333, 339, 343, 346, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 429, 437, 440, 443, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 459, 460, 462, 478, 494], "g004": 200, "g_and_s_cingul": 480, "g_and_s_frontomargin": 480, "g_and_s_occipital_inf": 480, "g_and_s_paracentr": 480, "g_and_s_subcentr": 480, "g_and_s_transv_frontopol": 480, "g_cingul": [24, 480], "g_cuneu": 480, "g_front_inf": 480, "g_front_middl": 480, "g_front_sup": 480, "g_ins_lg_and_s_cent_in": 480, "g_insular_short": 480, "g_oc": 480, "g_occipital_middl": 480, "g_occipital_sup": 480, "g_orbit": 480, "g_pariet_inf": 480, "g_parietal_sup": 480, "g_postcentr": [10, 480], "g_precentr": [10, 480], "g_precuneu": 480, "g_rectu": 480, "g_subcallos": 480, "g_t_transv": 480, "g_temp_sup": 480, "g_temporal_inf": 480, "g_temporal_middl": 480, "ga": [47, 118, 170, 176, 186], "gabriel": [118, 121, 225, 281, 283], "gael": [0, 51, 52, 118, 121, 122, 123, 125, 126, 135, 137, 140, 144, 147, 148, 149, 150, 152, 162, 164, 168, 169, 224, 225, 238, 239, 256, 281, 283, 311, 312, 455, 456, 461], "gagan": [61, 118, 208, 229, 264, 265], "gain": [42, 68, 172, 177, 222, 279], "gale": [0, 147, 150, 162], "gallant": [118, 171], "galleri": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 129, 135, 137, 141, 142, 144, 162, 178, 494, 496], "gambl": [30, 48, 116, 174, 176, 193, 279, 307, 310, 442, 447, 496], "gamma": [69, 159, 162, 179], "ganel": 118, "ganglia": 231, "gap": [56, 239, 242], "gather": [96, 178, 180], "gatsbi": 0, "gau": [0, 128, 129, 130, 131, 132, 133, 134, 160, 162], "gaussian": [6, 35, 47, 73, 81, 96, 104, 118, 164, 177, 180, 191, 192, 201, 239, 242, 361, 479], "gaussian_filt": 47, "gazzalei": [103, 118], "ga\u00ebl": [52, 54, 59, 102, 118, 164, 165, 167, 172, 207, 224, 253, 256, 306, 307, 311], "gca": [51, 54, 102], "gcf": 43, "gd86fd0680": [35, 64, 70, 73, 104, 113, 479, 480], "gee": 118, "gender": [206, 227, 267], "gener": [0, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 120, 127, 129, 130, 131, 132, 134, 147, 148, 150, 152, 153, 155, 157, 162, 170, 171, 173, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 191, 201, 204, 218, 223, 231, 250, 251, 276, 286, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 326, 333, 339, 341, 342, 343, 344, 349, 355, 356, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 388, 390, 434, 437, 442, 443, 444, 445, 446, 447, 453, 454, 456, 464, 468, 479, 480, 483, 484, 494, 495, 496], "generate_group_sparse_gaussian_graph": [60, 177], "generate_report": [35, 57, 61, 64, 70, 73, 77, 91, 93, 94, 104, 113, 129, 130, 157, 162, 191, 326, 339, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456], "genet": [118, 216], "geneva": 0, "genfromtxt": 170, "genom": 0, "gensollen": [0, 130, 154, 155, 156, 157, 158, 159, 162], "gentl": 186, "geoffrei": [118, 318, 319], "geometr": [164, 238], "geometri": [7, 70, 118, 184, 355, 437, 443, 444, 445, 446, 452, 477, 478], "geomspac": 41, "gerard": [106, 118, 390], "geriant": 233, "geriatr": 0, "gerloff": [0, 128, 162], "germani": [0, 118, 176], "germnai": 0, "gervai": [0, 122, 162], "get": [3, 4, 6, 10, 15, 22, 23, 24, 35, 37, 43, 44, 54, 55, 59, 61, 65, 68, 69, 70, 72, 77, 80, 83, 88, 90, 98, 103, 104, 108, 112, 113, 114, 121, 142, 147, 162, 163, 165, 168, 169, 170, 175, 177, 179, 182, 183, 185, 191, 198, 238, 239, 240, 254, 255, 283, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 326, 339, 341, 349, 354, 358, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 391, 393, 394, 421, 453, 454, 455, 456, 464, 465, 466, 470, 495], "get_affin": [141, 162, 189, 346], "get_anat": 276, "get_bids_fil": [157, 162], "get_clusters_t": [6, 65, 71, 128, 154, 158, 159, 162], "get_data": [32, 38, 45, 50, 52, 79, 81, 86, 96, 106, 109, 110, 112, 142, 150, 162, 163, 189, 354], "get_data_dir": [4, 140, 162, 189, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 300], "get_dataset_dir": 178, "get_design_from_fslmat": [65, 157, 162], "get_fdata": [12, 26, 82, 105, 111, 150, 162, 189], "get_head": 189, "get_ifram": 464, "get_mask": 276, "get_metadata_rout": [238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "get_object_bound": [391, 393, 394], "get_param": [103, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "get_standalon": 464, "get_support": 45, "get_tmap": [81, 276], "get_zoom": 428, "getattr": [11, 16, 19, 22, 26, 51, 53, 89, 90], "geuter": [118, 344, 468], "gezici": [0, 130, 162], "gh": [129, 162, 178], "ghislain": [118, 209], "gholamreza": [118, 164], "ghosh": [118, 121, 225, 281, 283], "giant": [150, 162], "gif": [0, 178], "gifti": [7, 129, 132, 162, 210, 211, 212, 213, 214, 215, 289, 290, 470, 471, 472, 473, 475], "gifti_fil": [470, 471, 475], "gigabyt": 178, "gii": [7, 367, 368, 404, 443, 444, 445, 446, 452, 476, 477, 478], "gili": [118, 201], "gill": [0, 147, 150, 162], "gilmor": [0, 155, 162], "gin": [198, 248], "giov": [118, 201], "giovanni": [118, 197], "gist_ncar": [23, 146, 162, 428, 441, 445, 494], "gist_rainbow": 440, "git": [122, 123, 125, 126, 135, 137, 140, 162, 163, 178, 187], "github": [0, 3, 38, 52, 55, 56, 61, 65, 77, 79, 159, 162, 178, 186, 218, 226, 230, 236, 258, 368, 450, 479, 480, 494, 495], "give": [2, 3, 4, 6, 10, 15, 16, 17, 25, 26, 31, 35, 41, 45, 52, 55, 57, 58, 59, 61, 70, 86, 93, 96, 101, 107, 118, 120, 128, 140, 142, 157, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 175, 177, 186, 190, 191, 209, 233, 274, 275, 283, 304, 305, 306, 307, 308, 311, 312, 313, 321, 326, 328, 333, 339, 341, 361, 364, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 388, 404, 439, 444, 445, 453, 454, 456, 458, 462, 463, 478], "given": [2, 3, 10, 15, 17, 39, 41, 46, 47, 50, 53, 56, 57, 61, 66, 67, 68, 70, 74, 77, 81, 86, 88, 96, 97, 103, 105, 108, 114, 128, 139, 141, 145, 150, 159, 162, 163, 164, 167, 170, 171, 173, 175, 176, 177, 178, 180, 184, 187, 191, 197, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 254, 255, 275, 276, 278, 279, 285, 290, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 322, 323, 326, 329, 333, 339, 340, 341, 343, 345, 350, 353, 356, 359, 361, 363, 364, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 427, 428, 429, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 466, 467, 469, 480], "gl": [56, 60], "glahn": [118, 232, 259], "glaser": [0, 146, 162], "glass": [9, 10, 29, 50, 64, 77, 112, 116, 134, 140, 141, 142, 144, 145, 150, 153, 162, 185, 301, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 435, 438, 442, 447, 448, 451, 466, 494, 496], "glassbrainax": [395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417], "glasser": [118, 197], "glm": [1, 7, 8, 30, 34, 45, 48, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 103, 104, 113, 127, 129, 130, 131, 132, 133, 134, 153, 154, 155, 157, 159, 162, 170, 179, 183, 184, 185, 186, 187, 270, 287, 304, 351, 356, 363, 366, 427, 430, 431, 434, 436, 442, 447, 464, 465, 466, 483, 491, 495, 496, 497], "glm_paramet": 103, "glmax": [59, 105], "glmin": [59, 105], "glob": [65, 77, 131, 135, 145, 162, 188, 345, 364], "global": [9, 29, 35, 64, 70, 73, 113, 116, 118, 153, 162, 177, 178, 189, 196, 201, 230, 246, 247, 258, 271, 291, 311, 312, 345, 357, 367, 368, 384, 428, 454, 479, 496], "global_sign": [59, 130, 162, 367, 368], "global_signal_regress": 246, "glossari": [131, 158, 162, 180], "glover": [35, 64, 66, 68, 69, 70, 73, 113, 132, 162, 179, 326, 328, 329, 330, 331, 332, 333, 479], "glover_dispersion_deriv": [132, 162, 326, 328, 333], "glover_hrf": [132, 162, 326, 328, 333], "glover_time_deriv": [132, 162, 326, 328, 333], "gm": [12, 22, 91, 156, 162, 191, 218, 271, 272, 304, 305, 306, 307, 311, 312, 373, 376, 383, 386, 454], "gm_img": 46, "gm_imgs_test": [45, 46], "gm_imgs_train": [45, 46], "gm_maps_mask": 45, "gm_mask": 77, "gm_mask_img": [272, 295], "gm_mni152_templ": 296, "gmbh": 0, "go": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 119, 121, 143, 162, 164, 170, 174, 178, 183, 186, 187, 191, 283, 349, 354, 355, 357, 429, 435, 438, 442, 447, 449, 479, 496, 497], "goal": [7, 87, 92, 95, 98, 111, 120, 177, 178], "gobbini": [3, 33, 34, 40, 101, 118, 217, 270], "godfrei": [118, 200, 249], "goe": [0, 15, 26, 43, 88, 96, 103, 177, 239, 242], "goebel": [118, 175, 186, 308], "goeman": [78, 118, 321], "goldstein": [118, 205, 216, 252], "golobal_sign": 368, "gomez": [0, 147, 150, 156, 159, 162], "goncalv": [0, 128, 162], "gonn": [118, 216], "gonzalez": [26, 118, 140, 147, 162], "good": [7, 52, 59, 67, 68, 118, 120, 142, 162, 164, 167, 169, 171, 172, 173, 174, 176, 177, 178, 179, 187, 189, 191, 281, 306, 307, 421], "goodwin": [118, 197], "googl": 0, "gor": [0, 122, 147, 162], "gordon": [118, 230, 258], "gorgolewski": [0, 118, 121, 122, 135, 162, 207, 225, 253, 268, 281, 283, 286], "gorrono": [0, 152, 162], "goshen": 118, "got": [170, 178], "gotim": 118, "gottstein": 118, "gould": [118, 177], "gov": [51, 118, 169, 171, 209, 311], "govern": 177, "grab": [35, 50, 51, 52, 67, 103, 121, 163], "grace": [118, 206, 267], "gracefulli": 359, "grad": 497, "gradient": 13, "graham": [59, 118, 367, 368], "grai": [12, 26, 40, 43, 44, 45, 46, 68, 77, 91, 94, 131, 134, 140, 147, 150, 156, 162, 175, 183, 185, 191, 218, 227, 271, 272, 285, 304, 305, 306, 307, 311, 312, 373, 376, 427, 428, 433, 436, 438, 454, 478, 480], "grain": [10, 71, 118, 207, 253, 308], "gramfort": [0, 47, 52, 118, 122, 125, 149, 150, 162, 164, 176, 186, 224, 239, 256], "grand": [59, 326], "grant": 0, "graph": [46, 50, 56, 60, 164, 166, 176, 177, 184, 185, 304, 305, 309, 310, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 438, 497], "graph_net": 42, "graph_object": 404, "graphic": [61, 118, 164, 177, 178, 192, 239, 242], "graphical_lasso": 56, "graphicallasso": [56, 164], "graphicallassocv": [55, 56, 60, 61, 164, 177, 240], "graphicallassocvifittedgraphicallassocv": [55, 56, 61], "graphnet": [118, 176], "grass": 196, "gratton": [118, 231, 266], "gray_matter_map": [45, 46, 77, 227, 285], "gray_matter_map_filenam": [45, 77], "grayplot": [12, 153, 162, 428], "grayscal": [443, 445, 446, 452], "great": [147, 162], "greater": [68, 103, 155, 157, 162, 180, 201, 326, 335, 343, 350, 363, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 429, 435, 436, 437, 438, 442, 446, 448, 450, 452, 465, 469, 478], "greaterorequ": [121, 281], "greaterthan": [121, 281], "greatli": 186, "green": [43, 52, 118, 155, 162, 231, 266, 313, 317], "greenelab": 231, "greg": [0, 147, 150, 162], "gregori": [103, 118, 170], "grei": [68, 91, 156, 162, 190, 191, 272, 295, 296, 297, 299, 383, 386], "grew": 0, "grey_matter_imag": 26, "grey_matter_mask": 26, "greydon": [0, 155, 162], "grid": [7, 36, 41, 54, 69, 81, 86, 102, 171, 176, 184, 190, 240, 281, 283, 304, 305, 306, 307, 330, 331, 332, 336, 337, 338, 359, 401, 403, 406, 420, 425, 427, 433, 436, 439, 440, 441, 442, 494], "grid_param": [129, 162], "grid_search": [147, 162, 304, 305, 306, 307], "gridsearchcv": [102, 173], "gridsiz": 425, "gridspec": [43, 155, 162], "gridspec_kw": [41, 52, 82, 103], "griffith": [144, 162], "grobler": [0, 122, 162], "groningen": 0, "grosenick": [118, 176], "gross": 227, "ground": [44, 47, 60, 170], "group": [2, 3, 31, 32, 34, 35, 41, 49, 60, 61, 62, 65, 76, 77, 78, 79, 80, 81, 82, 100, 101, 104, 108, 109, 115, 116, 118, 144, 150, 162, 165, 166, 169, 170, 175, 180, 182, 183, 184, 185, 186, 197, 201, 204, 206, 227, 233, 238, 239, 240, 250, 251, 256, 264, 266, 267, 278, 284, 304, 305, 306, 307, 308, 311, 312, 352, 364, 367, 370, 375, 390, 423, 428, 429, 439, 440, 442, 447, 461, 479, 496, 497], "group_connect": 164, "group_mean": 251, "group_multiscale_functional_template_generated_with_basc_on_the_cambridge_sampl": 250, "group_sparse_covari": [135, 162, 177, 240], "group_sparse_covariance_cost": 177, "grouped_conditions_encod": 106, "grouped_fmri_mask": 106, "groupsparsecovari": [56, 164, 177, 240], "groupsparsecovariancecv": [56, 60, 164, 177], "grow": [52, 164, 201], "grp_mask": 388, "grp_mean": 251, "grueschow": [118, 175], "gruner": [118, 200, 249], "gryal": 260, "gs1": 43, "gsc": [56, 60], "gsr": 59, "gt": [38, 91, 93, 94, 104, 113, 479, 480], "gtihub": 163, "guarante": [0, 6, 83, 171, 177, 289, 302, 354, 359, 360, 366, 373], "guess": [170, 177, 382, 449], "guevara": [0, 135, 140, 162], "gui": [118, 182, 197], "guid": [42, 127, 133, 162, 178, 183, 185, 186, 187, 191, 193, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 483, 485, 486, 495], "guidelin": [59, 96, 118, 127, 134, 156, 159, 162, 163, 170, 187], "guidotti": [0, 140, 150, 162], "guillaum": [0, 118, 147, 150, 162, 209], "gur": [59, 118, 367, 368], "gustav": 0, "gutman": [118, 226], "gyral": [118, 205, 216], "gyri": [23, 118, 205, 260], "gyru": [10, 59, 93, 261], "gz": [2, 3, 4, 6, 11, 12, 15, 17, 19, 22, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 65, 73, 77, 79, 87, 88, 91, 93, 94, 96, 97, 104, 105, 106, 107, 108, 109, 111, 112, 113, 120, 186, 187, 189, 201, 207, 209, 366, 367, 368, 404, 443, 452, 476, 477, 480], "g\u00f6z\u00fckan": [0, 132, 133, 134, 160, 162], "h": [59, 67, 118, 205, 210, 211, 212, 213, 214, 227, 235, 252, 261, 268, 286, 289, 313, 317, 367, 368], "h0": [314, 390], "h0_fmax": [158, 162, 390], "h0_max_mass": 390, "h0_max_siz": 390, "h0_max_t": 390, "h0_max_tfc": 390, "h1": 93, "h2": 93, "h_shape": 480, "ha": [3, 6, 13, 24, 32, 35, 38, 39, 41, 43, 44, 45, 52, 54, 55, 57, 61, 66, 68, 69, 71, 72, 73, 74, 77, 81, 83, 88, 91, 93, 96, 103, 108, 121, 127, 128, 129, 130, 132, 134, 135, 137, 141, 144, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 169, 171, 172, 175, 177, 178, 180, 182, 183, 187, 191, 201, 233, 238, 239, 240, 248, 249, 250, 252, 257, 261, 281, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 333, 339, 341, 350, 353, 354, 359, 360, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 392, 435, 437, 442, 446, 447, 453, 454, 455, 456, 460, 464, 466, 467, 469, 478, 479, 480, 494], "habib": [118, 201, 250], "had": [129, 146, 162], "haemodynam": [118, 179, 180, 184], "haemoglobin": 180, "hahn": [0, 159, 162], "hairi": 67, "haitz": [0, 152, 162], "hajim": [43, 44, 118, 223, 280], "hal": [47, 118, 164, 168, 176, 207, 239, 253, 456], "halchenko": [0, 144, 147, 162], "half": [24, 35, 52, 68, 73, 96, 104, 150, 162, 177, 184, 191, 304, 305, 306, 307, 311, 312, 326, 339, 341, 361, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 443, 445, 446, 450, 452, 454, 456, 458, 479], "halfwai": 478, "halgren": [23, 118, 205, 252, 260], "hammond": [0, 150, 162], "hampshir": 0, "han": 118, "hand": [0, 2, 68, 70, 96, 132, 133, 134, 160, 162, 177, 178, 189, 191, 290], "handbook": 186, "handed": [206, 267], "handedness_categori": 246, "handedness_scor": 246, "handi": [154, 162, 179], "handl": [1, 8, 52, 73, 111, 116, 128, 129, 131, 132, 134, 137, 143, 159, 162, 170, 186, 187, 189, 190, 191, 259, 301, 314, 318, 345, 351, 352, 353, 354, 359, 365, 367, 431, 442, 447, 455, 461, 496], "handwerk": [26, 118], "hank": [0, 126, 135, 162], "hanov": 0, "hao": [0, 127, 128, 129, 130, 132, 154, 155, 157, 159, 162], "happen": [50, 51, 163, 175, 178, 191, 478], "hard": [13, 58, 165, 177, 184, 189], "hardcod": [74, 127, 162, 302], "harder": 171, "hardest": 177, "hardwar": 177, "harold": [118, 226], "harsh": 304, "hartmut": 118, "harvard": [0, 22, 93, 165, 193, 227, 236, 237, 246, 254, 262, 422, 423, 489], "harvard_oxford": 22, "harvard_oxford_sub": 22, "harvardoxford": 11, "hash": 51, "hasn": [3, 177], "hasti": [118, 164], "hat": [313, 317], "hatch": 187, "hatchl": [128, 162, 187], "have": [0, 2, 3, 6, 7, 10, 12, 13, 16, 17, 19, 24, 25, 26, 31, 33, 34, 35, 41, 42, 44, 45, 47, 52, 55, 57, 58, 59, 60, 64, 65, 66, 67, 68, 70, 72, 73, 77, 87, 88, 95, 96, 101, 103, 104, 105, 107, 111, 113, 114, 116, 120, 121, 127, 128, 129, 130, 132, 134, 135, 137, 139, 140, 141, 144, 145, 146, 147, 150, 153, 154, 155, 157, 158, 162, 164, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 183, 184, 186, 187, 189, 190, 191, 197, 201, 204, 206, 220, 227, 234, 238, 239, 240, 242, 245, 250, 262, 266, 267, 281, 304, 305, 306, 307, 308, 309, 310, 311, 312, 318, 319, 326, 329, 333, 334, 339, 340, 341, 343, 344, 346, 355, 359, 360, 361, 364, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 428, 434, 435, 436, 442, 443, 444, 445, 446, 450, 452, 453, 454, 455, 456, 462, 463, 465, 466, 468, 475, 494, 495], "haven": [68, 107], "havlicek": [118, 200, 249], "haxbi": [4, 9, 16, 17, 29, 30, 48, 96, 116, 118, 120, 141, 142, 162, 174, 176, 185, 189, 191, 193, 270, 304, 349, 351, 356, 370, 376, 418, 427, 439, 442, 447, 449, 494, 496], "haxby2001": [3, 4, 16, 17, 19, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 96, 101, 106, 120, 189, 217, 270], "haxby_anat_filenam": [16, 17], "haxby_dataset": [3, 16, 17, 19, 27, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 96, 101, 106, 120, 170, 189, 191], "haxby_face_vs_hous": 31, "haxby_func_filenam": [16, 17], "haxby_label": 96, "haxby_mask_filenam": [16, 17], "haxby_svc_weight": 3, "hayn": [39, 118, 175], "hayward": 0, "hbm": [118, 204, 251, 344, 468], "hbm10": [118, 210, 211, 212, 213, 214, 289], "hbm30": [118, 235, 261], "hbm6": [118, 235, 261], "hc": 163, "hcp": [13, 28, 118, 193, 278], "hcp500": [197, 278], "he": 178, "head": [71, 178, 187, 367, 464, 466], "head_tpl": 464, "head_valu": 464, "header": [3, 12, 96, 100, 104, 115, 116, 125, 129, 131, 132, 148, 150, 158, 162, 189, 247, 343, 344, 347, 348, 354, 355, 356, 357, 358, 359, 360, 363, 428, 468, 496], "health": 0, "healthi": [118, 184, 186, 196, 200, 201, 216, 232, 250], "heart": 68, "heavi": [42, 45, 164, 178, 377], "heavier": 33, "heavili": 0, "hedden": [118, 201], "heidelberg": [0, 118, 164, 218, 224, 238, 256], "heidi": [118, 197], "height": [13, 32, 35, 54, 64, 70, 73, 74, 77, 102, 104, 113, 150, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 428, 429, 433, 435, 436, 438, 439, 440, 441, 442, 448, 450, 452, 464, 466, 479], "height_control": [6, 26, 70, 77, 79, 83, 113, 326, 339, 342, 366, 466], "height_ratio": [41, 52], "height_tf": 44, "height_tf_i": 44, "heinzl": [39, 118], "held": [43, 175, 178, 304, 305, 306, 307, 495], "helen": [118, 204, 251], "help": [13, 16, 26, 35, 61, 96, 118, 143, 147, 148, 162, 165, 171, 179, 182, 191, 242, 495, 497], "helper": [25, 40, 43, 47, 52, 69, 80, 93, 109, 110, 114, 128, 135, 142, 143, 162, 178, 193, 281], "helwegen": [0, 159, 162], "hemi": [7, 10, 23, 24, 39, 50, 70, 114, 404, 443, 444, 445, 446, 452, 472, 473, 494], "hemispher": [7, 10, 23, 24, 39, 50, 61, 81, 88, 96, 113, 114, 132, 134, 140, 141, 145, 162, 168, 190, 205, 210, 211, 212, 213, 214, 215, 223, 226, 252, 260, 261, 289, 290, 292, 362, 378, 379, 380, 391, 399, 422, 427, 429, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 450, 452, 466, 473, 474, 480, 494], "hemispheres_to_analyz": 39, "hemodyam": 67, "hemodynam": [35, 69, 70, 72, 113, 170, 184], "hemodynamic_model": [159, 162], "henc": [3, 41, 59, 61, 74, 77, 88, 153, 162, 175, 178, 180, 201], "henson": [103, 118], "herbert": [118, 216], "here": [2, 3, 4, 6, 7, 10, 11, 13, 15, 16, 20, 21, 24, 26, 31, 32, 33, 34, 35, 36, 37, 38, 41, 45, 46, 47, 51, 52, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 77, 90, 91, 94, 96, 97, 101, 103, 104, 105, 107, 108, 111, 113, 114, 118, 120, 121, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 183, 186, 187, 190, 191, 231, 267, 309, 310, 316, 318, 319, 329, 341, 383, 390, 395, 396, 397, 398, 399, 400, 405, 409, 410, 413, 414, 415, 416, 443, 445, 446, 479, 480], "herebi": 175, "herholz": [0, 147, 162], "hertz": [35, 64, 70, 73, 113, 304, 305, 306, 307, 309, 310, 311, 312, 344, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 456, 467, 468, 479], "heschl": 93, "hesheng": [118, 201, 230, 236, 258, 262], "hesit": [120, 178], "heterogen": 164, "heurist": [142, 162, 176, 177, 240, 384, 427, 440, 441, 442, 449, 494], "hex": 451, "hexadecim": 11, "hexbin": 425, "hhmi": 227, "hidden": 26, "hide": [26, 118], "hierarch": [167, 184, 185, 201, 453], "hierarchi": [118, 201, 250], "hierarchical_kmean": [52, 157, 162, 454], "hierarchical_kmeans_parcel": 52, "hierarchicalkmean": [52, 133, 157, 162], "high": [10, 33, 35, 42, 52, 59, 64, 67, 68, 70, 73, 91, 96, 111, 113, 118, 147, 153, 154, 155, 162, 171, 172, 177, 178, 180, 184, 186, 187, 190, 191, 197, 198, 201, 210, 211, 212, 213, 214, 228, 248, 257, 289, 292, 293, 300, 304, 305, 306, 307, 309, 310, 311, 312, 314, 326, 329, 333, 344, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 404, 437, 450, 454, 456, 467, 468, 479], "high_pass": [6, 26, 35, 52, 54, 55, 56, 57, 58, 59, 61, 64, 68, 70, 72, 73, 91, 93, 94, 102, 103, 113, 147, 162, 191, 304, 305, 306, 307, 309, 310, 311, 312, 326, 329, 333, 344, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 456, 467, 468, 479, 480], "high_variance_confound": [52, 55, 56, 57, 59, 61, 68, 91, 93, 94, 134, 137, 154, 162, 191, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 480], "higher": [6, 73, 77, 120, 142, 162, 164, 175, 180, 182, 239, 259, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 345, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 404, 454, 455, 456, 467], "highest": [41, 55, 57, 304, 305, 306, 307, 329, 350, 469], "highli": [66, 177, 178], "highlight": [26, 103, 118, 187], "hilari": [118, 206, 267], "himanshu": [0, 131, 132, 133, 134, 162], "himanshupathak21061998": [147, 148, 162], "hint": [68, 164, 165], "hinz": [118, 226], "hippocampu": [231, 266], "hiroki": [43, 44, 118, 223, 280], "hist": [52, 71, 426], "histogram": [326, 335, 384, 387, 425, 426], "histori": 177, "hkmean": 52, "hkmeans_count": 52, "hkmeans_labels_img": 52, "hoc": 177, "hochberg": [180, 325], "hocheberg": [157, 162], "hodg": [118, 216], "hold": [7, 43, 80, 132, 162, 177, 178, 187, 311, 312, 333, 390, 401, 454], "hole": 96, "holland": [0, 147, 150, 162], "hollinshead": [118, 230, 236, 258, 262], "holm": [118, 198, 230, 258, 344, 468], "holtzheim": [118, 204, 251], "home": [2, 3, 4, 6, 7, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 93, 94, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 186, 189, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 354, 479, 480], "homedir": [139, 162], "hommel": [157, 162], "homogen": [91, 130, 162, 167, 190, 204, 246, 251, 304, 305, 306, 307, 311, 312, 359, 373, 376, 454], "homotop": [201, 246, 250], "honorio": [118, 177, 239, 242], "hood": [41, 171, 176, 304, 305, 306, 307, 311, 312, 373, 376, 454], "hook": 178, "hopefulli": 177, "hopkin": 0, "hoptman": [118, 226], "horea": [0, 144, 147, 162], "horizont": [68, 74, 82, 131, 162, 276, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 480], "horizontal_checkerboard": [67, 68, 70, 221], "horton": [118, 197], "hospit": 0, "hospitali": 0, "host": [163, 178], "host_and_deploy_doc": 163, "host_doc": 163, "hough": [118, 197], "hour": [178, 186, 187, 341, 390], "hous": [3, 19, 30, 34, 35, 41, 48, 96, 100, 115, 116, 128, 162, 175, 185, 189, 190, 216, 217, 270, 304, 306, 308, 349, 351, 354, 356, 357, 370, 376, 390, 418, 436, 439, 442, 447, 449, 496], "hover": 91, "how": [0, 1, 2, 3, 4, 5, 6, 7, 10, 15, 16, 20, 22, 26, 28, 36, 39, 41, 43, 47, 50, 51, 52, 53, 56, 58, 59, 61, 64, 65, 66, 68, 69, 71, 73, 74, 80, 81, 86, 88, 89, 90, 91, 93, 96, 97, 103, 105, 107, 110, 111, 112, 114, 116, 120, 128, 132, 142, 153, 154, 157, 158, 162, 163, 165, 167, 168, 169, 170, 171, 173, 175, 177, 180, 184, 185, 186, 188, 190, 206, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 495], "howard": 227, "howev": [0, 26, 50, 51, 52, 68, 71, 73, 88, 96, 103, 111, 163, 164, 170, 173, 177, 180, 191, 198, 359, 366, 368, 497], "hoyo": [0, 52, 118, 150, 162, 170, 172, 306, 307, 455, 461], "hrcku": 22, "hrf": [6, 67, 68, 69, 70, 132, 157, 159, 162, 170, 181, 184, 326, 328, 330, 331, 332, 333, 336, 337, 338, 497], "hrf_model": [6, 26, 35, 64, 66, 67, 68, 70, 72, 73, 113, 326, 328, 329, 333, 479], "hspace": [47, 52, 60], "hstack": [32, 79, 82, 316, 318, 319], "htdoc": [199, 247], "htm": [118, 313, 317], "html": [3, 13, 19, 31, 35, 36, 38, 52, 55, 56, 57, 59, 61, 64, 65, 70, 73, 77, 79, 101, 104, 113, 131, 134, 147, 151, 155, 157, 162, 163, 170, 181, 185, 187, 191, 197, 199, 200, 217, 235, 261, 270, 278, 304, 305, 306, 307, 326, 339, 368, 372, 375, 377, 379, 448, 449, 450, 451, 452, 456, 464, 466, 494, 495], "html_document": 464, "html_report": [372, 375, 377, 379, 456], "html_surfac": [129, 134, 162], "html_view": [449, 494], "htmlcov": 163, "htmldocument": 464, "htmlreport": [326, 339, 372, 375, 377, 379, 380, 456, 466], "http": [0, 2, 3, 4, 6, 10, 11, 13, 18, 19, 20, 22, 28, 36, 40, 42, 47, 51, 54, 59, 65, 67, 72, 79, 81, 82, 83, 102, 104, 105, 107, 111, 112, 118, 121, 159, 162, 163, 164, 168, 169, 171, 176, 178, 180, 186, 187, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 239, 248, 249, 250, 251, 253, 256, 257, 258, 259, 261, 262, 267, 270, 276, 278, 282, 284, 285, 287, 301, 304, 305, 306, 307, 311, 313, 317, 368, 450, 451, 456, 494, 495], "httperror": [146, 162], "hu": [118, 204, 251], "huang": [0, 132, 162], "hubbard": [118, 186], "huge": [0, 68, 69, 147, 162, 207], "hugh": 227, "huguet": [0, 130, 162], "human": [0, 9, 23, 29, 42, 43, 44, 46, 61, 69, 116, 118, 121, 175, 178, 184, 196, 201, 204, 205, 209, 210, 211, 212, 213, 214, 216, 223, 225, 228, 229, 230, 235, 236, 246, 251, 252, 257, 258, 260, 261, 262, 265, 278, 280, 281, 283, 289, 344, 368, 425, 439, 447, 468, 496], "humanconnectom": [118, 197, 278], "hunar": [103, 118], "hundr": [6, 52, 454], "huntenburg": [0, 135, 150, 162], "hutchison": [118, 200, 249], "hvidovr": 0, "hwbm2": 18, "hybrid": [309, 310], "hyman": [118, 216], "hyper": [171, 172], "hyperparamet": [36, 45], "hyperplan": [309, 310], "hypothalam": [118, 216], "hypothes": [66, 180, 184], "hypothesi": [175, 180, 308, 314, 341, 390], "hz": [6, 35, 64, 68, 70, 72, 73, 113, 191, 201, 326, 333, 479], "i": [0, 2, 4, 6, 10, 11, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 190, 193, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 218, 221, 224, 225, 227, 228, 230, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 483, 489, 494, 495, 497, 498], "i_ax": 103, "i_col": 109, "i_row": 81, "i_trial": 103, "iacovella": [118, 201], "ian": [0, 150, 162], "ic": [51, 107, 200], "ic_img": 107, "ic_map": 107, "ic_term": 107, "ic_threshold": 107, "ica": [22, 49, 53, 57, 62, 89, 94, 100, 108, 115, 116, 118, 121, 135, 162, 165, 166, 184, 185, 186, 195, 197, 200, 224, 232, 249, 259, 267, 278, 281, 294, 311, 312, 352, 361, 367, 368, 370, 372, 375, 376, 440, 442, 447, 460, 480, 494, 496, 497], "ica_aroma": [59, 157, 162, 367, 368], "ica_map": 107, "icbm": [22, 68, 77, 147, 162, 193, 271], "icbm152": [12, 156, 162, 184, 201, 218, 271, 272, 294, 295, 296, 297, 298, 299], "icbm152_2009": [12, 22, 68, 77], "icbm152nlin2009": 218, "icbm_mask": 68, "iceberg": [26, 118], "id": [6, 35, 64, 65, 71, 72, 73, 104, 107, 112, 121, 128, 162, 198, 216, 219, 246, 248, 261, 279, 281, 283, 290, 326, 371, 374, 378, 465, 479], "ida": [3, 33, 34, 40, 101, 118, 217, 270], "idea": [53, 90, 96, 170, 177, 180], "ideal": [81, 109, 167, 180, 187, 201, 250], "ident": [10, 25, 41, 70, 82, 113, 177, 201, 344, 361, 458, 468], "identif": [74, 96, 118, 184, 197, 203, 246, 276], "identifi": [0, 26, 31, 32, 34, 35, 53, 61, 65, 96, 118, 127, 157, 162, 168, 176, 179, 180, 183, 197, 248, 322, 326, 328, 333, 335], "idp": 207, "idrissa": [0, 133, 162], "idrobo": [0, 52, 118, 150, 162, 170, 172, 306, 307, 455, 461], "idx": 111, "ie": [17, 159, 162, 164, 169, 189, 316, 318, 319, 372, 375, 377, 379], "ieee": [47, 51, 52, 118, 169, 176, 198, 207, 311, 312, 455, 461], "ignor": [3, 17, 22, 31, 34, 42, 51, 53, 65, 72, 105, 107, 148, 153, 162, 163, 238, 239, 240, 281, 283, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 333, 339, 341, 343, 345, 355, 356, 357, 364, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 437, 442, 453, 454, 455, 456, 466, 478], "ignorecas": 121, "ii": [118, 203, 205, 276, 368], "iii": [118, 204, 251], "ilinoi": 0, "ill": 171, "illustr": [9, 29, 52, 68, 69, 87, 92, 95, 98, 104, 113, 116, 170, 178, 187, 190, 191, 446, 478, 496], "im": [11, 16, 19, 22, 26, 33, 51, 53, 89, 90, 112], "imag": [1, 2, 6, 8, 12, 14, 15, 19, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 86, 89, 90, 91, 93, 94, 96, 99, 101, 103, 104, 106, 108, 109, 110, 113, 115, 118, 119, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 167, 168, 169, 170, 171, 175, 176, 178, 180, 182, 184, 186, 187, 188, 193, 196, 197, 198, 199, 201, 203, 206, 207, 209, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 230, 233, 234, 235, 236, 237, 238, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 270, 271, 272, 274, 276, 277, 278, 280, 281, 282, 283, 284, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 323, 326, 329, 339, 340, 341, 342, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 465, 466, 468, 469, 471, 473, 474, 475, 478, 479, 480, 483, 486, 489, 496, 497], "image_10426": 15, "image_11020": 107, "image_11021": 107, "image_151": 112, "image_17327": 107, "image_17328": 107, "image_17329": 107, "image_17330": 107, "image_17331": 107, "image_17332": 107, "image_17333": 107, "image_17334": 107, "image_17335": 107, "image_17336": 107, "image_17337": 107, "image_17338": 107, "image_17339": 107, "image_17340": 107, "image_17341": 107, "image_17342": 107, "image_17343": 107, "image_17344": 107, "image_17345": 107, "image_17346": 107, "image_17347": 107, "image_17348": 107, "image_17349": 107, "image_17350": 107, "image_17351": 107, "image_17352": 107, "image_2675": 112, "image_2676": 112, "image_2818": 112, "image_2834": 112, "image_3041": 112, "image_3042": 112, "image_65426": 107, "image_filt": [121, 281], "image_id": [112, 121, 283], "image_m": 200, "image_metadata": 281, "image_path": 107, "image_term": [121, 281], "images_meta": [107, 112, 121, 225, 281, 282, 283, 284], "images_to_plot": 109, "imbalanc": 170, "imcal": 355, "img": [2, 4, 50, 53, 65, 73, 77, 79, 81, 86, 92, 104, 109, 134, 142, 150, 162, 168, 178, 189, 293, 308, 311, 312, 329, 339, 341, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 424, 426, 428, 436, 454, 456, 459, 460, 462, 463, 465, 474, 478, 480, 494], "img1": [87, 105, 355], "img2": [87, 105, 355], "img_3d_affin": 86, "img_3d_affine_in_mm_spac": 86, "img_4d_affin": 86, "img_4d_affine_in_mm_spac": 86, "img_copi": 347, "img_count": 81, "img_fil": [367, 368], "img_filt": [103, 104, 113, 329], "img_in_mm_spac": 86, "img_length": 421, "img_path": [40, 365], "img_plot": [134, 160, 162], "img_to_signals_label": [128, 130, 147, 150, 162, 460, 462], "img_to_signals_map": [128, 162, 459, 463], "img_valu": 456, "imgs_list": [371, 372, 373], "immedi": [96, 368], "impact": [45, 68, 80, 118, 157, 162, 175, 178, 187, 191, 326, 339, 368, 425], "imperfect": 165, "imperi": 0, "implement": [16, 26, 35, 51, 52, 59, 61, 64, 68, 69, 70, 73, 101, 104, 113, 132, 133, 134, 135, 142, 144, 150, 153, 154, 157, 158, 162, 163, 164, 167, 168, 169, 171, 173, 175, 176, 177, 178, 184, 186, 187, 192, 201, 254, 255, 304, 305, 308, 309, 310, 314, 316, 321, 326, 328, 330, 331, 332, 333, 336, 337, 338, 339, 341, 350, 363, 367, 368, 378, 379, 380, 381, 390, 391, 392, 394, 404, 443, 445, 446, 456, 468, 469, 479, 480, 491], "impli": [16, 154, 162, 177, 238, 359, 381, 404], "implic": [72, 103, 118], "implicit": [6, 33, 42, 153, 162, 172, 184, 306, 307], "implicitli": [68, 70, 82, 106, 170, 177], "implictili": 6, "import": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 121, 140, 146, 147, 148, 150, 155, 157, 162, 164, 165, 168, 170, 171, 172, 173, 175, 177, 178, 179, 182, 183, 184, 186, 187, 189, 190, 191, 197, 223, 248, 314, 316, 318, 319, 326, 339, 343, 346, 351, 355, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 438, 466, 472, 474, 478, 494], "important_term": 107, "importantli": [171, 173, 178], "importerror": [5, 102, 150, 162], "impos": [42, 135, 162], "imposs": 358, "impress": 70, "improv": [26, 33, 66, 77, 111, 118, 127, 128, 129, 131, 132, 134, 140, 143, 146, 147, 150, 157, 158, 159, 162, 170, 171, 172, 176, 177, 178, 180, 184, 189, 191, 218, 231, 266, 344, 371, 374, 378, 453, 468], "impul": [63, 75, 116, 277, 326, 430, 431, 442, 496], "impuls": [67, 69, 179, 180, 184, 326, 328, 333], "imput": [127, 162], "imread": 40, "imshow": [13, 26, 40, 41, 43, 44, 47, 86, 165, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 428, 433, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446], "imt": 0, "in_memori": 111, "inact": [6, 180], "inappropri": 39, "inbuilt": [304, 305, 306, 307], "inc": 0, "inch": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "includ": [15, 26, 35, 39, 42, 45, 46, 57, 61, 64, 65, 66, 68, 70, 71, 73, 77, 79, 81, 82, 91, 93, 94, 103, 104, 109, 111, 113, 125, 128, 129, 130, 131, 132, 134, 140, 150, 152, 153, 157, 159, 162, 163, 168, 170, 175, 176, 178, 179, 182, 184, 186, 187, 189, 195, 197, 199, 200, 201, 209, 217, 221, 230, 231, 233, 238, 239, 240, 245, 249, 250, 267, 272, 286, 294, 295, 298, 304, 305, 306, 307, 308, 311, 312, 313, 317, 326, 339, 341, 351, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 404, 429, 453, 454, 455, 456, 465, 479, 480, 484, 490], "include_children": 111, "inclus": [68, 303], "inclusion_filt": 303, "incompat": [144, 162, 326], "incomplet": [129, 162], "incongru": 182, "inconsist": [155, 162, 339, 341], "incorpor": [66, 103, 169], "incorrect": 184, "increas": [36, 47, 68, 71, 81, 91, 94, 107, 108, 111, 128, 144, 162, 174, 175, 177, 180, 184, 190, 228, 242, 341, 368, 384, 390, 427, 440, 441, 442, 449, 454, 467], "increment": [68, 97, 186, 187], "inde": [6, 45, 52, 88, 164, 165, 173, 180, 327, 494], "indent": 96, "independ": [43, 51, 68, 100, 115, 116, 135, 162, 167, 169, 170, 175, 177, 180, 184, 191, 223, 224, 267, 304, 305, 306, 307, 311, 344, 351, 356, 367, 368, 370, 376, 390, 442, 447, 468, 496], "index": [2, 6, 10, 11, 21, 23, 24, 35, 43, 44, 53, 58, 59, 67, 68, 73, 74, 89, 90, 93, 103, 104, 107, 114, 130, 134, 139, 157, 162, 163, 168, 178, 185, 198, 199, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 268, 303, 304, 305, 306, 307, 316, 318, 319, 333, 351, 359, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 404, 444, 456, 458, 468, 478, 480], "index_": [53, 89, 168, 456], "index_img": [2, 3, 21, 31, 32, 33, 34, 35, 36, 38, 39, 41, 52, 53, 89, 91, 94, 101, 106, 108, 134, 162, 165, 168, 190, 191, 345, 352], "index_of_each_map": 458, "index_to_xy_coord": 43, "indexerror": [135, 157, 162], "indi": [199, 226, 247], "india": 0, "indian": 0, "indic": [10, 32, 34, 44, 53, 57, 61, 68, 74, 81, 88, 139, 142, 147, 162, 168, 175, 178, 184, 187, 189, 198, 200, 230, 235, 246, 248, 249, 252, 254, 255, 257, 258, 261, 262, 270, 281, 287, 304, 305, 306, 307, 309, 310, 311, 326, 329, 345, 357, 359, 360, 362, 370, 372, 373, 374, 375, 376, 377, 379, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 436, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 456, 458, 465], "indirect": [164, 165], "indirectli": [10, 113], "individu": [54, 61, 65, 68, 70, 74, 78, 80, 81, 82, 83, 96, 103, 104, 111, 113, 118, 164, 169, 183, 184, 186, 188, 191, 196, 197, 201, 203, 208, 216, 219, 238, 239, 264, 276, 341, 388, 404, 444, 480, 497], "inertia": 453, "inf": [15, 57, 77, 107, 344, 372, 375, 381, 384, 468, 479, 480], "infeas": 111, "infer": [12, 52, 65, 67, 78, 81, 86, 103, 104, 106, 113, 118, 134, 162, 178, 180, 183, 184, 321, 329, 341, 359, 366, 390, 428], "inferior": 93, "inferno": [6, 15, 17, 21, 26, 33, 37, 38, 43, 71, 72, 78, 79, 81, 82, 89, 96, 106, 109, 110, 114, 134, 162, 378, 379, 380, 425, 480], "infin": 15, "infinit": 359, "infinitesim": 179, "infl_left": [210, 211, 212, 213, 214, 215, 289, 437, 450, 494], "infl_right": [210, 211, 212, 213, 214, 215, 289, 437, 450], "inflat": [10, 24, 39, 70, 113, 118, 205, 210, 211, 212, 213, 214, 215, 289, 292, 293, 300, 437, 443, 444, 445, 446, 450, 452, 477, 478], "influenc": [71, 177, 246, 305, 310], "info": [163, 178, 187, 202, 281, 283, 437, 443, 444, 445, 446], "inform": [3, 6, 7, 12, 13, 17, 19, 22, 24, 26, 27, 31, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 54, 55, 56, 57, 61, 64, 65, 68, 69, 72, 73, 74, 77, 79, 80, 91, 93, 94, 96, 97, 103, 104, 105, 106, 108, 109, 113, 114, 118, 120, 121, 125, 128, 131, 134, 144, 148, 158, 162, 163, 164, 165, 168, 169, 170, 172, 174, 177, 178, 179, 183, 184, 186, 187, 189, 191, 196, 197, 198, 199, 200, 203, 204, 206, 207, 217, 218, 222, 223, 224, 225, 227, 231, 232, 235, 236, 238, 239, 240, 246, 248, 249, 250, 251, 256, 258, 259, 261, 262, 269, 270, 271, 272, 278, 279, 280, 281, 283, 285, 288, 290, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319, 326, 339, 341, 353, 355, 359, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456, 466, 467, 468, 480, 483, 495, 497], "informat": [0, 227], "infrastructur": [178, 187], "inglat": 292, "inher": [155, 162], "inherit": [15, 130, 134, 162, 317, 464], "ini": [163, 187], "init": [178, 453], "init_with_figur": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "initi": [0, 3, 24, 39, 51, 52, 53, 70, 96, 103, 129, 162, 168, 176, 179, 189, 191, 196, 220, 240, 242, 311, 312, 313, 317, 371, 372, 374, 375, 377, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 453, 456], "inlin": [177, 464], "inmemorymesh": [7, 443, 444, 445, 446, 452, 470, 477, 478], "inner": [304, 305, 306, 307, 364, 474, 478], "inner_mesh": [25, 474, 478], "innermost": 177, "inplac": 467, "input": [2, 3, 4, 6, 10, 15, 16, 24, 34, 35, 41, 50, 51, 52, 57, 58, 60, 69, 70, 72, 73, 78, 79, 81, 82, 87, 90, 96, 100, 101, 104, 111, 113, 115, 116, 120, 128, 129, 130, 132, 134, 136, 137, 140, 141, 142, 143, 145, 146, 147, 150, 154, 156, 157, 158, 159, 162, 167, 170, 173, 175, 177, 178, 179, 184, 188, 190, 191, 197, 221, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 259, 277, 278, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 323, 325, 326, 328, 333, 334, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 427, 428, 435, 436, 437, 440, 441, 442, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 478, 479, 480, 494, 496, 497], "input_data": [37, 38, 43, 44, 45, 50, 54, 55, 56, 57, 58, 59, 61, 64, 71, 91, 93, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 120, 157, 162], "inria": [0, 47, 118, 164, 168, 176, 207, 224, 239, 253, 256, 456], "insect": [118, 218], "insensit": 171, "insert": [35, 448, 449, 450, 451, 452, 464, 466, 494], "insid": [15, 22, 25, 36, 52, 58, 101, 173, 178, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 344, 350, 364, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 404, 428, 440, 441, 444, 445, 453, 454, 455, 456, 478], "insight": [0, 41, 59, 156, 162, 164], "inspect": [43, 51, 58, 68, 71, 73, 163, 165, 170, 186, 199, 326, 339, 480], "inspir": [53, 176, 178, 187], "instabl": [60, 68, 177, 467], "instal": [10, 65, 116, 127, 130, 132, 142, 147, 150, 157, 158, 162, 163, 186, 187, 254, 255, 346, 372, 375, 377, 379, 443, 445, 446, 456, 494], "instanc": [2, 3, 4, 6, 16, 19, 21, 22, 23, 24, 32, 33, 38, 43, 45, 46, 51, 52, 53, 54, 68, 69, 70, 88, 89, 90, 106, 110, 132, 133, 144, 150, 157, 162, 164, 165, 167, 169, 170, 178, 179, 180, 183, 184, 186, 189, 190, 238, 239, 240, 245, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 322, 323, 326, 333, 335, 339, 341, 345, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 427, 429, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 454, 455, 456, 474, 495], "instant": [344, 468], "instantan": 74, "instanti": [53, 54, 57, 91, 93, 94, 132, 134, 157, 162, 308, 326, 401, 403, 406, 408, 410, 412, 414, 416, 418, 480], "instead": [10, 15, 37, 38, 43, 44, 45, 50, 52, 54, 55, 56, 57, 58, 59, 61, 64, 68, 71, 91, 93, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 120, 127, 128, 130, 132, 134, 135, 137, 140, 141, 143, 144, 145, 147, 150, 154, 156, 157, 158, 159, 160, 162, 176, 177, 178, 179, 182, 190, 191, 202, 227, 238, 239, 240, 263, 284, 285, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 322, 326, 330, 331, 332, 336, 337, 338, 339, 365, 370, 378, 379, 380, 390, 453, 454, 455, 456, 478], "instens": 363, "institut": [0, 180, 184, 197, 198, 201, 226, 227, 248], "instruct": [68, 70, 74, 116, 127, 158, 162, 163, 178, 185, 187, 282, 495], "insular": [59, 93, 118, 216], "int": [12, 38, 43, 44, 45, 50, 51, 52, 53, 60, 65, 69, 79, 80, 81, 86, 96, 103, 104, 107, 109, 131, 159, 162, 168, 178, 200, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 321, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 350, 356, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 425, 427, 428, 429, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 461, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 478], "int32": [38, 43, 44, 81, 96, 132, 159, 162, 189, 354, 371, 372, 373, 374, 375, 376, 377], "int64": [38, 43, 44, 52, 72, 81, 104, 132, 159, 162, 189, 453, 455], "int8": [132, 159, 162, 343, 357], "integ": [16, 61, 86, 96, 130, 137, 141, 150, 154, 157, 159, 162, 184, 189, 191, 198, 235, 242, 248, 250, 252, 254, 255, 257, 258, 261, 262, 281, 283, 309, 310, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 435, 436, 440, 441, 442, 444, 445, 457, 462, 463, 466], "integr": [101, 135, 150, 162, 190, 373, 480], "intel": [52, 118, 455, 461], "intellig": [0, 86, 118, 199, 201], "intend": [191, 218, 319, 359, 360], "intens": [27, 53, 66, 71, 74, 83, 90, 96, 189, 190, 311, 343, 363, 367, 427, 428, 435, 440, 441, 442, 449, 456, 478, 494], "intent": 178, "intent_cod": [59, 105], "intent_nam": [59, 105], "intent_p1": [59, 105], "intent_p2": [59, 105], "intent_p3": [59, 105], "intention": 187, "inter": [103, 109, 165, 190, 191, 201, 219, 385, 387], "interact": [10, 16, 23, 50, 55, 57, 61, 103, 111, 130, 147, 148, 152, 157, 162, 166, 168, 178, 184, 185, 186, 379, 448, 449, 451, 497], "intercept": [45, 77, 78, 79, 81, 82, 83, 104, 106, 110, 113, 128, 162, 175, 304, 305, 306, 307, 309, 310, 340, 341, 390], "intercept_": [304, 305, 306, 307, 309, 310], "interchang": [153, 162], "interest": [3, 6, 15, 16, 17, 24, 37, 45, 52, 54, 58, 69, 71, 72, 73, 85, 99, 101, 102, 103, 104, 108, 111, 112, 116, 118, 121, 135, 153, 162, 164, 170, 172, 173, 175, 177, 178, 179, 180, 184, 186, 190, 191, 204, 208, 216, 246, 247, 253, 256, 258, 267, 269, 270, 271, 273, 274, 275, 276, 279, 280, 285, 287, 288, 289, 290, 292, 316, 318, 319, 349, 354, 356, 357, 361, 364, 370, 374, 404, 433, 441, 442, 444, 447, 456, 496, 497], "interestingli": 68, "interfac": [41, 65, 70, 77, 130, 131, 134, 153, 157, 162, 169, 177, 178, 184, 304, 305, 483], "intermedi": [46, 70, 173, 186], "intermediari": 50, "intern": [0, 36, 41, 51, 118, 132, 162, 169, 176, 177, 178, 180, 196, 201, 228, 240, 250, 311, 312, 353, 355], "internet": [3, 52, 169, 188, 193, 497], "interpol": [10, 25, 41, 43, 44, 47, 68, 77, 86, 111, 130, 132, 134, 139, 160, 162, 201, 281, 358, 359, 360, 435, 436, 441, 442, 449, 468, 478], "interpret": [16, 26, 41, 54, 71, 118, 166, 175, 176, 177, 180, 197, 198, 232, 248, 252, 254, 255, 258, 259, 262, 355, 390, 494], "interrupt": 180, "intersect": [96, 190, 198, 385, 387, 388, 460], "intersect_mask": 190, "intersubject": [118, 210, 211, 212, 213, 214, 289], "interv": [67, 68, 103, 163, 304, 305, 306, 307, 309, 310, 316, 318, 319, 363, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442, 455, 461, 478], "intervent": [118, 164, 238], "intra": [32, 34], "intracalcarin": 93, "intracrani": 227, "intrapariet": 107, "intrins": [38, 118, 167, 201, 230, 232, 236, 258, 259, 262, 368], "intro": [1, 8, 68, 116, 186, 287, 326, 342, 356, 427, 430, 431, 436, 442, 447, 465, 496], "introduc": [121, 132, 133, 134, 140, 150, 159, 162, 170, 171, 175, 178, 191, 239, 246], "introduct": [1, 8, 31, 116, 118, 127, 147, 162, 171, 173, 174, 178, 181, 183, 185, 191, 270, 304, 318, 319, 351, 356, 433, 441, 447, 449, 496, 497], "introductori": [1, 116, 178], "inv": 50, "invalid": [11, 61, 114, 127, 137, 162, 193, 237, 375, 460, 489], "invcov": [316, 318, 319], "invers": [6, 49, 61, 62, 101, 116, 118, 152, 162, 165, 166, 170, 177, 185, 188, 240, 245, 256, 267, 316, 318, 319, 323, 370, 375, 423, 429, 438, 439, 447, 448, 453, 496, 497], "inverse_transform": [38, 43, 45, 52, 58, 94, 101, 103, 106, 107, 108, 109, 110, 114, 119, 128, 134, 143, 150, 159, 162, 167, 238, 311, 312, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456, 497], "invert": [101, 108, 129, 153, 162, 177, 191, 238, 316, 318, 319, 370, 373, 376, 391, 427, 429, 433, 435, 436, 438, 440, 441, 442], "invest": 0, "investig": [73, 96, 101, 169, 217, 223, 308], "investiss": 0, "invit": 228, "involv": [68, 70, 72, 103, 111, 118, 180, 186, 196, 246], "inward": 478, "io": [10, 18, 22, 54, 65, 67, 79, 81, 82, 83, 102, 104, 163, 168, 178, 187, 202, 206, 207, 220, 228, 253, 257, 267, 276, 450, 495], "ion": [6, 72, 233, 234, 287], "ip": 54, "iprep": 65, "ipynb": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "ipython": [2, 4, 17, 170, 186, 495], "iq": [184, 199, 304, 305, 306, 307], "irb": 197, "irrespect": [134, 162, 180, 440], "is_exclud": 24, "is_us": 107, "is_valid": [121, 150, 162], "isabel": [118, 209], "isbi": [51, 118, 169, 311, 312], "isbn": [118, 313, 317, 318, 319], "isf": [65, 78, 81, 104, 112], "ishai": [3, 33, 34, 40, 101, 118, 217, 270], "isin": [3, 24, 31, 33, 36, 38, 39, 101, 106, 120, 121, 281], "isn": 163, "isnan": [47, 79, 96, 106, 109, 110], "isnul": [121, 281], "isol": [6, 71, 103, 170, 180, 404], "isort": [129, 132, 162], "isotrop": [168, 201], "isovoxel": 175, "israel": 0, "issu": [50, 51, 69, 132, 133, 142, 143, 144, 145, 146, 154, 156, 157, 159, 163, 177, 178, 180, 183, 184, 290, 348, 353], "itali": 0, "item": [10, 22, 24, 35, 67, 68, 70, 73, 103, 109, 121, 131, 162, 281, 282, 283, 284, 329, 385, 387], "iter": [36, 56, 70, 72, 94, 108, 111, 150, 162, 170, 175, 201, 238, 239, 240, 242, 304, 305, 306, 307, 309, 310, 311, 312, 345, 349, 352, 353, 356, 361, 378, 379, 380, 421, 454, 455, 461], "iter_img": [2, 51, 134, 162, 190, 351], "iterrow": 103, "itertool": 81, "its": [2, 3, 16, 20, 28, 33, 38, 41, 43, 47, 59, 61, 68, 70, 86, 90, 91, 92, 96, 98, 101, 103, 120, 121, 132, 134, 139, 142, 150, 153, 155, 157, 159, 162, 163, 164, 167, 169, 170, 171, 173, 175, 176, 177, 178, 180, 183, 184, 187, 191, 217, 234, 245, 258, 260, 270, 281, 282, 283, 284, 304, 305, 306, 307, 309, 310, 311, 312, 313, 317, 326, 328, 333, 339, 340, 341, 343, 354, 425, 427, 428, 429, 433, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 452, 453, 454, 455, 456, 480, 490], "itself": [20, 26, 36, 68, 167, 201, 238, 239, 240, 311, 312, 349, 454, 478], "ivan": [140, 147, 162], "ixar_spac": [51, 53, 55, 56, 59, 61], "j": [23, 26, 39, 43, 44, 50, 51, 52, 54, 59, 61, 69, 78, 86, 102, 103, 106, 118, 121, 144, 147, 156, 162, 164, 165, 169, 171, 172, 175, 176, 184, 197, 198, 201, 203, 205, 207, 216, 218, 222, 223, 224, 225, 228, 229, 230, 231, 235, 250, 252, 253, 256, 257, 258, 260, 261, 265, 266, 268, 276, 280, 281, 283, 286, 306, 307, 311, 321, 341, 344, 367, 368, 390, 428, 468, 469, 494], "j_col": 81, "jaakkola": [118, 177, 239, 242], "jack": [118, 171, 235, 261], "jahn": 7, "jain": [0, 132, 162], "jake": [0, 150, 162], "jakob": [39, 118], "jame": [3, 33, 34, 40, 101, 118, 204, 217, 251, 270, 318, 319], "jami": [118, 227], "jan": [0, 118, 122, 162, 367, 368], "janaina": [118, 176, 186, 201], "janet": [118, 196, 246], "jani": [118, 216], "januari": [118, 127, 151, 157, 162, 164], "jaqu": [0, 122, 162], "jare": [118, 196, 246], "jargon": 96, "jason": [0, 122, 132, 147, 162], "javier": [0, 155, 162], "javitt": [118, 226], "jawhar": [0, 159, 162], "jean": [0, 51, 52, 74, 118, 121, 122, 144, 147, 162, 164, 167, 169, 177, 203, 209, 216, 225, 239, 242, 276, 281, 283, 311], "jeanett": [103, 118, 170, 184, 186], "jeff": [144, 162], "jeffrei": [118, 175, 196, 246], "jehan": [147, 162], "jell": [0, 78, 118, 127, 128, 162, 321], "jenkinson": [118, 197], "jennif": [3, 33, 34, 40, 101, 118, 217, 270], "jensen": 480, "jepegnanam": [0, 134, 162], "jeremi": [0, 132, 155, 162], "jerom": [0, 129, 130, 132, 140, 144, 146, 147, 148, 150, 151, 159, 162], "jess": [103, 118], "jessica": [61, 118, 200, 208, 229, 232, 249, 259, 264, 265], "jiang": [118, 164, 238], "jill": [118, 197, 200, 205, 216, 249, 252], "jimura": [30, 48, 116, 118, 222, 279, 307, 310, 442, 447, 496], "jimura_poldrack_2012_zmap": 42, "jinja2": 65, "jitsi": 495, "jn": [118, 230, 236, 258, 262], "jneurosci": [118, 175], "job": [46, 81, 111, 121, 163, 326, 339, 341, 390], "jobert": [74, 118, 203, 209, 276], "joblib": [46, 50, 51, 52, 55, 56, 59, 61, 81, 111, 127, 130, 132, 150, 153, 157, 162, 167, 239, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 345, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 454, 455, 456], "jocn": [118, 227], "jocn_a_00077": [118, 232, 259], "joe": [144, 162], "johann": [0, 150, 162], "johansen": [118, 197], "john": [0, 39, 61, 106, 118, 134, 144, 162, 175, 177, 200, 208, 226, 227, 249, 264, 390], "johnson": [0, 128, 134, 162], "joi": [118, 367, 368, 469], "join": [65, 77, 107, 178, 478, 495], "joint_mni_imag": 351, "jointli": [66, 178, 437, 443, 445, 446, 450, 452], "joliot": [118, 198, 248], "jon": [0, 152, 162], "jona": [0, 52, 118, 144, 162, 455, 461], "jonathan": [59, 61, 78, 118, 176, 201, 208, 229, 230, 236, 258, 262, 264, 265, 321, 367, 368, 428], "jordan": [118, 230, 236, 258, 262], "jordi": [0, 130, 162], "jorg": [118, 201, 230, 236, 258, 262], "joseph": [61, 118, 164, 200, 208, 249, 264], "joset": [118, 175], "josh": [103, 118], "joshi": [0, 118, 132, 162], "joshua": [0, 118, 152, 162, 230, 236, 258, 262], "josien": [118, 164, 238], "joulot": [0, 159, 162], "journal": [106, 118, 175, 186, 201, 216, 227, 230, 232, 236, 258, 259, 262, 390], "jp": 223, "jpg": 200, "jqueri": [156, 162], "jr": [118, 216], "js_plotting_util": [147, 162], "json": [65, 77, 103, 104, 107, 113, 121, 131, 162, 163, 329, 364, 366, 367, 368], "juan": [118, 200, 249], "judg": [36, 88], "judith": [118, 200, 249], "juelich": [156, 162, 193, 237, 255, 489], "juli": [118, 126, 162, 164, 368], "julia": [0, 135, 150, 162], "julich": [118, 219], "julien": [74, 118, 203, 276], "julio": [0, 128, 162], "junction": 61, "june": [118, 140, 143, 146, 155, 162, 176, 186], "jung": [118, 200, 249], "jupyt": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 148, 150, 162, 170, 186, 191, 448, 449, 450, 451, 452, 464, 466, 494], "just": [3, 4, 6, 13, 15, 17, 22, 26, 41, 43, 45, 47, 52, 53, 54, 59, 61, 67, 68, 72, 73, 77, 78, 79, 81, 83, 89, 93, 101, 103, 104, 105, 114, 120, 139, 162, 168, 170, 177, 180, 186, 187, 191, 344, 361, 364, 367, 440, 441, 442, 449, 466, 468, 478, 494], "justifi": 0, "justin": [118, 368], "juxtaposit": 93, "j\u00fclich": 0, "k": [0, 10, 19, 23, 26, 32, 34, 36, 37, 44, 45, 52, 54, 69, 83, 86, 93, 101, 114, 118, 132, 162, 170, 173, 175, 177, 197, 216, 240, 268, 286, 304, 305, 309, 310, 318, 319, 326, 335, 344, 367, 368, 374, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 433, 435, 436, 438, 440, 441, 442, 453, 468, 480], "k4jp8": 220, "k_init": 453, "kabani": [118, 198], "kahn": [52, 118, 455, 461], "kahnt": [118, 175], "kai": [0, 118, 132, 162, 171], "kaleido": [10, 157, 162, 443, 445, 446, 494, 495], "kalyanam": [118, 200, 249], "kamalak": [54, 102, 118, 207, 253], "kamalakar": [0, 125, 135, 137, 140, 144, 145, 147, 150, 154, 162], "kamiel": [118, 226], "kamil": [118, 197], "kamitani": [43, 44, 118, 223, 280], "kanaan": [0, 140, 162], "kaplan": [118, 226], "kardiom": 0, "karl": [118, 233], "karla": [118, 164, 197, 232, 259], "karlsgodt": [118, 268, 286], "kate": [118, 226, 232, 259], "kathmandu": 0, "katovich": [118, 176], "katrin": 118, "keep": [3, 33, 35, 36, 38, 41, 53, 54, 57, 61, 68, 70, 71, 86, 88, 96, 101, 106, 107, 121, 125, 128, 130, 147, 154, 162, 168, 170, 171, 172, 175, 176, 178, 227, 281, 303, 305, 309, 310, 311, 344, 350, 363, 365, 382, 383, 384, 385, 386, 387, 388, 456, 457, 468, 469], "keep_masked_label": [52, 59, 93, 129, 162, 371, 374, 459, 480], "keep_masked_map": [55, 56, 57, 129, 162, 375, 460, 480], "kei": [15, 57, 61, 68, 73, 81, 105, 120, 121, 129, 134, 162, 163, 165, 178, 186, 189, 198, 246, 248, 249, 250, 251, 254, 255, 259, 262, 271, 277, 281, 304, 305, 306, 307, 313, 317, 322, 326, 333, 335, 339, 341, 365, 366, 390, 401, 404, 428, 437, 450, 466, 472, 473, 474, 479], "keith": [103, 118], "keller": [118, 311], "kelli": [61, 118, 201, 208, 218, 226, 229, 264, 265, 367, 368], "kendrick": [118, 171], "kennedi": [118, 205, 216, 252], "kent": [118, 200, 249], "kept": [15, 121, 129, 162, 178, 244, 254, 255, 304, 305, 306, 307, 343, 344, 361, 379, 382, 383, 384, 385, 386, 387, 388, 456, 458, 464, 468], "keribin": [52, 118], "kern": 177, "kernel": [3, 31, 35, 36, 37, 47, 58, 73, 96, 101, 104, 170, 201, 305, 307, 310, 330, 331, 332, 336, 337, 338, 479], "kevin": [0, 128, 162], "keyword": [16, 101, 121, 150, 162, 173, 177, 191, 240, 246, 281, 291, 329, 344, 355, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 450, 468], "kfold": [36, 38, 39, 43, 47, 309, 310], "khale": [118, 367, 368, 469], "khanuja": [118, 226], "khorshidi": [118, 164, 197], "kiar": [0, 150, 162], "kiefer": [118, 176], "kiehl": [118, 200, 249], "kiesling": [0, 128, 162], "kill": 68, "kim": [0, 132, 162], "kimberli": [118, 232, 259], "kind": [3, 17, 31, 50, 53, 57, 59, 61, 81, 114, 120, 143, 162, 164, 168, 171, 177, 184, 238, 478, 494], "kindli": [50, 51, 187, 216], "king": [0, 118, 144, 147, 162, 226], "kingston": 0, "kit": 201, "kitwar": 0, "klass": 41, "klein": 118, "kleinschmidt": [51, 118, 164, 169, 238, 311], "kline": 226, "klingenberg": [118, 176], "kmean": [157, 159, 162, 167, 185, 190, 326, 335, 453, 454], "kmeans_count": 52, "kmeans_labels_img": 52, "kmeans_parcel": 52, "knive": 191, "knop": [118, 186], "know": [7, 11, 22, 86, 121, 177, 178, 180, 184, 245, 283], "knowledg": [61, 119, 165, 180, 377, 480], "known": [7, 12, 23, 35, 36, 41, 103, 113, 153, 170, 171, 175, 178, 180, 182, 231, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 304, 305, 306, 307, 316, 318, 319, 326, 428], "knutson": [118, 176], "kochunov": [118, 235, 261], "kodibagkar": [0, 129, 162], "kodituwakku": [118, 200, 249], "koen": [0, 159, 162], "koji": [118, 222], "koller": [118, 177], "kollokian": [118, 198], "komesu": [118, 200, 249], "koneru": [118, 216], "kong": [118, 230, 258], "konrad": [0, 129, 162], "konstantin": [0, 122, 162], "koplewicz": [118, 226], "korea": 0, "kosha": [59, 118, 367, 368], "kossaifi": [0, 122, 162], "kouw": [118, 205, 252], "kr": 0, "krain": 118, "kriegeskort": [118, 175, 186, 308], "krienen": [118, 230, 236, 258, 262], "krish": [0, 130, 162], "kristin": 118, "krzysztof": [118, 121, 207, 225, 253, 281, 283], "kshitij": [0, 147, 148, 149, 150, 151, 152, 153, 162], "kth": [3, 17, 31], "kuba": [118, 218], "kumari": [0, 132, 162], "kun": [0, 132, 159, 162], "kwarg": [16, 19, 51, 55, 61, 81, 128, 130, 131, 132, 134, 150, 162, 246, 329, 344, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 453, 455, 468], "kwarg_image_filt": 281, "kxm045": [118, 164], "l": [3, 7, 10, 15, 26, 32, 33, 34, 39, 40, 44, 47, 54, 59, 61, 71, 96, 101, 118, 129, 150, 157, 162, 164, 170, 171, 176, 186, 197, 198, 201, 208, 216, 217, 227, 229, 230, 231, 232, 235, 236, 246, 248, 258, 259, 261, 262, 264, 265, 266, 270, 367, 368, 391, 393, 394, 395, 396, 397, 398, 399, 400, 419, 427, 429, 433, 435, 436, 438, 440, 441, 442, 466, 472, 473, 494], "l1": [36, 46, 118, 171, 172, 176, 177, 239, 242, 304, 305, 306, 309, 310], "l1_ratio": [47, 309, 310], "l2": [33, 36, 41, 171, 172, 304, 306, 453, 454, 455], "la": 0, "la5c": [268, 286], "lab": 0, "label": [2, 6, 10, 16, 19, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 50, 51, 52, 53, 55, 56, 57, 61, 64, 67, 68, 69, 85, 89, 90, 93, 96, 99, 101, 103, 106, 107, 110, 114, 116, 118, 120, 127, 128, 130, 131, 134, 139, 142, 147, 150, 154, 155, 157, 159, 162, 163, 165, 167, 170, 171, 173, 175, 178, 184, 189, 190, 191, 198, 200, 207, 208, 216, 217, 219, 223, 224, 228, 230, 235, 236, 246, 248, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 266, 270, 280, 304, 305, 306, 307, 308, 309, 310, 322, 326, 329, 333, 335, 340, 364, 367, 368, 371, 374, 378, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 427, 428, 429, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 476, 485, 496], "label_binar": 41, "label_hemispher": [50, 422], "label_idx": 93, "label_imag": 50, "label_image_left": 50, "label_image_right": 50, "label_map": 465, "label_multi": 41, "label_seed_region": 24, "label_top": [391, 393, 394], "labelbinar": 41, "labelencod": [41, 102], "labelpad": 71, "labels_": [326, 371, 374, 378, 453, 455], "labels_affin": 50, "labels_img": [24, 50, 52, 59, 93, 96, 114, 165, 371, 374, 378, 422, 457, 459, 462, 480], "labels_img_": [52, 167, 371, 374, 378, 454], "labels_list": 422, "labels_mask": [41, 114], "laboratori": 0, "laci": [118, 235, 261], "lack": [130, 162], "ladouceur": [118, 186], "lag": [6, 50, 67, 68], "lag_cor": 50, "lag_correl": 50, "lag_correlation_matrix": 50, "lainhart": [118, 196, 246], "laird": [118, 232, 259], "lambda": 121, "lambertz": [118, 209], "lan": [0, 144, 147, 162], "lancast": [118, 235, 261], "land": 163, "landeau": [118, 198, 248], "lane": [0, 118, 159, 162, 390], "lang": [118, 196, 216, 246], "lang_beta_seri": 103, "lang_corr": 103, "lang_seed_beta_seri": 103, "languag": [54, 103, 104, 113, 118, 121, 193, 203, 209, 263, 273, 276], "language_connectivity_img": 103, "languageloc": [103, 104, 113], "languagelocalizer_desc": [103, 104, 113], "lannuzel": [144, 147, 162], "lapack": [142, 162, 177], "lar": 312, "larg": [3, 13, 32, 33, 38, 42, 44, 50, 51, 52, 57, 59, 67, 71, 72, 74, 118, 121, 148, 162, 167, 170, 171, 172, 173, 175, 177, 178, 180, 184, 185, 186, 189, 191, 203, 218, 225, 276, 281, 283, 326, 328, 333, 372, 375, 382, 383, 384, 385, 386, 387, 421, 454, 480], "large_fmri": 111, "larger": [54, 77, 82, 88, 102, 111, 169, 171, 175, 177, 178, 180, 187, 309, 310, 427, 440, 441, 442, 449], "largest": [143, 162, 177, 353, 382, 383, 384, 385, 386, 387, 388, 424], "largest_connected_compon": [143, 162], "largest_connected_component_img": [143, 162], "larri": [118, 205, 216, 252], "lars_path": 312, "larson": [0, 131, 144, 147, 148, 150, 162], "lashkari": [118, 230, 236, 258, 262], "lasso": [43, 60, 61, 118, 164, 171, 176, 177, 305, 307, 309, 310, 312], "lasso_regressor": [171, 305, 307], "lassocv": [129, 162, 304, 305, 306, 307], "lassolarscv": 43, "last": [3, 35, 37, 43, 58, 74, 149, 162, 163, 180, 186, 187, 244, 245, 344, 351, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456, 472, 494, 495], "lat_fi": 480, "latent": [108, 184], "later": [3, 6, 10, 23, 24, 39, 41, 43, 65, 72, 93, 103, 104, 107, 114, 163, 180, 189, 201, 252, 254, 255, 348, 422, 427, 433, 435, 436, 437, 441, 442, 443, 445, 446, 464, 480, 494], "latest": [132, 142, 162, 163, 178, 187, 248, 498], "latex": [65, 127, 162, 187], "latter": [50, 163, 171, 177, 238, 239, 240, 254, 255, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "laumann": [61, 118, 229, 230, 258, 265, 367], "launch": [152, 162, 163, 170], "laura": [118, 226], "lausann": 0, "law": 197, "lawrenc": [118, 235, 261], "layer": [26, 91], "layout": [134, 147, 162, 308, 392], "lda": 101, "le": [74, 118, 203, 276], "lead": [36, 50, 51, 60, 86, 111, 127, 129, 130, 131, 132, 133, 153, 162, 163, 176, 177, 178, 180, 184, 193, 237, 240, 314, 326, 372, 375, 467, 489, 494], "leak": [46, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "learn": [3, 22, 36, 38, 47, 49, 59, 62, 96, 100, 106, 108, 115, 116, 118, 119, 121, 125, 127, 130, 132, 134, 135, 140, 142, 143, 144, 145, 147, 150, 155, 157, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 177, 178, 184, 185, 187, 192, 206, 224, 238, 239, 240, 242, 256, 267, 270, 279, 304, 305, 306, 307, 308, 311, 312, 349, 351, 352, 356, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 403, 410, 423, 424, 427, 429, 433, 439, 440, 441, 442, 447, 453, 454, 455, 456, 495, 496, 497], "learner": [304, 305, 306, 307, 309, 310], "learnt": 42, "least": [35, 64, 68, 69, 70, 73, 77, 103, 104, 106, 107, 109, 113, 118, 170, 176, 178, 187, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 312, 313, 317, 326, 335, 339, 340, 341, 371, 372, 374, 375, 377, 378, 379, 384, 390, 421, 479, 495], "leav": [18, 26, 31, 35, 41, 170, 175, 180, 348], "leave_spac": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "leaveonegroupout": [3, 31, 32, 34, 35, 41, 101, 144, 162, 170, 173, 175, 304, 305, 306, 307], "leavepgroupsout": [304, 305, 306, 307], "lebihan": [118, 209], "lectur": [118, 164, 182, 186, 238], "ledoit": [61, 177], "ledoitwolf": 238, "lee": [0, 118, 134, 162], "lefort": [0, 132, 155, 162], "left": [7, 10, 13, 21, 23, 24, 26, 27, 36, 39, 43, 47, 50, 52, 53, 54, 61, 67, 68, 69, 70, 73, 74, 78, 79, 81, 82, 88, 96, 104, 109, 114, 118, 134, 140, 141, 145, 150, 153, 155, 162, 168, 186, 190, 198, 205, 210, 211, 212, 213, 214, 215, 216, 223, 226, 246, 252, 254, 255, 260, 274, 276, 284, 289, 290, 292, 301, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 427, 428, 429, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 452, 466, 472, 473, 479, 480], "left_001": 103, "left_connectom": 50, "left_coord": 7, "left_data": 7, "left_fac": 7, "left_hemi": 50, "left_right": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "leftminusrightbuttonpress": 70, "legaci": [273, 365, 390], "legacy_format": [134, 157, 162], "legacy_output": [103, 104, 113, 273], "legarreta": [0, 152, 162], "legend": [10, 19, 32, 34, 36, 45, 46, 52, 61, 64, 69, 93, 131, 162, 163, 444], "legend_guid": 19, "legibl": 114, "leipzig": 0, "lemaitr": [0, 147, 150, 162], "len": [3, 13, 23, 32, 34, 35, 36, 41, 50, 51, 54, 65, 66, 67, 68, 69, 73, 78, 81, 93, 96, 101, 104, 107, 113, 114, 121, 242, 304, 305, 306, 307, 309, 310, 311, 312, 316, 318, 319, 323, 326, 339, 356, 359, 373, 376, 382, 384, 385, 387, 454], "length": [3, 16, 58, 69, 73, 79, 132, 162, 168, 178, 253, 256, 304, 305, 306, 307, 309, 310, 313, 317, 318, 319, 330, 331, 332, 336, 337, 338, 345, 371, 372, 373, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 427, 433, 436, 438, 439, 440, 441, 442, 454, 466, 478], "leon": [0, 150, 162], "leonard": [0, 157, 162], "less": [6, 21, 41, 51, 52, 53, 59, 66, 68, 70, 73, 74, 79, 81, 90, 96, 103, 121, 147, 148, 155, 162, 175, 177, 178, 180, 187, 317, 363, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 435, 436, 442, 497], "lessorequ": [121, 281], "lessov": [61, 118, 208, 264], "lessthan": [121, 281], "let": [2, 3, 4, 6, 7, 11, 13, 16, 24, 26, 39, 41, 43, 52, 59, 65, 66, 68, 70, 72, 73, 74, 77, 79, 80, 81, 88, 95, 101, 105, 111, 113, 114, 171, 178, 186, 187, 343, 355], "leticia": [118, 186], "letter": 465, "level": [6, 7, 10, 11, 15, 16, 19, 22, 26, 35, 42, 51, 52, 53, 54, 59, 66, 71, 73, 75, 77, 84, 89, 90, 100, 108, 109, 115, 118, 127, 128, 129, 130, 131, 132, 133, 153, 154, 159, 162, 166, 167, 171, 174, 177, 178, 180, 181, 182, 184, 187, 189, 193, 195, 201, 203, 234, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 321, 326, 329, 335, 339, 340, 341, 342, 344, 345, 349, 350, 355, 356, 360, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 429, 430, 431, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 453, 454, 455, 456, 461, 464, 465, 466, 468, 474, 491, 494, 496, 497], "level_nam": 261, "leventh": [118, 226], "leverag": [21, 153, 162, 185, 186, 304, 305, 454, 495], "lfcd": 246, "lh": 223, "li": [91, 118, 226], "liam": [118, 216], "liau": [118, 367, 368, 469], "lib": [2, 3, 4, 11, 15, 16, 17, 19, 21, 22, 26, 31, 32, 36, 38, 43, 45, 46, 50, 51, 53, 55, 61, 70, 77, 81, 89, 90, 94, 104, 106, 108, 109, 110, 113, 114], "liber": [50, 81], "liblinear": [36, 41, 304, 306], "librari": [5, 96, 102, 120, 147, 162, 173, 178, 181, 186, 190, 484, 494, 495, 497], "licenc": [204, 251], "licens": [0, 129, 134, 162, 248, 249, 251, 258, 262], "lie": [58, 239, 242, 371, 374, 425, 459], "liem": [0, 148, 150, 152, 162], "life": [147, 162], "lifespan": 0, "lifetim": 199, "light": [13, 39, 142, 148, 150, 162, 178, 341], "like": [6, 7, 10, 13, 17, 26, 36, 38, 41, 43, 44, 50, 52, 57, 59, 61, 68, 81, 83, 91, 93, 94, 96, 103, 105, 121, 129, 134, 150, 154, 157, 158, 159, 162, 163, 176, 177, 178, 179, 180, 183, 184, 187, 188, 190, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 321, 323, 326, 328, 329, 339, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 366, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 426, 427, 428, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 474, 478, 480, 482, 494], "likelihood": [56, 177, 180, 238, 313, 316, 317, 318, 319], "likelihoodmodel": [313, 316], "likelihoodmodelresult": [132, 159, 162, 318, 319], "likewis": 168, "lilla": [118, 230, 236, 258, 262], "lim": 425, "lim_i": 425, "lim_x": 425, "limbic": [118, 216], "limegreen": 19, "limit": [15, 16, 26, 45, 77, 90, 107, 128, 162, 165, 175, 177, 178, 281, 368, 425, 428], "linalg": [47, 50, 177], "linden": [59, 118, 368], "lindquist": [118, 147, 162, 344, 468], "line": [5, 10, 15, 22, 25, 39, 41, 51, 54, 93, 132, 162, 170, 177, 178, 187, 227, 344, 404, 448, 468, 478, 495], "line2d": [5, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429], "line_sample_point": 25, "linear": [3, 6, 26, 31, 35, 36, 37, 39, 47, 64, 68, 70, 73, 101, 104, 106, 113, 118, 144, 160, 162, 170, 174, 179, 180, 181, 184, 185, 190, 191, 201, 218, 242, 281, 304, 305, 306, 307, 309, 310, 311, 312, 316, 318, 319, 326, 339, 344, 358, 359, 360, 368, 390, 426, 468, 478, 479, 483, 487, 495, 497], "linear_model": [39, 41, 43, 44, 47, 114, 312], "linear_svc": 101, "lineardiscriminantanalysi": 101, "linearli": [191, 201, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442], "linearsvc": [54, 101, 102, 175, 304, 306], "linestyl": 54, "linewidth": [15, 19, 22, 45, 46, 51, 53, 64, 93, 440, 441, 448], "lingual": [93, 480], "lingual_l": 198, "link": [55, 118, 121, 129, 140, 147, 152, 162, 163, 166, 170, 173, 178, 180, 184, 187, 197, 207, 209, 226, 248, 253, 392, 402, 403, 429, 497], "linkag": 439, "linkcheck_": 163, "link\u00f6p": 0, "linspac": [5, 13, 52, 64, 69], "lint": [131, 162, 178, 187], "linter": [132, 162, 178], "linux": 187, "liotti": [118, 235, 261], "liquid": 0, "lisandrelli": [118, 206, 267], "list": [0, 2, 3, 6, 10, 11, 15, 16, 17, 22, 24, 32, 35, 41, 47, 50, 51, 52, 54, 56, 58, 61, 64, 65, 72, 73, 74, 77, 78, 81, 82, 87, 96, 102, 103, 104, 107, 113, 114, 120, 121, 127, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 146, 147, 150, 156, 157, 159, 162, 164, 170, 178, 184, 186, 187, 189, 190, 191, 198, 200, 216, 219, 223, 225, 230, 234, 235, 238, 239, 240, 242, 244, 245, 246, 248, 249, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 267, 268, 270, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 321, 323, 324, 326, 328, 329, 333, 339, 340, 341, 342, 344, 345, 353, 354, 356, 359, 361, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 425, 426, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 451, 452, 454, 456, 457, 458, 459, 460, 465, 466, 468, 476, 477, 495, 498], "list_of_2d_arrai": 44, "listedcolormap": 41, "listen": [6, 26, 68, 70, 71, 83, 276], "listening_gt_rest_eff_map": 6, "listening_gt_rest_z_map": 6, "liter": [339, 341], "literatur": [103, 165, 231, 246, 350, 368, 469], "littl": [77, 170, 171, 178], "liu": [118, 201, 230, 236, 258, 262, 367, 368, 469], "livio": [78, 118, 321], "ll": [2, 6, 52, 61, 309, 310], "llc": 0, "llera": [118, 367, 368], "llf": 316, "lloyd": [39, 118], "llrrrrr": 65, "lo": 0, "load": [2, 4, 6, 9, 10, 22, 24, 26, 29, 52, 53, 55, 56, 57, 61, 64, 65, 70, 71, 79, 90, 91, 93, 95, 98, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 127, 128, 129, 132, 133, 140, 142, 145, 147, 156, 157, 159, 162, 166, 169, 173, 174, 177, 178, 186, 188, 190, 218, 227, 246, 247, 250, 252, 254, 255, 256, 259, 260, 264, 265, 266, 267, 270, 271, 272, 275, 276, 279, 280, 281, 283, 285, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 311, 312, 329, 343, 354, 355, 357, 367, 368, 429, 445, 447, 448, 452, 470, 474, 476, 477, 483, 485, 494, 496, 497], "load_confound": [59, 68, 113, 128, 129, 130, 132, 157, 162, 165, 191, 329, 368], "load_confounds_strategi": [59, 130, 157, 162, 165, 191, 367], "load_fsaverag": [10, 23, 24, 39, 70, 113, 114, 132, 162, 210, 211, 212, 213, 214, 215, 289, 474], "load_fsaverage_data": [10, 23, 24, 39, 70, 113, 114, 132, 162, 210, 211, 212, 213, 214, 215, 289], "load_img": [2, 38, 95, 96, 105, 111, 112, 140, 162, 178, 189, 190], "load_mni152_brain_mask": [107, 140, 156, 162, 218, 271], "load_mni152_gm_mask": [26, 156, 162, 218, 271], "load_mni152_gm_templ": [156, 162, 218, 271, 295, 297, 299], "load_mni152_templ": [95, 156, 162, 218, 271, 272, 294, 296, 299, 343, 346, 351, 355, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 478], "load_mni152_wm_mask": [26, 156, 162, 218, 271], "load_mni152_wm_templ": [156, 162, 218, 271, 296, 297, 298], "load_niimg": [148, 162], "load_nki": [24, 114, 132, 162, 226], "load_sample_motor_activation_imag": [2, 10, 13, 14, 15, 16, 17, 26, 92, 95, 98, 128, 162, 284, 474], "load_surf_data": [142, 162, 443, 445, 446, 452], "load_surf_mesh": [142, 159, 162, 494], "loadabl": [371, 372, 373, 443, 445, 446, 452], "loadsav": 178, "loadtxt": [43, 44], "lobe": [72, 261], "lobul": [93, 118, 216], "loc": [19, 34, 36, 45, 46, 52, 64, 69, 71, 93, 103, 104, 391, 393, 394], "local": [22, 26, 43, 44, 52, 63, 67, 68, 75, 78, 79, 81, 82, 83, 90, 100, 103, 104, 107, 112, 113, 115, 116, 118, 150, 151, 159, 162, 163, 178, 179, 180, 184, 187, 189, 191, 193, 197, 223, 230, 246, 254, 255, 258, 263, 273, 274, 275, 276, 277, 280, 281, 283, 308, 349, 361, 364, 370, 376, 390, 418, 434, 435, 442, 447, 496], "local_region": [53, 168, 456, 458], "localis": [118, 184, 341, 390], "localizer_anat_filenam": 18, "localizer_dataset": [18, 79, 83, 109, 110], "localizer_ev": 74, "localizer_first_level": [67, 68, 70], "localizer_tmap_filenam": 18, "locat": [6, 11, 16, 23, 24, 27, 31, 32, 34, 36, 37, 38, 43, 44, 45, 50, 52, 55, 56, 57, 58, 59, 61, 65, 71, 77, 79, 87, 91, 96, 97, 104, 106, 109, 111, 113, 134, 147, 156, 162, 177, 178, 180, 187, 189, 207, 242, 248, 264, 266, 267, 308, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 465, 494], "lock": [146, 162], "log": [47, 52, 56, 79, 81, 96, 132, 137, 162, 163, 175, 177, 313, 316, 317, 318, 319, 355, 426], "log10": [38, 45, 47, 79, 81, 96, 106, 109, 110, 341, 390, 465], "log_": [45, 106, 109, 110], "log_img": 355, "log_p_valu": 96, "log_p_values_img": 96, "logan": [118, 176], "logarithm": [79, 81, 341], "logger": [132, 162], "logic": [96, 121, 178, 303], "logical_and": [96, 106], "logical_not": [32, 38, 79, 109], "logical_or": 32, "logilab": 0, "login": 163, "logist": [32, 33, 118, 171, 172, 176, 304, 306, 309, 310], "logistic_l1": [32, 171, 304, 306], "logistic_l2": [32, 41, 171, 304, 306], "logisticregressioncv": [41, 129, 162, 304, 305, 306, 307], "logl": [313, 316, 317, 318, 319], "loglf": [313, 317], "loglikelihood": [313, 317], "logo_cv": 41, "logp_max_mass": [81, 341, 390], "logp_max_s": [81, 341, 390], "logp_max_t": [45, 81, 106, 109, 341, 390], "logp_max_tfc": [109, 341, 390], "loic": [0, 122, 123, 125, 126, 135, 137, 140, 150, 162], "loki": 46, "lokybackend": [33, 38, 39, 45, 46, 47, 51, 106, 109], "london": [0, 118, 184, 268, 286], "long": [52, 100, 115, 116, 121, 163, 178, 180, 247, 250, 345, 354, 357, 360, 367, 368, 370, 376, 428, 496], "longer": [46, 108, 125, 127, 128, 129, 130, 144, 148, 150, 153, 155, 157, 159, 162, 163, 180, 368], "longest": 68, "look": [1, 6, 8, 10, 23, 24, 26, 31, 34, 43, 47, 59, 65, 67, 68, 70, 71, 74, 105, 108, 114, 116, 121, 132, 134, 147, 148, 158, 162, 170, 178, 179, 180, 186, 187, 191, 206, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 270, 281, 283, 291, 361, 371, 374, 378, 436, 441, 445, 447, 496], "look_up_t": 59, "loop": [36, 41, 47, 103, 153, 162, 170, 177, 190, 304, 305, 306, 307], "loos": 177, "lorocv": 175, "lorrain": [118, 175], "lose": [15, 97, 494], "loss": [167, 172, 309, 368], "loss_pass": 191, "lost": 177, "lot": [67, 72, 73, 88, 125, 147, 150, 162, 163, 164, 170, 171, 177, 178, 186, 242], "loui": [0, 118, 201, 218], "love": 3, "low": [10, 45, 68, 96, 108, 118, 133, 147, 153, 162, 170, 176, 177, 178, 180, 186, 187, 189, 190, 191, 234, 246, 289, 292, 293, 300, 304, 305, 306, 307, 309, 310, 311, 312, 344, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 436, 437, 450, 454, 456, 467, 468], "low_pass": [52, 54, 55, 56, 57, 58, 59, 61, 64, 91, 93, 94, 102, 103, 147, 162, 191, 304, 305, 306, 307, 309, 310, 311, 312, 344, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 456, 467, 468, 480], "lower": [19, 33, 34, 41, 42, 54, 71, 79, 91, 96, 137, 162, 169, 172, 176, 177, 184, 190, 238, 244, 245, 304, 305, 306, 307, 316, 318, 319, 384, 387, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 428, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 467], "lower_cutoff": [91, 384, 387], "lowest": [149, 162], "lprojector": [15, 405, 419], "lr": [15, 17, 396, 419, 429, 435, 438, 466, 494], "lrprojector": [15, 419], "lsa_beta_map": 103, "lsa_events_df": 103, "lsa_glm": 103, "lss": [130, 162], "lss_beta_map": 103, "lss_design_matric": 103, "lss_events_df": 103, "lss_glm": 103, "lss_transform": 103, "lt": [38, 91, 93, 94, 104, 113, 479, 480], "lt_wid_top_ht": [21, 22, 51, 53, 89, 90], "luc": [118, 209], "luca": [118, 176, 201], "lucina": 118, "luisa": [0, 150, 154, 156, 162], "luke": [0, 155, 162], "lunch": 171, "lund": 0, "lut": [11, 52, 59, 93, 114, 134, 162, 178, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 371, 374, 378, 480], "lut_": [374, 378], "luz": 0, "lvert": [26, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442], "lw": [43, 71], "ly": 456, "lyon": 0, "lyr": [15, 397, 419, 429, 435, 438, 466, 494], "lyrprojector": [15, 399, 419], "lyrz": [14, 15, 61, 398, 419, 429, 435, 438, 466, 494], "lyrzprojector": [15, 400, 419], "lyttelton": [118, 201, 250], "lzr": [15, 56, 399, 419, 429, 435, 438, 466, 494], "lzrprojector": [15, 397, 419], "lzry": [15, 400, 419, 429, 435, 438, 466, 494], "lzryprojector": [15, 398, 419], "m": [3, 13, 26, 32, 33, 34, 40, 44, 52, 61, 68, 77, 101, 103, 106, 118, 140, 162, 163, 164, 175, 178, 184, 186, 187, 197, 198, 201, 205, 207, 208, 210, 211, 212, 213, 214, 216, 217, 228, 229, 230, 232, 235, 236, 248, 252, 257, 258, 259, 261, 262, 264, 265, 268, 270, 286, 289, 316, 318, 319, 341, 390, 495], "m_cmap": 13, "ma": [21, 38, 43, 51, 53, 110], "maarten": [118, 226, 367, 368], "mac": [137, 162], "macaluso": [118, 201], "macau": 0, "mach": [52, 118, 455, 461], "machin": [0, 31, 36, 47, 52, 96, 119, 154, 162, 163, 171, 172, 173, 178, 184, 185, 206, 279, 495, 497], "machlouzarid": [118, 207, 253], "macintosh": [118, 197], "mackai": [118, 197, 232, 259], "mackinnon": [118, 318, 319], "maco": [132, 162], "macro": [118, 311], "macroscop": [118, 198, 248], "made": [0, 22, 41, 104, 113, 128, 153, 156, 157, 162, 174, 177, 178, 180, 184, 186, 187, 227, 233, 304, 305, 306, 307, 309, 310, 390, 449], "madhyastha": [144, 147, 162], "magenta": [43, 71, 494], "magic": [59, 105], "magnet": [0, 26, 118, 180, 184, 196, 201, 216, 250, 276], "magnetoencephalographi": 184, "magnetom": 233, "magnitud": [26, 184, 425, 431], "magnusson": 0, "maguir": [118, 216], "mai": [3, 13, 18, 26, 31, 46, 52, 59, 66, 68, 73, 74, 82, 88, 103, 107, 111, 118, 120, 121, 125, 148, 150, 158, 162, 164, 170, 171, 173, 178, 180, 184, 187, 189, 191, 193, 197, 203, 237, 238, 246, 276, 281, 290, 305, 310, 314, 329, 333, 341, 359, 366, 368, 371, 372, 374, 375, 390, 443, 445, 446, 459, 465, 478, 489], "main": [7, 32, 59, 65, 68, 69, 72, 96, 123, 159, 162, 163, 170, 175, 178, 179, 184, 187, 189, 191, 248, 326, 328, 333, 364, 385, 387, 392, 425], "main_deriv": 69, "main_path": 364, "mainli": 177, "maint": [126, 127, 128, 129, 130, 131, 132, 135, 137, 140, 141, 142, 144, 147, 150, 152, 155, 156, 157, 158, 159, 162, 178], "maint_tool": 163, "maintain": [0, 127, 150, 156, 162, 163, 178, 187], "mainten": [157, 162], "mairal": 207, "major": [57, 96, 178, 186, 232], "make": [4, 6, 9, 13, 16, 23, 24, 26, 29, 32, 38, 41, 44, 50, 52, 54, 59, 61, 68, 69, 70, 71, 72, 77, 79, 81, 82, 86, 101, 108, 111, 116, 118, 121, 127, 129, 130, 131, 132, 135, 136, 141, 147, 155, 156, 157, 159, 162, 163, 168, 170, 171, 175, 176, 179, 183, 184, 185, 186, 189, 191, 227, 252, 260, 270, 281, 292, 293, 301, 304, 305, 306, 307, 314, 359, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 407, 409, 411, 413, 415, 417, 435, 437, 442, 444, 446, 447, 448, 449, 450, 452, 453, 474, 478, 480, 494, 495, 496], "make_first_level_design_matrix": [64, 66, 133, 157, 162, 179, 326, 434], "make_glm_report": [127, 154, 157, 162, 326, 339, 366], "make_localizer_contrast": 68, "make_pipelin": [39, 43, 47, 114], "make_second_level_design_matrix": [80, 183], "makri": [118, 205, 216, 252], "male": [68, 216, 246], "manag": [129, 130, 162, 178, 187, 495], "mandatori": [177, 344], "mani": [3, 4, 13, 16, 24, 38, 40, 42, 43, 44, 45, 46, 51, 52, 54, 59, 72, 81, 88, 101, 102, 103, 110, 121, 155, 162, 166, 167, 168, 170, 171, 172, 173, 176, 177, 178, 180, 184, 187, 190, 191, 240, 281, 283, 304, 305, 306, 307, 308, 341, 348, 377, 390, 437, 462, 463, 478, 494], "manipul": [1, 8, 41, 58, 68, 91, 98, 120, 142, 162, 186, 189, 270, 291, 361, 436, 447, 483, 496, 497], "manner": [186, 435], "mannheim": 0, "manon": [0, 159, 162], "manual": [16, 17, 20, 36, 37, 38, 43, 44, 45, 50, 54, 55, 56, 57, 58, 59, 61, 64, 65, 71, 83, 85, 91, 93, 94, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 113, 116, 120, 163, 164, 170, 186, 188, 191, 270, 311, 312, 349, 354, 356, 357, 361, 370, 374, 433, 441, 442, 443, 445, 446, 447, 494, 496, 497], "map": [2, 3, 7, 9, 11, 12, 15, 16, 20, 21, 23, 24, 29, 35, 39, 42, 47, 49, 53, 54, 55, 56, 57, 59, 62, 64, 65, 68, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 93, 94, 95, 99, 100, 102, 104, 106, 108, 111, 113, 114, 115, 116, 118, 119, 128, 129, 130, 131, 132, 133, 134, 135, 139, 142, 143, 147, 148, 150, 153, 154, 155, 157, 160, 162, 164, 165, 166, 169, 171, 173, 174, 175, 178, 179, 180, 181, 184, 185, 186, 189, 190, 191, 198, 200, 201, 203, 204, 207, 209, 210, 211, 212, 213, 214, 216, 218, 219, 224, 228, 230, 232, 235, 238, 239, 240, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 271, 274, 275, 276, 281, 282, 283, 284, 285, 289, 292, 293, 294, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322, 326, 335, 339, 341, 342, 344, 346, 352, 361, 363, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 424, 425, 428, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 463, 465, 466, 468, 474, 478, 479, 485, 490, 496, 497], "map_label": 12, "map_left": [10, 23, 24, 114, 205, 260, 494], "map_nam": [339, 341, 366, 466], "map_right": [10, 23, 24, 114, 205, 260], "map_typ": [112, 281], "maps_img": [50, 55, 56, 57, 165, 191, 371, 372, 375, 379, 423, 440, 456, 458, 460, 463, 480], "maps_img_": [50, 372, 375, 379], "maraviglia": [118, 201], "march": [124, 145, 154, 162, 308], "marcu": [118, 175, 197, 227, 368], "marek": [118, 231, 266], "margaret": [118, 226], "margeta": [0, 122, 162], "margin": [54, 359, 425], "marginali": 480, "marguli": [118, 121, 225, 281, 283], "mari": [118, 186], "mariano": [118, 209], "mario": [118, 235, 261], "marisa": [118, 230, 236, 258, 262], "mark": [43, 59, 103, 118, 164, 197, 367, 368], "markdown": [65, 201], "marked_pixel": 43, "markedli": 71, "marker": [43, 131, 148, 150, 153, 155, 162, 163, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 429, 438, 448, 449, 451, 456, 458, 497], "marker_color": [16, 43, 58, 64, 103, 148, 150, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 451, 494], "marker_coord": [58, 64, 103, 148, 150, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 451], "marker_label": [155, 162, 451], "marker_s": [16, 43, 58, 64, 103, 148, 150, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 451, 494], "markiewicz": [0, 150, 162], "marquand": [118, 186], "marseil": 0, "martha": [118, 216], "marti": [106, 118, 235, 261, 390], "martigni": 0, "martin": [0, 118, 135, 140, 154, 162, 200, 205, 210, 211, 212, 213, 214, 218, 249, 289, 344, 468], "martino": 118, "masa": [43, 44, 118, 223, 280], "mask": [3, 9, 21, 24, 29, 31, 32, 33, 35, 36, 37, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 57, 58, 59, 61, 64, 65, 70, 71, 73, 77, 79, 81, 85, 93, 94, 98, 99, 104, 108, 109, 110, 113, 116, 119, 121, 127, 128, 130, 132, 133, 134, 140, 141, 142, 144, 147, 150, 153, 155, 156, 157, 162, 167, 171, 174, 176, 185, 186, 188, 189, 201, 203, 209, 217, 218, 223, 239, 246, 248, 267, 269, 270, 271, 272, 276, 280, 294, 295, 298, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 323, 326, 339, 341, 342, 343, 344, 345, 349, 350, 351, 354, 356, 357, 361, 363, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 433, 435, 436, 437, 440, 441, 442, 443, 445, 446, 447, 454, 455, 456, 458, 459, 460, 461, 464, 466, 468, 478, 479, 480, 483, 485, 494, 496, 497], "mask4_vt": 3, "mask_": [111, 309, 310], "mask_arg": [91, 94, 191, 311, 312, 373, 376, 454, 480], "mask_atla": 96, "mask_chance_scor": 34, "mask_data": [24, 96], "mask_fac": [19, 34, 120, 189, 217, 270], "mask_face_filenam": 19, "mask_face_littl": [120, 189, 217, 270], "mask_filenam": [3, 32, 34, 37, 42, 101, 106, 120, 170], "mask_hous": [19, 34, 120, 189, 217, 270], "mask_house_filenam": 19, "mask_house_littl": [120, 189, 217, 270], "mask_img": [12, 27, 31, 34, 35, 36, 37, 38, 41, 42, 43, 44, 47, 52, 55, 56, 57, 61, 68, 71, 73, 77, 91, 93, 94, 101, 106, 107, 111, 120, 129, 144, 148, 152, 153, 157, 162, 170, 175, 178, 190, 191, 294, 308, 321, 326, 329, 339, 342, 343, 344, 350, 363, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 388, 389, 424, 428, 437, 455, 456, 458, 459, 460, 461, 462, 463, 478, 480], "mask_img_": [52, 68, 79, 81, 91, 94, 120, 134, 162, 191, 304, 305, 306, 307, 309, 310, 311, 312, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "mask_label": [12, 428], "mask_nam": 34, "mask_path": 111, "mask_quality_check": [79, 109], "mask_roi": 223, "mask_scor": 34, "mask_strategi": [51, 91, 94, 108, 150, 156, 162, 191, 304, 305, 306, 307, 311, 312, 373, 376, 454, 480], "mask_typ": [51, 304, 305, 306, 307, 311, 312, 373, 376, 383, 386, 454], "mask_vt": [3, 16, 17, 19, 32, 34, 41, 96, 101, 120, 170, 189, 217, 270], "mask_vt_filenam": [19, 96], "masked_atla": [130, 162, 459], "masked_data": [27, 102, 114, 190], "masked_less": [43, 110], "masked_pv": 110, "masked_scores_": 308, "maskedarrai": [3, 17, 31], "masker": [34, 37, 38, 41, 43, 44, 45, 50, 52, 54, 55, 56, 57, 58, 59, 61, 64, 71, 77, 91, 93, 94, 96, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 115, 116, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 150, 153, 154, 155, 156, 157, 159, 162, 163, 165, 167, 170, 173, 178, 179, 188, 190, 193, 237, 238, 260, 292, 293, 300, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 341, 363, 367, 368, 390, 425, 426, 439, 443, 447, 454, 456, 459, 460, 462, 463, 474, 483, 489, 496, 497], "masker_": [65, 68, 79, 81, 304, 305, 306, 307, 309, 310, 311, 312, 454], "mason": 0, "mass": [0, 35, 61, 64, 70, 73, 81, 104, 113, 159, 162, 341, 390, 422, 465, 479, 483], "mass_univari": [45, 106, 109, 153, 159, 162, 175, 183, 483], "massachusett": 0, "massimiliano": [118, 176, 201], "massiv": [100, 115, 116, 174, 270, 275, 276, 349, 351, 356, 370, 376, 390, 418, 435, 442, 447, 487, 496], "master": [187, 236, 258], "mat": [65, 234, 288, 369, 439], "match": [2, 6, 16, 105, 107, 121, 128, 129, 130, 131, 134, 150, 154, 155, 157, 162, 163, 169, 175, 178, 184, 188, 191, 232, 248, 259, 281, 303, 304, 305, 306, 307, 309, 310, 311, 312, 326, 329, 339, 341, 345, 354, 356, 359, 364, 366, 367, 371, 372, 373, 374, 375, 376, 382, 384, 385, 387, 425, 426, 440, 443, 445, 446, 452, 454, 455, 457], "math": 104, "math_img": [79, 81, 85, 87, 99, 100, 112, 115, 116, 131, 132, 134, 138, 162, 190, 247, 301, 354, 356, 357, 442, 447, 496], "mathbf": 47, "mathemat": [0, 138, 162, 184, 355, 482], "mathi": [26, 118], "mathia": [0, 128, 162], "mathieu": [0, 129, 162], "matlotlib": 429, "matplolib": [10, 13], "matplotlib": [5, 6, 10, 12, 16, 19, 25, 26, 27, 32, 34, 37, 40, 41, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 71, 77, 80, 81, 82, 86, 93, 96, 98, 102, 103, 104, 109, 110, 111, 114, 125, 129, 130, 131, 137, 142, 144, 145, 147, 150, 152, 157, 158, 160, 162, 165, 170, 187, 190, 372, 374, 375, 376, 377, 378, 379, 380, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 494, 495], "matplotlibdeprecationwarn": [2, 16, 19, 21, 22, 32, 38, 43, 45, 46, 51, 53, 89, 90, 106, 110], "matric": [3, 9, 29, 35, 44, 50, 53, 54, 59, 63, 65, 70, 72, 73, 75, 77, 82, 102, 113, 116, 132, 135, 140, 143, 144, 154, 155, 157, 162, 164, 165, 166, 177, 179, 188, 189, 190, 192, 193, 201, 207, 238, 239, 240, 242, 245, 278, 316, 318, 319, 326, 333, 359, 431, 432, 439, 443, 445, 446, 447, 492, 496, 497], "matrix": [6, 23, 35, 39, 43, 44, 47, 50, 53, 54, 56, 64, 65, 66, 68, 70, 71, 73, 76, 77, 78, 79, 81, 82, 83, 84, 86, 93, 94, 103, 104, 105, 107, 109, 113, 116, 127, 128, 132, 133, 134, 145, 150, 153, 162, 167, 168, 170, 171, 177, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 209, 238, 239, 240, 241, 242, 243, 245, 269, 281, 283, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 317, 318, 319, 324, 326, 327, 333, 335, 339, 340, 341, 346, 356, 357, 359, 362, 366, 369, 370, 373, 376, 382, 384, 385, 387, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 430, 431, 432, 439, 453, 454, 455, 466, 479, 496, 497], "matrix_plot": [134, 162], "matter": [12, 25, 26, 45, 46, 59, 68, 77, 91, 140, 153, 156, 162, 170, 175, 177, 178, 183, 185, 190, 191, 201, 218, 227, 267, 271, 272, 285, 292, 295, 296, 297, 298, 299, 304, 305, 306, 307, 311, 312, 329, 367, 373, 376, 383, 386, 454, 478], "matthew": [106, 118, 164, 197, 226, 390], "matthia": [0, 122, 162], "matthieu": [0, 159, 162], "matur": [61, 118, 208, 264], "maumet": [118, 121, 225, 281, 283, 425], "maura": [3, 33, 34, 40, 101, 118, 217, 270], "maurizio": [118, 368], "max": [0, 12, 32, 36, 45, 47, 51, 52, 53, 54, 56, 58, 60, 61, 71, 82, 86, 90, 106, 107, 109, 114, 118, 155, 162, 164, 177, 238, 359, 360, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 428, 433, 435, 436, 437, 440, 441, 442, 443, 445, 446, 449, 450, 452], "max_imag": [107, 112, 121, 281], "max_it": [43, 51, 53, 60, 239, 240, 242, 304, 305, 306, 307, 309, 310], "max_iter_cv": 240, "max_n_sampl": 60, "max_no_improv": 453, "max_precis": 60, "max_usag": 111, "maxim": [36, 184, 316, 318, 319, 348, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "maximilian": [0, 129, 162], "maximum": [16, 35, 68, 73, 81, 91, 94, 96, 104, 105, 108, 130, 131, 150, 162, 175, 184, 191, 219, 238, 239, 240, 242, 247, 254, 255, 281, 290, 300, 304, 305, 306, 307, 311, 312, 313, 314, 317, 326, 335, 339, 341, 343, 361, 363, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 394, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 435, 454, 456, 458, 459, 479, 494], "maxixmum": [132, 162], "maxprob": [11, 59, 93, 166, 254, 255, 497], "mayb": [68, 121, 390], "mayberg": [118, 204, 251], "mayer": [118, 200, 249], "mazoy": [118, 198, 248], "mazziotta": [118, 235, 261], "mb": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 496], "mccarthi": [118, 197], "mcgill": [0, 218], "mcgovern": 0, "mckai": [118, 232, 259], "mckinstri": [118, 201, 218], "mcleod": [26, 118], "md": [0, 236, 258], "md5sum": 3, "mean": [3, 6, 7, 15, 16, 17, 19, 22, 23, 26, 27, 32, 33, 34, 35, 36, 37, 38, 41, 43, 44, 45, 46, 47, 50, 52, 53, 54, 58, 59, 61, 64, 68, 71, 72, 73, 79, 85, 91, 93, 94, 96, 97, 99, 101, 105, 106, 107, 108, 114, 116, 121, 133, 140, 144, 147, 150, 154, 156, 162, 163, 164, 167, 168, 170, 177, 178, 181, 184, 186, 187, 190, 191, 197, 204, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 326, 334, 335, 339, 341, 342, 343, 345, 350, 355, 356, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 425, 427, 428, 440, 441, 442, 443, 445, 446, 447, 449, 453, 454, 455, 456, 458, 459, 461, 462, 463, 466, 468, 469, 478, 480, 496, 497], "mean_": [50, 54, 114, 164, 238], "mean_correl": [53, 168], "mean_correlation_matrix": [50, 54], "mean_data": 114, "mean_epi_img": 32, "mean_fmri": 38, "mean_fmri_img": 106, "mean_func": 97, "mean_func_img": [52, 94], "mean_haxbi": [27, 190], "mean_haxby_img": [16, 17], "mean_imag": 72, "mean_img": [3, 6, 16, 17, 19, 26, 27, 32, 33, 35, 38, 52, 71, 72, 73, 87, 91, 94, 96, 97, 106, 108, 114, 134, 162, 190, 355], "mean_img_": [35, 73], "mean_scor": [54, 102], "mean_test_scor": 102, "meaning": [101, 103, 114, 137, 147, 150, 162, 178, 180, 207, 220, 344, 468], "meaningless": [3, 170, 180, 342], "meant": [3, 6, 108, 245, 314, 464], "meanwhil": [2, 16, 19, 21, 22, 32, 38, 43, 45, 46, 51, 53, 89, 90, 106, 110, 129, 130, 162], "measur": [25, 36, 51, 52, 54, 61, 68, 79, 102, 103, 109, 111, 118, 143, 153, 162, 164, 165, 167, 168, 174, 175, 177, 178, 180, 184, 186, 191, 197, 199, 246, 278, 368, 426, 438, 453, 478, 494], "mechan": [33, 170, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "med": 248, "media": [107, 112], "medial": [10, 24, 61, 93, 114, 118, 175, 437, 443, 445, 446], "medial_wal": [10, 24, 480], "medialtemporallob": 266, "median": [150, 162, 201, 371, 374, 443, 445, 446, 459], "medic": [0, 47, 118, 164, 168, 176, 198, 199, 218, 224, 227, 238, 256, 456], "medicin": 227, "medium": [187, 289, 292, 293, 300, 450], "meet": [118, 159, 162, 197, 201, 495], "meg": [180, 184], "megan": [118, 216], "megatrawl": [9, 29, 116, 118, 137, 162, 193, 278, 439, 447, 496], "meghana": [144, 147, 162], "mehdi": [0, 54, 102, 118, 122, 126, 135, 144, 150, 162], "meisler": [0, 128, 130, 162], "mejia": [26, 118], "melbourn": 0, "melissa": [118, 226], "mem": [8, 29, 48, 62, 75, 84, 99, 115, 117, 496], "member": [178, 187, 495], "memor": [172, 180], "memori": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 139, 147, 148, 162, 167, 168, 177, 178, 190, 191, 239, 289, 292, 293, 300, 304, 305, 306, 307, 309, 310, 311, 312, 314, 319, 326, 329, 339, 345, 349, 359, 360, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 450, 454, 455, 456, 467, 470, 471, 480, 494], "memory_": [309, 310], "memory_level": [35, 37, 38, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 91, 93, 94, 101, 102, 103, 106, 107, 108, 109, 110, 168, 191, 239, 304, 305, 306, 307, 309, 310, 311, 312, 326, 329, 339, 345, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 455, 456, 480], "memory_profil": 111, "memory_usag": 111, "memoryerror": 189, "menn": [118, 226, 367, 368], "mensch": [0, 51, 118, 126, 135, 137, 140, 162, 169, 207, 253, 312], "mental": [0, 68, 70, 74, 83, 118, 186, 203, 276, 282], "mention": [103, 111, 127, 129, 130, 162, 178, 179, 180], "menuet": [147, 162], "merg": [26, 150, 162, 163, 167, 178, 184, 187, 190, 455], "meriaux": [74, 118, 203, 276], "merlin": [118, 311], "mert": [118, 230, 236, 258, 262], "mesh": [23, 24, 39, 70, 113, 114, 128, 132, 134, 142, 147, 150, 155, 159, 162, 179, 184, 185, 191, 210, 211, 212, 213, 214, 215, 289, 292, 293, 300, 311, 312, 355, 378, 379, 380, 404, 437, 443, 444, 445, 446, 450, 452, 454, 470, 471, 472, 473, 474, 475, 476, 477, 478], "mesh_coordin": 23, "mesh_typ": [10, 24, 39, 70, 113, 293, 300], "mess": 38, "messag": [3, 86, 137, 162, 187, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 290, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 335, 339, 341, 345, 356, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 453, 454, 455, 456, 461], "met": [128, 162], "meta": [0, 3, 15, 100, 103, 107, 115, 116, 121, 208, 229, 238, 239, 240, 283, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 349, 354, 355, 357, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 435, 442, 447, 453, 454, 455, 456, 496], "meta_analysis_img": 112, "metabol": [69, 180, 184], "metadata": [59, 65, 103, 104, 105, 113, 121, 128, 134, 150, 162, 190, 225, 226, 238, 239, 240, 281, 282, 283, 284, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 329, 339, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "metadata_rout": [238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "metadatarequest": [238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "metaprior": 47, "method": [10, 15, 16, 26, 28, 33, 38, 42, 47, 49, 51, 53, 61, 62, 88, 91, 93, 94, 96, 103, 109, 111, 116, 118, 119, 121, 128, 129, 130, 132, 134, 135, 139, 143, 147, 150, 153, 154, 155, 157, 159, 162, 164, 165, 167, 171, 172, 176, 177, 178, 182, 184, 185, 186, 189, 190, 191, 197, 198, 201, 225, 231, 233, 235, 238, 239, 240, 250, 261, 267, 278, 281, 283, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 321, 326, 339, 341, 346, 349, 350, 351, 356, 359, 360, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 433, 441, 447, 448, 450, 451, 452, 453, 454, 455, 456, 464, 468, 469, 478, 494, 496, 497], "methodolog": 204, "methodologi": 219, "metric": [33, 37, 41, 43, 44, 54, 81, 134, 150, 162, 170, 171, 175, 184, 204, 304, 306, 307], "meudec": [0, 127, 154, 155, 156, 157, 158, 159, 162], "mf": [77, 118, 197], "mgh": [59, 93, 236, 262], "mgrid": [25, 86], "mgz": [148, 149, 162, 404, 443, 444, 445, 446, 452, 476], "mi": 68, "mia": [0, 130, 162], "mialab": 249, "miami": 0, "mib": 111, "miccai": [118, 164, 238], "micha": [0, 132, 162], "michael": [0, 39, 54, 102, 118, 122, 126, 135, 147, 162, 176, 186, 199, 200, 226, 228, 249, 257, 368], "michel": [0, 47, 52, 118, 122, 128, 129, 130, 132, 162, 176, 186, 203, 224, 226, 256, 276], "mickl": [118, 232, 259], "microarchitectur": 180, "mid": 480, "middl": [47, 59, 68, 93, 118, 147, 155, 162, 227, 365], "midrul": 65, "midx": 104, "miezin": [61, 118, 229, 265], "might": [6, 36, 64, 105, 108, 169, 173, 175, 180, 184, 187, 189, 197, 252, 267, 355, 362, 368, 377, 382, 383, 384, 385, 386, 387, 436], "migrat": [127, 162], "mikiten": [118, 235, 261], "mil": [118, 197], "mila": 0, "mild": 68, "milham": [54, 102, 118, 199, 226], "miller": [118, 164, 197, 232, 259], "millimet": [86, 175, 191, 294, 295, 296, 297, 298, 299, 304, 305, 306, 307, 308, 311, 312, 326, 339, 341, 361, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 454, 456, 458, 465], "mimic": [173, 254, 255], "min": [2, 3, 4, 6, 10, 11, 18, 20, 22, 28, 40, 42, 51, 52, 53, 54, 56, 58, 61, 67, 72, 79, 81, 82, 83, 102, 104, 105, 106, 107, 111, 155, 156, 162, 359, 360, 427, 428, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452], "min_dist": [64, 326, 339, 366, 465, 466], "min_n_sampl": 60, "min_onset": [326, 328, 329, 333], "min_region_s": [53, 89, 90, 168, 456, 458], "min_siz": 457, "minc": 201, "minctracc": 201, "mind": [0, 54, 170, 171, 178, 184], "mine": [118, 186, 201, 250], "ming": [118, 216], "mini": 453, "minibatchkmean": [52, 453, 454], "miniconda": 495, "minim": [59, 65, 111, 178, 184, 326, 328, 333, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 440], "minimalist": 3, "minimize_memori": [65, 70, 71, 73, 77, 179, 326, 329, 339], "minimum": [35, 64, 73, 79, 81, 91, 104, 105, 125, 127, 130, 132, 135, 140, 142, 143, 144, 147, 150, 153, 155, 157, 162, 163, 168, 187, 201, 343, 363, 371, 374, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 421, 429, 449, 456, 457, 458, 459, 465, 466, 479], "minnesota": 0, "minor": [125, 131, 143, 145, 162, 170], "minu": [121, 180, 371, 374, 378], "minut": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 163, 180, 221, 232, 233, 276], "mion": 69, "mion_response_funct": 69, "mion_time_deriv": 69, "miranda": [118, 176, 186, 201], "mirror": [187, 191, 246, 247, 248, 249, 250, 251, 252, 256, 259, 260, 262, 270, 271, 279, 280, 285, 290, 300], "miscellan": [131, 162], "misclassif": [304, 305, 306, 307, 309, 310], "misconcept": 180, "misfit": 68, "mishandl": [26, 118], "mislabel": 187, "misleadingli": 170, "miss": [10, 23, 24, 57, 72, 79, 86, 114, 129, 132, 156, 162, 178, 184, 333, 372, 375, 378, 384, 387, 480], "misspecif": 68, "mit": [0, 230, 236, 258], "mitchel": 207, "mitig": [118, 428], "mitra": [118, 367], "mix": [30, 47, 48, 116, 174, 176, 193, 246, 279, 307, 309, 310, 442, 447, 496], "miyawaki": [30, 48, 116, 118, 191, 193, 280, 346, 363, 370, 373, 376, 418, 442, 447, 480, 496], "miyawaki2008": [43, 44, 91, 480], "miyawaki2008_reconstruction_": 44, "miyawaki_dataset": [44, 91], "miyawaki_filenam": [91, 191], "miyawaki_mean_img": [91, 191], "miykael": [147, 162], "mkdir": [3, 4, 6, 7, 16, 24, 31, 35, 44, 51, 52, 58, 64, 65, 70, 73, 74, 77, 88, 96, 104, 111, 113], "mm": [4, 16, 35, 39, 58, 61, 64, 73, 86, 89, 93, 97, 104, 147, 162, 168, 190, 201, 230, 231, 253, 258, 266, 367, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 456, 457, 458, 466, 478, 479, 480], "mm3": [6, 35, 64, 65, 73, 93, 104, 201, 456, 458, 465, 479], "mmface": [72, 234], "mne": [148, 149, 162], "mni": [16, 51, 55, 57, 68, 70, 95, 104, 113, 118, 121, 140, 150, 153, 159, 162, 165, 183, 184, 186, 190, 191, 193, 198, 201, 207, 208, 219, 220, 229, 231, 237, 248, 250, 256, 264, 265, 266, 304, 305, 306, 307, 329, 346, 377, 383, 386, 427, 429, 433, 435, 436, 440, 441, 442, 448, 449, 451, 466, 489, 494], "mni152": [4, 41, 95, 127, 156, 162, 180, 193, 216, 218, 219, 230, 249, 251, 258, 262, 271, 272, 294, 295, 296, 297, 298, 299, 304, 305, 306, 307, 309, 310, 311, 312, 351, 373, 376, 383, 386, 440, 441, 442, 449, 454, 489], "mni152_file_path": [4, 186], "mni152_templ": 297, "mni152nlin2009casym": [65, 132, 162, 218], "mni152nlin2009casym_": 65, "mni152nlin2009casym_contrast": 65, "mni152nlin2009casym_corrdesign": 65, "mni152nlin2009casym_desc": [50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 65, 87, 93, 94, 97, 108], "mni152nlin2009casym_design": 65, "mni152nlin2009casym_mask": 65, "mni152nlin2009casym_stat": 65, "mni152nlin2009csasym": [218, 271, 272, 294, 295, 296, 297, 298, 299], "mni152nlin2009csym": 218, "mni152nlin6asym": [193, 237, 368, 489], "mni152sym": [193, 237], "mni152templ": [93, 326, 339, 427, 440, 441, 442, 466], "mni305": 184, "mni_icbm152_nlin_sym_09a_nifti": 218, "mni_icbm152_t1_tal_nlin_sym_09a_convert": [4, 186], "mo": 3, "moaepilot": 6, "mock": 178, "modal": [121, 170, 178, 180, 234, 288, 364], "modality_fold": 364, "mode": [9, 15, 17, 22, 29, 58, 63, 75, 85, 96, 99, 116, 118, 140, 145, 148, 154, 159, 162, 178, 179, 185, 190, 191, 197, 207, 247, 253, 256, 259, 281, 283, 321, 326, 333, 351, 370, 375, 377, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 437, 440, 442, 447, 456, 464, 479, 480, 496, 497], "model": [6, 30, 33, 35, 36, 42, 44, 47, 48, 51, 53, 54, 63, 64, 66, 70, 74, 75, 76, 83, 84, 100, 101, 102, 106, 108, 109, 115, 116, 118, 127, 128, 130, 132, 144, 150, 153, 155, 157, 158, 159, 162, 164, 166, 168, 170, 174, 175, 176, 177, 178, 181, 182, 184, 185, 186, 191, 192, 197, 226, 236, 238, 239, 242, 269, 272, 273, 276, 277, 280, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 345, 346, 349, 350, 355, 356, 360, 363, 366, 367, 368, 370, 373, 376, 377, 390, 403, 417, 418, 430, 431, 435, 441, 442, 447, 464, 466, 479, 480, 483, 487, 495, 496, 497], "model_and_arg": 104, "model_ev": [133, 162, 434], "model_evalu": [304, 305, 306, 307], "model_intercept": [79, 81, 109, 341, 390], "model_select": [3, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 54, 101, 102, 147, 162, 170, 173, 304, 305, 306, 307], "model_titl": 69, "modeladhd": [64, 479], "modelflm": 479, "modelin": [65, 77, 79], "models_confound": [65, 103, 104, 329], "models_ev": [65, 104, 329], "models_run_img": [65, 103, 104, 329], "modelsurfac": 113, "modeltwo": 73, "moder": 177, "modern": [135, 162], "modif": [178, 180, 184], "modifi": [18, 52, 61, 96, 107, 134, 140, 157, 162, 163, 178, 187, 191, 233, 281, 283, 359, 360, 363, 443, 445, 446, 452, 467, 468], "modify_d": 281, "modul": [5, 7, 20, 28, 36, 37, 38, 43, 44, 45, 50, 53, 54, 55, 56, 57, 58, 59, 61, 64, 89, 90, 91, 93, 94, 95, 96, 101, 102, 103, 106, 107, 108, 109, 110, 111, 118, 120, 121, 127, 128, 129, 130, 132, 135, 142, 144, 145, 153, 157, 159, 162, 163, 173, 178, 181, 186, 187, 191, 195, 227, 281, 304, 305, 306, 307, 316, 318, 319, 333, 341, 343, 353, 355, 484, 488, 490, 491, 492, 494], "modular": [118, 178, 208, 344, 468], "modulated_ev": [66, 74], "mohammad": [0, 128, 129, 130, 132, 162], "mohlberg": 118, "moment": [24, 120, 163], "monitor": 184, "monkei": 69, "montag": 437, "montgomeri": [118, 318, 319], "month": [163, 187], "montreal": [180, 184, 198, 201, 248], "montr\u00e9al": 0, "mood": [118, 186], "moor": 317, "more": [2, 3, 4, 6, 7, 9, 10, 13, 14, 15, 17, 20, 22, 23, 24, 26, 28, 29, 30, 31, 33, 35, 42, 43, 45, 46, 49, 51, 52, 53, 55, 57, 58, 59, 61, 63, 64, 65, 68, 70, 71, 72, 73, 76, 77, 79, 81, 82, 85, 88, 91, 93, 96, 101, 103, 104, 106, 107, 109, 111, 112, 113, 114, 116, 118, 119, 120, 121, 123, 127, 128, 129, 132, 134, 136, 140, 142, 144, 146, 147, 150, 152, 156, 157, 158, 162, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 182, 184, 186, 187, 189, 190, 191, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 216, 217, 218, 219, 223, 224, 225, 227, 231, 232, 235, 236, 239, 246, 248, 249, 250, 251, 256, 258, 259, 261, 262, 267, 269, 270, 271, 272, 276, 278, 279, 281, 283, 285, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314, 316, 318, 319, 326, 329, 339, 341, 345, 356, 364, 365, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 401, 403, 406, 408, 410, 412, 414, 416, 418, 427, 436, 440, 441, 442, 447, 449, 450, 453, 454, 455, 456, 458, 465, 467, 478, 480, 483, 494, 495, 496, 497], "more_smooth_anat_img": 4, "moreno": [118, 203, 226, 276], "moreov": [65, 104, 132, 159, 162, 178, 186, 364], "morgan": [118, 197], "morito": [43, 44, 118, 223, 280], "moritz": [0, 144, 147, 150, 162], "morpholog": [96, 190, 382, 383, 384, 385, 386, 387], "morphologi": 184, "morphometr": 216, "morphometri": [30, 48, 76, 84, 116, 170, 181, 184, 185, 186, 193, 271, 272, 285, 305, 310, 339, 342, 349, 360, 366, 370, 376, 390, 418, 431, 442, 447, 464, 479, 496, 497], "morri": [118, 227], "mortem": 219, "mosaic": [16, 131, 154, 162, 401, 420, 427, 433, 436, 440, 441, 442, 466, 494], "mosaicslic": [403, 406, 420], "most": [7, 25, 35, 43, 45, 46, 52, 64, 77, 96, 103, 111, 113, 129, 134, 144, 147, 162, 163, 170, 171, 172, 173, 175, 177, 178, 180, 187, 190, 191, 197, 204, 219, 326, 328, 333, 436, 443, 445, 446, 452, 454, 456, 458, 472, 478, 494], "most_frequ": 102, "mostli": [177, 363], "motion": [66, 68, 71, 104, 113, 118, 155, 162, 179, 201, 267, 326, 329, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456, 468], "motiv": 96, "motor": [15, 16, 17, 18, 26, 54, 68, 70, 79, 81, 92, 93, 95, 100, 107, 115, 116, 203, 276, 301, 349, 370, 376, 390, 435, 447, 494, 496], "motor_imag": 494, "mountain": 0, "mourao": [118, 176, 201], "mour\u00e3o": [118, 186], "move": [73, 128, 129, 130, 132, 134, 135, 142, 155, 160, 162], "movement": [59, 107, 118, 186, 191], "movi": [51, 52, 53, 55, 57, 58, 87, 91, 94, 108, 150, 162, 166, 185, 186, 191, 206, 267, 497], "mpl": [187, 391, 393, 394], "mr": 180, "mrg": 178, "mri": [7, 12, 44, 59, 63, 75, 96, 103, 116, 118, 120, 157, 162, 178, 179, 180, 181, 184, 186, 189, 196, 198, 201, 206, 216, 218, 227, 230, 246, 248, 258, 267, 271, 285, 328, 367, 368, 496], "mriqc": 65, "ms_e": [318, 319], "msb": 114, "msdl": [9, 22, 29, 55, 57, 116, 165, 190, 193, 256, 351, 403, 422, 440, 442, 447, 489, 494, 496], "msdl_atla": [21, 54, 55, 56, 57, 102, 480], "msdl_atlas_dataset": 56, "msdl_coord": [54, 102], "msdl_data": [54, 102], "msdl_roi": [55, 56, 57, 224, 256, 480], "mse": [46, 309, 310, 318], "mstep": [201, 250], "msw": 114, "much": [0, 3, 25, 34, 43, 45, 54, 79, 81, 102, 103, 111, 147, 162, 170, 177, 178, 180, 186, 208, 264, 348, 359, 478], "mudassir": [0, 132, 162], "multi": [22, 30, 44, 45, 46, 48, 49, 51, 61, 62, 103, 116, 118, 130, 162, 164, 165, 166, 168, 174, 177, 184, 186, 189, 190, 191, 192, 201, 224, 234, 239, 240, 242, 250, 256, 267, 270, 288, 304, 311, 326, 370, 373, 375, 376, 423, 429, 439, 447, 480, 496, 497], "multi_plt": 41, "multi_scal": 44, "multiclass": [37, 171], "multimask": [134, 162, 191], "multimod": 193, "multimodal_fac": 72, "multimodal_fmri": 72, "multimodal_smri": 72, "multiniftilabelsmask": [50, 127, 129, 131, 162, 188, 480, 497], "multiniftimapsmask": [50, 127, 129, 131, 162, 188, 480, 497], "multiniftimask": [43, 44, 130, 154, 156, 162, 188, 304, 305, 306, 307, 309, 310, 311, 312, 339, 341, 390, 454, 480, 497], "multioutput": [43, 305, 310], "multioutputregressor": [305, 310], "multipca": [373, 480], "multipl": [2, 6, 20, 45, 50, 79, 81, 83, 104, 111, 113, 118, 128, 153, 154, 162, 166, 171, 173, 175, 178, 181, 182, 184, 188, 189, 190, 197, 201, 219, 223, 250, 251, 259, 303, 316, 334, 339, 341, 351, 354, 355, 371, 372, 373, 390, 401, 403, 406, 420, 427, 433, 436, 437, 440, 441, 442, 449, 479, 480, 494, 497], "multiple_spatial_regress": 278, "multipli": [68, 86, 92, 140, 162, 175, 177, 245, 313, 316, 318, 319, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 437, 443, 445, 446, 450, 452], "multiprocess": 111, "multiscal": [9, 29, 43, 44, 111, 116, 118, 128, 138, 162, 193, 223, 237, 250, 280, 441, 447, 496], "multisit": [118, 196, 246], "multivari": [39, 100, 115, 116, 118, 169, 184, 185, 186, 200, 249, 267, 351, 356, 370, 376, 442, 447, 483, 495, 496], "multivoxel": [103, 118, 170, 222], "mumford": [103, 118, 170, 184, 186, 268, 286], "murat": [59, 118, 368], "must": [6, 11, 36, 74, 77, 96, 159, 162, 163, 170, 171, 173, 175, 177, 178, 179, 180, 187, 189, 191, 197, 239, 240, 242, 248, 270, 278, 293, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 317, 326, 333, 339, 340, 341, 344, 350, 356, 359, 361, 366, 367, 371, 372, 373, 374, 376, 378, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 427, 429, 432, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 448, 450, 452, 454, 459, 462, 463, 465, 466, 468, 469, 472, 473, 478, 494], "mutabl": [133, 162], "mutual": [134, 162, 309, 310, 371, 372, 373, 374, 375, 376, 377, 378], "mvpa": [30, 116, 184, 186, 223, 497], "mw": [118, 197], "mwrc1oas1_0001_mr1_mpr_an": 46, "mwrc1oas1_0001_mr1_mpr_anon_fslswapdim_bet": [45, 77], "mwrc1oas1_0002_mr1_mpr_an": 46, "mwrc1oas1_0003_mr1_mpr_an": 46, "mwrc1oas1_0004_mr1_mpr_an": 46, "mwrc1oas1_0005_mr1_mpr_an": 46, "mwrc1oas1_0007_mr1_mpr_an": 46, "mwrc1oas1_0009_mr1_mpr_an": 46, "mwrc1oas1_0010_mr1_mpr_an": 46, "mwrc1oas1_0012_mr1_mpr_an": 46, "mwrc1oas1_0013_mr1_mpr_an": 46, "mwrc1oas1_0015_mr1_mpr_an": 46, "mwrc1oas1_0016_mr1_mpr_an": 46, "mwrc1oas1_0019_mr1_mpr_an": 46, "mwrc1oas1_0022_mr1_mpr_an": 46, "mwrc1oas1_0023_mr1_mpr_an": 46, "mwrc1oas1_0025_mr1_mpr_an": 46, "mwrc1oas1_0026_mr1_mpr_an": 46, "mwrc1oas1_0029_mr1_mpr_an": 46, "mwrc1oas1_0031_mr1_mpr_an": 46, "mwrc1oas1_0032_mr1_mpr_an": 46, "mwrc1oas1_0037_mr1_mpr_an": 46, "mwrc1oas1_0038_mr1_mpr_an": 46, "mwrc1oas1_0039_mr1_mpr_an": 46, "mwrc1oas1_0041_mr1_mpr_an": 46, "mwrc1oas1_0042_mr1_mpr_an": 46, "mwrc1oas1_0044_mr1_mpr_an": 46, "mwrc1oas1_0045_mr1_mpr_an": 46, "mwrc1oas1_0049_mr1_mpr_an": 46, "mwrc1oas1_0050_mr1_mpr_an": 46, "mwrc1oas1_0052_mr1_mpr_an": 46, "mwrc1oas1_0053_mr1_mpr_an": 46, "mwrc1oas1_0054_mr1_mpr_an": 46, "mwrc1oas1_0055_mr1_mpr_an": 46, "mwrc1oas1_0056_mr1_mpr_an": 46, "mwrc1oas1_0059_mr1_mpr_an": 46, "mwrc1oas1_0060_mr1_mpr_an": 46, "mwrc1oas1_0061_mr1_mpr_an": 46, "mwrc1oas1_0064_mr1_mpr_an": 46, "mwrc1oas1_0065_mr1_mpr_an": 46, "mwrc1oas1_0067_mr1_mpr_an": 46, "mwrc1oas1_0069_mr1_mpr_an": 46, "mwrc1oas1_0070_mr1_mpr_an": 46, "mwrc1oas1_0071_mr1_mpr_an": 46, "mwrc1oas1_0072_mr1_mpr_an": 46, "mwrc1oas1_0078_mr1_mpr_an": 46, "mwrc1oas1_0079_mr1_mpr_an": 46, "mwrc1oas1_0080_mr1_mpr_an": 46, "mwrc1oas1_0082_mr1_mpr_an": 46, "mwrc1oas1_0086_mr1_mpr_an": 46, "mwrc1oas1_0090_mr1_mpr_an": 46, "mwrc1oas1_0091_mr1_mpr_an": 46, "mwrc1oas1_0094_mr1_mpr_an": 46, "mwrc1oas1_0096_mr1_mpr_an": 46, "mwrc1oas1_0098_mr1_mpr_an": 46, "mwrc1oas1_0099_mr1_mpr_an": 46, "mwrc1oas1_0101_mr1_mpr_an": 46, "mwrc1oas1_0103_mr1_mpr_an": 46, "mwrc1oas1_0104_mr1_mpr_an": 46, "mwrc1oas1_0106_mr1_mpr_an": 46, "mwrc1oas1_0111_mr1_mpr_an": 46, "mwrc1oas1_0113_mr1_mpr_an": 46, "mwrc1oas1_0114_mr1_mpr_an": 46, "mwrc1oas1_0115_mr1_mpr_an": 46, "mwrc1oas1_0117_mr1_mpr_an": 46, "mwrc1oas1_0119_mr1_mpr_an": 46, "mwrc1oas1_0120_mr1_mpr_an": 46, "mwrc1oas1_0121_mr1_mpr_an": 46, "mwrc1oas1_0123_mr1_mpr_an": 46, "mwrc1oas1_0124_mr1_mpr_an": 46, "mwrc1oas1_0126_mr1_mpr_an": 46, "mwrc1oas1_0131_mr1_mpr_an": 46, "mwrc1oas1_0135_mr1_mpr_an": 46, "mwrc1oas1_0136_mr1_mpr_an": 46, "mwrc1oas1_0138_mr1_mpr_an": 46, "mwrc1oas1_0144_mr1_mpr_an": 46, "mwrc1oas1_0145_mr1_mpr_an": 46, "mwrc1oas1_0146_mr1_mpr_an": 46, "mwrc1oas1_0148_mr1_mpr_an": 46, "mwrc1oas1_0150_mr1_mpr_an": 46, "mwrc1oas1_0155_mr1_mpr_an": 46, "mwrc1oas1_0159_mr1_mpr_an": 46, "mwrc1oas1_0160_mr1_mpr_an": 46, "mwrc1oas1_0162_mr1_mpr_an": 46, "mwrc1oas1_0163_mr1_mpr_an": 46, "mwrc1oas1_0164_mr1_mpr_an": 46, "mwrc1oas1_0165_mr1_mpr_an": 46, "mwrc1oas1_0167_mr1_mpr_an": 46, "mwrc1oas1_0169_mr1_mpr_an": 46, "mwrc1oas1_0173_mr1_mpr_an": 46, "mwrc1oas1_0174_mr1_mpr_an": 46, "mwrc1oas1_0176_mr1_mpr_an": 46, "mwrc1oas1_0177_mr1_mpr_an": 46, "mwrc1oas1_0178_mr1_mpr_an": 46, "mwrc1oas1_0180_mr1_mpr_an": 46, "mwrc1oas1_0181_mr1_mpr_an": 46, "mwrc1oas1_0182_mr1_mpr_an": 46, "mwrc1oas1_0184_mr1_mpr_an": 46, "mwrc1oas1_0188_mr1_mpr_an": 46, "mwrc1oas1_0189_mr1_mpr_an": 46, "mwrc1oas1_0190_mr1_mpr_an": 46, "mwrc1oas1_0193_mr1_mpr_an": 46, "mwrc1oas1_0199_mr1_mpr_an": 46, "mwrc1oas1_0200_mr1_mpr_an": 46, "mwrc1oas1_0202_mr1_mpr_an": 46, "mwrc1oas1_0203_mr1_mpr_an": 46, "mwrc1oas1_0204_mr1_mpr_an": 46, "mwrc1oas1_0205_mr1_mpr_an": 46, "mwrc1oas1_0207_mr1_mpr_an": 46, "mwrc1oas1_0208_mr1_mpr_an": 46, "mwrc1oas1_0209_mr1_mpr_an": 46, "mwrc1oas1_0211_mr1_mpr_an": 46, "mwrc1oas1_0212_mr1_mpr_an": 46, "mwrc1oas1_0214_mr1_mpr_an": 46, "mwrc1oas1_0216_mr1_mpr_an": 46, "mwrc1oas1_0217_mr1_mpr_an": 46, "mwrc1oas1_0218_mr1_mpr_an": 46, "mwrc1oas1_0220_mr1_mpr_an": 46, "mwrc1oas1_0223_mr1_mpr_an": 46, "mwrc1oas1_0226_mr1_mpr_an": 46, "mwrc1oas1_0227_mr1_mpr_an": 46, "mwrc2oas1_0001_mr1_mpr_anon_fslswapdim_bet": [45, 77], "my_funct": 187, "my_numb": 178, "myeong": [0, 157, 162], "mzayek": [0, 127, 128, 129, 130, 132, 159, 162], "n": [15, 23, 28, 41, 44, 45, 52, 53, 54, 59, 60, 61, 65, 71, 77, 79, 81, 82, 86, 93, 96, 102, 103, 105, 106, 107, 109, 110, 111, 112, 117, 118, 122, 123, 125, 126, 135, 137, 140, 162, 168, 171, 177, 178, 180, 198, 208, 216, 228, 248, 257, 264, 267, 268, 278, 286, 311, 312, 313, 317, 318, 319, 326, 335, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 438, 456, 459, 460, 468, 495], "n_add_reg": 333, "n_alpha": [240, 309, 310], "n_class": [304, 305, 306, 307, 309, 310], "n_classes_": 309, "n_clf": 44, "n_cluster": [52, 453, 455, 461], "n_clusters_": 455, "n_col": [326, 339, 341, 366, 430, 466], "n_column": [73, 180, 245], "n_compcor": [367, 368], "n_compon": [51, 53, 94, 107, 108, 168, 311, 312, 461], "n_cond": 96, "n_cond_img": 96, "n_condit": 101, "n_confound": [238, 350, 469], "n_covar": 390, "n_cut": [135, 162, 421], "n_descriptor": [341, 390], "n_detect": [45, 106, 109], "n_displai": 60, "n_elements_": [159, 162, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "n_epoch": [51, 312], "n_event": [327, 328, 333], "n_featur": [44, 50, 60, 133, 162, 177, 238, 239, 240, 242, 244, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 453, 455, 461], "n_features_new": [308, 311, 312, 453, 455], "n_features_to_select": 101, "n_fold": [3, 240, 304, 305, 306, 307, 309, 310], "n_frame": [327, 333], "n_init": [52, 311, 453], "n_iter": [52, 272, 295, 298, 454, 455, 461], "n_job": [3, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 56, 60, 61, 65, 77, 78, 79, 81, 82, 83, 101, 102, 103, 104, 106, 109, 111, 113, 173, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 329, 335, 339, 341, 356, 371, 372, 373, 385, 387, 390, 454, 480], "n_l1_ratio": [309, 310], "n_label": [41, 422], "n_left_vertic": 472, "n_map": 423, "n_marker": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "n_network": [11, 50, 88, 134, 162, 262], "n_node": [448, 451], "n_nonzero_coef": 44, "n_onset": [326, 333], "n_output": [304, 305, 308, 310, 311, 312, 453, 455], "n_outputs_": [304, 305, 306, 307], "n_paramet": [309, 310], "n_parcel": [23, 52, 454], "n_parcels_hemi": 23, "n_perm": [45, 79, 81, 106, 109, 341, 390], "n_point": 25, "n_refin": 240, "n_reg": 328, "n_region": [54, 93, 111, 378, 379], "n_regions_extract": [53, 168], "n_regressor": [6, 327, 335, 341, 390], "n_right_vertic": 472, "n_roi": 258, "n_run": 106, "n_sampl": [10, 47, 79, 83, 109, 110, 133, 162, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 344, 370, 376, 390, 453, 455, 461, 467, 468, 478], "n_samples_fit": [305, 310], "n_scan": [35, 64, 66, 180, 328], "n_sourc": 467, "n_split": [3, 36, 38, 39, 43, 47, 54, 102], "n_subject": [12, 24, 26, 42, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 77, 78, 79, 80, 81, 82, 83, 87, 91, 93, 94, 97, 102, 105, 108, 109, 110, 111, 137, 141, 162, 168, 177, 191, 238, 239, 240, 242, 246, 247, 267, 275, 276, 279, 285, 290, 300, 303], "n_t": 25, "n_time_point": [93, 94, 114, 334, 335, 472], "n_timepoint": [101, 111, 170, 173, 378, 379, 380, 472], "n_vertic": [7, 24, 39, 191, 443, 445, 446, 452, 470, 471, 472, 473, 475], "n_vertices_per_hemispher": [378, 379, 380], "n_volum": 58, "n_voxel": [6, 58, 79, 81, 94, 101, 170, 173, 180, 311, 314, 316, 318, 319, 322, 326, 334, 335, 456], "n_z": 25, "naffin": 93, "naiv": [111, 177], "namburi": [39, 118], "name": [2, 3, 4, 6, 10, 11, 13, 15, 22, 23, 24, 28, 32, 34, 47, 54, 59, 61, 65, 67, 70, 72, 73, 74, 77, 78, 79, 81, 82, 93, 96, 103, 104, 107, 113, 114, 120, 127, 129, 134, 139, 148, 150, 155, 157, 159, 162, 163, 167, 171, 175, 178, 179, 184, 186, 187, 188, 191, 193, 197, 198, 200, 207, 208, 228, 231, 237, 238, 239, 240, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 276, 281, 286, 287, 288, 289, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 326, 327, 328, 329, 333, 339, 341, 344, 355, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 459, 465, 466, 468, 480, 489, 497], "name_of_exampl": 163, "name_seed_region": 24, "named_step": [43, 47, 101], "namedtupl": 477, "nan": [21, 51, 53, 57, 59, 65, 93, 96, 105, 107, 125, 129, 137, 142, 150, 154, 162, 227, 344, 359, 372, 375, 381, 384, 437, 443, 445, 446, 450, 452, 468, 478, 480], "nanci": [118, 226], "nano": [118, 311], "nardo": [61, 118, 208, 264], "narend": [118, 197], "narr": [68, 83, 178], "narrai": [309, 310], "naselari": [118, 171], "nassir": [118, 164, 238], "natasha": [0, 127, 162], "nathan": 226, "nation": [0, 118, 175, 186, 197, 201, 232, 259, 308, 368], "nativ": [6, 63, 75, 116, 128, 143, 162, 179, 233, 234, 288, 326, 345, 353, 356, 359, 377, 434, 442, 447, 496], "natur": [51, 118, 121, 180, 184, 197, 206, 225, 267, 281, 283], "naturalist": [164, 165, 167, 168, 206], "naux_fil": 93, "navab": [118, 164, 238], "navi": 71, "navig": [147, 162], "naylor": [118, 206, 267], "nb": 50, "nbitpix": 93, "nbsp": [3, 38, 52, 55, 56, 61, 65, 77, 79], "nbviewer": [3, 38, 52, 55, 56, 61, 65, 77, 79], "nbyte": 111, "nc": 251, "ncal_max": 93, "ncal_min": 93, "ncbi": [51, 118, 169, 171, 209, 311], "nclass": [304, 305, 306, 307], "ncol": [32, 66, 81, 103, 104, 109, 114], "ncollect": 112, "ncomput": 112, "ncut": 204, "ndarrai": [111, 150, 162, 238, 239, 240, 241, 242, 243, 244, 245, 246, 260, 264, 266, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 322, 326, 339, 341, 344, 346, 349, 350, 356, 357, 359, 361, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 426, 430, 439, 443, 444, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478], "ndarray": 239, "ndata": 93, "ndata_typ": 93, "ndatatyp": 93, "ndb_name": 93, "ndescrip": 93, "ndim": [93, 389], "ndim_info": 93, "ndimag": [47, 96, 190, 272, 295, 298, 353, 382, 383, 384, 385, 386, 387], "ndownload": 20, "nearbi": 39, "nearest": [10, 41, 43, 44, 47, 52, 68, 77, 86, 111, 118, 132, 150, 159, 162, 184, 281, 358, 359, 360, 435, 436, 441, 442, 449, 455, 461, 465, 478], "nearest_most_frequ": [10, 134, 162, 478], "nearest_neighbor_group": [127, 162], "nearestneighbor": 39, "nearli": [196, 309, 310], "nebraska": 0, "necessari": [4, 65, 91, 94, 104, 113, 127, 150, 157, 162, 164, 167, 170, 178, 179, 187, 191, 198, 248, 281, 283, 290, 304, 305, 306, 307, 319, 326, 339, 376, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 480], "necessarili": [71, 168, 180, 193, 201, 237, 489], "necessit": 163, "necu": [144, 162], "need": [0, 2, 3, 5, 6, 7, 10, 17, 21, 32, 33, 35, 44, 45, 51, 52, 53, 54, 58, 65, 68, 70, 73, 77, 79, 81, 82, 83, 86, 91, 93, 94, 101, 102, 103, 104, 107, 108, 111, 113, 120, 121, 147, 150, 157, 162, 164, 168, 170, 171, 172, 173, 178, 180, 183, 184, 187, 189, 190, 191, 197, 245, 313, 316, 317, 361, 366, 367, 371, 372, 374, 386, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 454, 478, 494, 495], "neelai": [0, 157, 162], "neg": [10, 15, 17, 18, 45, 54, 61, 68, 79, 81, 82, 92, 98, 106, 110, 118, 130, 134, 154, 157, 162, 175, 180, 184, 197, 246, 305, 310, 341, 342, 359, 363, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 435, 436, 437, 440, 441, 442, 443, 445, 446, 456, 465, 478, 494], "neg_label": 41, "neg_log10_vfwe_pvals_img": 341, "neg_log_pv": [45, 79, 81, 106], "neg_log_pvals_anova": [109, 110], "neg_log_pvals_anova_unmask": [109, 110], "neg_log_pvals_bonferroni": 106, "neg_log_pvals_bonferroni_data": 106, "neg_log_pvals_bonferroni_unmask": 106, "neg_log_pvals_permuted_ols_unmask": [79, 109], "neg_log_pvals_tfce_unmask": 109, "neg_mean_absolute_error": [45, 305, 307], "neg_mean_squared_error": [305, 307], "negat": [55, 85, 99, 116, 301, 355, 442, 447, 496], "negative_edg": 61, "negative_stat_img": 92, "neglig": [177, 348], "neighbor": [10, 39, 52, 96, 150, 162, 185, 308, 435, 436, 441, 442, 449, 454, 455, 461, 478], "neighborhood": [134, 162, 167, 478], "neighbourhood": 478, "neither": [363, 472, 473], "nelson": [61, 118, 208, 229, 264, 265], "nepal": 0, "nest": [25, 31, 45, 153, 162, 173, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456, 478], "nested_cv_scor": 36, "nested_sample_point": 25, "net": [30, 47, 48, 116, 176, 285, 304, 305, 309, 310, 442, 447, 496], "netherland": 0, "netmat": [28, 137, 162], "neto": [118, 201, 250], "network": [2, 9, 20, 21, 22, 29, 49, 50, 51, 54, 57, 58, 63, 74, 75, 85, 88, 96, 99, 104, 116, 118, 121, 132, 139, 153, 159, 162, 163, 164, 165, 166, 168, 178, 179, 184, 185, 186, 191, 193, 196, 200, 201, 203, 208, 227, 229, 230, 231, 232, 236, 246, 247, 249, 250, 256, 258, 259, 262, 264, 265, 266, 276, 278, 326, 333, 351, 367, 368, 370, 372, 375, 377, 403, 424, 438, 439, 440, 442, 447, 456, 464, 479, 480, 494, 496, 497], "network3": 89, "networks_197": 20, "networks_444": 20, "networks_64": 20, "neural": [69, 118, 164, 169, 180, 184, 186, 191, 203, 217, 239, 268, 286, 308], "neuro": [26, 118, 169, 184, 304, 362], "neuroanatomi": 191, "neurobiolog": 184, "neurogram": 0, "neuroimag": [0, 2, 7, 9, 23, 26, 29, 39, 51, 54, 59, 65, 78, 96, 102, 103, 104, 106, 116, 118, 119, 121, 147, 150, 162, 164, 165, 169, 170, 172, 174, 175, 176, 178, 184, 185, 188, 193, 198, 201, 203, 205, 207, 216, 218, 224, 225, 231, 248, 250, 252, 253, 256, 260, 266, 270, 276, 281, 283, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 341, 344, 345, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 427, 428, 433, 435, 436, 437, 440, 441, 442, 447, 449, 450, 454, 456, 459, 460, 462, 463, 466, 469, 478, 484, 494, 496, 497], "neuroinformat": [118, 121, 207, 225, 227, 281, 283], "neurolog": [107, 180, 184, 198, 201, 248], "neurologi": [0, 233], "neuromap": 178, "neuron": [26, 43, 44, 61, 118, 175, 223, 229, 265, 280], "neuroparc": 178, "neurophysiologi": [118, 230, 236, 258, 262], "neuropsychiatr": [268, 286], "neuropsychologia": [118, 222], "neuroradiologi": [26, 118], "neurosci": [0, 26, 52, 68, 74, 118, 167, 175, 184, 186, 196, 197, 200, 203, 226, 227, 232, 246, 249, 259, 276, 497], "neurospin": [0, 63, 67, 75, 116, 178, 179, 221, 434, 447, 496], "neurostar": [178, 186, 187], "neurosynth": [103, 107, 119, 225, 281, 283, 497], "neurosynth_spectral_01": 107, "neurosynth_spectral_01_1": 107, "neurosynth_words_for_image_": 107, "neurosynth_words_for_image_11": 107, "neurovault": [90, 100, 115, 116, 118, 119, 134, 143, 150, 155, 159, 162, 184, 193, 281, 282, 283, 284, 294, 301, 349, 354, 355, 357, 361, 370, 376, 435, 442, 447, 496, 497], "never": [36, 170, 177, 186, 359, 360], "nevertheless": [156, 162], "new": [0, 2, 3, 16, 19, 21, 22, 32, 38, 41, 43, 44, 45, 46, 51, 53, 68, 73, 74, 77, 81, 86, 88, 89, 90, 96, 101, 106, 107, 110, 112, 118, 120, 126, 132, 134, 141, 142, 143, 144, 145, 158, 163, 170, 171, 172, 173, 178, 184, 186, 190, 191, 233, 238, 240, 281, 283, 304, 305, 306, 307, 308, 309, 310, 311, 312, 318, 319, 326, 339, 353, 356, 357, 358, 359, 363, 368, 373, 376, 382, 384, 385, 387, 390, 425, 426, 427, 428, 429, 430, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 454, 457, 464, 494, 495], "new_img_lik": [12, 38, 50, 96, 105, 111, 112, 129, 134, 150, 159, 162, 190], "new_label": 457, "new_labels_img": 457, "new_titl": 109, "newaxi": [43, 47, 82, 86], "newberg": [0, 134, 162], "newer": [169, 281, 283], "newest": [158, 162, 281], "newli": [163, 439], "newseg": [45, 77], "newton": 177, "next": [15, 57, 58, 61, 66, 67, 68, 70, 71, 73, 77, 80, 81, 82, 83, 145, 148, 157, 162, 165, 176, 177, 178, 180, 187, 479, 480], "nextent": 93, "nglmax": 93, "nglmin": 93, "nguyen": [0, 150, 153, 155, 162], "niak": [201, 246], "nian": [118, 230, 258], "nib": 65, "nibabel": [4, 26, 33, 35, 38, 42, 46, 47, 50, 52, 53, 59, 65, 77, 83, 86, 93, 105, 127, 128, 130, 132, 141, 142, 144, 150, 155, 157, 159, 162, 177, 178, 189, 190, 311, 312, 346, 347, 354, 359, 360, 361, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 454, 456, 457, 458, 462, 463], "nice": [53, 168], "nicer": 24, "nichol": [106, 118, 121, 164, 184, 186, 197, 225, 281, 283, 341, 384, 390, 425], "nichola": [118, 196, 216, 246], "nickerson": [118, 235, 261], "nico": [61, 118, 208, 231, 264, 266], "nicola": [0, 118, 130, 154, 155, 156, 157, 158, 159, 162, 197, 232, 259], "niconnect": 0, "nielsen": [118, 196, 246], "nifitmask": 367, "nifti": [2, 4, 10, 12, 17, 19, 27, 31, 32, 34, 36, 37, 38, 43, 44, 50, 51, 52, 55, 56, 57, 59, 61, 79, 81, 86, 88, 91, 93, 94, 96, 97, 106, 108, 109, 113, 120, 130, 131, 132, 133, 134, 135, 153, 159, 162, 165, 169, 170, 178, 188, 198, 199, 203, 206, 207, 209, 216, 217, 219, 223, 224, 225, 227, 228, 230, 235, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 267, 269, 270, 274, 275, 276, 279, 280, 285, 304, 305, 308, 309, 310, 311, 312, 346, 349, 353, 354, 359, 362, 454, 455, 457, 478, 485, 494], "nifti1": [4, 33, 35, 38, 42, 46, 52, 53, 59, 65, 77, 83, 93, 105, 150, 162, 361, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 454, 456, 457, 458, 462, 463], "nifti1head": [59, 93, 105, 355], "nifti1imag": [4, 26, 33, 35, 38, 42, 43, 46, 47, 52, 53, 59, 65, 77, 83, 86, 93, 142, 143, 145, 150, 162, 168, 189, 252, 254, 255, 257, 258, 261, 262, 272, 279, 294, 295, 296, 297, 298, 299, 304, 305, 306, 307, 311, 312, 321, 323, 326, 339, 341, 342, 343, 345, 347, 351, 352, 354, 355, 356, 359, 360, 361, 362, 363, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 401, 406, 408, 412, 418, 422, 423, 424, 454, 456, 457, 458, 462, 463], "nifti2imag": [145, 162], "nifti_labels_mask": [52, 59], "nifti_maps_mask": [50, 55, 56], "nifti_maps_masker_": [311, 312, 454], "nifti_mask": [37, 38, 45, 94, 106, 109, 110, 111, 120, 178], "nifti_masker_parallel_inmemori": 111, "nifti_masker_parallel_path": 111, "nifti_masker_singl": 111, "nifti_spheres_mask": 61, "niftiimag": [3, 134, 162, 165, 178, 179, 189, 190], "niftilabelsmask": [57, 59, 85, 96, 99, 116, 129, 132, 134, 147, 148, 150, 153, 154, 155, 157, 159, 162, 165, 188, 254, 267, 370, 371, 372, 375, 459, 462, 464, 480, 496, 497], "niftilablesmask": 93, "niftimapsmask": [54, 55, 56, 57, 93, 102, 124, 129, 134, 147, 154, 157, 160, 162, 165, 188, 371, 372, 374, 456, 460, 463, 480, 497], "niftimask": [12, 31, 34, 36, 37, 38, 41, 43, 44, 45, 50, 54, 55, 56, 57, 58, 59, 61, 64, 65, 71, 77, 85, 93, 96, 99, 101, 102, 103, 106, 107, 108, 109, 110, 116, 120, 128, 132, 134, 147, 150, 153, 154, 155, 156, 157, 162, 170, 173, 188, 267, 280, 304, 305, 306, 307, 309, 310, 311, 312, 323, 326, 339, 341, 351, 356, 367, 368, 370, 371, 372, 374, 375, 377, 384, 390, 425, 426, 433, 441, 442, 447, 454, 464, 480, 485, 496, 497], "niftispheresmask": [58, 61, 64, 71, 103, 126, 130, 131, 134, 135, 137, 148, 152, 154, 162, 179, 188, 480, 497], "nightli": 163, "nih": [51, 118, 169, 171, 209, 311], "nii": [2, 3, 4, 6, 11, 12, 15, 17, 19, 22, 27, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 65, 73, 77, 79, 87, 88, 91, 93, 94, 96, 97, 104, 106, 107, 108, 109, 111, 112, 113, 120, 186, 189, 201, 207, 329, 364, 366, 367, 368, 404, 443, 452, 476, 480], "nii_asym": 201, "nii_sym": 201, "niimg": [1, 8, 35, 57, 61, 91, 93, 94, 101, 116, 120, 128, 129, 130, 134, 144, 147, 150, 155, 159, 162, 167, 186, 188, 190, 191, 259, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 326, 329, 339, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 426, 427, 428, 433, 435, 436, 437, 440, 441, 442, 447, 449, 450, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 468, 474, 478, 480, 482, 496], "niimg_convers": [130, 162], "niimng": 326, "nijmegen": 0, "nikhil": [0, 130, 162], "niko": [118, 205, 216, 252], "nikolaidi": [147, 162], "nikolau": [118, 175, 186, 308], "nilearn": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 479, 480, 483, 489, 494, 496, 497], "nilearn_cach": [35, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 94, 101, 102, 103, 106, 107, 108, 109, 110, 168, 480], "nilearn_cmap": 13, "nilearn_data": [2, 3, 4, 6, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 67, 68, 70, 71, 72, 73, 77, 78, 79, 81, 82, 83, 87, 88, 89, 90, 91, 93, 94, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 480], "nilearn_glm": [65, 77], "nilearn_shared_data": [189, 291], "nili": [118, 228, 257], "nimag": 111, "nimg": [118, 198, 205, 248], "nintent_cod": 93, "nintent_nam": 93, "nintent_p1": 93, "nintent_p2": 93, "nintent_p3": 93, "nipi": [159, 162, 178, 185, 209], "niprep": 368, "nipyp": 180, "nishimoto": [118, 171], "nistat": [127, 136, 153, 162], "nistats_migr": [127, 162], "nitrc": [3, 10, 11, 28, 42, 105, 111, 199, 204, 226, 247, 251, 259], "nki": [24, 114, 118, 132, 142, 162, 193, 290, 300], "nki_enhanced_surfac": [24, 114], "nki_nilearn": 226, "nlm": [51, 118, 169, 171, 209, 311], "nmagic": 93, "nmetadata": 93, "nmr": [236, 262], "nn": 39, "nnn": 201, "nodal": [153, 162, 438, 494], "node": [21, 24, 25, 26, 61, 113, 148, 150, 153, 155, 162, 165, 191, 197, 246, 257, 289, 292, 293, 300, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 437, 438, 448, 450, 451, 478, 494], "node_cmap": [61, 438], "node_color": [145, 155, 162, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 448], "node_coord": [23, 148, 150, 162, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 438, 448], "node_kwarg": [395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 438], "node_s": [61, 148, 150, 157, 162, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 438, 448], "node_strength": 61, "node_strength_neg": 61, "node_strength_posit": 61, "node_threshold": 438, "node_valu": 438, "node_vmax": 438, "node_vmin": 438, "nois": [3, 6, 35, 36, 47, 59, 64, 70, 71, 73, 96, 97, 103, 107, 113, 118, 127, 155, 162, 165, 171, 173, 177, 180, 184, 191, 316, 318, 319, 333, 367, 368, 428, 440, 441, 469, 479], "noise_coef": 47, "noise_model": [6, 26, 35, 64, 68, 70, 73, 113, 326, 329, 335, 479], "noisi": [45, 94, 164], "noisier": [435, 436, 441, 442, 449], "nomenclatur": [23, 118, 205, 260], "nomin": 53, "non": [15, 16, 26, 42, 45, 53, 59, 67, 68, 69, 79, 81, 93, 96, 106, 107, 119, 130, 131, 134, 143, 147, 150, 154, 155, 157, 158, 162, 164, 168, 169, 175, 176, 177, 178, 183, 184, 186, 191, 196, 199, 201, 203, 204, 206, 207, 218, 224, 227, 251, 278, 304, 305, 306, 307, 311, 316, 318, 319, 326, 344, 348, 353, 359, 361, 363, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 427, 435, 436, 437, 440, 441, 442, 443, 445, 446, 450, 452, 456, 462, 468, 480, 494], "non_parametric_infer": [79, 81, 127, 128, 134, 157, 159, 162, 183], "non_rest": 37, "non_steady_st": 367, "nondement": [118, 227], "none": [3, 7, 10, 15, 16, 23, 24, 34, 35, 38, 39, 43, 47, 52, 55, 56, 57, 59, 61, 65, 68, 69, 70, 72, 77, 79, 81, 91, 93, 94, 96, 97, 103, 105, 107, 112, 113, 114, 121, 128, 132, 134, 137, 147, 150, 154, 159, 162, 178, 191, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 328, 329, 333, 335, 339, 340, 341, 342, 343, 344, 345, 350, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 472, 473, 474, 478, 479, 480, 494], "nonlinear": [118, 201, 218], "nonparametr": 81, "nonpres": 191, "nonstochast": [118, 390], "nonzero": [26, 53, 361, 456], "nooner": [118, 226], "noplot": 178, "nor": [191, 363], "noreport": 178, "norihiro": [43, 44, 118, 223, 280], "norm": [47, 56, 58, 65, 78, 81, 104, 112, 238, 244, 304, 305, 306, 307, 309, 310, 311, 312, 326, 428, 453, 454, 455, 456], "norm_nois": 47, "norm_resid": [159, 162], "normal": [6, 25, 33, 39, 47, 58, 61, 70, 71, 104, 108, 113, 120, 130, 137, 162, 170, 177, 178, 179, 180, 184, 198, 218, 220, 227, 239, 242, 248, 274, 285, 318, 319, 361, 478], "normalized_cov_beta": 317, "normalized_residu": [318, 319], "northwestern": 0, "nose": [150, 162], "notabl": [52, 165, 219], "notat": [154, 157, 162, 182, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 435, 436, 437, 441, 442, 443, 445, 446], "notcontain": [121, 281], "note": [2, 3, 4, 6, 15, 16, 21, 24, 41, 45, 46, 47, 51, 52, 55, 57, 58, 59, 61, 67, 68, 71, 73, 77, 78, 81, 86, 88, 91, 93, 94, 96, 97, 104, 106, 108, 111, 113, 118, 120, 121, 128, 134, 157, 162, 163, 164, 165, 169, 175, 176, 177, 178, 179, 180, 182, 187, 189, 190, 191, 201, 238, 239, 240, 245, 246, 248, 249, 250, 253, 258, 259, 262, 267, 269, 270, 271, 272, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 326, 339, 342, 344, 350, 353, 355, 356, 359, 362, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 386, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 427, 428, 433, 435, 441, 442, 453, 454, 455, 456, 457, 468, 469, 478, 480, 494], "notebook": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 135, 147, 150, 162, 170, 186, 191, 326, 339, 368, 448, 449, 450, 451, 452, 464, 466, 494], "notequ": [121, 281], "noteworthi": [148, 162, 171], "noth": [4, 175, 315, 317, 320, 339, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 436, 437, 440, 441, 442, 449], "notic": [6, 52, 61, 68, 104, 113, 364], "notin": [121, 281], "notion": [170, 175, 365, 438], "notnul": [121, 281], "notter": [0, 147, 162], "nov": [61, 118, 229, 265], "nova": 0, "novel": 231, "novemb": [78, 118, 132, 144, 147, 150, 153, 162, 321], "now": [2, 3, 4, 6, 7, 15, 16, 17, 21, 23, 27, 31, 41, 43, 47, 52, 53, 54, 58, 59, 65, 66, 67, 68, 70, 72, 74, 81, 83, 86, 88, 94, 95, 96, 98, 103, 104, 105, 107, 108, 111, 113, 114, 120, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 170, 176, 178, 187, 190, 304, 305, 306, 307, 311, 312, 313, 316, 317, 318, 319, 343, 351, 355, 368, 371, 373, 374, 376, 454], "np": [5, 6, 7, 10, 12, 13, 15, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 72, 73, 77, 79, 81, 82, 86, 87, 89, 91, 96, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 132, 159, 162, 168, 178, 189, 190, 238, 311, 312, 315, 316, 317, 318, 319, 320, 341, 345, 355, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 453, 454, 455, 456, 472], "npixdim": 93, "nplot": 112, "nqform_cod": 93, "nqoffset_i": 93, "nqoffset_x": 93, "nqoffset_z": 93, "nquatern_b": 93, "nquatern_c": 93, "nquatern_d": 93, "nr": 177, "nregular": 93, "nreshap": 107, "nrg": 227, "nrow": [13, 52, 66, 81, 103, 104, 114], "nscl_inter": 93, "nscl_slope": 93, "nsession_error": 93, "nsform_cod": 93, "nsharedmemori": 111, "nsizeof_hdr": 93, "nslice_cod": 93, "nslice_dur": 93, "nslice_end": 93, "nslice_start": 93, "nsrow_i": 93, "nsrow_x": 93, "nsrow_z": 93, "ntoffset": 93, "ntop": 107, "nuclei": [118, 228, 257], "nuisanc": [171, 184, 199, 201, 206, 247, 313, 316, 317, 318, 368, 468], "null": [66, 74, 81, 158, 162, 170, 175, 180, 184, 314, 341, 390], "null_cv_scor": 101, "null_duration_tri": 74, "number": [3, 10, 13, 31, 33, 35, 36, 41, 42, 45, 52, 53, 56, 57, 58, 61, 67, 68, 70, 73, 74, 79, 81, 88, 91, 94, 96, 101, 103, 107, 108, 109, 111, 113, 121, 130, 131, 134, 135, 147, 150, 153, 154, 155, 157, 162, 164, 167, 168, 170, 171, 172, 175, 178, 180, 184, 186, 187, 191, 193, 197, 198, 201, 204, 228, 230, 236, 237, 238, 239, 240, 242, 246, 247, 250, 253, 254, 255, 258, 259, 261, 267, 270, 272, 275, 276, 279, 281, 285, 290, 295, 298, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 322, 326, 335, 339, 341, 342, 344, 345, 346, 348, 350, 355, 356, 363, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 387, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 424, 425, 427, 428, 429, 430, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 465, 466, 467, 468, 469, 471, 473, 475, 480, 489, 494], "number_of_scan": 350, "number_of_subject": 112, "numer": [1, 8, 31, 35, 37, 60, 116, 154, 162, 178, 179, 191, 242, 314, 316, 318, 319, 327, 440, 441, 467, 496], "numpi": [3, 5, 6, 7, 10, 12, 13, 15, 17, 21, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 72, 73, 77, 79, 81, 82, 86, 89, 91, 96, 101, 103, 104, 106, 107, 108, 109, 110, 114, 125, 127, 129, 130, 131, 132, 133, 134, 138, 142, 144, 147, 150, 153, 155, 157, 160, 162, 167, 168, 170, 177, 178, 187, 189, 190, 238, 239, 240, 241, 242, 243, 244, 245, 246, 260, 264, 266, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 322, 326, 328, 333, 335, 339, 341, 344, 345, 346, 349, 350, 351, 355, 356, 357, 359, 361, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 389, 390, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 407, 409, 411, 413, 415, 417, 422, 423, 426, 427, 429, 430, 433, 435, 438, 439, 442, 443, 444, 445, 446, 448, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478], "numpy_convers": [137, 162], "numpy_mask": 111, "numpy_masker_parallel": 111, "numpy_masker_shar": 111, "numpy_masker_shared_parallel": 111, "numpy_masker_singl": 111, "numpydoc": 178, "nunzio": [118, 226], "nutshel": 6, "nv_data": [107, 112], "nvox_offset": 93, "nwith": 111, "nxyzt_unit": 93, "ny": [118, 318, 319], "nyu": [118, 129, 162, 313, 317], "n\u00e1jera": [0, 122, 125, 135, 137, 162], "o": [26, 61, 103, 118, 137, 162, 163, 170, 178, 197, 198, 216, 229, 230, 246, 248, 258, 265, 367], "oas1_0001_mr1": [45, 46, 77], "oas1_0002_mr1": 46, "oas1_0003_mr1": 46, "oas1_0004_mr1": 46, "oas1_0005_mr1": 46, "oas1_0007_mr1": 46, "oas1_0009_mr1": 46, "oas1_0010_mr1": 46, "oas1_0012_mr1": 46, "oas1_0013_mr1": 46, "oas1_0015_mr1": 46, "oas1_0016_mr1": 46, "oas1_0019_mr1": 46, "oas1_0022_mr1": 46, "oas1_0023_mr1": 46, "oas1_0025_mr1": 46, "oas1_0026_mr1": 46, "oas1_0029_mr1": 46, "oas1_0031_mr1": 46, "oas1_0032_mr1": 46, "oas1_0037_mr1": 46, "oas1_0038_mr1": 46, "oas1_0039_mr1": 46, "oas1_0041_mr1": 46, "oas1_0042_mr1": 46, "oas1_0044_mr1": 46, "oas1_0045_mr1": 46, "oas1_0049_mr1": 46, "oas1_0050_mr1": 46, "oas1_0052_mr1": 46, "oas1_0053_mr1": 46, "oas1_0054_mr1": 46, "oas1_0055_mr1": 46, "oas1_0056_mr1": 46, "oas1_0059_mr1": 46, "oas1_0060_mr1": 46, "oas1_0061_mr1": 46, "oas1_0064_mr1": 46, "oas1_0065_mr1": 46, "oas1_0067_mr1": 46, "oas1_0069_mr1": 46, "oas1_0070_mr1": 46, "oas1_0071_mr1": 46, "oas1_0072_mr1": 46, "oas1_0078_mr1": 46, "oas1_0079_mr1": 46, "oas1_0080_mr1": 46, "oas1_0082_mr1": 46, "oas1_0086_mr1": 46, "oas1_0090_mr1": 46, "oas1_0091_mr1": 46, "oas1_0094_mr1": 46, "oas1_0096_mr1": 46, "oas1_0098_mr1": 46, "oas1_0099_mr1": 46, "oas1_0101_mr1": 46, "oas1_0103_mr1": 46, "oas1_0104_mr1": 46, "oas1_0106_mr1": 46, "oas1_0111_mr1": 46, "oas1_0113_mr1": 46, "oas1_0114_mr1": 46, "oas1_0115_mr1": 46, "oas1_0117_mr1": 46, "oas1_0119_mr1": 46, "oas1_0120_mr1": 46, "oas1_0121_mr1": 46, "oas1_0123_mr1": 46, "oas1_0124_mr1": 46, "oas1_0126_mr1": 46, "oas1_0131_mr1": 46, "oas1_0135_mr1": 46, "oas1_0136_mr1": 46, "oas1_0138_mr1": 46, "oas1_0144_mr1": 46, "oas1_0145_mr1": 46, "oas1_0146_mr1": 46, "oas1_0148_mr1": 46, "oas1_0150_mr1": 46, "oas1_0155_mr1": 46, "oas1_0159_mr1": 46, "oas1_0160_mr1": 46, "oas1_0162_mr1": 46, "oas1_0163_mr1": 46, "oas1_0164_mr1": 46, "oas1_0165_mr1": 46, "oas1_0167_mr1": 46, "oas1_0169_mr1": 46, "oas1_0173_mr1": 46, "oas1_0174_mr1": 46, "oas1_0176_mr1": 46, "oas1_0177_mr1": 46, "oas1_0178_mr1": 46, "oas1_0180_mr1": 46, "oas1_0181_mr1": 46, "oas1_0182_mr1": 46, "oas1_0184_mr1": 46, "oas1_0188_mr1": 46, "oas1_0189_mr1": 46, "oas1_0190_mr1": 46, "oas1_0193_mr1": 46, "oas1_0199_mr1": 46, "oas1_0200_mr1": 46, "oas1_0202_mr1": 46, "oas1_0203_mr1": 46, "oas1_0204_mr1": 46, "oas1_0205_mr1": 46, "oas1_0207_mr1": 46, "oas1_0208_mr1": 46, "oas1_0209_mr1": 46, "oas1_0211_mr1": 46, "oas1_0212_mr1": 46, "oas1_0214_mr1": 46, "oas1_0216_mr1": 46, "oas1_0217_mr1": 46, "oas1_0218_mr1": 46, "oas1_0220_mr1": 46, "oas1_0223_mr1": 46, "oas1_0226_mr1": 46, "oas1_0227_mr1": 46, "oasi": [30, 48, 76, 84, 116, 118, 176, 183, 185, 193, 271, 272, 285, 305, 310, 339, 342, 349, 360, 366, 370, 376, 390, 418, 431, 442, 447, 464, 479, 496], "oasis1": [45, 46, 77], "oasis_dataset": [45, 77], "oasisbrain": [227, 285], "obei": [126, 162], "obj": [178, 427, 428, 433, 435, 436, 437, 440, 441, 442, 443, 445, 446, 480], "object": [2, 3, 4, 5, 6, 7, 10, 11, 14, 15, 17, 18, 23, 24, 27, 30, 32, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 70, 71, 73, 77, 83, 90, 91, 93, 94, 96, 98, 101, 105, 111, 113, 116, 118, 120, 121, 128, 129, 132, 133, 134, 139, 142, 150, 153, 156, 157, 159, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 177, 179, 184, 185, 186, 188, 190, 217, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 321, 326, 329, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 472, 474, 477, 478, 480, 482, 485, 488, 494, 496, 497], "observ": [26, 42, 47, 61, 64, 66, 68, 72, 81, 82, 83, 106, 171, 175, 179, 180, 184, 186, 191, 317, 425, 453], "observed_timeseri": 179, "obtain": [6, 16, 23, 45, 46, 52, 57, 61, 66, 68, 70, 77, 79, 93, 96, 106, 109, 113, 134, 157, 162, 163, 164, 165, 167, 169, 170, 172, 175, 177, 180, 184, 191, 197, 203, 208, 229, 240, 249, 251, 259, 271, 276, 294, 295, 298, 303, 309, 310, 343, 348, 359, 363, 372, 374, 375, 377, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 434, 435, 436, 437, 441, 442, 443, 445, 446, 456, 480], "obviou": 68, "obvious": 70, "occ": 54, "occasion": 163, "occipit": [61, 93], "occur": [69, 135, 162, 180, 184, 246, 495], "occurr": [37, 38, 43, 44, 45, 50, 54, 55, 56, 57, 58, 59, 61, 64, 71, 91, 93, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 120, 133, 162, 175], "octav": 201, "octob": [118, 147, 150, 162, 201], "odc": 220, "odd": 467, "off": [13, 15, 40, 43, 44, 68, 74, 119, 127, 140, 162, 177, 178, 201, 204, 306, 307, 382, 383, 384, 385, 386, 387, 440, 441, 442, 449, 466], "offer": [169, 179, 181, 494], "offici": 495, "offlin": [281, 283, 497], "offset": [43, 54, 86, 107, 153, 162, 190, 359], "often": [12, 32, 34, 37, 38, 50, 51, 88, 96, 120, 169, 170, 171, 175, 180, 184, 186, 189, 190, 191, 246, 316, 318, 319], "oftentim": 186, "ohbm": [118, 146, 162, 197], "ok": 186, "okito": [43, 44, 118, 223, 280], "ol": [109, 316, 318, 319, 326, 335, 390, 487], "old": [129, 150, 156, 157, 162, 163], "oldenburg": 0, "older": [37, 38, 43, 44, 45, 50, 51, 54, 55, 56, 57, 58, 59, 61, 64, 71, 91, 93, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 118, 120, 142, 143, 144, 145, 162, 178, 189, 227, 346], "oldest": [178, 187], "olfact": 480, "oliv": [0, 71, 118, 129, 162, 175, 201, 250], "oliveira": [118, 186], "olivi": [0, 144, 162], "ols_output": 109, "olsmodel": [159, 162, 316, 318, 319], "omit": 432, "on_fslswapdim_bet": 46, "onc": [4, 38, 41, 52, 60, 73, 111, 121, 157, 162, 163, 164, 169, 170, 177, 179, 180, 183, 184, 187, 191, 453, 478], "one": [3, 4, 6, 7, 10, 15, 16, 17, 21, 25, 31, 32, 33, 35, 37, 38, 39, 41, 43, 47, 50, 51, 52, 58, 59, 60, 61, 66, 68, 70, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 88, 93, 94, 96, 103, 104, 105, 107, 109, 111, 113, 116, 120, 121, 127, 128, 130, 132, 134, 139, 141, 144, 153, 155, 156, 157, 162, 163, 164, 165, 168, 169, 170, 171, 175, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 191, 201, 220, 238, 240, 246, 250, 251, 259, 266, 272, 276, 279, 289, 292, 293, 300, 304, 305, 306, 307, 309, 311, 312, 314, 326, 328, 329, 333, 335, 339, 340, 341, 344, 345, 346, 348, 349, 351, 355, 359, 364, 371, 373, 374, 376, 378, 380, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 429, 430, 435, 436, 437, 438, 439, 440, 442, 444, 445, 447, 449, 450, 454, 458, 459, 465, 468, 478, 495, 496], "one_mesh_info": [129, 162], "one_minus_pvalu": [154, 162, 314], "ones": [11, 13, 22, 35, 41, 47, 66, 68, 77, 81, 83, 103, 107, 109, 110, 128, 162, 172, 173, 175, 177, 184, 309, 310, 333, 368, 390, 453, 472], "ones_lik": 79, "onevsoneclassifi": [37, 171], "onevsrestclassifi": [37, 171], "ongo": 178, "onli": [2, 3, 6, 14, 15, 17, 20, 24, 26, 31, 33, 35, 36, 38, 39, 41, 43, 45, 46, 50, 52, 54, 55, 57, 58, 61, 68, 70, 72, 77, 81, 83, 86, 88, 93, 96, 98, 101, 102, 103, 104, 105, 107, 108, 111, 113, 114, 120, 121, 128, 131, 132, 133, 134, 140, 145, 150, 155, 157, 158, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 175, 177, 178, 180, 183, 184, 187, 188, 189, 190, 227, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 494], "onlin": [51, 118, 169, 178, 204, 312, 495], "onset": [6, 35, 66, 67, 68, 69, 70, 74, 103, 113, 129, 153, 162, 179, 234, 288, 326, 327, 328, 330, 331, 332, 333, 336, 337, 338, 434], "ontario": 0, "onto": [10, 17, 43, 53, 70, 142, 162, 168, 178, 185, 189, 383, 386, 431, 440, 494], "onward": [132, 162, 257], "opac": [26, 449], "opaqu": [72, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442, 449], "open": [17, 23, 55, 57, 61, 91, 93, 94, 101, 118, 127, 162, 163, 177, 178, 184, 185, 186, 188, 193, 196, 197, 207, 227, 267, 278, 314, 326, 339, 382, 383, 384, 385, 386, 387, 448, 449, 450, 451, 452, 455, 464, 466, 494, 495, 497], "open_in_brows": [10, 17, 23, 35, 55, 57, 61, 64, 70, 73, 93, 94, 104, 113, 130, 147, 162, 191, 448, 449, 450, 451, 452, 464, 466, 494], "openfmri": 207, "openli": 227, "openneuro": [63, 75, 116, 179, 206, 222, 234, 267, 268, 286, 303, 326, 329, 366, 369, 376, 430, 435, 447, 465, 479, 496], "oper": [41, 88, 91, 93, 96, 105, 108, 111, 120, 155, 162, 163, 170, 177, 178, 180, 184, 188, 189, 191, 238, 239, 272, 303, 326, 339, 341, 353, 355, 356, 382, 383, 384, 385, 386, 387, 430, 482, 483, 486, 497], "opercular": [61, 93, 480], "operculari": 93, "operto": [147, 162], "opinion": 178, "opportun": 52, "oppos": [6, 7, 83, 190, 191], "opposit": [47, 72, 175], "opt": 163, "optim": [56, 60, 103, 118, 150, 154, 162, 171, 173, 176, 177, 207, 240, 242, 253, 359, 360], "optimist": [36, 170], "optimum": 177, "option": [9, 10, 14, 16, 22, 24, 29, 45, 54, 59, 69, 74, 91, 106, 116, 120, 125, 127, 128, 129, 130, 132, 140, 142, 143, 144, 145, 150, 153, 154, 155, 156, 157, 159, 162, 163, 165, 170, 172, 178, 179, 184, 187, 189, 191, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 323, 326, 333, 339, 341, 342, 344, 357, 361, 363, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 466, 468, 469, 478, 494, 496], "orang": 494, "orbit": [93, 480], "orcid": 178, "order": [0, 2, 3, 6, 16, 17, 24, 31, 32, 34, 37, 38, 43, 44, 45, 52, 57, 59, 72, 73, 81, 82, 93, 103, 106, 111, 112, 120, 127, 132, 141, 147, 150, 155, 157, 162, 169, 175, 177, 178, 179, 184, 185, 186, 187, 189, 190, 191, 242, 264, 266, 274, 275, 294, 295, 298, 313, 317, 326, 333, 335, 339, 340, 341, 344, 346, 348, 353, 354, 358, 359, 360, 371, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 427, 433, 435, 436, 437, 441, 442, 449, 456, 457, 459, 462, 467, 468, 478, 494, 495], "ordered_region": [264, 266], "ordinari": [68, 106, 109, 317, 390], "orfano": [0, 118, 127, 135, 147, 162, 178, 203, 276], "org": [0, 3, 4, 10, 11, 13, 19, 28, 36, 38, 40, 42, 52, 55, 56, 59, 61, 65, 77, 79, 105, 107, 111, 112, 118, 121, 178, 180, 186, 187, 196, 197, 199, 200, 204, 206, 209, 217, 222, 225, 226, 235, 247, 249, 251, 261, 267, 270, 278, 281, 282, 283, 284, 301, 304, 305, 306, 307, 368, 451], "organ": [6, 7, 41, 61, 118, 137, 150, 156, 158, 162, 178, 184, 186, 201, 229, 230, 231, 236, 258, 262, 265, 341, 368, 390, 406, 477, 495], "orient": [10, 150, 153, 162, 177, 178, 358], "orig": [443, 444, 445, 446, 452, 477, 478], "origami": 0, "origin": [0, 6, 33, 35, 38, 41, 42, 43, 44, 46, 52, 53, 68, 71, 73, 86, 91, 95, 103, 128, 132, 141, 154, 156, 157, 162, 167, 175, 177, 187, 191, 201, 206, 218, 219, 227, 238, 239, 240, 259, 267, 276, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 343, 363, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 428, 443, 445, 446, 450, 452, 453, 454, 455, 456, 468, 472, 474], "original_affin": 95, "original_shap": 95, "original_voxel": 52, "ortho": [15, 16, 17, 26, 65, 98, 402, 403, 419, 420, 427, 429, 433, 435, 436, 438, 440, 441, 442, 466, 494], "orthogon": [147, 162, 184, 326, 328, 333, 344, 392, 401, 402, 403, 406, 420, 427, 429, 433, 435, 436, 438, 440, 441, 442, 466, 468], "orthogonalmatchingpursuit": 44, "orthoprojector": [14, 15, 17, 54, 55, 61, 65, 157, 162, 419, 429, 435, 438], "orthoslic": [2, 4, 11, 17, 18, 27, 51, 83, 91, 96, 98, 101, 157, 162, 401, 406, 408, 410, 412, 414, 416, 418, 420, 427, 433, 436, 440, 441, 442, 494], "oscar": [0, 147, 162], "oscil": [6, 68, 118], "osf": [10, 18, 22, 54, 67, 79, 81, 82, 83, 102, 104, 168, 202, 206, 207, 220, 228, 253, 257, 267, 276], "osram": 0, "ot": [23, 175], "other": [2, 4, 15, 24, 25, 33, 38, 41, 42, 43, 51, 59, 68, 70, 71, 73, 96, 101, 103, 107, 108, 111, 118, 119, 120, 128, 147, 150, 154, 162, 163, 164, 165, 170, 171, 172, 174, 175, 177, 178, 179, 184, 187, 189, 191, 209, 216, 219, 233, 238, 239, 240, 267, 281, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 326, 328, 333, 339, 341, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 390, 436, 447, 453, 454, 455, 456, 466, 494], "otherwis": [26, 96, 106, 107, 147, 162, 180, 187, 238, 239, 240, 244, 262, 278, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 329, 339, 354, 358, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 437, 440, 443, 444, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 468, 478], "otten": 118, "our": [0, 2, 3, 15, 20, 24, 26, 31, 36, 41, 43, 52, 54, 59, 61, 66, 68, 69, 70, 74, 96, 101, 104, 111, 113, 114, 120, 121, 132, 147, 157, 162, 165, 170, 177, 178, 180, 187], "ourselv": 10, "out": [31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 51, 53, 54, 56, 57, 58, 59, 60, 61, 65, 73, 101, 103, 106, 109, 110, 120, 121, 130, 147, 150, 154, 162, 165, 170, 171, 173, 175, 177, 178, 179, 184, 190, 201, 225, 271, 304, 305, 306, 307, 309, 310, 311, 312, 344, 351, 359, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 437, 454, 456, 457, 467, 468, 478, 494], "out_dict": 81, "out_dir": [65, 70, 77, 366], "outcom": [68, 184, 368], "outdat": [127, 141, 162], "outer": [91, 184, 478], "outlier": [184, 227, 367, 368, 371, 372, 373], "outlin": [51, 91, 169, 178, 404, 444, 480, 494], "outperform": [54, 102, 164, 169], "output": [3, 4, 6, 7, 10, 16, 17, 23, 24, 26, 31, 35, 36, 38, 44, 45, 47, 51, 52, 54, 55, 57, 58, 59, 61, 68, 70, 73, 82, 88, 96, 106, 119, 120, 127, 128, 130, 132, 134, 139, 145, 150, 157, 159, 162, 163, 164, 169, 174, 178, 184, 186, 187, 188, 190, 191, 238, 239, 241, 242, 243, 244, 245, 273, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 323, 326, 339, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 427, 428, 435, 436, 437, 440, 441, 442, 449, 450, 454, 456, 459, 460, 462, 463, 465, 466, 478, 494, 497], "output_dir": [3, 4, 6, 7, 16, 24, 31, 35, 44, 51, 52, 58, 64, 65, 70, 73, 74, 77, 88, 96, 104, 111, 113, 426], "output_fil": [6, 16, 24, 404, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 494], "output_filepath": [93, 94, 191], "output_imag": 339, "output_typ": [6, 26, 45, 64, 67, 68, 71, 72, 73, 77, 78, 79, 81, 82, 83, 103, 106, 109, 113, 326, 339, 390], "outsid": [2, 4, 17, 68, 130, 159, 162, 178, 186, 191, 359, 360, 371, 374, 404, 443, 445, 446, 452, 459, 460, 465, 478], "ova": 37, "over": [3, 21, 26, 41, 51, 52, 54, 70, 91, 105, 111, 118, 120, 128, 153, 154, 162, 169, 170, 175, 176, 177, 178, 183, 187, 190, 201, 207, 253, 312, 326, 352, 356, 367, 378, 391, 393, 394, 440, 444, 478, 480, 494], "overal": [37, 68, 71, 111, 128, 162, 177, 178, 219, 309, 310, 378, 379], "overcom": [26, 118], "overcrowd": 163, "overfit": [36, 171, 175], "overflow": [159, 162], "overhead": 177, "overlai": [21, 22, 26, 53, 168, 190, 449, 497], "overlaid": [17, 72, 153, 155, 162, 440, 480], "overlap": [3, 33, 34, 40, 57, 61, 93, 101, 118, 127, 129, 131, 162, 178, 184, 191, 197, 217, 270, 371, 372, 374, 375, 377, 379, 404, 440, 480], "overrid": [16, 65, 103, 114, 154, 162, 246, 247, 248, 249, 250, 251, 252, 256, 259, 260, 262, 270, 271, 279, 280, 285, 290, 300, 454], "overridden": 178, "overrun": [134, 162], "oversampl": [69, 326, 328, 330, 331, 332, 333, 336, 337, 338], "overview": [40, 41, 163, 175, 177, 186], "overwhelm": 61, "overwrit": [12, 59, 281, 283, 391, 393, 394], "ovo": 37, "own": [4, 6, 7, 52, 61, 103, 119, 121, 170, 173, 178, 182, 272, 497], "owner": 281, "ox": [2, 22, 216, 219, 232, 259], "oxford": [0, 22, 93, 118, 165, 193, 237, 246, 254, 318, 319, 422, 423, 489], "oxi": 180, "oxygen": [68, 180, 184], "oxyhaemoglobin": [180, 184], "p": [6, 26, 45, 51, 53, 55, 56, 59, 61, 65, 73, 77, 78, 79, 81, 82, 83, 96, 104, 106, 109, 110, 118, 154, 162, 164, 175, 177, 180, 196, 197, 198, 199, 204, 207, 209, 218, 232, 235, 238, 239, 242, 246, 251, 259, 261, 313, 314, 322, 341, 342, 344, 366, 390, 465, 466, 468], "p001_unc": [81, 104], "p001_uncorrect": 78, "p_f": 19, "p_h": 19, "p_ma": 38, "p_statmap": [65, 77], "p_unmask": 38, "p_v": 19, "p_val": [78, 79, 81], "p_valu": [38, 47, 79, 81, 96, 112, 154, 162, 314, 326, 339], "pa": [0, 329], "pace": [118, 226], "packag": [0, 2, 3, 4, 6, 11, 15, 16, 17, 19, 21, 22, 26, 31, 32, 36, 38, 43, 45, 46, 50, 51, 53, 55, 61, 65, 70, 77, 81, 89, 90, 94, 96, 104, 106, 108, 109, 110, 111, 113, 114, 125, 126, 127, 128, 130, 132, 134, 147, 150, 155, 157, 162, 178, 180, 186, 187, 189, 209, 254, 255, 465, 494], "packagenam": 187, "packagevers": 187, "pad": [72, 73, 130, 150, 162, 190, 191, 348, 359, 360, 384, 387, 391, 393, 394, 467], "padlen": 467, "padtyp": 467, "page": [3, 38, 52, 55, 56, 61, 65, 77, 79, 118, 131, 133, 147, 151, 157, 158, 159, 162, 163, 167, 171, 175, 177, 178, 180, 187, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "pai": [0, 67], "paid": 0, "pair": [3, 76, 84, 88, 101, 116, 121, 131, 132, 162, 170, 171, 183, 276, 279, 281, 304, 305, 306, 307, 309, 310, 339, 365, 366, 367, 368, 431, 435, 439, 443, 445, 446, 447, 455, 466, 478, 496], "paired_design_matrix": 82, "pairwis": [54, 164], "panda": [3, 6, 11, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 65, 66, 67, 68, 71, 72, 74, 77, 78, 79, 80, 81, 82, 83, 96, 101, 103, 106, 113, 120, 121, 127, 130, 132, 134, 144, 147, 153, 155, 157, 158, 162, 170, 238, 246, 248, 250, 252, 253, 254, 255, 257, 258, 260, 261, 262, 264, 265, 266, 267, 269, 285, 311, 312, 326, 327, 329, 333, 339, 340, 341, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 430, 431, 432, 434, 441, 445, 454, 456, 465, 468], "panek": [118, 226], "papadopoulo": [0, 118, 127, 135, 147, 162, 178, 203, 276], "papathanassi": [118, 198, 248], "paper": [0, 51, 52, 120, 121, 132, 162, 167, 177, 178, 180, 281], "par": 93, "paracingul": 93, "paradigm": [26, 68, 100, 115, 116, 121, 170, 180, 221, 234, 277, 283, 333, 349, 354, 355, 357, 435, 442, 447, 496], "paragraph": 177, "parahip": 480, "parahippocamp": 93, "parallel": [33, 35, 37, 38, 39, 41, 42, 45, 46, 47, 50, 51, 53, 56, 60, 61, 81, 101, 106, 109, 127, 162, 177, 180, 341, 373, 390], "param": [238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "param1": 187, "param2": 187, "param_connectivity__kind": 102, "param_grid": [36, 102, 114, 128, 162, 171, 304, 305, 306, 307], "param_valid": [142, 162], "paramagnet": [180, 184], "paramet": [3, 6, 15, 16, 17, 22, 24, 25, 26, 30, 31, 35, 41, 45, 47, 48, 52, 54, 57, 59, 61, 63, 72, 73, 75, 91, 93, 94, 96, 98, 104, 105, 108, 110, 113, 114, 116, 120, 121, 127, 128, 129, 130, 131, 132, 133, 134, 141, 144, 147, 148, 150, 154, 155, 156, 157, 158, 159, 162, 163, 165, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 201, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 494, 496, 497], "parameter_plot": 65, "parametr": [45, 67, 68, 79, 81, 106, 109, 110, 118, 132, 162, 175, 181, 183, 184, 314, 315, 320, 344, 468, 497], "parcel": [9, 24, 29, 49, 62, 111, 116, 118, 121, 128, 130, 131, 132, 133, 134, 138, 142, 145, 146, 147, 150, 157, 159, 162, 166, 184, 185, 186, 191, 197, 198, 201, 204, 205, 219, 224, 225, 230, 236, 238, 248, 250, 251, 252, 254, 255, 256, 258, 260, 262, 267, 278, 349, 351, 356, 367, 368, 370, 374, 410, 422, 423, 429, 433, 439, 441, 447, 456, 457, 494, 496, 497], "parcellationsifittedparcel": 52, "parent": [3, 4, 6, 7, 16, 24, 31, 35, 44, 51, 52, 58, 64, 65, 70, 73, 74, 77, 88, 96, 104, 111, 113, 178], "pari": [0, 178], "pariet": [21, 61, 93, 107, 224, 256], "parietomedi": 266, "park": [59, 118, 368], "parker": [118, 227], "pars": [159, 162, 187, 365, 366], "parse_bids_filenam": [134, 157, 162], "parser": 365, "parsimoni": 178, "parson": [118, 235, 261], "part": [7, 10, 15, 16, 23, 24, 39, 52, 54, 58, 70, 91, 93, 98, 114, 118, 127, 131, 150, 156, 159, 160, 162, 171, 177, 178, 179, 185, 187, 190, 197, 199, 203, 238, 244, 245, 254, 255, 271, 276, 304, 305, 306, 307, 311, 312, 341, 342, 363, 364, 365, 367, 373, 376, 379, 380, 382, 383, 384, 385, 386, 387, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 432, 439, 454, 456, 472, 473, 480], "partial": [28, 51, 55, 102, 163, 164, 168, 197, 238, 243, 278, 368], "partial_correl": [28, 61, 243, 278], "partial_correlation_matric": 54, "partial_correlation_matrix": 61, "partial_correlation_measur": 54, "particip": [41, 43, 59, 68, 118, 178, 180, 184, 199, 227, 367, 368], "participant_id": 81, "particular": [12, 16, 35, 68, 89, 101, 121, 136, 157, 162, 165, 173, 175, 177, 186, 187, 189, 283, 304, 305, 306, 307, 316, 318, 319, 333, 364, 478], "particularli": [272, 456], "partit": [3, 17, 31, 43, 231], "partli": [26, 43, 45, 72, 177, 180, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 267, 270, 271, 272, 276, 278, 279, 280, 285, 290, 300], "pascual": [0, 135, 162], "pass": [2, 3, 4, 6, 10, 11, 16, 19, 21, 22, 25, 31, 32, 35, 38, 43, 44, 45, 46, 51, 53, 54, 57, 58, 59, 61, 64, 70, 72, 73, 77, 81, 89, 90, 91, 98, 105, 106, 109, 110, 111, 113, 120, 121, 127, 129, 130, 131, 132, 134, 143, 145, 147, 150, 155, 157, 159, 162, 163, 170, 171, 175, 177, 178, 179, 187, 189, 190, 191, 201, 238, 239, 240, 246, 281, 294, 295, 296, 297, 298, 299, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 328, 329, 333, 339, 341, 344, 358, 359, 360, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 427, 428, 429, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 453, 454, 455, 456, 458, 464, 466, 467, 468, 474, 478, 479], "passiv": 68, "past": [0, 59, 120, 165, 368], "patalasingh": [0, 159, 162], "patch": [19, 43, 44, 52, 187], "patch_openneuro_dataset": 286, "patcog": [52, 118], "path": [3, 4, 6, 7, 16, 24, 31, 35, 44, 51, 52, 58, 64, 65, 70, 73, 74, 77, 88, 96, 104, 111, 113, 119, 120, 121, 129, 133, 139, 150, 156, 158, 159, 162, 170, 176, 177, 178, 187, 188, 191, 198, 209, 220, 223, 233, 234, 239, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310, 311, 312, 326, 329, 333, 339, 341, 345, 354, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 404, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 452, 454, 455, 456, 464, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478], "path_to_a_bids_dataset": 329, "path_to_edited_fil": 178, "path_to_new_env": 495, "pathlib": [3, 4, 6, 7, 16, 24, 31, 35, 44, 51, 52, 58, 64, 65, 70, 73, 74, 77, 88, 96, 104, 111, 113, 129, 156, 162, 189, 239, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 311, 312, 326, 329, 333, 339, 341, 345, 364, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 452, 454, 455, 456, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478], "pathlik": [133, 162], "patient": [118, 164, 184, 238], "patrick": [0, 129, 132, 134, 162], "pattern": [0, 4, 9, 29, 30, 48, 52, 54, 103, 116, 118, 121, 145, 153, 162, 164, 169, 170, 173, 176, 177, 178, 184, 186, 189, 197, 201, 205, 217, 222, 224, 240, 242, 247, 250, 260, 271, 281, 302, 308, 345, 357, 384, 389, 428, 447, 455, 461, 496], "paugam": [0, 129, 162], "paul": [0, 118, 127, 129, 133, 162, 197, 204, 216, 251], "paula": [0, 150, 162], "pauli": [22, 118, 193, 237, 257], "pauli2017": 22, "paz": 0, "pb": 0, "pbellec": [147, 162], "pca": [57, 311, 372, 375, 480], "pcc": [21, 24, 54, 58], "pcc_coord": [58, 64, 179], "pcc_mask": 24, "pcc_seed": 64, "pcc_seed_correl": 58, "pcc_seed_correlation_z": 58, "pcp": [193, 246], "pd": [3, 6, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 65, 66, 67, 68, 71, 72, 74, 77, 78, 79, 80, 81, 82, 83, 96, 101, 106, 113, 120, 189, 218, 247, 271, 278, 279, 290], "pdf": [16, 58, 69, 129, 159, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446], "pe": 184, "peak": [6, 35, 64, 65, 71, 73, 104, 111, 171, 173, 177, 178, 421, 456, 458, 465, 479], "pearlson": [118, 200, 249], "pearson": [24, 118, 313, 317, 426], "pearsonr": 24, "peck": [118, 318, 319], "pedagog": 39, "pediatr": [118, 201, 216, 218], "pedregosa": [0, 118, 122, 162, 224, 256], "pedro": [118, 201, 250], "peer": [0, 147, 162, 219], "peke": 0, "penal": [171, 177, 240, 309, 310], "penalti": [32, 36, 41, 42, 46, 171, 176, 184, 304, 305, 306, 309, 310], "pend": 81, "pennsylvania": 0, "penros": 317, "peopl": [0, 6, 144, 147, 148, 149, 150, 151, 152, 162, 177, 178], "pep8": [128, 129, 130, 162, 178, 187], "per": [3, 4, 32, 33, 35, 43, 51, 60, 68, 80, 96, 104, 106, 113, 155, 162, 164, 170, 178, 182, 191, 201, 206, 233, 240, 260, 279, 300, 304, 305, 306, 307, 309, 310, 312, 314, 323, 326, 327, 329, 333, 340, 364, 367, 372, 375, 379, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 467], "per_compon": [51, 153, 162, 311, 312, 454], "peraza": [0, 128, 162], "perceiv": 13, "percent": [31, 36, 44, 45, 46, 65, 103, 104, 113, 150, 162, 170, 334, 343, 363, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 440, 448, 450, 452, 468], "percentag": [59, 170, 198, 304, 305, 306, 307], "percentil": [33, 35, 41, 42, 46, 68, 89, 90, 101, 304, 305, 306, 307, 309, 310, 343, 350, 363, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 429, 435, 436, 437, 440, 441, 442, 443, 445, 446, 448, 449, 450, 452, 456, 469], "percept": [118, 150, 162, 180, 203, 234, 276], "perceptu": [13, 118, 175], "perez": [0, 135, 140, 162], "perfect": [177, 425], "perfectli": [26, 177], "perform": [3, 7, 32, 35, 36, 41, 47, 50, 51, 54, 57, 65, 68, 73, 81, 82, 91, 93, 94, 96, 102, 103, 104, 109, 110, 113, 120, 121, 128, 153, 154, 155, 157, 162, 164, 169, 171, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 189, 190, 191, 198, 204, 225, 227, 233, 242, 272, 295, 298, 304, 305, 306, 307, 309, 310, 311, 312, 326, 328, 335, 341, 344, 358, 359, 360, 361, 362, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 401, 403, 406, 408, 410, 412, 414, 416, 418, 420, 427, 429, 433, 435, 436, 438, 440, 441, 442, 449, 453, 454, 455, 456, 459, 461, 466, 467, 468, 478, 479, 480, 497], "perfus": [118, 367, 368, 469], "period": [6, 44, 68, 70, 304, 305, 306, 307, 309, 310, 311, 312, 330, 331, 332, 336, 337, 338, 344, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 428, 454, 456, 468], "perirhin": [118, 175], "perm": [45, 46], "permiss": [116, 150, 162], "permut": [45, 79, 81, 109, 118, 127, 153, 162, 173, 175, 180, 341, 358, 390, 487], "permutation_test_scor": [101, 173], "permuted_least_squar": [159, 162], "permuted_ol": [45, 81, 106, 109, 127, 128, 153, 158, 159, 162, 175, 183, 341], "perpendicular": 425, "persist": [50, 51], "person": [163, 233], "pertin": [64, 77], "perturb": 54, "pescara": 0, "pessoa": [26, 118], "pet": 180, "peter": [118, 175, 186, 232, 235, 259, 261, 308], "petersburg": 0, "petersen": [61, 118, 201, 208, 229, 231, 264, 265, 266, 367, 368], "petkova": [118, 226], "pfleider": [26, 118], "phantom": [118, 198], "phase": 240, "phenom": [118, 268, 286], "phenomena": 68, "phenomenolog": 69, "phenomenologi": 0, "phenomenon": 175, "phenotyp": [54, 65, 102, 158, 162, 170, 174, 188, 196, 199, 206, 226, 246, 247, 267, 290], "philadelphia": [118, 176], "philip": [118, 226], "philipp": [0, 51, 74, 118, 122, 162, 169, 203, 209, 276, 311], "phillip": [118, 186, 200, 249], "phlypo": [0, 122, 162], "phonolog": 107, "php": [3, 10, 11, 28, 42, 105, 111], "physic": [180, 391, 393, 394], "physio_plot": 65, "physiolog": [59, 68, 71, 368], "physiologi": 368, "pi": [25, 86, 313, 317], "pial": [10, 24, 25, 39, 70, 113, 114, 153, 159, 162, 210, 211, 212, 213, 214, 215, 289, 292, 293, 300, 329, 437, 443, 444, 445, 446, 450, 452, 474, 477, 478], "pial_left": [210, 211, 212, 213, 214, 215, 289, 437, 450, 478], "pial_right": [210, 211, 212, 213, 214, 215, 289, 437, 450, 494], "pick": [22, 26, 41, 168, 177, 180, 184, 272], "picked_slic": 38, "pictur": [52, 120, 167, 175, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "piec": [41, 52, 187, 189, 497], "pierr": [0, 118, 144, 146, 147, 148, 162, 164, 201, 238, 250], "pietrantoni": [0, 159, 162], "pietrini": [3, 33, 34, 40, 101, 118, 217, 270], "pietro": [3, 33, 34, 40, 101, 118, 217, 270], "pinel": [51, 68, 74, 118, 169, 203, 276, 311], "ping": [163, 187], "pinho": [0, 150, 154, 156, 162], "pip": [65, 130, 142, 147, 150, 162, 178, 187, 495], "pipe": 102, "pipelin": [3, 37, 39, 42, 43, 44, 45, 47, 77, 101, 102, 118, 132, 153, 162, 163, 169, 170, 171, 174, 175, 176, 184, 190, 201, 238, 239, 240, 246, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 344, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456, 468, 497], "pisner": [0, 150, 162], "pitfal": [118, 170, 175], "pittsburgh": 0, "pixar001_task": [51, 53, 56, 87], "pixar002_task": [51, 53, 56], "pixar003_task": [51, 53, 56], "pixar004_task": [51, 53], "pixar005_task": [51, 53], "pixar006_task": [51, 53], "pixar007_task": [51, 53], "pixar008_task": [51, 53], "pixar009_task": [51, 53], "pixar010_task": [51, 53], "pixar011_task": [51, 53], "pixar012_task": [51, 53], "pixar013_task": [51, 53], "pixar014_task": [51, 53], "pixar015_task": [51, 53], "pixar016_task": [51, 53], "pixar017_task": 51, "pixar018_task": 51, "pixar019_task": 51, "pixar020_task": 51, "pixar021_task": 51, "pixar022_task": 51, "pixar023_task": 51, "pixar024_task": 51, "pixar123_task": [50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 87, 93, 94, 97, 108], "pixar124_task": [51, 53], "pixar125_task": [51, 53], "pixar126_task": [51, 53], "pixar127_task": 51, "pixar128_task": 51, "pixar_desc": [50, 55, 56, 58, 59, 61], "pixar_spac": [50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 87, 93, 94, 97, 108], "pixdim": [59, 105], "pixel": [43, 44, 180, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 448, 449, 451, 466], "piyadasa": [118, 200, 249], "pkg": 187, "place": [26, 31, 101, 144, 162, 187, 281, 335, 363, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 428, 436, 478], "placehold": 392, "plai": [180, 191], "plain": 178, "plan_polar": 480, "plan_tempo": 480, "planar": 184, "planck": 0, "plane": 449, "planum": 93, "platform": [121, 143, 162, 187, 225], "pleas": [0, 3, 20, 31, 38, 52, 53, 55, 56, 61, 65, 74, 77, 79, 101, 103, 107, 109, 110, 134, 142, 148, 157, 162, 163, 168, 170, 173, 178, 184, 187, 191, 197, 209, 218, 219, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 483, 495], "plenti": 120, "plo": [118, 186], "plot": [1, 2, 4, 8, 9, 20, 21, 22, 24, 27, 28, 29, 31, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 70, 72, 73, 74, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 106, 107, 108, 109, 110, 111, 116, 120, 123, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 170, 175, 178, 179, 180, 183, 184, 185, 186, 190, 191, 193, 237, 238, 247, 252, 254, 255, 260, 262, 264, 265, 267, 270, 271, 274, 276, 287, 292, 293, 295, 298, 301, 326, 342, 345, 356, 357, 370, 377, 379, 384, 464, 466, 474, 478, 483, 489, 491, 495, 496, 497], "plot_3d_and_4d_niimg": [2, 8, 496], "plot_3d_map_to_surface_project": [10, 29, 185, 450, 496], "plot_ab": [10, 15, 65, 81, 82, 104, 112, 394, 435, 494], "plot_adhd_dmn": [64, 75, 496], "plot_adhd_spher": [150, 162], "plot_advanced_decoding_scikit": [101, 115, 496], "plot_affine_transform": [86, 99, 496], "plot_age_group_prediction_cross_v": [102, 115, 150, 162, 496], "plot_anat": [6, 16, 19, 53, 157, 162, 168, 436, 442, 494], "plot_atla": [11, 29, 496], "plot_atlas_comparison": [50, 62, 496], "plot_beta_seri": [103, 115, 496], "plot_bids_analysi": [104, 115, 496], "plot_bids_featur": [65, 75, 178, 496], "plot_bland_altman": [65, 134, 162], "plot_canica_analysi": [150, 162], "plot_carpet": [12, 29, 129, 153, 154, 158, 159, 162, 494, 496], "plot_color_gradi": 13, "plot_colormap": [13, 29, 496], "plot_compare_decomposit": [51, 62, 150, 162, 185, 496], "plot_compare_mean_imag": [87, 99, 496], "plot_connectivity_measur": [143, 162], "plot_connectom": [23, 50, 53, 54, 55, 56, 57, 61, 123, 125, 127, 139, 140, 145, 148, 150, 159, 162, 165, 168, 448, 451, 494], "plot_connectome_strength": [150, 153, 157, 162], "plot_contrast": 68, "plot_contrast_matrix": [6, 65, 67, 68, 132, 162], "plot_copy_headers_math_img": [105, 115, 496], "plot_data_driven_parcel": [52, 62, 185, 496], "plot_decoding_tutori": [3, 8, 150, 162, 178, 185, 496], "plot_demo_glass_brain": [14, 29, 185, 496], "plot_demo_glass_brain_extens": [15, 29, 496], "plot_demo_more_plot": [16, 29, 496], "plot_demo_plot": [17, 29, 496], "plot_design_matrix": [6, 66, 67, 68, 75, 77, 80, 82, 103, 132, 133, 162, 179, 183, 496], "plot_design_matrix_correl": [66, 132, 133, 162], "plot_dim_plot": [18, 29, 496], "plot_epi": [3, 27, 52, 91, 96, 97, 154, 157, 162, 436, 442, 494], "plot_ev": [72, 74, 132, 133, 153, 162, 179], "plot_extract_regions_dictlearning_map": [53, 62, 496], "plot_extract_regions_labels_imag": [88, 99, 496], "plot_extract_rois_smith_atla": [89, 99, 496], "plot_extract_rois_statistical_map": [90, 99, 496], "plot_fiac_analysi": [130, 162], "plot_fir_model": [67, 75, 496], "plot_first_level_detail": [68, 75, 496], "plot_fixed_effect": [130, 162], "plot_glass_brain": [10, 14, 15, 26, 65, 81, 82, 104, 109, 112, 130, 134, 140, 150, 158, 159, 162, 183, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 442, 494], "plot_group_level_connect": [54, 62, 143, 150, 162, 496], "plot_haxby_anova_svm": [31, 48, 142, 162, 496], "plot_haxby_decod": [150, 162], "plot_haxby_different_estim": [32, 48, 150, 162, 496], "plot_haxby_frem": [33, 48, 185, 496], "plot_haxby_full_analysi": [34, 48, 150, 162, 496], "plot_haxby_glm_decod": [35, 48, 496], "plot_haxby_grid_search": [36, 48, 496], "plot_haxby_mask": [19, 29, 496], "plot_haxby_mass_univari": [106, 115, 496], "plot_haxby_multiclass": [37, 48, 496], "plot_haxby_searchlight": [38, 48, 185, 496], "plot_haxby_searchlight_surfac": [39, 48, 496], "plot_haxby_stimuli": [40, 48, 496], "plot_haxby_understand_decod": [41, 48, 496], "plot_hist": 426, "plot_hrf": [69, 75, 496], "plot_ica_neurovault": [107, 115, 496], "plot_ica_resting_st": [108, 115, 496], "plot_img": [4, 6, 26, 38, 129, 134, 150, 157, 162, 186, 401, 403, 406, 408, 410, 412, 414, 416, 418, 494], "plot_img_comparison": [65, 134, 162], "plot_img_on_surf": [10, 129, 133, 153, 155, 162], "plot_inverse_covariance_connectom": [55, 62, 185, 496], "plot_localizer_mass_univariate_method": [109, 110, 115, 496], "plot_localizer_simple_analysi": [110, 115, 496], "plot_localizer_surface_analysi": [70, 75, 496], "plot_mark": [61, 153, 157, 159, 162, 494], "plot_mask_comput": [91, 99, 191, 496], "plot_mask_large_fmri": [111, 115, 496], "plot_matric": 56, "plot_matrix": [28, 33, 37, 53, 54, 55, 56, 57, 59, 60, 61, 114, 144, 145, 150, 162, 168, 432], "plot_mixed_gambles_frem": [42, 48, 496], "plot_miyawaki_encod": [43, 48, 496], "plot_miyawaki_reconstruct": [44, 48, 496], "plot_multi_subject_connectom": [56, 62, 496], "plot_multiscale_parcel": [20, 29, 496], "plot_negate_imag": [92, 99, 496], "plot_neurovault_meta_analysi": [112, 115, 496], "plot_nifti_labels_simpl": [93, 99, 496], "plot_nifti_simpl": [94, 99, 191, 496], "plot_nilearn_101": [4, 8, 163, 496], "plot_oasi": [77, 84, 496], "plot_oasis_vbm": [45, 48, 150, 162, 185, 496], "plot_oasis_vbm_space_net": [46, 48, 496], "plot_overlai": [21, 29, 496], "plot_param": [72, 98], "plot_predictions_residu": [71, 75, 496], "plot_prob_atla": [22, 29, 51, 53, 89, 90, 137, 144, 145, 154, 162, 168, 169, 436, 441, 494, 496], "plot_probabilistic_atlas_extract": [57, 62, 496], "plot_proportion_activated_voxel": [78, 84, 496], "plot_python_101": [5, 8, 496], "plot_resample_to_templ": [95, 99, 496], "plot_roi": [3, 11, 18, 20, 27, 52, 68, 88, 91, 94, 96, 134, 146, 153, 154, 159, 162, 165, 190, 191, 436, 440, 494], "plot_roi_extract": [96, 99, 496], "plot_second_level_association_test": [79, 84, 496], "plot_second_level_design_matrix": [80, 84, 496], "plot_second_level_one_sample_test": [81, 84, 496], "plot_second_level_two_sample_test": [82, 84, 496], "plot_seed_to_voxel_correl": [58, 62, 148, 162, 496], "plot_signal_extract": [59, 62, 191, 496], "plot_simulated_connectom": [60, 62, 496], "plot_simulated_data": [47, 48, 496], "plot_single_subject_single_run": [6, 8, 496], "plot_slic": 47, "plot_smooth_mean_imag": [97, 99, 496], "plot_sphere_based_connectom": [61, 62, 150, 162, 496], "plot_spm_multimodal_fac": [72, 75, 496], "plot_stat_map": [2, 6, 10, 13, 16, 18, 26, 31, 32, 33, 38, 42, 43, 45, 46, 51, 53, 58, 64, 67, 68, 71, 72, 73, 77, 78, 79, 83, 87, 89, 90, 92, 94, 95, 96, 98, 101, 103, 106, 107, 108, 110, 112, 120, 130, 134, 135, 146, 147, 154, 155, 157, 158, 162, 168, 170, 183, 191, 449, 494], "plot_stat_map_from_displai": 16, "plot_surf": [114, 127, 131, 132, 142, 144, 150, 154, 155, 156, 157, 160, 162, 178, 179, 444, 445, 446, 494], "plot_surf_atla": [23, 29, 496], "plot_surf_contour": [10, 129, 132, 153, 162], "plot_surf_roi": [23, 24, 129, 130, 132, 134, 142, 144, 146, 150, 154, 162, 443, 494], "plot_surf_stat_map": [10, 24, 25, 29, 39, 70, 131, 132, 142, 144, 146, 150, 153, 157, 158, 159, 162, 179, 437, 443, 444, 496], "plot_surface_101": [7, 8, 496], "plot_surface_bids_analysi": [113, 115, 496], "plot_surface_image_and_mask": [114, 115, 496], "plot_surface_projection_strategi": [25, 29, 496], "plot_test_tim": 163, "plot_threshold": [83, 84, 496], "plot_threshold_imag": [98, 99, 496], "plot_transpar": [26, 29, 496], "plot_trisurf": 25, "plot_two_runs_model": [73, 75, 130, 162, 496], "plot_typ": [64, 77, 326, 339, 366, 466], "plot_visu": [27, 29, 496], "plot_visualize_megatrawls_netmat": [28, 29, 496], "plot_write_events_fil": [74, 75, 496], "plotli": [10, 129, 130, 131, 157, 160, 162, 379, 404, 443, 445, 446, 494, 495], "plotlysurfacefigur": [10, 132, 157, 162, 443], "plotted_slic": 110, "plotting_config": [6, 26], "plt": [5, 6, 12, 13, 16, 19, 25, 26, 27, 32, 34, 36, 37, 40, 41, 43, 44, 45, 46, 47, 51, 52, 54, 58, 60, 61, 64, 65, 66, 67, 68, 69, 71, 77, 80, 81, 82, 86, 93, 96, 98, 102, 103, 104, 109, 110, 111, 114, 190, 426, 429, 438, 443, 444, 445, 446], "plu": [326, 328, 333], "plug": [179, 191, 313, 317], "plugin": 187, "pluim": [118, 164, 238], "plunkett": [147, 162], "plural": 184, "pmc": [118, 209], "pmc6871319": [118, 209], "pmid": [118, 171, 230, 236, 258, 262], "pna": [118, 175, 186, 197, 201, 232, 259, 368], "pnas_smith09_rsn10": 2, "png": [6, 10, 16, 24, 44, 64, 65, 77, 185, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 494], "point": [3, 4, 7, 9, 16, 23, 29, 57, 58, 86, 88, 93, 96, 111, 114, 116, 120, 147, 150, 159, 162, 168, 170, 177, 180, 184, 186, 187, 188, 189, 240, 304, 305, 306, 307, 326, 359, 360, 384, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 429, 433, 436, 438, 440, 441, 442, 446, 449, 459, 460, 466, 478, 496], "pointer": [101, 173], "pokharel": [0, 130, 162], "pokropek": [118, 218], "polar": 93, "poldrack": [103, 118, 121, 170, 186, 207, 222, 225, 268, 281, 283, 286], "pole": [59, 93], "pole_occipit": 480, "pole_tempor": 480, "polici": [157, 162, 196], "polimeni": [118, 230, 236, 258, 262], "polin": [51, 52, 74, 118, 121, 164, 167, 169, 203, 225, 239, 276, 281, 283, 311, 344, 468], "pollet": [0, 131, 162], "polydata": [24, 132, 160, 162, 474], "polymesh": [7, 24, 132, 162, 292, 443, 444, 445, 446, 452, 474], "polynomi": [66, 68, 179, 326, 333], "pomara": [118, 226], "pone": [118, 186], "pontil": [118, 176, 201], "pool": [201, 209], "pooled_subject": 54, "poorli": [68, 96, 191, 193, 237, 489], "popul": [118, 164, 179, 197, 216, 218, 239, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 468], "popular": [6, 51, 185, 189, 304, 305], "portabl": [64, 77, 191], "portion": 72, "portug": 0, "pos_label": 41, "posit": [6, 10, 15, 17, 18, 25, 51, 54, 61, 68, 72, 76, 81, 82, 83, 84, 86, 96, 98, 102, 116, 118, 120, 131, 133, 153, 157, 162, 170, 175, 177, 180, 183, 184, 191, 197, 239, 242, 246, 276, 321, 339, 341, 342, 363, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 424, 427, 429, 433, 435, 436, 437, 438, 440, 441, 442, 446, 447, 449, 450, 456, 465, 466, 478, 480, 494, 496], "positive_edg": 61, "posixpath": 4, "possibl": [4, 6, 15, 16, 17, 47, 70, 82, 83, 86, 96, 103, 120, 121, 140, 157, 159, 162, 163, 164, 167, 170, 175, 177, 178, 180, 184, 186, 187, 190, 191, 225, 238, 239, 240, 246, 257, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 326, 329, 339, 341, 348, 359, 364, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 420, 421, 429, 435, 438, 453, 454, 455, 456, 466, 494], "possibli": [6, 68, 191], "post": [24, 54, 68, 96, 118, 134, 135, 162, 164, 178, 190, 219, 238, 272, 456, 480], "postcentr": [10, 93], "posterior": [23, 24, 58, 61, 64, 93, 144, 162, 179, 264, 266, 443, 445, 446], "potenti": [6, 57, 58, 91, 93, 94, 96, 103, 118, 156, 162, 163, 175, 178, 184, 187, 259, 341, 372, 375, 379, 480], "power": [12, 59, 61, 77, 79, 81, 118, 120, 126, 141, 153, 162, 164, 171, 172, 176, 184, 189, 191, 201, 208, 264, 265, 367, 368, 428], "power2": 367, "power2d": 367, "ppd": 246, "ppi": 103, "pqu9r": [207, 253], "pr": [65, 159, 162, 187], "practic": [7, 34, 54, 70, 102, 164, 167, 171, 173, 175, 177, 178, 179, 180, 183, 186, 189, 190], "pradeep": [0, 118, 146, 162, 170], "prafulla": 0, "prakhar": [0, 132, 162], "praneeth": [39, 118], "pre": [65, 73, 96, 104, 128, 142, 147, 159, 162, 180, 191, 206, 317], "prec": [56, 177], "prec_to_parti": [142, 162], "preced": [39, 178, 191, 326], "precentr": [10, 93], "precentral_l": 198, "precis": [16, 44, 55, 60, 64, 93, 128, 162, 164, 167, 168, 177, 186, 191, 203, 228, 238, 239, 240, 242, 243, 276, 304, 306, 316, 318, 319, 341, 390], "precision_": [55, 56, 60, 164], "precision_scor": 44, "precision_to_print": 44, "precision_weight": 323, "precisions_": [56, 60, 164, 239, 240], "precisions_init": 242, "precomput": [3, 305, 310], "precun": 93, "pred": 41, "predefin": [11, 128, 162], "predict": [32, 33, 35, 41, 42, 43, 47, 54, 61, 63, 66, 75, 100, 115, 118, 120, 154, 155, 157, 162, 172, 173, 175, 176, 178, 180, 181, 184, 185, 186, 197, 206, 208, 238, 256, 264, 267, 278, 287, 304, 305, 306, 307, 308, 309, 310, 318, 319, 326, 339, 344, 356, 361, 370, 375, 377, 384, 418, 442, 447, 465, 495, 496, 497], "predict_proba": 41, "predicted_timeseri": [71, 179], "prediction_scor": 45, "predicton_accuraci": 3, "predictor": [6, 43, 179, 180, 318, 319, 368], "prefer": [42, 54, 102, 134, 162, 167, 178, 189], "prefix": [70, 77, 329, 344, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 468], "prefront": 61, "preliminari": [118, 199, 235, 261], "prematur": 242, "premotor": 107, "premrudeepreechacharn": [0, 133, 162], "premultipli": 309, "prep": 65, "prepar": [45, 61, 96, 102, 104, 120, 137, 162, 174, 188, 371, 372, 373, 374, 375, 377, 378, 379, 380, 456, 497], "prepend": [365, 366], "preproc": [103, 104, 113, 329], "preproc_bold": [50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 87, 93, 94, 97, 103, 104, 108, 113], "preprocess": [6, 12, 31, 35, 36, 39, 43, 44, 47, 64, 65, 70, 91, 94, 102, 104, 108, 113, 114, 118, 119, 128, 142, 162, 168, 169, 175, 176, 180, 184, 191, 196, 199, 220, 226, 227, 233, 246, 247, 267, 290, 326, 329, 344, 365, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456, 468, 479, 480, 483, 484, 497], "prescrib": 342, "preselect": 59, "presenc": [43, 68, 106, 456, 458], "present": [0, 3, 10, 23, 24, 26, 41, 43, 44, 57, 59, 67, 71, 104, 114, 120, 128, 143, 162, 168, 169, 170, 177, 179, 180, 181, 187, 189, 191, 219, 220, 221, 233, 242, 246, 252, 270, 304, 305, 306, 307, 311, 312, 354, 367, 368, 370, 371, 372, 373, 374, 375, 376, 453, 454, 455, 459, 480], "preserv": [54, 61, 102, 349, 361, 437, 453, 454, 455], "preset": [156, 157, 162, 368, 494], "prespecifi": 191, "press": [68, 70, 74, 78, 79, 81, 82, 109, 118, 180, 274, 276, 284, 301, 318, 319], "presum": [321, 342], "pretti": [4, 107], "prettier": [4, 131, 162, 178], "pretty_brain": 494, "prevent": [129, 134, 162, 163, 359, 360, 366, 382, 383, 384, 385, 386, 387], "previou": [2, 10, 15, 16, 19, 21, 22, 32, 38, 43, 44, 45, 46, 51, 52, 53, 57, 61, 65, 66, 68, 73, 74, 79, 89, 90, 96, 106, 110, 132, 156, 157, 162, 164, 167, 171, 173, 177, 180, 242, 304, 305, 306, 307, 311, 312, 373, 376, 454, 479, 480], "previous": [3, 101, 120, 150, 153, 157, 159, 162, 170, 180, 196, 231], "price": [67, 175], "primal": 177, "primari": [82, 178, 466], "primarili": 103, "primat": 69, "prime": 118, "primer": [181, 497], "princip": [201, 278, 368], "principl": [101, 167, 170, 174, 176, 184, 308, 497], "print": [2, 3, 4, 6, 7, 10, 11, 12, 16, 17, 19, 21, 23, 24, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 71, 72, 73, 74, 77, 79, 83, 87, 88, 91, 93, 94, 95, 96, 97, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 120, 132, 162, 163, 170, 178, 186, 189, 198, 248, 326, 339, 351], "print_changed_onli": 191, "prior": [30, 48, 51, 57, 61, 68, 93, 111, 116, 118, 155, 162, 164, 176, 179, 239, 258, 285, 304, 305, 309, 310, 372, 374, 375, 377, 428, 442, 447, 480, 496], "priori": 51, "prioriti": [187, 189, 291], "privat": [127, 129, 130, 159, 162], "prni": [118, 176, 201, 250], "pro": 13, "prob": [22, 254, 255, 257, 436, 440], "probabilist": [9, 29, 49, 54, 62, 102, 116, 118, 128, 129, 147, 158, 162, 166, 178, 184, 190, 191, 207, 216, 218, 224, 228, 238, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 271, 351, 370, 375, 403, 422, 423, 429, 436, 439, 440, 441, 442, 447, 448, 460, 464, 478, 480, 494, 496, 497], "probabilit": 257, "probabl": [6, 12, 22, 42, 46, 50, 51, 64, 68, 79, 81, 83, 96, 165, 175, 177, 180, 184, 186, 187, 216, 219, 227, 254, 255, 285], "probe": [68, 70, 174, 184], "probe_funct": 242, "problem": [3, 6, 33, 35, 41, 42, 50, 51, 96, 111, 118, 170, 171, 172, 175, 176, 177, 178, 180, 184, 186, 187, 242, 309, 310, 312, 313, 316, 317, 318, 319, 341, 390], "problemat": 68, "proc_bold": 65, "proce": [43, 58, 67, 120], "procedur": [6, 33, 78, 79, 81, 86, 89, 106, 165, 170, 175, 180, 183, 184, 198, 201, 276, 325, 341, 390, 468, 490], "proceed": [118, 175, 179, 186, 197, 201, 232, 259, 308, 368], "process": [16, 17, 34, 38, 41, 45, 53, 56, 65, 93, 96, 104, 111, 118, 119, 120, 135, 162, 164, 165, 168, 169, 170, 173, 177, 178, 180, 183, 184, 186, 187, 189, 190, 191, 197, 201, 206, 207, 217, 218, 224, 239, 256, 272, 276, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 344, 345, 350, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 454, 455, 456, 462, 463, 468, 483], "process_executor": 46, "process_mask": [38, 47, 141, 162], "process_mask_": 308, "process_mask_img": [38, 47, 175, 308], "processor": [101, 173], "produc": [6, 15, 25, 49, 62, 65, 73, 81, 103, 109, 116, 157, 159, 162, 180, 184, 191, 267, 302, 368, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 403, 442, 478, 494, 496], "product": [24, 58, 81, 177], "profil": [6, 177, 178, 313, 317], "prognosi": [174, 186], "program": [177, 494], "progress": [38, 45, 106, 109, 137, 162, 326], "prohibit": 177, "project": [0, 9, 10, 16, 25, 29, 39, 45, 61, 77, 113, 114, 116, 118, 132, 140, 142, 144, 152, 156, 157, 162, 163, 177, 179, 185, 196, 199, 201, 204, 207, 226, 227, 228, 246, 251, 278, 285, 290, 311, 312, 344, 378, 379, 380, 394, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 435, 437, 439, 443, 444, 445, 446, 447, 448, 451, 468, 474, 478, 494, 496], "projector": [157, 162, 419], "promis": [118, 175], "promot": [171, 172, 187], "prompt": 495, "pronounc": [427, 440, 441, 442, 449], "proper": [3, 13, 36, 134, 157, 162, 177, 495], "properli": [39, 131, 134, 162, 175, 191, 193, 237, 429, 435, 489], "properti": [52, 173, 177, 180, 184, 191, 234, 308, 311, 312, 314, 371, 374, 378, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 454, 464, 470, 472, 474], "proport": [6, 52, 54, 71, 76, 84, 102, 116, 168, 180, 183, 184, 276, 318, 321, 339, 438, 442, 447, 496], "proportion": 180, "proportion_true_discoveries_img": [78, 321], "propos": [69, 103, 178, 179, 187, 198, 204, 384], "protocol": [74, 184, 203, 276], "proton": [218, 271], "prototyp": 178, "prove": [177, 191], "provid": [3, 5, 6, 10, 16, 17, 26, 31, 36, 41, 47, 50, 51, 52, 55, 57, 59, 65, 68, 69, 73, 77, 78, 79, 81, 82, 86, 91, 93, 94, 96, 101, 103, 104, 109, 113, 114, 119, 120, 121, 129, 130, 132, 134, 137, 145, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 166, 167, 169, 170, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 191, 196, 197, 198, 207, 216, 217, 227, 230, 232, 236, 238, 239, 240, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 270, 281, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 317, 326, 327, 328, 332, 333, 338, 339, 341, 344, 350, 359, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 425, 428, 438, 440, 444, 453, 454, 455, 456, 457, 464, 466, 468, 478, 479, 480, 494, 495], "proximal_oper": [130, 162], "pruett": [61, 118, 208, 264], "pruim": [118, 367, 368], "psc": [130, 150, 154, 162, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 468], "pseudo": [79, 109, 311, 312, 318, 341, 343, 390, 454], "pseudoinvers": 317, "psychiatr": 184, "psychiatri": [118, 216, 226], "psychoinformat": 0, "psycholog": 186, "psychologi": 0, "psychophysiolog": 103, "pth": [132, 162], "public": [0, 2, 65, 103, 121, 127, 129, 130, 157, 159, 162, 178, 184, 225, 227], "publicli": 168, "publish": [0, 163, 233, 281, 350, 469], "pubm": [51, 118, 169, 171, 248, 311], "pubu": 61, "pull": [137, 159, 162, 163, 184, 186], "pure": [101, 106, 134, 162, 309, 310], "purpl": 71, "purple_green": 494, "purpos": [16, 17, 65, 70, 72, 73, 81, 104, 113, 120, 177, 183, 191, 196, 199, 203, 206, 207, 224, 228, 233, 267, 392, 466, 494], "push": [163, 177, 178, 187], "put": [7, 41, 56, 57, 73, 101, 125, 162, 178, 182, 238, 304, 305, 306, 307, 311, 312, 326, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 428, 454, 456, 468, 480], "pval": 390, "pvals_anova": [109, 110], "pvals_bonferroni": 106, "pwn": 163, "px": [316, 318, 319], "py": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 128, 129, 150, 155, 156, 157, 159, 162, 163, 170, 178, 187, 191, 496], "pylab": 439, "pymvpa": [3, 4, 40, 217, 270], "pyplot": [5, 6, 12, 13, 16, 19, 25, 26, 27, 32, 34, 36, 37, 40, 41, 43, 44, 45, 46, 47, 51, 52, 54, 58, 60, 61, 64, 65, 66, 67, 68, 69, 71, 77, 80, 81, 82, 86, 93, 96, 98, 102, 103, 104, 109, 110, 111, 114, 165, 190, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 428, 429, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 494], "pyproject": [128, 162, 178, 187, 495], "pyramid": 7, "pytest": [132, 162, 163, 178, 187, 495], "pytest_mpl_gener": 187, "pytest_output": 163, "python": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 120, 125, 127, 128, 130, 132, 133, 142, 148, 149, 150, 155, 157, 160, 162, 163, 170, 177, 178, 185, 186, 187, 355, 495, 496], "python2": [147, 148, 149, 150, 162], "python3": [2, 3, 4, 11, 15, 16, 17, 19, 21, 22, 26, 31, 32, 36, 38, 43, 45, 46, 50, 51, 53, 55, 61, 70, 77, 81, 89, 90, 94, 104, 106, 108, 109, 110, 113, 114, 148, 150, 162, 178, 495], "pythoncvers": 187, "pythonvers": 187, "q": [118, 180, 187, 322, 342, 466], "qform_cod": [59, 105], "qi": [309, 310], "qingyang": [118, 226], "qoffset_i": [59, 105], "qoffset_x": [59, 105], "qoffset_z": [59, 105], "quadrat": [26, 367], "qualit": [142, 162], "qualiti": [12, 26, 65, 71, 79, 109, 118, 147, 162, 163, 178, 179, 180, 187, 191, 197, 199, 246, 371, 374, 378, 428, 454], "quality_check": 246, "quantif": [326, 335], "quantifi": 187, "quantil": 180, "quantiti": [177, 314], "quatern_b": [59, 105], "quatern_c": [59, 105], "quatern_d": [59, 105], "quayl": 118, "quebec": 0, "queen": 0, "queri": [107, 112, 281, 283, 303], "question": [3, 7, 54, 67, 68, 102, 167, 186, 187, 191, 199, 267, 495], "quick": [103, 163, 186], "quicker": [167, 178], "quickli": [4, 35, 64, 73, 77, 164, 167, 177, 178, 187], "quickstart": 185, "quinn": [118, 216], "quirion": [0, 144, 162], "quit": [3, 6, 68, 168, 177, 203, 276], "quotient": 199, "qu\u00e9bec": 0, "r": [4, 7, 10, 15, 16, 25, 26, 32, 36, 43, 44, 50, 54, 59, 61, 93, 96, 105, 106, 118, 129, 150, 157, 162, 164, 165, 179, 187, 204, 207, 208, 216, 224, 230, 232, 236, 246, 251, 256, 258, 259, 262, 264, 268, 286, 304, 305, 309, 310, 326, 339, 344, 366, 367, 368, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 427, 429, 433, 435, 436, 438, 440, 441, 442, 466, 468, 472, 473, 494], "r2": [47, 154, 162, 305, 307, 318], "r2_score": [43, 305, 310], "r2hvk": [228, 257], "r_": 44, "r_squar": [65, 71, 77, 157, 162, 318, 326, 339], "ra": 358, "raamana": [0, 118, 146, 162, 170], "rachakonda": [118, 200, 249], "rachlin": [118, 226], "radio": 362, "radiolog": [17, 129, 132, 134, 162, 391, 393, 394, 427, 429, 433, 435, 436, 438, 440, 441, 442, 449], "radiu": [10, 38, 39, 47, 58, 61, 64, 103, 137, 162, 174, 179, 184, 191, 231, 266, 308, 377, 478, 480], "radius_neighbors_graph": 39, "rahim": [0, 54, 102, 118, 122, 126, 135, 144, 150, 162], "rahul": [0, 118, 129, 162, 216], "rai": [118, 232, 259], "raichl": [118, 368], "raimon": [118, 367, 368], "rainei": [118, 235, 261], "rainer": [118, 175, 186, 308], "rais": [5, 96, 102, 127, 128, 129, 130, 137, 144, 146, 147, 150, 157, 159, 162, 189, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 329, 333, 339, 341, 342, 345, 354, 358, 359, 363, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 435, 436, 440, 441, 442, 453, 454, 455, 456, 495], "rakuten": 0, "ram": 163, "ramnani": [118, 197], "ramsei": [118, 164], "ran": 45, "randi": [118, 201, 216, 227, 230, 236, 258, 262], "randn": 47, "random": [3, 7, 43, 44, 47, 54, 58, 66, 101, 102, 106, 114, 118, 142, 154, 162, 167, 168, 169, 170, 177, 178, 180, 186, 204, 251, 311, 312, 316, 318, 319, 326, 335, 341, 390, 453, 454, 456, 458], "random_st": [35, 38, 45, 46, 47, 51, 52, 53, 54, 94, 102, 107, 108, 159, 162, 168, 304, 306, 311, 312, 326, 335, 341, 390, 453, 454], "randomli": [22, 175], "randomst": [114, 311, 312, 326, 335, 341, 390, 453, 454], "rang": [10, 11, 15, 16, 19, 22, 26, 41, 44, 47, 50, 51, 52, 53, 56, 58, 60, 65, 69, 71, 80, 81, 82, 89, 90, 93, 103, 106, 109, 111, 114, 134, 140, 144, 154, 162, 177, 178, 201, 207, 239, 242, 253, 343, 363, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 437, 442, 446, 448, 449, 450, 452], "ranjit": [118, 226], "rank": [132, 162, 175, 316, 317, 318, 319, 363, 390], "raphael": [0, 127, 154, 155, 156, 157, 158, 159, 162], "raphson": 177, "rapid": [103, 118, 220], "rapidli": 177, "raquel": [59, 118, 367, 368], "rare": 177, "rarr": [120, 191], "rasero": [0, 155, 162], "rastko": [59, 118, 367, 368], "rate": [3, 6, 68, 83, 137, 162, 177, 180, 184, 191, 233, 321, 341], "rater": 246, "rather": [16, 26, 57, 68, 96, 103, 121, 140, 142, 144, 146, 150, 155, 157, 162, 164, 177, 189, 190, 224, 239, 248, 281, 283, 311, 312, 341, 372, 375, 465, 480], "ratio": [73, 96, 146, 162, 184, 267, 309, 311, 312, 454, 456], "ratio_n_voxel": [53, 168, 456], "rational": 180, "raut": [118, 231, 266], "ravel": [40, 42, 44, 46, 47, 106, 109, 110], "ravi": [118, 200, 249], "raw": [83, 94, 104, 113, 154, 162, 170, 189, 191, 206, 207, 222, 233, 253, 304, 305, 306, 307, 311, 312, 373, 376, 436, 442, 454, 464], "raw_valu": 43, "rc": [118, 218], "rdbu_r": [13, 47, 114, 134, 162, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 432, 437, 439, 442, 446, 448, 449, 450, 452], "rdpu": 43, "re": [2, 6, 22, 43, 67, 68, 86, 121, 156, 162, 178, 180, 281, 294, 295, 296, 297, 298, 299, 316, 318, 319, 329, 457], "reach": [56, 177, 178, 180, 186, 281, 367], "reaction": 184, "read": [4, 24, 39, 47, 68, 70, 79, 83, 104, 107, 109, 112, 113, 118, 121, 153, 162, 178, 185, 186, 203, 220, 225, 274, 275, 276, 381, 470], "read_csv": [3, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 65, 71, 72, 96, 101, 106, 120, 189], "read_tabl": [6, 67, 68], "readabl": [68, 111, 128, 162], "reader": [68, 186, 497], "readi": [64, 77, 120, 141, 162, 169, 178, 187], "readili": [165, 170, 173, 186, 189, 190, 456], "readm": [153, 162, 206], "real": [43, 170, 175, 177, 180, 189, 191], "real_timeseri": 71, "realign": [113, 220, 279], "realist": [118, 198, 267, 443, 445, 446, 452], "realli": [3, 71, 148, 162, 170, 368], "realm": 96, "reason": [33, 39, 50, 51, 68, 121, 163, 171, 173, 175, 177, 178, 180, 187, 478], "reassign": 453, "reassur": 68, "rebecca": [61, 118, 206, 208, 264, 267], "rebuild": 163, "rec": 329, "recal": [44, 304, 306], "recall_scor": 44, "recall_to_print": 44, "recap": [2, 4], "recapitul": 231, "recarrai": [157, 162], "recast": 191, "receiv": [41, 71, 103, 170, 184, 426], "recent": [10, 141, 144, 145, 147, 157, 162, 169, 187, 472], "recip": 190, "recognit": [0, 3, 30, 32, 48, 52, 100, 115, 116, 118, 128, 162, 173, 175, 176, 185, 186, 201, 250, 270, 306, 308, 349, 351, 354, 356, 357, 370, 376, 389, 390, 418, 436, 439, 442, 447, 496], "recogniz": 178, "recommend": [6, 13, 25, 65, 103, 107, 127, 132, 148, 149, 150, 155, 157, 159, 162, 170, 175, 180, 186, 189, 191, 367, 371, 372, 373, 374, 375, 376, 377, 456, 465, 468, 478, 480, 495], "recomput": [68, 101, 175, 323], "reconstruct": [30, 43, 48, 116, 118, 191, 205, 223, 238, 245, 280, 311, 312, 370, 373, 376, 447, 462, 463, 496], "reconstructed_img": [311, 312], "record": [35, 43, 68, 170, 180, 184], "recov": [47, 61, 143, 162, 164], "recoveri": [118, 186, 311], "recruit": [118, 186], "rectangl": [19, 43, 52, 86], "recurs": [47, 52, 101, 118, 150, 162, 167, 173, 184, 185, 454, 455, 461], "recursive_neighbor_agglomer": [52, 127, 162], "red": [15, 16, 19, 43, 54, 98, 131, 148, 162, 179, 180, 184, 494], "reddi": [0, 118, 125, 135, 137, 140, 144, 145, 146, 147, 150, 154, 162, 170], "redirect": 187, "redownload": 163, "reduc": [17, 26, 31, 35, 36, 47, 52, 68, 81, 89, 96, 103, 118, 132, 146, 147, 150, 154, 162, 172, 176, 177, 178, 184, 191, 201, 227, 240, 306, 307, 311, 312, 367, 368, 371, 374, 443, 445, 446, 450, 452, 453, 454, 455, 459], "reduce_confound": [59, 267], "reduced_confound": 59, "reducedconfounds_regressor": [50, 55, 56, 58, 59, 61], "reduct": [134, 162, 174, 312, 454], "reduction_ratio": 312, "redund": [132, 150, 162, 178], "ree": 233, "rees": [118, 232, 259], "ref": [57, 93, 170, 480], "ref_img": [425, 426], "ref_label": [65, 425, 426], "ref_niimg": [105, 111, 357], "refactor": [128, 129, 130, 132, 141, 155, 157, 159, 162, 163, 187], "refer": [11, 20, 49, 62, 65, 68, 70, 80, 95, 96, 104, 110, 113, 116, 118, 119, 120, 127, 128, 129, 135, 140, 148, 155, 157, 158, 159, 162, 166, 174, 178, 179, 180, 182, 183, 187, 189, 190, 191, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 494, 496, 497], "referenc": 179, "refin": [56, 60, 61, 240], "refit": [41, 102], "reflect": [54, 104, 164, 178, 180, 201, 246, 250, 440, 441], "reformat": [81, 128, 162], "refresh": [137, 162], "reg_i": 333, "reg_nam": 328, "regard": [66, 133, 153, 162, 176, 272, 297, 368], "regardless": [281, 283, 309], "regim": 52, "region": [6, 11, 16, 17, 20, 23, 24, 26, 33, 35, 42, 43, 45, 46, 47, 49, 51, 52, 55, 58, 59, 61, 62, 65, 68, 71, 72, 77, 85, 99, 102, 111, 114, 116, 118, 127, 129, 131, 133, 134, 135, 139, 141, 142, 145, 150, 153, 155, 157, 162, 164, 166, 169, 170, 176, 178, 179, 180, 184, 186, 188, 190, 193, 198, 201, 204, 207, 208, 216, 217, 219, 222, 224, 228, 231, 237, 238, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 270, 282, 308, 311, 312, 349, 351, 354, 356, 357, 361, 363, 368, 370, 371, 372, 374, 375, 377, 378, 379, 380, 403, 404, 421, 422, 423, 424, 427, 429, 433, 439, 440, 441, 442, 444, 445, 447, 448, 464, 480, 483, 489, 494, 496, 497], "region_atlas_": 374, "region_coord": [54, 55, 57, 102, 139, 162, 256], "region_extractor": [157, 162], "region_id": [131, 162], "region_ids_": [371, 374, 378], "region_label": 88, "region_labels_min_s": 88, "region_labels_not_diag": 88, "region_names_": [114, 131, 132, 162, 371, 374, 378], "region_sign": [371, 372, 374, 375, 377, 378, 379, 454, 456, 460, 463], "region_t": 56, "regionextractor": [53, 89, 133, 134, 135, 137, 143, 148, 162, 168, 457, 458], "regions_dict": 10, "regions_extracted_img": [53, 168, 458], "regions_img": [53, 89, 168], "regions_img_": [53, 89, 168, 456], "regions_index": [53, 168], "regions_indic": 10, "regions_indices_network3": 89, "regions_indices_of_map3": [53, 168], "regions_percentile_img": 90, "regions_value_img": 90, "regist": [180, 197, 201, 216, 250], "registr": [118, 165, 180, 201, 218, 360, 494], "regress": [28, 32, 33, 35, 42, 43, 47, 58, 59, 64, 70, 73, 104, 113, 118, 120, 129, 137, 147, 153, 154, 155, 159, 162, 165, 170, 174, 175, 176, 178, 179, 180, 184, 187, 197, 201, 246, 304, 305, 306, 307, 310, 312, 313, 318, 319, 326, 339, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 468, 479, 497], "regression_result": 322, "regressionresult": [159, 162, 313, 317, 322, 326, 335], "regressor": [35, 42, 46, 59, 64, 65, 68, 70, 103, 104, 109, 113, 127, 132, 153, 154, 158, 162, 165, 171, 179, 278, 305, 307, 310, 322, 326, 328, 333, 341, 367, 368, 390, 432], "regul": 197, "regular": [3, 33, 41, 42, 47, 59, 68, 96, 105, 118, 121, 153, 162, 163, 170, 171, 174, 176, 177, 184, 185, 186, 190, 239, 240, 242, 306, 307, 309, 310, 354, 495, 497], "regularli": [178, 478], "reho": 246, "reilli": [118, 197], "reiner": [0, 129, 162], "reining": [0, 150, 162], "reintroduc": [118, 344, 468], "reiss": [118, 226], "reject": [180, 184], "rel": [41, 43, 52, 61, 67, 68, 93, 111, 178, 180, 184, 187, 304, 305, 306, 307, 308, 309, 310, 326, 328, 333, 348, 448, 450, 452, 480], "relabel": [103, 457], "relabeled_yeo_atla": 88, "relat": [7, 42, 49, 52, 53, 66, 67, 68, 69, 70, 72, 83, 103, 110, 116, 118, 121, 133, 141, 142, 162, 165, 166, 168, 170, 171, 174, 177, 178, 184, 185, 186, 187, 191, 221, 238, 267, 272, 294, 295, 298, 311, 312, 314, 326, 350, 364, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 456, 469, 495, 497], "relationship": [43, 45, 77, 175, 183, 185, 186, 197, 278, 390], "relative_to": [65, 77, 113], "relax": [129, 162, 218], "relaxometri": 271, "releas": [28, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 178, 197, 201, 204, 218, 257, 258, 271, 272, 278, 290, 294, 295, 296, 297, 298, 299, 344], "relev": [31, 36, 52, 59, 68, 70, 108, 121, 155, 159, 162, 170, 171, 177, 178, 187, 190, 191, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 341, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 453, 454, 455, 456], "reli": [0, 6, 32, 68, 94, 96, 129, 130, 132, 140, 156, 162, 163, 167, 177, 180, 184, 187, 189, 272, 329, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442, 478, 494], "reliabl": [59, 118, 147, 162, 180, 203, 276, 368], "remain": [3, 4, 6, 10, 18, 22, 32, 34, 35, 38, 39, 42, 43, 45, 47, 56, 59, 67, 72, 91, 103, 104, 105, 106, 109, 111, 130, 153, 162, 175, 178, 478], "remark": 180, "rememb": 494, "remi": [147, 162], "remot": [163, 178, 281, 283], "remov": [6, 32, 34, 35, 37, 43, 44, 45, 79, 88, 91, 107, 108, 109, 110, 118, 120, 125, 127, 129, 130, 131, 132, 134, 137, 141, 142, 143, 145, 147, 148, 150, 152, 153, 155, 157, 162, 171, 176, 177, 187, 188, 190, 201, 227, 238, 263, 284, 287, 288, 326, 342, 344, 348, 350, 361, 363, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 428, 440, 456, 457, 459, 460, 464, 467, 468, 469, 478], "rena": [118, 150, 162, 167, 172, 184, 185, 306, 307, 454, 461], "rena_clust": [52, 127, 162], "rena_labels_img": 52, "rena_parcel": 52, "renam": [127, 130, 134, 143, 147, 162, 187], "render": [3, 38, 52, 55, 56, 61, 65, 77, 79, 129, 131, 148, 162, 163, 178, 404, 426, 435, 443, 445, 446, 448, 450, 451, 452], "renew": [137, 162], "renn": 0, "reorder": [59, 132, 145, 162, 358, 421, 439], "reorgan": [157, 162, 178], "repeat": [61, 68, 69, 170, 180, 233], "repetit": [3, 6, 35, 65, 66, 103, 104, 105, 113, 118, 132, 146, 162, 180, 184, 209, 234, 267, 272, 288, 295, 298, 304, 305, 306, 307, 309, 310, 311, 312, 326, 329, 330, 331, 332, 336, 337, 338, 344, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 428, 454, 456, 468], "replac": [3, 4, 26, 32, 37, 38, 43, 44, 45, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 71, 79, 81, 91, 93, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 114, 120, 127, 128, 129, 132, 141, 142, 147, 150, 153, 154, 155, 156, 157, 162, 173, 177, 178, 187, 227, 344, 361, 367, 368, 381, 384, 468], "repli": 187, "replic": 201, "repo": [163, 178, 187, 495], "repons": 217, "report": [6, 26, 52, 55, 56, 57, 70, 71, 77, 91, 93, 94, 104, 107, 113, 118, 130, 131, 132, 134, 150, 155, 157, 159, 162, 163, 180, 181, 182, 187, 191, 207, 235, 261, 321, 326, 339, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 443, 445, 446, 456, 483, 485, 495], "report_dim": [326, 339, 466], "report_flm": 113, "report_slm": [104, 113], "report_text": [326, 339, 466], "repositori": [118, 119, 178, 184, 187, 189, 218, 225, 281, 283, 497], "repres": [6, 7, 11, 16, 21, 35, 37, 54, 55, 57, 58, 70, 78, 81, 96, 111, 118, 132, 142, 154, 162, 164, 165, 168, 169, 178, 180, 183, 184, 189, 190, 191, 201, 207, 225, 238, 246, 250, 253, 267, 296, 297, 299, 308, 348, 359, 371, 372, 374, 375, 378, 379, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 422, 429, 435, 438, 459, 466, 476, 478, 494], "represenet": 191, "represent": [3, 7, 17, 33, 34, 35, 38, 40, 55, 56, 59, 61, 65, 77, 79, 86, 96, 101, 103, 108, 118, 120, 150, 162, 166, 169, 175, 184, 188, 190, 217, 231, 266, 270, 304, 305, 306, 307, 308, 309, 310, 311, 312, 344, 345, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 427, 428, 435, 436, 437, 440, 441, 442, 449, 450, 454, 456, 459, 460, 462, 463, 466, 478, 497], "reproduc": [3, 26, 34, 43, 44, 51, 54, 74, 101, 103, 118, 185, 203, 276, 306, 307], "request": [77, 103, 132, 137, 150, 162, 163, 167, 177, 184, 197, 238, 239, 240, 253, 254, 255, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 341, 364, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 404, 419, 420, 449, 453, 454, 455, 456, 479, 480, 494, 495], "request_mock": 178, "requir": [10, 21, 38, 41, 45, 50, 58, 65, 66, 69, 70, 74, 77, 80, 95, 121, 135, 140, 142, 144, 153, 157, 158, 162, 163, 165, 168, 173, 175, 177, 178, 180, 184, 186, 187, 189, 190, 191, 201, 227, 240, 285, 304, 326, 333, 342, 362, 367, 368, 372, 375, 377, 379, 390, 434, 456, 457, 494, 495], "rerun": [3, 38, 52, 55, 56, 61, 65, 77, 79], "resamp": [33, 35, 42, 46, 51, 52, 53, 65, 77], "resampl": [10, 12, 26, 50, 55, 56, 57, 59, 68, 72, 77, 85, 93, 94, 99, 107, 111, 116, 120, 128, 139, 140, 143, 144, 150, 154, 156, 157, 160, 162, 188, 201, 220, 227, 234, 281, 283, 296, 297, 299, 301, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 349, 354, 356, 358, 359, 360, 371, 372, 373, 374, 375, 376, 382, 384, 385, 386, 387, 425, 426, 435, 436, 441, 442, 447, 449, 454, 459, 478, 480, 483, 496, 497], "resample_img": [50, 72, 86, 91, 95, 128, 132, 144, 150, 159, 162, 190, 191, 281, 311, 312, 326, 339, 358, 360, 373, 376, 382, 384, 385, 387, 454], "resample_to_img": [68, 77, 95, 111, 132, 139, 162, 190, 191, 359], "resampled_affin": 95, "resampled_atla": 111, "resampled_icbm_mask": 68, "resampled_shap": 95, "resampled_stat_img": 95, "resampling_interpol": [144, 162, 435, 436, 441, 442, 449], "resampling_target": [54, 56, 57, 93, 96, 102, 191, 371, 372, 374, 375, 480], "rescal": [6, 24, 35, 43, 82, 128, 156, 162, 391, 393, 394, 431, 443, 445, 446, 452], "research": [0, 118, 163, 184, 189, 191, 196, 197, 199, 201, 203, 206, 207, 216, 224, 227, 228, 267, 368], "resembl": 169, "reset": 105, "reshap": [41, 43, 44, 47, 53, 69, 79, 109, 130, 143, 162, 168, 238], "resid": [71, 159, 162, 367, 368], "residu": [63, 65, 75, 77, 116, 157, 162, 175, 181, 187, 201, 287, 305, 310, 313, 314, 317, 318, 319, 326, 339, 344, 356, 361, 370, 377, 384, 418, 442, 447, 465, 496, 497], "resili": 68, "resiz": [132, 162, 188, 190, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 356, 359, 373, 376, 382, 384, 385, 387, 448, 450, 451, 452, 454, 464], "reslic": [384, 387], "resolut": [20, 22, 77, 78, 95, 107, 111, 118, 120, 127, 128, 143, 155, 156, 162, 168, 188, 198, 201, 206, 207, 210, 211, 212, 213, 214, 228, 230, 248, 250, 253, 257, 258, 259, 267, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 321, 376, 383, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 437, 450, 456], "resolution_mm": [22, 50, 253, 258], "resolv": [141, 151, 162], "reson": [0, 26, 118, 180, 184, 196, 201, 216, 250, 276], "resort": 70, "resourc": [0, 163, 189, 228], "resp": 120, "respect": [3, 41, 65, 105, 132, 150, 159, 162, 163, 164, 178, 180, 184, 187, 191, 264, 266, 304, 305, 306, 307, 326, 328, 329, 333, 339, 341, 348, 359, 360, 366, 456, 458, 466], "respir": 68, "respond": 180, "respons": [6, 35, 63, 66, 70, 71, 72, 74, 75, 81, 82, 113, 116, 157, 162, 170, 179, 180, 184, 186, 187, 217, 234, 270, 277, 326, 328, 330, 331, 332, 333, 336, 338, 430, 431, 442, 496], "response_funct": 69, "rest": [2, 3, 6, 10, 22, 24, 26, 32, 34, 35, 37, 41, 44, 51, 53, 54, 57, 58, 59, 65, 71, 72, 73, 89, 91, 94, 101, 102, 103, 118, 129, 138, 142, 162, 167, 168, 169, 173, 177, 178, 184, 186, 189, 196, 197, 199, 200, 201, 204, 208, 224, 226, 231, 232, 233, 246, 247, 249, 250, 259, 290, 303, 312, 365, 367, 368, 376, 439, 456, 480, 497], "rest_dataset": [51, 53, 56, 168], "restart": [180, 311], "resting_st": 32, "restom": [118, 367, 368, 469], "restor": [128, 162, 163], "restrict": [31, 32, 33, 91, 93, 96, 147, 162, 170, 175, 191, 197, 246, 303], "restructur": 190, "restructuredtext": 178, "restult": 65, "result": [3, 6, 7, 10, 15, 16, 25, 32, 35, 38, 39, 43, 44, 45, 46, 47, 50, 51, 52, 54, 58, 60, 61, 64, 67, 68, 70, 73, 74, 79, 80, 81, 86, 88, 89, 90, 94, 95, 96, 97, 98, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 118, 119, 121, 128, 129, 131, 140, 147, 150, 153, 158, 159, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 189, 190, 191, 193, 196, 198, 203, 204, 207, 217, 223, 224, 237, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 276, 281, 283, 289, 292, 293, 300, 304, 305, 308, 315, 316, 318, 319, 320, 326, 333, 335, 339, 341, 344, 354, 355, 356, 359, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 425, 429, 443, 445, 446, 450, 459, 460, 465, 478, 489, 491, 494, 497], "result_img": [87, 105, 189, 355], "result_img_with_head": [105, 355], "result_t": 465, "resultfilt": [121, 281], "results_": 326, "resum": [247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 267, 270, 271, 272, 276, 278, 279, 280, 285, 290, 300], "retain": [73, 157, 162, 170, 171, 180, 238, 239, 240, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456, 459, 460], "retest": 118, "retinotop": 82, "retriev": [2, 16, 17, 21, 23, 47, 51, 92, 93, 94, 120, 157, 162, 165, 170, 173, 185, 189, 191, 225, 262, 287, 291, 367, 368, 419, 420], "return": [2, 3, 4, 10, 15, 19, 21, 22, 32, 33, 35, 38, 42, 43, 44, 45, 46, 47, 50, 51, 53, 59, 68, 69, 73, 81, 82, 86, 89, 90, 96, 103, 106, 110, 111, 112, 120, 121, 128, 129, 130, 132, 134, 139, 143, 150, 153, 155, 157, 158, 159, 162, 163, 165, 170, 172, 175, 177, 178, 184, 186, 187, 189, 226, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 476, 477, 478, 488, 494], "return_cod": [51, 53], "return_count": 52, "return_dist": 52, "return_estim": 101, "return_index": 37, "return_invers": 54, "return_label_map": 465, "return_label_nam": 422, "return_masked_atla": [130, 162, 459], "return_offset": 348, "return_raw_data": 279, "return_z_scor": [73, 323], "reus": [2, 16, 19, 21, 22, 32, 38, 43, 45, 46, 51, 53, 73, 77, 89, 90, 106, 110], "reusabl": [132, 162], "rev": 187, "reveal": [54, 104, 106, 175], "revers": [94, 143, 150, 162], "review": [150, 162, 163, 175, 187, 197, 219], "revis": 365, "rewamp": [125, 162], "reward": 266, "rework": [127, 137, 143, 150, 156, 162], "rewritten": 121, "rex": [118, 200, 249], "reynold": [26, 118], "rf": [43, 69], "rf_model": 69, "rfe": [47, 101, 173], "rfe_svc": 101, "rfmri": [118, 197], "rgb": [34, 451], "rgb_": 26, "rgba": [444, 451], "rgbcmyk": [53, 168], "rh": 223, "rho": 313, "rich": [132, 162, 170], "richard": [103, 118], "richardson": [118, 206, 267], "rid": [326, 339], "ridg": [33, 43, 47, 114, 171, 172, 176, 304, 305, 306, 307], "ridge_classifi": [32, 171, 304, 306], "ridge_cv": 47, "ridge_regressor": [171, 305, 307], "ridgeclassifi": 39, "ridgeclassifiercv": [128, 162, 304, 305, 306, 307], "ridgecv": [47, 128, 162, 304, 305, 306, 307], "ridgwai": [106, 118, 390], "riemannian": 118, "right": [7, 10, 13, 16, 19, 21, 23, 24, 26, 27, 34, 39, 43, 47, 50, 53, 61, 67, 68, 70, 73, 74, 78, 81, 82, 88, 96, 101, 114, 134, 140, 145, 150, 153, 155, 162, 167, 168, 174, 178, 186, 190, 205, 210, 211, 212, 213, 214, 215, 223, 226, 246, 252, 254, 255, 260, 274, 276, 284, 289, 290, 292, 301, 306, 307, 340, 358, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 425, 426, 427, 429, 430, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 452, 466, 472, 473, 479, 480, 494, 497], "right_coord": 7, "right_data": 7, "right_fac": 7, "right_hemi": 50, "rigid": [66, 201], "rigor": 342, "ring": 467, "rint": 69, "riobueno": [118, 206, 267], "rise": 167, "risk": [6, 118, 186], "rissman": [103, 118], "rivera": [118, 121, 225, 281, 283], "rm": 187, "rng": [7, 46, 66, 114, 178], "roalf": [59, 118, 367, 368], "robert": [0, 118, 127, 128, 155, 162, 177, 200, 201, 218, 249], "roberto": [0, 118, 140, 150, 162, 232, 259], "robinson": [106, 118, 197, 390], "robust": [3, 33, 42, 96, 118, 152, 162, 168, 170, 174, 184, 306, 307, 367, 368, 497], "roc": [41, 170, 184], "roc_auc": [32, 34, 101, 173, 304, 306], "roc_auc_ovr": 41, "roc_auc_scor": 41, "rochel": [118, 226], "rockland": [118, 226], "roelof": [0, 127, 128, 162], "roffman": [118, 230, 236, 258, 262], "roger": [118, 200, 210, 211, 212, 213, 214, 249, 289], "rohan": [0, 134, 162], "roi": [10, 11, 18, 22, 27, 30, 35, 48, 59, 61, 85, 88, 90, 93, 99, 102, 111, 116, 118, 121, 129, 142, 150, 153, 162, 170, 186, 188, 204, 208, 229, 230, 231, 252, 258, 264, 265, 266, 270, 304, 349, 351, 354, 356, 357, 361, 362, 370, 374, 376, 404, 433, 435, 441, 442, 444, 445, 447, 494, 496, 497], "roi_img": [71, 441], "roi_map": [10, 23, 24, 130, 162, 404, 444, 445], "roi_siz": 47, "rois_aal": 246, "rois_cc200": 246, "rois_cc400": 246, "rois_dosenbach160": 246, "rois_ez": 246, "rois_ho": 246, "rois_tt": 246, "rokem": [0, 135, 147, 162], "role": [6, 157, 162], "romuald": [147, 162], "ronald": [0, 122, 162], "rooij": [118, 367, 368], "room": 439, "roorke": 0, "root": [52, 177, 187, 196, 238, 254, 255, 317, 367, 453, 454, 455], "rosa": [118, 201, 250], "rosen": [118, 205, 252], "rosenblatt": [78, 118, 321], "rot_i": 59, "rot_x": 59, "rot_z": 59, "rotat": [34, 66, 86, 96, 191, 329, 367], "rotation_matrix": 86, "rothberg": [0, 144, 147, 162], "roti": 104, "rotx": 104, "rotz": 104, "rough": [239, 304, 305, 306, 307, 309, 310, 311, 312, 326, 339, 345, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 455, 456], "roughli": [43, 171, 178, 180, 201], "round": [52, 443, 446], "rout": [238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "routin": [68, 91, 189, 279, 494], "row": [3, 6, 41, 43, 59, 65, 68, 74, 101, 103, 121, 154, 162, 184, 281, 283, 316, 317, 318, 319, 326, 339, 340, 341, 401, 403, 406, 420, 427, 433, 436, 437, 439, 440, 441, 442, 453, 465, 478, 480], "row_numb": 103, "ro\u00dfmanith": [0, 130, 162], "rprojector": [15, 395, 419], "rrid": [0, 35, 64, 70, 73, 104, 113, 479], "rsn": [2, 22, 89, 142, 162, 200, 232, 249, 259], "rsn10": [232, 259], "rsn20": [232, 259], "rsn28": [22, 200, 249], "rsn70": [232, 259], "rsn_indic": [200, 249], "rsn_name": 200, "rsquared_statmap": [65, 77, 366], "rst": [127, 162, 163, 178, 187], "rt": 233, "rtol": 348, "ru": [118, 230, 258], "ruben": [59, 118, 367, 368], "rudimentari": 32, "ruf012": [133, 162], "ruff": [132, 162, 178, 187], "rugg": 118, "rule": [126, 162, 170, 171, 178, 197, 304, 305, 306, 307], "run": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 120, 130, 132, 133, 134, 137, 141, 155, 157, 159, 162, 163, 164, 165, 167, 170, 171, 174, 175, 176, 177, 178, 179, 182, 186, 187, 189, 190, 191, 201, 209, 217, 223, 234, 240, 242, 269, 270, 276, 280, 287, 288, 311, 312, 323, 326, 329, 342, 344, 345, 356, 359, 368, 376, 385, 387, 390, 427, 430, 431, 434, 436, 442, 447, 453, 464, 465, 468, 479, 480, 494, 495, 496, 497], "run_face_mask": 106, "run_glm": [35, 155, 159, 162], "run_house_mask": 106, "run_img": [64, 70, 104, 113, 326], "run_label": [3, 31, 32, 34, 35, 101, 170], "run_mask": 106, "run_seri": 381, "run_target": 96, "runnabl": 178, "runner": [2, 3, 4, 6, 7, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 93, 94, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 480], "runtim": [46, 159, 162, 178, 309, 310], "runtimeerror": [5, 102], "runtimewarn": [61, 72, 73, 79, 81, 114], "ruparel": [59, 118, 367, 368], "russel": [59, 103, 118, 121, 170, 186, 222, 225, 226, 281, 283, 318, 319, 367, 368], "rv": 0, "rx": 66, "ry": 66, "ryan": [0, 118, 150, 162, 231, 266], "rz": 66, "r\u00e9mi": [0, 128, 129, 130, 131, 132, 133, 134, 144, 160, 162], "s00062": [26, 118], "s01": [79, 109], "s1": 82, "s102": [118, 218], "s1053": [118, 205, 218, 252], "s151": [118, 205, 252], "s2": 82, "s3": 65, "s_calcarin": 480, "s_central": 480, "s_cingul": 480, "s_circular_insula_": 480, "s_circular_insula_inf": 480, "s_circular_insula_sup": 480, "s_collat_transv_": 480, "s_collat_transv_post": 480, "s_front_inf": 480, "s_front_middl": 480, "s_front_sup": 480, "s_interm_prim": 480, "s_intrapariet_and_p_tran": 480, "s_oc": 480, "s_oc_middle_and_lunatu": 480, "s_oc_sup_and_transvers": 480, "s_occipital_": 480, "s_orbit": 480, "s_orbital_later": 480, "s_orbital_m": 480, "s_parieto_occipit": 480, "s_pericallos": 480, "s_postcentr": 480, "s_precentr": 480, "s_suborbit": 480, "s_subpariet": 480, "s_temporal_inf": 480, "s_temporal_sup": 480, "s_temporal_transvers": 480, "sa": [220, 251], "sabb": [118, 268, 286], "sabuncu": [118, 230, 236, 258, 262], "sachin": [0, 159, 162], "saclai": [0, 178], "sadaghiani": [51, 118, 169, 311], "sadato": [43, 44, 118, 223, 280], "sadek": [118, 200, 249], "sadil": [0, 129, 132, 134, 162], "safe": [73, 105, 142, 162], "sage": [0, 159, 162], "sagit": 362, "sagitt": [15, 96, 134, 162, 399, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 427, 429, 433, 435, 436, 438, 440, 441, 442, 466], "sai": [6, 7, 67, 71, 101, 105, 121, 178, 180, 187, 316], "said": [52, 180], "sake": [24, 39, 68, 81, 109], "salat": [118, 205, 252], "salienc": [54, 266], "salimi": [118, 164, 197], "salma": [0, 122, 125, 135, 137, 144, 147, 148, 162], "salo": [0, 127, 128, 129, 130, 154, 157, 158, 159, 162], "salt": 71, "sam": [0, 128, 162], "samanta": [0, 129, 162], "samantha": [118, 226], "samara": [118, 168, 177, 239, 242, 456], "same": [2, 3, 6, 13, 15, 16, 19, 21, 22, 24, 26, 32, 36, 38, 39, 41, 43, 44, 45, 46, 50, 51, 52, 53, 58, 61, 66, 68, 70, 71, 72, 73, 74, 86, 88, 89, 90, 96, 101, 103, 104, 106, 110, 113, 114, 121, 129, 135, 142, 147, 153, 154, 155, 156, 157, 162, 163, 164, 165, 168, 169, 170, 171, 175, 177, 178, 180, 182, 183, 184, 187, 189, 190, 191, 193, 209, 218, 234, 237, 238, 239, 240, 242, 254, 255, 263, 264, 266, 271, 272, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 309, 310, 311, 312, 326, 328, 329, 333, 339, 341, 344, 345, 346, 355, 357, 359, 364, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 388, 396, 397, 398, 399, 400, 409, 410, 413, 414, 415, 416, 421, 427, 429, 433, 435, 436, 439, 440, 441, 442, 450, 453, 454, 457, 462, 463, 465, 466, 468, 489], "sami": [0, 159, 162], "sampl": [3, 9, 29, 33, 36, 38, 43, 52, 61, 66, 68, 70, 72, 76, 77, 79, 80, 83, 84, 86, 96, 104, 109, 111, 113, 116, 118, 120, 132, 134, 153, 155, 156, 162, 163, 165, 170, 175, 177, 179, 180, 183, 186, 191, 196, 201, 207, 219, 226, 238, 239, 240, 242, 267, 276, 294, 295, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 327, 328, 330, 331, 332, 333, 336, 337, 338, 339, 341, 344, 348, 349, 355, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 389, 390, 417, 428, 431, 435, 437, 446, 447, 453, 454, 455, 456, 467, 468, 469, 478, 492, 496], "sample_horizont": 82, "sample_mask": [52, 55, 56, 59, 61, 68, 127, 129, 132, 133, 134, 155, 157, 159, 162, 326, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456, 468], "sample_point": 25, "sample_vert": 82, "sample_weight": [304, 305, 306, 307, 309, 310], "sampling_r": 467, "san": 0, "sang": 118, "saniti": 191, "sanz": [0, 150, 162], "sarah": [118, 200, 249], "sarang": 118, "saroja": [118, 226], "sass": [0, 157, 162], "sassenhagen": [0, 144, 162], "satisfi": [177, 187], "sato": [43, 44, 118, 223, 280], "satrajit": [118, 121, 225, 281, 283], "satterthwait": [59, 118, 367, 368], "save": [3, 6, 10, 15, 22, 24, 31, 35, 44, 45, 46, 51, 52, 53, 54, 64, 68, 70, 73, 74, 88, 93, 94, 96, 101, 102, 103, 104, 107, 111, 112, 113, 121, 129, 131, 132, 134, 148, 157, 162, 163, 168, 177, 189, 190, 191, 220, 281, 283, 309, 310, 319, 326, 339, 366, 371, 372, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 464, 466, 470, 471, 472, 473, 475, 497], "save_as_html": [35, 64, 70, 73, 77, 93, 94, 104, 113, 191, 448, 449, 450, 451, 452, 464, 466, 494], "save_glm_to_bid": [65, 70, 77, 127, 131, 134, 159, 162], "savefig": [10, 44, 58, 64, 70, 77, 104, 113, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 433, 435, 436, 438, 440, 441, 442, 494], "savio": [0, 122, 162], "saw": 15, "sax": [118, 206, 267], "sayal": [0, 132, 162], "scalabl": [118, 172, 306, 307], "scalar": [104, 175, 191, 313, 314, 316, 317, 318, 319, 361, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 429, 438], "scalarformatt": 52, "scale": [6, 16, 41, 44, 52, 57, 64, 66, 69, 71, 72, 74, 96, 118, 121, 140, 147, 157, 162, 171, 175, 191, 201, 203, 223, 225, 250, 276, 281, 283, 296, 297, 299, 309, 310, 313, 316, 317, 318, 319, 321, 326, 334, 341, 342, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442, 453, 454, 455, 465, 466, 468, 478, 480, 497], "scale007": [201, 250], "scale012": [201, 250], "scale020": [201, 250], "scale036": [201, 250], "scale064": [201, 250], "scale122": [201, 250], "scale197": [201, 250], "scale325": [201, 250], "scale444": [201, 250], "scale_": 16, "scale_loc": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "scale_s": [16, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "scale_unit": [16, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "scalebar": [16, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 494], "scaling_axi": [103, 157, 162, 326], "scan": [6, 35, 38, 58, 61, 66, 67, 68, 69, 72, 96, 103, 118, 155, 162, 167, 175, 180, 184, 189, 199, 201, 216, 220, 233, 276, 311, 312, 326, 328, 333, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 428, 454, 456, 459, 460, 462, 468], "scanner": [68, 105, 180, 184, 367], "scap": 65, "scatter": [25, 96, 159, 162, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 438], "scatter3d": 404, "scenario": [68, 179, 180, 191], "schaefer": [118, 193, 237, 258], "schaefer2018_400parcels_7networks_order_fslmni152_1mm": 480, "schaefer2018_localglob": [230, 258], "schaefer_2018": 480, "schedul": 163, "schema": [134, 162], "schemat": [394, 429, 435, 438], "scheme": [9, 29, 31, 35, 38, 39, 41, 101, 116, 134, 153, 162, 164, 170, 171, 173, 177, 240, 304, 305, 306, 307, 390, 446, 478, 496], "schizophrenia": [118, 142, 162, 184, 216], "schlachter": [118, 226], "schlaggar": [61, 118, 201, 208, 229, 231, 264, 265, 266, 367, 368], "school": [0, 227], "schouten": [3, 33, 34, 40, 101, 118, 217, 270], "schre": [118, 216], "schwartz": [118, 122, 162, 170, 172, 203, 276, 306, 307], "schwarz": [118, 121, 225, 281, 283], "scienc": [0, 3, 33, 34, 40, 47, 61, 101, 118, 164, 168, 175, 176, 186, 196, 197, 201, 207, 208, 217, 226, 232, 238, 239, 253, 259, 264, 267, 270, 308, 368, 456, 497], "scientif": [118, 154, 157, 162, 178, 186, 196, 203, 219, 228, 257, 268, 276, 286, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 435, 436, 437, 441, 442, 443, 445, 446], "scientififc": 186, "scikit": [3, 36, 52, 96, 100, 106, 108, 115, 116, 119, 125, 127, 130, 132, 134, 135, 140, 142, 143, 144, 147, 150, 155, 157, 162, 163, 164, 167, 170, 171, 172, 174, 175, 177, 178, 185, 186, 187, 238, 239, 240, 270, 304, 305, 306, 307, 308, 311, 312, 351, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 442, 453, 454, 455, 456, 495, 496, 497], "scilifelab": 0, "scipi": [24, 47, 65, 69, 78, 81, 96, 104, 107, 112, 125, 127, 130, 140, 144, 145, 147, 150, 155, 157, 159, 162, 177, 190, 272, 295, 298, 353, 363, 382, 383, 384, 385, 386, 387, 439, 467], "scissor": [32, 34, 35, 41, 189], "scl": 44, "scl_inter": [59, 105], "scl_scope": 105, "scl_slope": [59, 105], "score": [26, 32, 34, 39, 41, 44, 45, 47, 51, 54, 72, 82, 101, 102, 106, 107, 109, 110, 112, 114, 131, 134, 153, 154, 162, 170, 171, 173, 174, 176, 186, 227, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 343, 363, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 428, 435, 436, 437, 441, 442, 443, 445, 446, 454, 456, 468], "score_ch": 34, "score_func": 114, "score_img": 39, "score_map_img": 43, "score_mean": [32, 34], "score_orig_data": 390, "scoreatpercentil": [90, 107, 363], "scorer": [304, 305, 306, 307], "scorer_": [304, 305, 306, 307], "scores_": [47, 175, 308], "scores_img": 38, "scores_img_": [38, 308], "scores_nilearn": 41, "scores_sklearn": 41, "scores_std": [54, 102], "scorr_2level": [204, 251], "scorr_mean": [204, 251], "scott": [103, 118, 231, 266], "scr_001362": [0, 35, 64, 70, 73, 104, 113, 479], "scrambl": [72, 96, 179, 234], "scrambledpix": [32, 34, 35, 41, 96, 189], "scratch": [120, 163], "screen": [33, 35, 42, 46, 118, 176, 220, 304, 305, 306, 307, 309, 310], "screening_percentil": [31, 35, 36, 41, 45, 46, 114, 170, 304, 305, 306, 307, 309, 310], "screening_percentile_": [304, 305, 306, 307, 309, 310], "screening_percentile_rang": 36, "script": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 156, 162, 163, 172, 178, 189, 190, 191, 204, 494, 495], "scroll": 107, "scrollabl": [131, 162], "scrub": [68, 127, 132, 155, 157, 162, 165, 201, 326, 329, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456, 468], "sd": [316, 318, 319, 320], "sdata": [118, 228, 257, 268, 286], "sdist": 187, "se": 364, "search": [39, 91, 128, 162, 178, 187, 240, 304, 305, 306, 307, 364], "search_light": [39, 308], "searchlight": [30, 47, 48, 116, 118, 132, 141, 144, 147, 153, 162, 170, 174, 184, 185, 186, 270, 292, 293, 349, 351, 354, 356, 357, 370, 376, 436, 442, 446, 447, 474, 496, 497], "searchlightifittedsearchlight": 38, "seattl": 0, "sebastian": 118, "sec": [54, 267], "second": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 129, 132, 162, 167, 168, 176, 177, 178, 179, 180, 181, 182, 184, 191, 233, 234, 273, 275, 276, 281, 283, 288, 292, 293, 304, 305, 306, 307, 309, 310, 311, 312, 321, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 344, 349, 355, 363, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 428, 431, 434, 435, 436, 442, 443, 444, 445, 446, 447, 452, 454, 456, 464, 465, 466, 467, 468, 474, 491, 496, 497], "second_level": [77, 78, 79, 80, 81, 82, 83, 104, 113, 133, 159, 162, 183, 466], "second_level_contrast": [77, 79, 81, 339, 341, 466], "second_level_glm": 113, "second_level_input": [78, 81, 82, 104, 113, 157, 159, 162, 339, 341, 366, 466], "second_level_model": [77, 78, 81, 83, 104], "second_level_model_pair": 82, "second_level_model_unpair": 82, "second_level_stat_typ": 339, "second_roi_data": 96, "second_roi_img": 96, "secondari": 178, "secondlevelmodel": [77, 78, 79, 81, 82, 83, 104, 113, 130, 132, 133, 134, 157, 162, 183, 326, 341, 366, 466], "secondlevelmodelifittedsecond": [77, 79], "secret": 163, "section": [2, 3, 4, 15, 26, 42, 50, 51, 52, 57, 59, 71, 93, 96, 101, 103, 118, 119, 120, 128, 142, 147, 157, 162, 163, 164, 165, 167, 168, 170, 171, 173, 175, 178, 180, 183, 187, 188, 191, 193, 227, 281, 285, 371, 372, 374, 375, 391, 421, 427, 429, 433, 435, 436, 438, 440, 441, 442, 453, 464, 480, 485, 486, 494], "secur": 163, "securitylab": 163, "see": [0, 3, 6, 7, 9, 10, 13, 14, 15, 16, 17, 21, 22, 23, 24, 26, 28, 30, 32, 33, 36, 38, 41, 42, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 59, 61, 63, 72, 73, 74, 76, 77, 82, 85, 88, 91, 93, 98, 102, 103, 106, 107, 110, 111, 112, 114, 116, 118, 120, 121, 123, 129, 132, 135, 141, 147, 148, 150, 154, 155, 157, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 182, 184, 187, 189, 191, 193, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 322, 326, 328, 330, 331, 332, 333, 336, 337, 338, 339, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 427, 428, 434, 435, 436, 437, 440, 441, 442, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 466, 467, 468, 478, 480, 485, 486, 494, 495], "seed": [7, 9, 29, 49, 51, 62, 103, 116, 132, 147, 159, 162, 179, 188, 260, 267, 292, 293, 300, 306, 307, 326, 333, 335, 370, 376, 377, 378, 403, 442, 445, 446, 447, 448, 451, 456, 458, 470, 472, 473, 474, 480, 494, 496, 497], "seed_based_glm": [64, 479], "seed_mask": [58, 64, 103, 179], "seed_time_seri": [58, 64, 179], "seed_timeseri": 24, "seed_to_voxel_correl": 58, "seed_to_voxel_correlations_fisher_z": 58, "seed_to_voxel_correlations_fisher_z_img": 58, "seed_to_voxel_correlations_img": 58, "seed_vertic": 24, "seeds_": 377, "seek": [6, 79, 109, 169, 440], "seem": [68, 77, 101, 177], "seemingli": 170, "seen": [0, 3, 15, 44, 52, 120, 163, 165, 167, 171, 173, 175, 180, 186, 187, 193, 237, 454, 489, 494], "segal": [118, 200, 249], "segment": [59, 118, 168, 184, 201, 205, 216, 218, 224, 227, 256, 262, 271, 367, 456, 458, 478], "segment_half_width": 25, "segreg": [118, 209], "seidman": [118, 205, 216, 252], "seismic": 114, "seismic_r": 432, "seitzman": [118, 150, 162, 266], "select": [3, 6, 15, 16, 20, 21, 24, 31, 34, 35, 36, 37, 44, 45, 58, 59, 68, 78, 91, 96, 103, 109, 113, 118, 119, 129, 140, 141, 142, 144, 152, 153, 155, 157, 162, 163, 165, 168, 171, 172, 173, 174, 175, 176, 177, 190, 191, 201, 223, 239, 240, 250, 267, 268, 278, 281, 283, 285, 303, 304, 305, 306, 307, 309, 310, 311, 312, 339, 341, 351, 363, 367, 368, 379, 435, 437, 440, 442, 443, 445, 446, 453, 454, 456, 478, 494, 497], "select_from_index": 65, "selected_volum": 2, "selectkbest": [37, 44, 114, 142, 162], "selector": 41, "selectpercentil": [41, 101, 142, 162], "self": [21, 22, 50, 51, 53, 55, 81, 89, 90, 96, 163, 178, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "semant": [118, 155, 157, 162, 175], "semi": [177, 216], "semilogx": 52, "send": [178, 453, 455], "sender": 178, "sens": [108, 114, 170, 186, 304, 305, 306, 307, 316, 318, 319, 394, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417], "sensibl": [36, 170, 173, 239, 242], "sensit": [6, 43, 51, 59, 118, 180, 184, 344, 368, 390, 468], "sensori": 180, "sensorimotor": 61, "sent": [432, 439], "sentenc": [67, 68, 70, 74, 83, 104, 118, 209, 220, 276], "sentence_listen": [67, 68, 70, 221], "sentence_read": [67, 68, 70, 221], "seop": [0, 157, 162], "sep": [31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 65, 71, 72, 74, 96, 106, 189, 391, 393, 394], "separ": [3, 7, 36, 41, 50, 51, 53, 64, 68, 70, 73, 85, 90, 96, 99, 103, 104, 111, 113, 116, 140, 157, 159, 162, 163, 168, 169, 171, 175, 178, 180, 184, 187, 189, 190, 197, 245, 262, 356, 367, 391, 393, 394, 421, 439, 441, 447, 456, 457, 458, 496], "sepideh": [51, 118, 169, 311], "septemb": [118, 129, 141, 156, 162, 168, 456], "sepulcr": [118, 201, 230, 236, 258, 262], "sequenc": [41, 61, 64, 68, 70, 81, 129, 162, 170, 179, 184, 189, 191, 276, 304, 305, 306, 307, 316, 318, 319, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 443, 445, 446, 448, 466, 467, 478], "sequenti": [6, 26, 134, 162, 177, 189, 440], "sequentialbackend": [35, 37, 42, 53, 56, 60, 61, 101], "sereno": [118, 205, 210, 211, 212, 213, 214, 289], "seri": [6, 35, 49, 50, 54, 59, 63, 68, 75, 94, 96, 97, 100, 114, 115, 116, 118, 120, 127, 130, 132, 137, 154, 158, 162, 164, 166, 168, 170, 175, 180, 181, 188, 189, 190, 201, 227, 232, 238, 247, 250, 273, 286, 287, 290, 302, 311, 312, 313, 326, 329, 339, 341, 344, 345, 354, 356, 357, 360, 361, 367, 370, 371, 373, 374, 375, 376, 377, 381, 384, 403, 418, 428, 431, 442, 447, 458, 459, 460, 465, 469, 480, 483, 485, 496, 497], "serial": [131, 162, 177, 220], "seriou": 187, "serr": [74, 118, 203, 276], "serv": [154, 162, 178, 187, 207, 253, 267], "server": [107, 163, 178, 281, 283], "servic": 178, "servicesatlas": 218, "session": [31, 72, 120, 155, 157, 162, 170, 182, 186, 217, 312, 329, 344, 364, 495], "session_error": [59, 105], "session_target": [3, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 96, 101, 106, 120, 189, 217, 270], "set": [3, 6, 15, 16, 26, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 58, 59, 61, 65, 67, 68, 71, 81, 82, 83, 91, 96, 98, 101, 102, 103, 104, 105, 113, 116, 118, 121, 127, 128, 129, 130, 132, 134, 140, 144, 150, 153, 154, 156, 157, 159, 162, 163, 164, 165, 168, 170, 172, 174, 177, 179, 180, 181, 182, 183, 184, 185, 187, 189, 191, 198, 201, 223, 231, 233, 238, 239, 240, 262, 266, 270, 276, 281, 283, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 325, 326, 328, 329, 333, 339, 340, 341, 342, 343, 344, 348, 351, 356, 358, 359, 360, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 426, 427, 428, 429, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 458, 461, 466, 468, 478, 480, 494, 496, 497], "set_axis_bgcolor": [142, 162], "set_axis_off": 13, "set_axisbelow": [54, 102], "set_config": [191, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "set_fit_request": [239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 456], "set_index": 71, "set_inverse_transform_request": [238, 311, 312, 371, 372, 374, 375, 377, 378, 379, 380, 453, 454, 455, 456], "set_label_coord": 52, "set_machine_nam": 163, "set_major_formatt": [51, 52], "set_param": [238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "set_score_request": [304, 305, 309, 310, 311, 312, 454], "set_size_inch": [43, 71, 114], "set_tick": 41, "set_ticklabel": 41, "set_titl": [64, 66, 71, 80, 81, 82, 93, 103, 109], "set_transform_request": [238, 308, 311, 312, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 454, 456], "set_xlabel": [33, 41, 46, 71], "set_xtick": 41, "set_ylabel": [33, 41, 46, 71, 77, 80], "set_ylim": 52, "set_ytick": 41, "setup": [64, 128, 158, 162, 183, 246, 247, 248, 249, 250, 251, 252, 256, 259, 260, 262, 270, 271, 279, 280, 285, 290, 300, 495], "setuptool": [128, 162], "sever": [6, 26, 31, 33, 36, 41, 52, 54, 64, 65, 68, 73, 88, 96, 102, 105, 107, 111, 114, 120, 128, 132, 134, 141, 147, 162, 163, 164, 172, 174, 175, 177, 178, 180, 182, 184, 187, 189, 190, 191, 204, 219, 231, 240, 326, 344, 355, 372, 385, 387, 388, 440, 454, 465, 468, 480, 497], "sex": [77, 80, 118, 183, 199, 216, 246, 278, 290, 304, 305, 306, 307, 309, 310, 479], "sex_clust": 77, "sex_design": 77, "sex_stat": 77, "sf": 112, "sform": [3, 159, 162], "sform_cod": [59, 105], "sfvnmac": [144, 147, 162], "sh": 187, "shade": [23, 443, 445, 446, 452], "shah": [0, 157, 162], "shalit": [118, 207, 253], "shall": 68, "shallow": [472, 473], "shape": [2, 3, 4, 6, 21, 26, 27, 41, 43, 44, 50, 53, 54, 56, 57, 58, 59, 61, 64, 67, 68, 69, 70, 72, 73, 86, 93, 95, 96, 101, 103, 106, 107, 109, 110, 111, 112, 114, 120, 133, 134, 155, 156, 162, 165, 167, 168, 170, 173, 179, 180, 184, 186, 188, 191, 227, 238, 239, 240, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 279, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 322, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 349, 350, 351, 355, 356, 359, 360, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 429, 430, 438, 443, 445, 446, 448, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 466, 468, 469, 472, 474], "shaquanna": [118, 226], "sharad": [118, 226], "share": [104, 118, 121, 153, 162, 164, 169, 178, 189, 196, 197, 203, 204, 207, 225, 242, 251, 254, 255, 276, 281, 283], "shared_arrai": 111, "shared_memori": 111, "sharedmemori": 111, "sharex": 52, "sharp": [443, 445, 446, 494], "sharpen": 467, "shawn": [118, 235, 261], "shehzad": 118, "shell": [189, 303], "shevchenko": [0, 132, 162], "shift": [68, 153, 159, 162, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 468], "shinji": [118, 171], "shinohara": [59, 118, 367, 368], "ship": [4, 11, 13, 22, 96, 147, 162, 184, 193, 237, 489, 494], "shm": 111, "shmelkov": [0, 122, 162], "shoe": [32, 34, 35, 36, 41, 189], "short": [46, 68, 100, 103, 115, 116, 121, 132, 162, 177, 178, 184, 230, 238, 260, 281, 282, 283, 284, 292, 293, 300, 304, 363, 378, 380, 439, 443, 447, 474, 496], "shorten": [129, 159, 162], "shorter": [3, 68, 177, 367], "shortlog": [122, 123, 125, 126, 135, 137, 140, 162], "should": [4, 6, 15, 16, 17, 26, 37, 38, 43, 44, 45, 50, 52, 54, 55, 56, 57, 58, 59, 61, 64, 67, 68, 69, 70, 71, 72, 73, 81, 90, 91, 93, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 111, 120, 121, 134, 143, 144, 154, 157, 158, 162, 163, 168, 169, 170, 171, 173, 177, 178, 180, 186, 187, 191, 193, 198, 233, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 323, 326, 328, 329, 333, 334, 339, 340, 342, 343, 344, 354, 355, 357, 360, 362, 363, 365, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 390, 391, 404, 424, 427, 429, 433, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 450, 452, 453, 454, 455, 456, 457, 458, 462, 464, 465, 466, 468, 480, 489, 492, 494, 495], "shouldn": [103, 187], "shout": [147, 162], "show": [2, 3, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 120, 130, 132, 142, 148, 153, 155, 157, 162, 163, 164, 165, 168, 170, 171, 173, 175, 178, 180, 182, 183, 190, 191, 217, 234, 270, 282, 301, 313, 326, 339, 401, 403, 404, 406, 408, 410, 412, 414, 416, 418, 425, 444, 448, 451, 456, 466, 480, 494, 496], "show_lr": 449, "showcas": [54, 63, 76, 78, 102, 116, 167, 172, 178], "shown": [16, 22, 26, 41, 43, 57, 68, 71, 96, 121, 155, 162, 164, 169, 170, 179, 180, 259, 368, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 437, 438, 441, 448, 450, 452, 480], "shrunk": 238, "shuffl": [38, 39, 51, 53, 306, 307], "sici": [118, 210, 211, 212, 213, 214, 235, 261, 289], "side": [6, 53, 56, 66, 68, 96, 106, 127, 134, 154, 162, 163, 175, 187, 281, 314, 382, 385, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 426, 428, 437, 465, 466], "sidti": [118, 226], "siemen": 233, "sig": 109, "sigma": [313, 316, 317, 318, 319], "sigman": [118, 209], "sign": [10, 15, 24, 45, 106, 107, 128, 162, 175, 189, 197, 309, 310, 343, 363, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 435, 440, 448, 450, 452], "signal": [3, 6, 30, 33, 42, 46, 47, 48, 49, 51, 52, 53, 55, 58, 60, 62, 64, 65, 68, 69, 71, 72, 73, 77, 80, 85, 88, 96, 99, 103, 112, 116, 118, 126, 127, 128, 129, 130, 133, 146, 148, 150, 154, 155, 159, 162, 164, 166, 167, 168, 169, 170, 172, 175, 177, 180, 184, 188, 190, 197, 201, 207, 238, 239, 240, 242, 246, 253, 254, 256, 264, 265, 267, 270, 278, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 329, 339, 341, 344, 350, 351, 356, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 390, 422, 428, 429, 438, 439, 447, 448, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 480, 483, 496, 497], "signal_sc": [35, 64, 70, 71, 73, 103, 113, 157, 162, 326, 329, 479], "signals_to_img_label": [128, 162, 459, 463], "signals_to_img_map": [128, 162, 460, 462], "signatur": [148, 162, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "signed_neg_log_pv": [45, 106], "signed_neg_log_pvals_unmask": [45, 106], "signifi": [184, 304, 305, 306, 307], "signific": [26, 36, 52, 68, 77, 82, 111, 118, 134, 162, 170, 175, 177, 180, 182, 184, 341, 390, 465], "significantli": [45, 68, 147, 162, 175, 177], "sigpro": 118, "sikka": [118, 226], "silent": [148, 157, 162, 187], "silva": [118, 200, 249], "simexp": [0, 494], "similar": [10, 24, 25, 32, 51, 58, 81, 96, 98, 103, 104, 120, 135, 147, 148, 150, 157, 162, 164, 167, 169, 171, 172, 175, 183, 184, 191, 306, 307, 368], "similarli": [16, 58, 96, 134, 162, 189], "simon": [0, 59, 118, 147, 152, 162, 230, 232, 258, 259, 367, 368], "simpl": [3, 5, 26, 27, 31, 33, 37, 39, 41, 43, 50, 59, 63, 67, 75, 77, 78, 79, 81, 82, 85, 86, 89, 91, 93, 96, 99, 101, 103, 104, 105, 116, 118, 120, 121, 140, 142, 147, 157, 162, 164, 165, 171, 173, 174, 177, 178, 179, 182, 183, 184, 186, 190, 191, 217, 234, 238, 239, 240, 267, 269, 276, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 317, 323, 326, 339, 351, 356, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 428, 441, 442, 447, 453, 454, 455, 456, 464, 479, 480, 496, 497], "simplefilt": [72, 107], "simpler": 54, "simpleregressionresult": [130, 159, 162, 326], "simplest": [4, 72, 101, 121, 173, 177, 494], "simpli": [3, 26, 68, 69, 70, 73, 91, 104, 105, 107, 109, 111, 113, 121, 180, 187, 191, 201, 250, 343, 355, 361, 436, 440, 441, 442], "simplic": [41, 68, 70, 170], "simplifi": [104, 113, 120, 140, 150, 158, 162, 191, 274, 275], "simuilar": [130, 162], "simul": [30, 48, 49, 62, 66, 69, 103, 116, 132, 162, 166, 175, 240, 308, 389, 439, 447, 496, 497], "simultan": [51, 177, 242], "sin": [0, 25, 86, 132, 162], "sinc": [15, 20, 35, 42, 61, 68, 73, 77, 79, 83, 104, 113, 120, 127, 155, 162, 177, 180, 197, 238, 248, 254, 255, 263, 284, 288, 304, 314, 322, 330, 331, 332, 336, 337, 338, 364, 365, 367, 368, 371, 372, 373, 374, 375, 376, 377, 390, 394, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 425, 428, 459, 460, 464, 494], "singh": [0, 147, 162], "singl": [1, 3, 8, 15, 24, 26, 32, 33, 35, 49, 50, 52, 62, 63, 64, 67, 68, 69, 70, 73, 75, 79, 81, 88, 96, 103, 108, 111, 113, 116, 118, 121, 125, 130, 132, 134, 153, 154, 155, 156, 159, 162, 164, 171, 175, 177, 178, 179, 182, 186, 189, 191, 198, 221, 233, 248, 267, 281, 287, 288, 301, 304, 305, 306, 307, 316, 318, 319, 326, 339, 341, 342, 345, 356, 359, 370, 371, 372, 374, 375, 376, 377, 403, 425, 427, 430, 431, 434, 436, 437, 439, 440, 442, 447, 449, 454, 456, 465, 479, 494, 496], "single_mni_imag": 351, "singleton": 52, "singular": [80, 316, 318, 319, 350, 469], "siong": [39, 118], "site": [2, 3, 4, 11, 15, 16, 17, 19, 21, 22, 26, 31, 32, 36, 38, 43, 45, 46, 50, 51, 53, 55, 61, 70, 77, 81, 89, 90, 94, 104, 106, 108, 109, 110, 113, 114, 196, 199, 227, 246, 247, 285], "sitek": [0, 128, 162], "sitter": [0, 129, 162], "situat": [16, 61, 164, 170, 171, 189, 361], "six": [44, 201], "size": [6, 16, 23, 28, 35, 43, 47, 51, 52, 56, 61, 64, 65, 70, 73, 79, 81, 82, 83, 86, 93, 96, 104, 105, 106, 107, 109, 111, 114, 129, 131, 137, 147, 148, 150, 157, 162, 168, 175, 176, 177, 180, 201, 220, 227, 278, 339, 341, 342, 363, 371, 372, 374, 375, 382, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 429, 438, 439, 443, 445, 446, 448, 451, 453, 454, 455, 456, 457, 458, 465, 466, 467, 478, 479, 480], "size_vert": [391, 393, 394], "sizeof_hdr": [59, 105], "sizes_": [453, 455], "sketch": 47, "skim": 281, "skip": [40, 52, 59, 129, 132, 162, 163, 404, 444, 447], "sklearn": [3, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 60, 61, 94, 96, 101, 102, 106, 107, 108, 109, 110, 114, 130, 147, 150, 154, 155, 162, 164, 170, 171, 173, 177, 191, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 270, 271, 273, 277, 281, 283, 287, 288, 289, 290, 292, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 335, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "skull": [91, 271, 382, 383, 384, 385, 386, 387], "skullstrip": [156, 162, 184, 297], "sled": [118, 198], "sleep": 0, "slice": [2, 3, 10, 17, 38, 65, 73, 91, 96, 103, 104, 113, 120, 128, 146, 153, 155, 162, 175, 189, 191, 200, 201, 233, 326, 329, 339, 351, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 436, 466, 497], "slice_cod": [59, 105], "slice_dur": [59, 105], "slice_end": [59, 105], "slice_start": [59, 105], "slice_time_ref": [35, 64, 65, 68, 70, 72, 73, 103, 104, 113, 128, 129, 134, 162, 326, 329, 479], "slicer": [157, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 494], "slight": [159, 162], "slightli": [24, 26, 51, 52, 68, 86, 119, 144, 162, 171, 182, 238, 240, 359, 360, 389], "slovakia": 0, "slow": [6, 38, 47, 68, 176, 177, 178, 191, 201, 494], "slower": [101, 173, 177, 359], "slowest": 177, "slowli": 177, "sluggish": 180, "sm": [118, 197], "small": [6, 13, 19, 26, 52, 54, 61, 67, 88, 102, 106, 107, 118, 136, 138, 139, 162, 167, 168, 175, 177, 178, 179, 186, 187, 308, 314, 344, 440, 441, 445, 454, 457, 468, 478, 494], "small_meta_imag": 121, "smaller": [3, 6, 34, 83, 137, 147, 155, 159, 162, 167, 175, 176, 177, 180, 184, 189, 193, 237, 254, 255, 310, 342, 355, 363, 453, 489], "smallest": 177, "smart": 453, "smith": [2, 22, 85, 96, 99, 106, 116, 118, 164, 184, 193, 197, 259, 278, 341, 351, 370, 375, 390, 424, 440, 442, 447, 456, 489, 496], "smith2009": 22, "smith_2009": [2, 22, 89], "smith_bm10": 22, "smith_bm20": 22, "smith_bm70": 22, "smith_rsn10": 22, "smith_rsn20": 22, "smith_rsn70": 22, "smoller": [118, 230, 236, 258, 262], "smooth": [6, 26, 31, 35, 36, 41, 45, 47, 52, 53, 58, 65, 71, 73, 77, 83, 85, 96, 99, 104, 109, 111, 116, 118, 134, 143, 144, 162, 167, 169, 170, 171, 177, 184, 186, 188, 189, 201, 232, 267, 304, 305, 306, 307, 311, 312, 326, 339, 341, 356, 361, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 433, 443, 445, 446, 447, 453, 454, 456, 458, 479, 496, 497], "smooth_anat_img": 4, "smooth_arrai": 458, "smooth_img": [4, 71, 96, 97, 107, 144, 150, 162, 189, 190, 191], "smooth_x": 47, "smootharomanonaggr_bold": [367, 368], "smoothed_img": [97, 189], "smoothen": 178, "smoother": 68, "smoothing_fwhm": [26, 31, 35, 36, 37, 45, 52, 53, 55, 56, 57, 58, 61, 65, 68, 72, 73, 77, 78, 79, 81, 91, 93, 94, 101, 103, 104, 106, 108, 109, 110, 143, 162, 168, 170, 191, 304, 305, 306, 307, 311, 312, 326, 329, 339, 341, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 454, 456, 458, 479, 480], "snapshot": 64, "snippet": 121, "snr": [47, 184, 344, 468], "snyder": [118, 201, 367, 368], "so": [3, 6, 7, 12, 15, 23, 26, 35, 38, 41, 43, 44, 46, 50, 51, 52, 55, 68, 70, 71, 73, 74, 78, 81, 82, 83, 88, 91, 96, 103, 104, 105, 107, 111, 113, 121, 129, 155, 162, 163, 175, 176, 177, 178, 180, 187, 189, 191, 197, 198, 238, 239, 240, 248, 254, 255, 262, 281, 286, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 329, 339, 341, 364, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 437, 443, 445, 446, 450, 452, 453, 454, 455, 456, 478], "sochat": [118, 121, 225, 281, 283], "social": [118, 206, 267], "socioeconom": 227, "soft": 184, "softwar": [0, 70, 74, 105, 118, 133, 162, 180, 181, 184, 248, 366, 425, 495, 497], "solari": [78, 118, 321], "sole": [68, 121, 177, 238, 239, 240, 311, 312, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "solut": [6, 67, 68, 164, 165, 171, 176, 177, 186, 189, 230, 312], "solv": [33, 42, 177, 178, 186, 187, 312, 390], "solver": [41, 118, 176, 304, 306, 309, 310], "somatomotordors": 266, "somatomotorlater": 266, "some": [0, 3, 6, 7, 10, 11, 13, 15, 16, 26, 32, 43, 44, 46, 50, 51, 52, 59, 68, 69, 70, 72, 82, 86, 88, 101, 105, 107, 108, 111, 114, 120, 121, 129, 133, 140, 147, 153, 156, 157, 159, 162, 163, 170, 171, 173, 175, 177, 178, 180, 183, 186, 187, 189, 190, 191, 193, 230, 236, 237, 238, 239, 240, 246, 252, 254, 255, 281, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 326, 339, 342, 344, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 435, 436, 438, 441, 442, 449, 453, 454, 455, 456, 459, 465, 468, 489, 494, 495], "some_high_valu": [45, 46], "someth": 68, "sometim": [61, 66, 68, 82, 121, 125, 129, 162, 163, 170, 178, 184, 187, 313, 317], "somewhat": 68, "son": [118, 318, 319], "song": [0, 157, 162], "soon": [39, 118, 187], "sophi": [0, 128, 162], "sophist": [101, 173], "sorri": 67, "sort": [13, 22, 32, 33, 37, 45, 46, 65, 77, 120, 132, 155, 162, 187, 189, 268, 303, 339, 341, 354, 390], "sought": [177, 184], "sound": [43, 180], "sourav": [0, 147, 162], "sourc": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 163, 164, 165, 169, 177, 178, 187, 228, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 495], "source_affin": 86, "source_img": 360, "sourcery_token": 163, "southern": 0, "sp": 36, "sp1": 44, "sp2": 44, "sp3": 44, "space": [3, 6, 7, 13, 16, 23, 24, 30, 43, 48, 51, 54, 58, 63, 65, 68, 70, 75, 86, 102, 104, 113, 116, 120, 121, 128, 132, 134, 140, 142, 144, 147, 150, 155, 162, 165, 178, 179, 180, 183, 184, 191, 201, 205, 207, 208, 216, 219, 220, 229, 230, 231, 233, 234, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 281, 283, 285, 288, 290, 310, 311, 312, 326, 329, 344, 345, 346, 356, 359, 370, 371, 372, 373, 374, 375, 376, 377, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 427, 428, 429, 433, 434, 435, 436, 438, 440, 441, 442, 447, 448, 449, 451, 453, 455, 456, 468, 478, 496], "space_label": [65, 103, 104, 113, 329], "spacenet": [3, 140, 162, 170, 171, 172, 174, 184, 309, 310, 497], "spacenetclassifi": [176, 304, 305, 310], "spacenetregressor": [42, 46, 176, 309], "span": [56, 72, 180, 427, 440, 441, 442, 449], "spars": [32, 42, 43, 49, 51, 52, 60, 61, 62, 116, 118, 165, 166, 168, 169, 171, 176, 184, 185, 186, 192, 224, 239, 240, 242, 256, 267, 309, 310, 311, 312, 370, 375, 423, 429, 439, 443, 445, 446, 447, 448, 456, 496, 497], "sparser": [72, 96, 169, 309, 310, 456, 458], "sparsifi": [137, 162], "sparsiti": [43, 51, 118, 135, 162, 164, 168, 169, 171, 172, 176, 177, 184, 224, 240, 242, 309, 310, 312, 456], "spatial": [3, 6, 33, 42, 46, 49, 52, 53, 57, 62, 88, 96, 97, 101, 108, 113, 116, 118, 128, 153, 157, 162, 167, 169, 170, 173, 174, 180, 184, 185, 186, 188, 191, 197, 198, 201, 204, 217, 218, 220, 224, 230, 232, 233, 248, 251, 256, 258, 267, 270, 278, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 341, 352, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 440, 442, 447, 454, 456, 458, 480, 496, 497], "spatial_pattern": 224, "spatialimag": [128, 162, 189, 347], "spatiotempor": [103, 118], "speaker": 209, "spec": 163, "special": [121, 128, 150, 162, 178], "specif": [6, 15, 16, 17, 18, 26, 32, 34, 35, 41, 51, 52, 61, 64, 65, 66, 67, 68, 70, 78, 81, 82, 86, 96, 104, 113, 118, 119, 124, 130, 140, 153, 159, 162, 164, 167, 168, 169, 170, 171, 173, 175, 178, 180, 182, 183, 184, 186, 187, 188, 191, 197, 201, 223, 234, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 268, 278, 283, 286, 314, 316, 318, 319, 329, 340, 344, 355, 364, 366, 372, 375, 377, 379, 390, 404, 422, 443, 444, 445, 446, 452, 456, 468, 476, 477, 478, 494, 497], "specifi": [10, 15, 16, 34, 59, 64, 65, 68, 70, 72, 73, 77, 80, 81, 82, 83, 86, 91, 96, 104, 105, 112, 113, 121, 126, 129, 130, 131, 134, 144, 147, 148, 150, 153, 154, 155, 156, 157, 159, 162, 164, 165, 175, 177, 179, 180, 187, 189, 190, 191, 207, 224, 254, 255, 259, 281, 286, 294, 295, 296, 297, 298, 299, 304, 305, 306, 307, 309, 310, 311, 312, 316, 318, 319, 322, 326, 329, 333, 334, 335, 339, 340, 344, 348, 356, 359, 361, 363, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 428, 433, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 454, 456, 466, 467, 468, 478, 494], "speck": [118, 175], "spectral": [13, 118, 204, 251], "spectrum": 177, "speed": [3, 24, 38, 39, 50, 79, 91, 101, 109, 118, 129, 162, 167, 173, 176, 177, 190, 191, 390, 453, 478], "speedup": 177, "spent": 177, "sphere": [16, 38, 39, 49, 58, 62, 116, 131, 152, 155, 162, 174, 191, 198, 210, 211, 212, 213, 214, 215, 238, 264, 265, 267, 289, 292, 293, 300, 370, 377, 422, 429, 438, 439, 443, 444, 445, 446, 447, 448, 452, 464, 477, 478, 485, 494, 496], "sphere_left": [210, 211, 212, 213, 214, 215, 289], "sphere_right": [210, 211, 212, 213, 214, 215, 289], "spheres_mask": 61, "spheric": [61, 292], "sphinx": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 135, 137, 141, 142, 144, 162, 178], "sphinx_gallery_conf": 178, "sphinx_gallery_dummy_imag": [168, 190], "sphx_glr_auto_examples_00_tutorials_plot_decoding_tutori": 170, "spike": 68, "spine": 13, "spline": [127, 162, 435, 436, 441, 442, 449, 468], "split": [3, 32, 33, 34, 36, 38, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 88, 96, 102, 103, 153, 162, 168, 170, 172, 177, 178, 184, 190, 254, 255, 304, 305, 306, 307], "split_index": 44, "split_multi_scal": 44, "splitter": [304, 305], "spm": [6, 26, 38, 43, 44, 64, 68, 69, 72, 81, 118, 133, 158, 159, 162, 174, 179, 181, 184, 189, 193, 198, 248, 287, 326, 328, 333, 336, 337, 338, 355, 497], "spm12": 248, "spm5": 248, "spm8": [45, 77, 227, 248, 285], "spm_auditori": [6, 71, 287], "spm_dispersion_deriv": [132, 162, 326, 328, 333], "spm_hrf": [132, 157, 162, 326, 328, 333], "spm_multimodal_fmri": [72, 179, 288], "spm_time_deriv": [132, 162, 326, 328, 333], "spmt_0001": 107, "spontan": [118, 224, 256], "sportingli": [147, 162], "spot": 68, "spread": [25, 101, 173, 381], "springer": [118, 164, 218, 224, 238, 256], "spuriou": [68, 118, 168, 178, 201, 367, 368, 457], "sqrt": [112, 140, 162, 244, 245, 318, 319], "squar": [35, 44, 46, 52, 64, 68, 70, 73, 103, 106, 109, 113, 118, 165, 171, 176, 177, 179, 187, 201, 238, 305, 310, 313, 316, 317, 318, 326, 339, 350, 366, 367, 372, 375, 379, 390, 425, 453, 454, 455, 469, 479], "squeez": [24, 311, 312, 454], "src_img": [425, 426], "src_label": [65, 425, 426], "sreen": 36, "sriniva": [118, 200, 249], "srow_i": [59, 105], "srow_x": [59, 105], "srow_z": [59, 105], "sse": [313, 317, 318, 319], "ssh": 163, "ssp": 209, "sst": 209, "sstdsp": 209, "sstssp": 209, "sstssp_minus_dstdsp": [73, 479], "st": 0, "stabil": [154, 162, 169, 201, 306, 307, 314], "stabl": [13, 36, 51, 59, 118, 127, 147, 162, 163, 169, 171, 172, 177, 186, 250, 289, 304, 305, 306, 307, 311, 312, 367, 450, 451, 478, 495, 498], "stable_project": [230, 258], "stack": [43, 54, 61, 155, 162, 184, 245], "stage": [103, 118, 178, 186], "stall": 187, "stan": [316, 318, 319], "stand": [16, 47, 150, 162, 184, 190, 494], "standalon": [326, 339, 466], "standard": [3, 6, 10, 11, 12, 23, 26, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 68, 70, 71, 73, 74, 77, 91, 93, 94, 96, 101, 102, 104, 108, 109, 110, 111, 113, 114, 118, 120, 128, 129, 147, 150, 154, 156, 157, 162, 165, 168, 170, 171, 175, 178, 179, 180, 184, 189, 190, 191, 205, 210, 211, 212, 213, 214, 238, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 285, 304, 305, 306, 307, 309, 310, 311, 312, 318, 319, 326, 328, 329, 333, 344, 364, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 428, 454, 456, 468, 479, 480, 495], "standard_devi": [150, 162, 371, 374, 459], "standard_glm": 103, "standard_norm": [66, 316, 318, 319], "standardize_confound": [50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 91, 93, 94, 102, 157, 162, 168, 191, 311, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456, 468, 480], "standardize_sign": [128, 130, 162], "standardscal": [39, 43, 44, 47, 114], "standout": 111, "stanford": [0, 118, 176], "stanisla": [74, 118, 186, 203, 209, 276], "stanlei": [118, 226], "start": [2, 3, 7, 26, 32, 43, 52, 59, 61, 86, 93, 96, 159, 162, 170, 177, 178, 184, 185, 187, 233, 248, 250, 251, 259, 261, 323, 326, 328, 333, 390, 478], "starttim": [103, 104, 113], "stat": [6, 24, 26, 35, 64, 65, 69, 72, 73, 77, 78, 81, 96, 104, 107, 112, 159, 162, 181, 190, 314, 323, 326, 339, 363, 366, 446, 450, 452, 465, 466, 479, 494], "stat_img": [10, 14, 15, 16, 17, 92, 95, 321, 342, 465, 466], "stat_map": [10, 13, 24, 39, 70, 342, 437, 446], "stat_map_img": [10, 435, 442, 449, 450], "stat_map_surf": 24, "stat_maps_pair": 82, "stat_maps_unpair": 82, "stat_threshold": [6, 65, 71, 465], "stat_typ": [6, 70, 71, 113, 130, 131, 162, 314, 322, 326], "state": [0, 2, 24, 32, 34, 51, 52, 53, 54, 57, 59, 68, 89, 91, 94, 102, 103, 118, 129, 142, 153, 155, 162, 164, 165, 167, 168, 169, 171, 176, 180, 184, 186, 187, 196, 197, 199, 200, 201, 204, 208, 224, 226, 231, 232, 246, 247, 249, 250, 290, 304, 305, 306, 307, 308, 311, 312, 326, 335, 341, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 454, 456, 468, 480, 497], "static": [10, 379, 392, 449], "statist": [2, 7, 9, 15, 23, 24, 26, 29, 35, 38, 43, 45, 52, 64, 67, 68, 70, 72, 76, 77, 84, 85, 99, 103, 104, 106, 107, 109, 113, 118, 119, 127, 130, 132, 134, 135, 142, 143, 153, 155, 159, 162, 164, 169, 172, 175, 177, 178, 179, 181, 184, 185, 186, 190, 191, 204, 234, 239, 242, 252, 260, 275, 281, 282, 283, 292, 293, 301, 314, 315, 316, 318, 319, 320, 321, 322, 339, 341, 342, 344, 363, 366, 390, 403, 404, 425, 435, 437, 440, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 456, 458, 465, 466, 468, 474, 478, 479, 490, 495, 496, 497], "statistician": 175, "statmap": [65, 366], "statstic": 83, "statu": [170, 184, 199, 227], "std": [32, 34, 47, 54, 91, 108, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 468], "std_coef_": [304, 305, 306, 307], "std_coef_img_": [304, 305, 306, 307], "std_dvars_threshold": [59, 130, 162, 367, 368], "std_test_scor": 102, "stderr": 44, "steadi": [59, 68, 155, 162, 326, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456, 468], "steel": [103, 118], "steep": 26, "steinkamp": [0, 147, 152, 162], "step": [3, 12, 13, 21, 35, 37, 39, 41, 45, 47, 50, 52, 53, 58, 61, 64, 65, 67, 68, 70, 73, 81, 82, 91, 96, 101, 104, 113, 120, 127, 132, 145, 153, 159, 162, 163, 164, 167, 168, 169, 170, 172, 173, 175, 177, 178, 184, 187, 188, 189, 190, 199, 206, 227, 240, 247, 272, 295, 298, 306, 307, 311, 312, 326, 329, 341, 368, 370, 373, 376, 382, 383, 384, 385, 386, 387, 454, 468, 497], "stephan": [118, 344, 468], "stephani": [118, 226], "stephen": [106, 118, 164, 177, 184, 197, 216, 226, 232, 259, 278, 341, 390], "stereotax": 201, "stern": [118, 313, 317], "steven": [0, 61, 118, 128, 130, 162, 200, 201, 208, 216, 229, 231, 249, 264, 265, 266, 367, 368], "stick": [68, 180], "still": [16, 52, 68, 81, 93, 105, 111, 121, 129, 157, 162, 175, 177, 182, 187, 191, 281, 494], "stim": 69, "stim_typ": 40, "stimui": 180, "stimul": [6, 74, 170, 233], "stimuli": [30, 32, 34, 35, 41, 48, 68, 82, 101, 116, 164, 165, 167, 168, 170, 180, 186, 189, 191, 206, 217, 270, 280, 346, 363, 370, 373, 376, 418, 442, 447, 480, 496], "stimuli_random_runs_filenam": 43, "stimuli_run": 43, "stimulu": [41, 43, 44, 67, 103, 180], "stimulus_inform": 40, "stimulus_run": 43, "stimulus_shap": 43, "stipul": 101, "stochast": 207, "stoddard": [26, 118], "stop": [46, 56, 100, 115, 116, 118, 121, 176, 239, 242, 281, 283, 349, 354, 355, 357, 435, 442, 447, 453, 496], "stop_go_image_id": 112, "stopsign": 65, "stopsignal_desc": 65, "stopsignal_ev": 65, "stopsignal_spac": 65, "stopsuccess": [65, 479], "stopsuccessminusgo": 65, "stopsuccessminusgo_clust": 65, "stopsuccessminusgo_design": 65, "stopsuccessminusgo_stat": 65, "storag": 191, "store": [3, 7, 28, 31, 47, 52, 53, 54, 55, 57, 71, 72, 96, 104, 111, 113, 121, 163, 168, 170, 175, 178, 232, 254, 255, 291, 316, 318, 319, 357, 381, 390, 426, 470, 471], "store_precis": 238, "stori": [68, 70, 118, 222], "str": [23, 65, 77, 103, 131, 156, 162, 178, 198, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 323, 324, 326, 328, 329, 333, 339, 340, 341, 342, 343, 344, 345, 355, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 462, 464, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478], "straightforward": [73, 177, 314], "strategi": [3, 25, 30, 48, 51, 52, 68, 90, 91, 93, 94, 102, 111, 113, 116, 118, 128, 130, 132, 134, 150, 154, 155, 157, 162, 163, 168, 171, 174, 175, 177, 180, 188, 270, 304, 305, 306, 307, 308, 311, 312, 329, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 428, 439, 440, 447, 454, 459, 468, 478, 480, 496], "stratifi": [155, 162, 170, 304, 306, 308], "stratifiedkfold": [304, 305], "stratifiedshufflesplit": [54, 102], "stream": [3, 34, 120, 185, 191, 217], "strength": [50, 150, 153, 162, 246, 361, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 494], "stress": 177, "striat": 54, "strict": 178, "strictli": [254, 255], "string": [4, 16, 31, 35, 50, 51, 58, 74, 79, 81, 90, 103, 104, 113, 120, 131, 134, 144, 145, 157, 159, 162, 163, 178, 187, 189, 198, 200, 220, 248, 274, 275, 285, 291, 303, 316, 318, 319, 324, 326, 328, 333, 339, 341, 343, 344, 354, 355, 363, 364, 366, 372, 374, 375, 376, 378, 379, 380, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 457, 466, 468], "string_beta_seri": 103, "string_connectivity_img": 103, "string_corr": 103, "string_seed_beta_seri": 103, "strive": 3, "stroke": [118, 164, 238], "strong": [66, 68, 91, 177, 178], "stronger": 164, "strongest": 61, "strongli": [170, 178, 184], "struct": [155, 162], "structur": [3, 6, 24, 26, 41, 42, 44, 46, 49, 52, 54, 61, 62, 66, 68, 116, 118, 164, 170, 172, 173, 174, 175, 177, 184, 189, 196, 198, 199, 200, 201, 203, 204, 207, 216, 217, 218, 223, 224, 227, 232, 233, 236, 240, 248, 250, 259, 262, 270, 276, 309, 310, 313, 364, 382, 383, 384, 385, 386, 387, 439, 447, 450, 455, 461, 496, 497], "student": [96, 180, 190, 228, 314, 497], "studi": [0, 2, 6, 33, 35, 43, 45, 59, 68, 77, 100, 102, 115, 116, 118, 121, 166, 171, 173, 174, 176, 177, 180, 185, 189, 198, 201, 208, 217, 218, 223, 227, 234, 250, 281, 283, 294, 308, 349, 354, 355, 357, 361, 367, 368, 370, 376, 435, 442, 447, 496], "stufflebeam": [118, 201], "style": [4, 135, 157, 162, 303], "sub": [6, 22, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 65, 70, 80, 87, 93, 94, 97, 103, 104, 108, 113, 155, 162, 238, 239, 240, 254, 255, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 364, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456, 466], "sub001": 72, "sub_fold": 364, "sub_id": 246, "sub_label": [103, 128, 162, 329, 364], "subcallos": 93, "subclass": [16, 178, 420], "subcompon": 184, "subcort": [22, 118, 134, 147, 162, 193, 216, 219, 228, 231, 237, 254, 255, 257, 266, 489], "subcortex": [22, 118, 231, 266], "subdivid": [118, 216, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "subfold": 187, "subgradi": [118, 177], "subgroup": 184, "subj": 4, "subj1": [4, 189], "subj1_img": 105, "subj2": [3, 17, 19, 27, 31, 32, 34, 36, 37, 38, 96, 106, 120], "subj2_img": 105, "subject": [1, 3, 4, 8, 12, 16, 17, 18, 19, 22, 23, 24, 26, 27, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 67, 68, 70, 73, 75, 77, 79, 80, 82, 87, 93, 96, 97, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 118, 120, 121, 127, 128, 129, 130, 132, 138, 140, 141, 150, 153, 162, 165, 166, 167, 168, 170, 177, 179, 180, 182, 183, 186, 188, 189, 190, 192, 195, 197, 198, 200, 201, 203, 206, 216, 220, 221, 222, 224, 226, 227, 232, 233, 238, 239, 240, 242, 246, 247, 248, 250, 256, 267, 270, 275, 276, 278, 279, 285, 287, 288, 289, 290, 300, 303, 311, 312, 326, 329, 339, 340, 342, 345, 356, 359, 364, 367, 368, 370, 371, 372, 373, 375, 376, 377, 385, 387, 403, 423, 427, 429, 430, 431, 434, 436, 439, 442, 447, 454, 465, 479, 480, 494, 496, 497], "subject1": 189, "subject2": 189, "subject_": 189, "subject_01": 189, "subject_03": 189, "subject_data": [6, 26, 71, 72, 179], "subject_effect": 82, "subject_id": [65, 104, 113, 279, 287, 288], "subject_label": [65, 80, 104, 113, 326, 339, 340, 341, 479], "subject_time_seri": 56, "subjects_label": [80, 340], "submit": [184, 187], "submodul": [157, 159, 162, 178], "subobject": [238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "subpart": [157, 162], "subpeak": [465, 466], "subplot": [12, 13, 25, 26, 32, 40, 41, 43, 44, 46, 47, 52, 54, 60, 66, 67, 68, 69, 71, 77, 80, 81, 82, 96, 98, 103, 104, 109, 114, 127, 162, 434, 443, 444, 445, 446], "subplot_kw": [114, 443, 444, 445, 446], "subplots_adjust": [13, 27, 43, 47, 52, 60, 69, 109, 190], "subsampl": 207, "subsequ": [52, 86, 191, 227, 281, 283, 367, 368], "subset": [38, 47, 96, 113, 171, 175, 178, 201, 303, 304, 316, 329, 351, 367, 472, 473], "substitut": [103, 464], "subthreshold": [26, 118, 134, 162], "subtract": [61, 68, 104, 186, 187, 282], "succ": 112, "succeed": [107, 112], "success": [163, 178, 180, 187, 191, 233], "successfulli": [163, 178], "sufen": [118, 216], "suffer": 368, "suffix": [365, 368], "suggest": [0, 6, 26, 88, 157, 162, 167, 186, 189, 344, 382, 384, 385, 387, 468], "suit": [96, 103, 163, 165, 171, 186, 201, 250], "suitabl": [59, 70, 147, 162, 171, 175, 191, 279, 368], "sulc": [443, 444, 445, 446, 452, 476], "sulc_left": [210, 211, 212, 213, 214, 215, 289, 437, 450], "sulc_right": [210, 211, 212, 213, 214, 215, 289, 437, 450, 494], "sulcal": [10, 23, 24, 39, 70, 114, 118, 205, 210, 211, 212, 213, 214, 215, 252, 289, 293, 437, 443, 445, 446, 450, 452], "sulci": [23, 118, 134, 162, 205, 260], "sulco": [205, 260], "sulcu": 107, "sum": [3, 44, 45, 52, 61, 67, 69, 79, 81, 86, 104, 106, 109, 110, 112, 150, 162, 177, 305, 309, 310, 313, 317, 318, 350, 371, 374, 459, 469], "summar": [57, 61, 93, 170, 178, 318, 372, 374, 375, 377, 465, 480], "summari": [35, 73, 93, 155, 178, 314, 480], "summary_statistics_run_1": 73, "summary_statistics_run_2": 73, "summerlin": [118, 235, 261], "sundermann": [26, 118], "sup": 480, "superimpos": 426, "superior": [59, 93, 176, 358], "supervis": [52, 118, 171, 173, 174, 184, 186], "supplement": [118, 205, 218, 252], "supplementari": [93, 120, 175], "suppli": [61, 65, 308, 309, 310, 333, 367, 371, 374, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 459, 468], "support": [0, 4, 10, 16, 26, 31, 34, 35, 36, 37, 41, 47, 101, 109, 120, 125, 127, 128, 130, 132, 133, 134, 142, 143, 144, 147, 148, 149, 150, 154, 155, 157, 158, 159, 160, 162, 163, 170, 171, 173, 175, 178, 180, 184, 185, 187, 304, 305, 306, 307, 314, 363, 366, 367, 371, 374, 443, 445, 446, 462, 478, 495], "supported_loss": [309, 310], "supported_penalti": [309, 310], "suppos": [105, 121, 177, 187, 189, 191, 318, 319], "supposedli": 234, "suppress": [2, 16, 19, 21, 22, 32, 38, 43, 45, 46, 51, 53, 89, 90, 106, 110, 118, 201], "supra": 180, "supracalcarin": 93, "supramar": 480, "supramargin": 93, "suprathreshold": [26, 479], "suptitl": [40, 43, 45, 46, 47, 68, 74, 77, 81, 103, 104, 109], "sur": [0, 178], "suramya": [0, 130, 162], "sure": [16, 24, 70, 96, 116, 127, 130, 131, 132, 162, 163, 175, 178, 187, 480, 495], "surf_data": [437, 443, 445, 446, 450, 452, 476, 478], "surf_img_nki": [24, 114], "surf_map": [7, 10, 23, 114, 443, 446, 452], "surf_mesh": [10, 23, 24, 70, 132, 162, 404, 437, 443, 444, 445, 446, 450, 452, 477, 478, 494], "surf_plot": [129, 134, 142, 162], "surfac": [1, 8, 9, 29, 30, 48, 58, 63, 75, 100, 115, 116, 118, 120, 128, 129, 131, 133, 134, 142, 144, 146, 147, 148, 150, 153, 154, 155, 157, 159, 181, 184, 185, 186, 188, 193, 205, 210, 211, 212, 213, 214, 215, 236, 237, 238, 252, 260, 270, 273, 277, 289, 290, 292, 293, 300, 301, 304, 311, 312, 326, 329, 339, 341, 345, 351, 352, 355, 356, 363, 366, 367, 378, 379, 380, 381, 390, 404, 429, 435, 437, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 464, 483, 485, 488, 491, 495, 496, 497], "surface_imag": [7, 10, 70], "surface_image_data": 7, "surface_image_data_hemi": 7, "surface_image_load": 7, "surface_image_mesh": 7, "surface_image_mesh_hemi": 7, "surface_mesh": 478, "surface_plot": 494, "surfaceimag": [7, 10, 23, 24, 39, 70, 113, 114, 132, 134, 160, 162, 191, 210, 211, 212, 213, 214, 215, 289, 293, 300, 304, 305, 306, 307, 311, 312, 323, 326, 339, 341, 342, 343, 344, 345, 350, 351, 352, 355, 356, 357, 363, 378, 379, 380, 381, 404, 425, 426, 443, 444, 445, 446, 452, 454, 455, 461, 480], "surfacelabelsmask": [24, 132, 133, 134, 162, 188, 379, 480, 497], "surfacemapsmask": [133, 134, 162, 188, 480, 497], "surfacemask": [114, 132, 133, 162, 188, 304, 305, 306, 307, 311, 312, 323, 326, 339, 341, 379, 425, 426, 454, 455, 480, 497], "surfacemesh": [473, 474], "surfaceview": [450, 452], "surfer": [236, 262], "surpass": 180, "surrog": [38, 106], "surround": [155, 162, 478], "surviv": [53, 154, 162, 314, 456], "sustain": 178, "svc": [3, 31, 32, 33, 34, 35, 36, 37, 41, 120, 150, 162, 170, 171, 173, 304, 306, 308], "svc_coef": 101, "svc_l1": [32, 34, 41, 171, 304, 306], "svc_l2": [32, 41, 171, 304, 306], "svc_ova": 37, "svc_ovo": 37, "svd": [142, 162, 312, 350, 454, 469], "svf8k": 10, "svg": [16, 129, 162, 366, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446], "svm": [30, 36, 37, 41, 45, 47, 48, 54, 102, 116, 120, 142, 162, 172, 174, 176, 184, 191, 270, 304, 351, 442, 447, 449, 496, 497], "svr": [42, 45, 47, 150, 162, 171, 305, 307, 308], "swap": [175, 190, 227, 362], "swap_img_hemispher": 190, "sweden": 0, "swiss": 191, "switch": [130, 142, 149, 162, 178, 187, 435], "switzerland": 0, "sy": [0, 44, 129, 162], "syllab": 233, "sylvain": [0, 144, 147, 150, 162], "sym": [20, 201, 245, 250], "sym_matrix_to_vec": [143, 162, 245], "sym_to_vec": [135, 140, 143, 155, 162], "symbol": [178, 179, 354], "symlink": [286, 302], "symmetr": [20, 50, 81, 143, 162, 177, 201, 218, 244, 245, 250, 254, 255, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429, 437, 443, 446, 448, 449, 450, 452], "symmetri": [175, 177], "symmetric_cbar": [15, 71, 129, 162, 435, 437, 442, 446], "symmetric_cmap": [10, 23, 114, 129, 148, 160, 162, 443, 448, 449, 450, 452, 494], "symmetric_split": [137, 162, 254, 255], "symposium": [51, 118, 169, 311, 312], "symptom": 199, "synchron": 362, "synonym": 180, "synthes": 177, "synthesi": [118, 121, 177, 225, 281, 283], "synthet": [23, 60, 86, 178], "system": [0, 45, 46, 118, 163, 164, 170, 177, 178, 187, 189, 200, 205, 210, 211, 212, 213, 214, 216, 223, 233, 239, 249, 289, 291], "systemat": [103, 118, 137, 162, 201, 276, 367, 368], "s\u00e9gonn": [118, 205, 252], "t": [0, 3, 5, 6, 10, 17, 23, 25, 26, 35, 39, 41, 44, 45, 58, 59, 61, 65, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 85, 92, 94, 95, 96, 99, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 116, 118, 121, 130, 132, 134, 153, 162, 163, 164, 175, 176, 177, 178, 180, 181, 183, 184, 186, 187, 189, 190, 200, 203, 216, 230, 232, 235, 236, 249, 258, 259, 261, 262, 268, 276, 281, 282, 283, 286, 304, 305, 309, 310, 314, 316, 317, 318, 319, 320, 322, 326, 339, 341, 363, 366, 367, 368, 384, 390, 437, 440, 442, 447, 458, 466, 469, 478, 494, 496], "t0": [32, 44], "t1": [47, 77, 156, 162, 198, 201, 216, 218, 248, 271, 294, 296, 297, 299, 427, 494], "t1w": 65, "t2": [218, 271, 433, 494], "t2_relax": [218, 271], "t_img": 112, "t_map": [326, 339], "t_map001": 189, "t_r": [6, 12, 26, 35, 52, 54, 55, 56, 57, 58, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 91, 93, 94, 102, 103, 113, 132, 147, 158, 160, 162, 191, 267, 288, 304, 305, 306, 307, 309, 310, 311, 312, 326, 328, 329, 330, 331, 332, 333, 336, 337, 338, 344, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 428, 454, 456, 468, 479, 480], "t_score": 112, "t_scores_original_data": [45, 106], "t_statmap": [65, 77], "t_to_z": 112, "tab": [163, 187, 191], "tab10": 41, "tab20": [10, 444], "tabl": [6, 10, 23, 24, 35, 64, 65, 70, 71, 73, 93, 104, 113, 114, 128, 131, 134, 158, 162, 178, 182, 187, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 368, 371, 374, 378, 441, 445, 465, 479], "table_fil": 65, "tabul": 65, "tabular": 65, "tackl": [171, 187], "tag": [32, 34, 121, 163, 178, 187, 364, 365], "tail": [72, 316, 318, 319, 465], "tailor": [52, 70, 167], "take": [3, 4, 6, 10, 25, 31, 35, 43, 45, 46, 52, 53, 65, 67, 68, 69, 72, 74, 77, 79, 81, 96, 98, 101, 103, 105, 107, 113, 120, 128, 133, 144, 147, 150, 156, 162, 163, 164, 165, 167, 170, 173, 175, 177, 178, 179, 180, 189, 191, 231, 238, 272, 281, 294, 295, 296, 297, 298, 299, 304, 305, 306, 307, 308, 312, 326, 328, 333, 341, 355, 374, 389, 390, 394, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 454, 456, 458, 478, 492, 494], "taken": [6, 68, 103, 163, 171, 177, 178, 187, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 329, 339, 341, 360, 371, 372, 374, 375, 377, 456], "takerkart": [0, 150, 162], "tal": [118, 121, 191, 225, 281, 283, 377], "talairach": [118, 144, 162, 183, 193, 237, 246, 261], "tall": 44, "tamer": [0, 130, 162], "tanab": [43, 44, 118, 223, 280], "tangent": [54, 102, 143, 162, 168, 238], "tangent_matric": 54, "tangent_measur": 54, "tar": [3, 4, 40, 142, 162, 187, 209], "target": [3, 31, 35, 43, 86, 91, 96, 101, 103, 128, 147, 162, 170, 171, 175, 177, 178, 184, 187, 188, 201, 223, 270, 280, 304, 305, 306, 307, 308, 309, 310, 311, 312, 341, 359, 360, 370, 376, 383, 386, 390, 453, 455, 456], "target_affin": [52, 55, 56, 86, 91, 94, 190, 191, 304, 305, 306, 307, 309, 310, 311, 312, 326, 329, 339, 356, 359, 373, 376, 382, 384, 385, 386, 387, 454, 480], "target_affine_3x3": 86, "target_affine_4x4": 86, "target_affine_mm_space_offset_chang": 86, "target_img": [360, 383, 386], "target_shap": [52, 55, 56, 86, 91, 94, 190, 191, 304, 305, 306, 307, 309, 310, 311, 312, 326, 329, 339, 356, 359, 373, 376, 382, 384, 385, 387, 454, 480], "target_var": 390, "targett": [136, 162], "tarun": [0, 129, 162], "task": [2, 3, 18, 31, 32, 33, 36, 42, 52, 63, 65, 68, 70, 75, 79, 83, 91, 94, 100, 107, 111, 115, 116, 118, 130, 147, 158, 162, 169, 170, 171, 174, 177, 179, 180, 184, 185, 186, 187, 191, 207, 232, 239, 242, 270, 273, 275, 276, 303, 326, 329, 345, 349, 364, 370, 376, 377, 390, 403, 418, 425, 431, 434, 435, 442, 447, 480, 496], "task001_cope07_succstop_minus_go": 112, "task002_cope007_tstat1": 112, "task002_cope06_succ_stop_vs_go": 112, "task002_cope10_succstop_minus_go": 112, "task003_cope007_tstat1": 112, "task_data": 34, "task_label": [65, 103, 104, 113, 329], "task_mask": [32, 34], "tasknam": 329, "taylor": [0, 26, 118, 127, 128, 129, 130, 154, 157, 158, 159, 162, 176], "tcontrast": [72, 316, 318, 319], "tcontrastresult": [316, 318, 319], "tcorr_2level": [204, 251], "tcorr_mean": [204, 251], "teach": [1, 116, 139, 150, 162, 178, 206], "teal": 71, "team": [50, 51, 178, 186, 187, 224, 256, 495], "technic": [9, 29, 73, 103, 116, 164, 176, 177, 227, 313, 317, 446, 478, 496], "techniqu": [16, 47, 118, 168, 169, 170, 171, 172, 173, 177, 184, 186, 191, 233, 456], "technisch": 0, "technologi": 0, "tel": 0, "tell": [71, 88, 118, 177, 222], "temp_file_lifetim": [130, 162, 464], "temp_lat": 480, "temp_m": 480, "temp_med_and_lingu": 480, "templat": [4, 17, 23, 41, 51, 70, 77, 85, 99, 113, 116, 118, 127, 131, 134, 135, 140, 145, 150, 153, 156, 159, 162, 163, 168, 180, 184, 186, 190, 191, 198, 200, 201, 227, 237, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 301, 304, 305, 306, 307, 311, 312, 354, 359, 360, 368, 373, 376, 383, 386, 427, 440, 441, 442, 447, 449, 454, 464, 489, 496], "template_affin": 95, "template_img": 95, "template_shap": 95, "templateflow": [163, 178, 218, 271, 272, 294, 295, 296, 297, 298, 299], "tempor": [3, 6, 17, 33, 34, 35, 40, 41, 54, 58, 64, 68, 69, 70, 73, 93, 96, 101, 104, 113, 118, 120, 147, 155, 162, 169, 170, 184, 188, 204, 217, 233, 251, 270, 312, 326, 330, 331, 332, 333, 335, 336, 337, 338, 344, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456, 468, 479], "temporal": 93, "temporal_anat_combin": 367, "temporal_anat_separ": 367, "temporari": 464, "temporarili": 178, "temporooccipit": 93, "temporopariet": 61, "ten": [6, 83, 454], "tend": [81, 103, 172, 177, 189], "tensor": 118, "term": [35, 57, 64, 68, 70, 73, 91, 94, 104, 113, 119, 134, 158, 162, 169, 171, 177, 180, 184, 186, 189, 190, 281, 309, 310, 313, 333, 365, 367, 468, 479, 480], "term_idx": 107, "term_weight": 107, "term_weights_for_compon": 107, "termin": [170, 178, 495], "terminologi": [133, 162, 182], "test": [3, 31, 33, 36, 38, 41, 43, 45, 46, 47, 54, 56, 66, 68, 72, 76, 79, 80, 84, 102, 104, 106, 109, 110, 113, 116, 118, 127, 129, 130, 132, 146, 154, 157, 162, 163, 170, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 190, 240, 246, 247, 248, 249, 250, 251, 252, 256, 259, 260, 262, 270, 271, 275, 276, 279, 280, 285, 290, 300, 304, 305, 306, 307, 308, 309, 310, 314, 339, 341, 342, 349, 355, 359, 360, 363, 366, 390, 403, 417, 431, 435, 442, 447, 449, 466, 487, 495, 496], "test_cluster_level_parameters_smok": [127, 162], "test_contrast": 187, "test_data_gen": 187, "test_imag": 178, "test_img_plot": [157, 162], "test_modul": 178, "test_nilearn_standard": [132, 162], "test_scor": 101, "test_sign": [129, 162], "test_siz": [54, 102], "test_someth": 178, "test_surf_plot": 178, "tested_var": [79, 109, 110, 390], "tetrahedron": 7, "tetrel": [0, 150, 162], "teuscher": [118, 200, 249], "teve": [0, 152, 162], "texa": 0, "texliv": 187, "text": [13, 32, 37, 54, 58, 77, 96, 101, 118, 170, 178, 188, 201, 217, 223, 227, 228, 236, 262, 270, 280, 313, 317, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "textquoteright": [118, 232, 259], "textur": 478, "tfce": [109, 127, 134, 159, 162, 184, 341, 390], "tgz": [10, 11, 28, 105, 111, 199, 247], "th": 449, "thalam": [118, 216], "thalamu": [198, 231, 266], "than": [3, 4, 6, 16, 26, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 68, 70, 71, 73, 77, 79, 81, 83, 88, 90, 91, 93, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 111, 118, 119, 120, 121, 130, 137, 140, 141, 142, 143, 144, 146, 150, 155, 157, 162, 164, 167, 169, 170, 171, 172, 173, 175, 177, 178, 180, 182, 184, 187, 189, 190, 191, 193, 201, 224, 237, 254, 255, 281, 283, 304, 305, 306, 307, 311, 312, 326, 335, 341, 342, 343, 350, 355, 363, 364, 367, 368, 371, 372, 373, 375, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 428, 429, 435, 436, 437, 438, 442, 446, 447, 448, 450, 452, 456, 465, 467, 469, 478, 480, 489], "thank": [147, 162, 178, 339, 340, 341], "tharun": [0, 132, 162], "thei": [3, 6, 7, 25, 42, 45, 47, 50, 51, 52, 67, 68, 72, 73, 96, 101, 113, 120, 121, 128, 131, 134, 157, 159, 162, 163, 169, 172, 173, 175, 177, 178, 180, 184, 186, 187, 189, 191, 197, 198, 201, 208, 220, 234, 262, 270, 281, 286, 326, 329, 339, 341, 345, 359, 377, 430, 457, 468, 480, 494], "them": [2, 3, 6, 7, 15, 20, 26, 32, 34, 42, 45, 47, 52, 53, 57, 58, 61, 65, 67, 70, 72, 73, 74, 81, 82, 88, 91, 96, 103, 107, 108, 111, 113, 116, 118, 120, 121, 125, 129, 131, 135, 147, 153, 154, 156, 159, 162, 163, 164, 165, 169, 171, 173, 178, 180, 184, 185, 186, 189, 191, 198, 248, 281, 283, 329, 366, 389, 390, 454, 494], "theme": [127, 159, 162], "themselv": [68, 121, 191], "theodor": [59, 118, 367, 368], "theoret": 175, "theori": [118, 184, 222, 318, 319], "therapanacea": 0, "therefor": [73, 111, 134, 157, 162, 169, 175, 177, 198, 201, 250, 425], "theta": [316, 318, 319], "thithick": [7, 15, 50, 88, 132, 134, 155, 162, 210, 211, 212, 213, 214, 215, 236, 262, 289, 293, 440, 441, 443, 444, 445, 446, 452, 476, 478], "thick_17": [236, 262], "thick_7": [236, 262], "thick_left": [210, 211, 212, 213, 214, 215, 289], "thick_right": [210, 211, 212, 213, 214, 215, 289], "thin": [236, 262], "thin_17": [236, 262], "thin_7": [236, 262], "thing": [2, 3, 7, 41, 59, 68, 128, 162, 167, 176, 177, 178, 187, 191, 316, 344, 468, 494], "think": [26, 118, 178, 180, 191], "third": [16, 68, 83, 168, 182, 335], "thirion": [0, 47, 51, 52, 54, 74, 102, 118, 122, 125, 129, 132, 135, 140, 144, 147, 148, 150, 157, 158, 162, 164, 167, 168, 169, 170, 172, 176, 186, 203, 207, 224, 238, 239, 253, 256, 276, 306, 307, 311, 312, 455, 456, 461], "this_meta": 112, "thiti": [0, 133, 162], "thoma": [0, 106, 118, 121, 134, 150, 153, 156, 157, 162, 164, 171, 184, 186, 197, 200, 225, 230, 236, 249, 258, 262, 281, 283, 341, 367, 368, 390, 425, 469], "thomasyeolab": [230, 236, 258], "thompsen": [118, 226], "thorough": 178, "thoroughli": 178, "thorsten": [118, 175], "those": [7, 13, 24, 26, 53, 65, 68, 73, 82, 91, 113, 132, 157, 162, 169, 171, 173, 177, 178, 180, 187, 197, 232, 233, 281, 366, 371, 374, 428, 445, 450, 456, 459, 462, 463, 472, 473, 478], "though": [103, 108, 163, 170, 317, 443, 445, 446, 467], "thousand": [52, 191, 454], "thr0": [11, 254, 255], "thr25": [11, 59, 93, 165, 254, 255], "thr50": [254, 255], "thread": [38, 163], "three": [6, 15, 20, 25, 34, 43, 52, 66, 67, 68, 77, 91, 96, 111, 118, 148, 156, 162, 177, 178, 184, 187, 189, 198, 206, 231, 267, 359, 361, 401, 403, 406, 420, 427, 429, 433, 434, 435, 436, 438, 440, 441, 442, 466, 478], "threshold": [2, 9, 10, 13, 14, 15, 18, 24, 29, 32, 35, 38, 39, 41, 42, 43, 45, 51, 52, 53, 57, 58, 59, 64, 67, 68, 70, 71, 73, 77, 78, 79, 81, 82, 83, 85, 89, 90, 91, 92, 95, 96, 99, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 116, 118, 121, 129, 130, 131, 134, 135, 148, 150, 154, 157, 159, 162, 165, 168, 177, 180, 181, 184, 190, 272, 276, 287, 294, 295, 298, 301, 311, 321, 325, 326, 339, 341, 342, 343, 356, 363, 366, 367, 368, 383, 384, 385, 386, 387, 388, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 429, 435, 436, 437, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 455, 456, 461, 465, 466, 479, 494, 496, 497], "threshold1": 83, "threshold2": 83, "threshold3": 83, "threshold_img": [43, 83, 90, 98, 114, 128, 134, 135, 157, 162, 342, 343], "threshold_percentile_img": 90, "threshold_stats_img": [6, 26, 77, 79, 83, 134, 162, 183, 363], "threshold_value_img": 90, "thresholded_img": 98, "thresholded_map": 342, "thresholded_map1": 83, "thresholded_map2": 83, "thresholded_map3": 83, "thresholded_score_map_img": 43, "thresholding_strategi": [53, 89, 168, 456], "threw": [157, 162], "through": [15, 33, 42, 45, 51, 54, 59, 73, 77, 93, 103, 127, 128, 154, 155, 157, 162, 164, 170, 171, 172, 175, 178, 184, 186, 197, 201, 227, 281, 285, 306, 307, 341, 367, 368, 371, 374, 378, 386, 391, 393, 394, 396, 397, 398, 399, 400, 407, 409, 411, 413, 415, 417, 453, 459, 464, 478, 479], "throughout": 497, "throw": [129, 131, 132, 162, 377], "thrown": [11, 34], "thu": [16, 33, 36, 42, 106, 108, 111, 165, 170, 171, 172, 175, 176, 177, 182, 184, 190, 191, 306, 307, 308, 309, 310, 314, 348, 368, 390], "thual": [0, 127, 128, 155, 157, 159, 162], "thumb": [170, 178], "tianzi": [118, 164, 238], "tibshirani": [118, 164], "tick": [13, 127, 130, 162, 178, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 433, 435, 436, 437, 441, 442, 443, 445, 446, 448, 450, 452], "tick_17": 262, "tick_7": 262, "tick_posit": [32, 34], "ticker": [51, 52], "ticklabel": [150, 162], "tight": [36, 177], "tighter": [143, 162, 177], "tile": [16, 148, 162, 406, 420, 427, 433, 436, 440, 441, 442, 466, 494], "tiledslic": [401, 403, 420], "time": [0, 2, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 59, 60, 63, 65, 66, 67, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 118, 120, 121, 127, 128, 129, 132, 134, 137, 146, 147, 153, 154, 155, 157, 159, 162, 163, 164, 166, 167, 168, 169, 170, 173, 175, 178, 180, 181, 184, 185, 187, 188, 189, 190, 201, 220, 232, 233, 234, 238, 240, 242, 247, 250, 267, 287, 288, 289, 290, 292, 293, 300, 304, 305, 306, 307, 309, 310, 311, 312, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 341, 344, 345, 354, 356, 357, 359, 360, 361, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 390, 418, 428, 440, 442, 447, 449, 450, 454, 455, 456, 458, 459, 460, 465, 467, 468, 469, 478, 480, 483, 485, 494, 497], "time_length": [69, 330, 331, 332, 336, 337, 338], "time_seri": [50, 54, 55, 57, 59, 61, 164, 165], "time_series_1": 164, "time_series_2": 164, "time_stamp": 69, "timecours": [179, 367], "timeout": [46, 90, 107, 112, 134, 162, 281, 282, 283, 284], "timepoint": [27, 190, 329, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "timeseri": [24, 28, 51, 53, 61, 91, 108, 141, 154, 162, 164, 168, 197, 199, 207, 253, 278, 344, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456, 468, 469], "timeseries_each_subject": [53, 168], "timon": 0, "timothi": [61, 118, 197, 229, 230, 258, 265, 367], "ting": [0, 127, 128, 129, 130, 132, 154, 155, 157, 159, 162], "tini": 314, "tinput": 105, "tip": [26, 47, 118, 186], "tissu": [22, 184, 261], "titl": [0, 3, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 28, 31, 32, 33, 34, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 120, 129, 150, 151, 156, 159, 162, 168, 170, 178, 187, 191, 326, 339, 366, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 464, 466, 494], "title_font_s": [443, 445, 446], "title_fonts": [448, 450, 451, 452], "tl": 163, "tmap": [18, 81, 130, 162, 203, 274, 276, 494], "tmap_filenam": [2, 90], "tmap_img": 95, "tmi": [47, 118, 176], "tmp": 24, "to_csv": [6, 74], "to_filenam": [3, 4, 6, 7, 31, 51, 52, 58, 73, 88, 96, 111, 190, 472, 473], "to_gifti": [470, 471, 475], "to_latex": 65, "to_list": 102, "to_markdown": 65, "to_numpi": [3, 28, 33, 35, 41, 42, 45, 71, 79, 101, 109], "tobe": [118, 226], "todd": [118, 175, 216, 218], "toffset": [59, 105], "toga": [118, 235, 261], "togeth": [7, 35, 41, 51, 61, 69, 70, 71, 82, 98, 134, 162, 164, 172, 173, 180, 184, 201, 264, 266, 303, 306, 307, 311, 329, 344, 456, 480], "toggl": 348, "toi": [25, 108], "token": 163, "tol": [239, 240, 242, 309, 310], "tol_cv": 240, "toler": [56, 94, 108, 177, 187, 239, 240, 242, 309, 310, 348], "tolil": 39, "tolist": [81, 103], "toll": 164, "tom": [0, 118, 155, 162, 200, 249], "tomassini": [118, 197], "toml": [128, 162, 178, 187, 495], "tommaso": [118, 201], "tommi": [118, 177, 239, 242], "too": [25, 36, 40, 41, 43, 45, 46, 55, 57, 59, 72, 88, 121, 163, 171, 177, 281, 283, 377, 494], "took": [35, 50, 51, 65, 105, 233], "tool": [4, 9, 21, 24, 29, 34, 38, 43, 44, 51, 81, 89, 103, 108, 116, 120, 140, 159, 162, 166, 171, 178, 179, 182, 183, 185, 186, 188, 189, 191, 192, 194, 198, 216, 248, 270, 301, 356, 401, 403, 406, 408, 410, 412, 414, 416, 418, 427, 433, 435, 441, 442, 447, 449, 484, 494, 495, 496], "toolbox": [181, 185, 495, 497], "toolkit": [0, 201], "tootel": [118, 210, 211, 212, 213, 214, 289], "top": [6, 13, 16, 18, 27, 41, 47, 59, 107, 109, 153, 162, 178, 186, 190, 303, 429, 435, 436, 438, 440, 441, 442, 449, 494], "topic": [178, 187], "topologi": 177, "toprul": 65, "tor": [118, 121, 225, 281, 283, 344, 468], "torabi": [0, 128, 129, 130, 132, 162], "toro": [118, 232, 259], "toronto": 0, "total": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 166, 168, 170, 176, 197, 198, 216, 257, 267, 305, 310, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 385, 387, 440, 456, 457, 480, 496, 497], "total_scor": 107, "touch": 348, "tour": 494, "toward": [96, 157, 162, 207, 238, 354, 371, 372, 373, 374, 375, 376, 377, 497], "tox": [2, 3, 4, 11, 15, 16, 17, 19, 21, 22, 26, 31, 32, 36, 38, 43, 45, 46, 50, 51, 53, 55, 61, 70, 77, 81, 89, 90, 94, 104, 106, 108, 109, 110, 113, 114, 130, 162, 163], "tpami": [52, 118, 455, 461], "tpl": 218, "tpr": 184, "tr": [12, 27, 35, 69, 105, 128, 132, 146, 158, 162, 180, 184, 190, 226, 330, 331, 332, 336, 337, 338, 355], "trace": [106, 404], "traceback": 472, "traci": [118, 227], "track": [103, 107, 111, 177, 178, 187], "tracker": 187, "trade": [204, 306, 307], "tradition": 184, "trail": 178, "train": [3, 33, 36, 42, 43, 44, 45, 46, 47, 54, 101, 102, 153, 162, 170, 171, 172, 175, 177, 184, 186, 191, 239, 304, 305, 306, 307, 309, 310, 453, 455, 461], "train_siz": [45, 46], "train_test_split": [45, 46], "trait": 171, "trajectori": 177, "tran": [52, 118, 248, 455, 461], "trans_i": 59, "trans_x": 59, "trans_z": 59, "transact": [47, 118, 176, 198, 207], "transax": 13, "transfer": 186, "transform": [3, 13, 24, 25, 41, 43, 44, 52, 53, 54, 57, 68, 72, 86, 91, 93, 94, 96, 101, 103, 107, 114, 118, 120, 132, 134, 143, 144, 148, 150, 152, 153, 154, 155, 157, 159, 162, 167, 168, 173, 180, 184, 188, 189, 201, 216, 235, 238, 261, 279, 304, 305, 306, 307, 308, 311, 312, 323, 326, 339, 342, 346, 357, 359, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 391, 453, 454, 455, 456, 468, 478, 480, 497], "transform_img": [129, 132, 162, 371, 372, 373], "transform_single_img": [131, 162, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 456], "transform_to_2d": [391, 393, 394], "transient": 191, "translat": [66, 150, 162, 190, 329, 342, 367, 466], "transpar": [9, 16, 24, 29, 72, 116, 129, 134, 150, 162, 191, 276, 287, 295, 298, 301, 326, 342, 356, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 496], "transparency_data": 26, "transparency_imag": 26, "transparency_rang": [26, 72, 134, 162, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442], "transpos": [153, 162, 177], "traor": [0, 133, 162], "treat": 121, "treatment": [184, 186], "tree": [167, 230, 258], "trei": [118, 201], "trend": [45, 46, 91, 132, 162, 163, 191], "trended_data": 91, "trendscent": [200, 249], "tresult": 105, "tri": [25, 54, 66, 163, 171, 281, 427, 432, 439, 453], "triag": [157, 162], "trial": [41, 66, 68, 74, 118, 129, 162, 170, 179, 184, 279], "trial_condit": 103, "trial_nam": 103, "trial_numb": 103, "trial_typ": [6, 35, 66, 67, 68, 72, 74, 103, 104, 220, 333, 434], "trial_type_idx": 74, "trial_type_list": 103, "trial_type_seri": 103, "trials_ses1": [234, 288], "trialwise_condit": 103, "triangl": [25, 184, 404, 475, 478], "triangul": [25, 480], "triangular": [184, 238, 244, 245, 432, 439], "triangulari": 93, "tribhuvan": 0, "trick": [19, 186], "tricki": 177, "trigger": [163, 187], "trilinear": 478, "trim": [375, 460], "triplet": [327, 328, 377, 451], "triplett": [118, 268, 286], "trivial": 83, "tronto": 0, "troubleshoot": 178, "true": [2, 3, 4, 6, 7, 10, 11, 14, 15, 16, 17, 19, 22, 23, 24, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 120, 121, 129, 132, 142, 145, 150, 157, 162, 165, 168, 170, 173, 175, 177, 180, 183, 184, 191, 238, 239, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 264, 266, 267, 270, 271, 272, 273, 276, 278, 279, 280, 281, 283, 285, 290, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 326, 329, 339, 341, 342, 343, 344, 345, 348, 350, 354, 356, 358, 359, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 462, 465, 467, 468, 469, 480, 494, 496], "true_divid": 114, "truli": [180, 218], "truncat": [150, 162], "trust": [3, 38, 52, 55, 56, 61, 65, 77, 79, 180], "truth": [44, 47, 60, 170], "try": [3, 4, 5, 22, 38, 42, 43, 52, 55, 56, 59, 61, 65, 67, 68, 77, 79, 91, 101, 102, 107, 111, 121, 133, 159, 162, 164, 165, 170, 171, 176, 177, 178, 180, 187, 191, 206, 366, 495], "ts2": 197, "ts3": 197, "tsuang": [118, 216], "tsv": [6, 50, 55, 56, 58, 59, 61, 63, 65, 75, 77, 104, 113, 116, 129, 162, 178, 179, 206, 233, 234, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 267, 287, 288, 326, 329, 333, 339, 341, 366, 367, 368, 371, 374, 378, 431, 434, 447, 496], "tsvfile": 74, "ttest_ind": [96, 190], "tube": 120, "tunabl": 368, "tune": [22, 36, 41, 42, 46, 91, 118, 141, 162, 165, 170, 171, 173, 177, 180, 311, 312, 367, 373, 376, 454, 494], "tupl": [16, 191, 249, 256, 270, 290, 304, 305, 306, 307, 309, 310, 311, 312, 316, 318, 319, 326, 329, 339, 345, 348, 356, 359, 361, 364, 367, 373, 376, 378, 379, 380, 382, 384, 385, 387, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 433, 434, 435, 436, 438, 439, 440, 441, 442, 449, 454, 459, 466, 472, 477], "turn": [13, 50, 68, 86, 165, 167, 177, 191, 382, 383, 384, 385, 386, 387, 440, 441, 442, 449, 466], "turner": [103, 118, 170, 200, 232, 249, 259], "tutori": [6, 7, 8, 31, 68, 101, 137, 147, 162, 170, 178, 182, 185, 186, 191, 217, 270, 304, 351, 356, 433, 441, 447, 449, 496], "tv": [46, 118, 176, 304, 305, 309, 310], "tv_l1": 42, "tvl1": 176, "tweak": [26, 61, 91, 168], "twelv": [118, 206, 267], "twine": 187, "two": [6, 7, 15, 25, 27, 36, 43, 51, 58, 59, 61, 63, 68, 75, 76, 79, 84, 88, 90, 91, 96, 101, 103, 104, 106, 111, 113, 116, 121, 127, 132, 142, 145, 150, 153, 154, 162, 164, 167, 169, 170, 172, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 197, 201, 234, 240, 244, 250, 269, 276, 288, 304, 305, 306, 307, 311, 312, 316, 318, 319, 323, 326, 339, 340, 341, 345, 351, 356, 359, 367, 368, 372, 375, 377, 379, 390, 425, 426, 431, 434, 435, 437, 442, 443, 444, 445, 446, 447, 452, 454, 456, 457, 458, 464, 465, 466, 477, 478, 479, 494, 496], "two_sid": [6, 26, 83, 114, 130, 133, 134, 154, 157, 162, 326, 339, 342, 343, 363, 366, 456, 465, 466], "two_sided_test": [79, 81, 106, 175, 341, 390], "twpyb1pflj6vrlxgh3rohyqanxbdpelw": 231, "tx": 66, "txt": [96, 285], "ty": 66, "tyler": [118, 175], "type": [3, 6, 11, 16, 19, 22, 26, 31, 36, 41, 45, 51, 52, 53, 66, 67, 68, 70, 74, 89, 90, 96, 103, 106, 121, 127, 129, 130, 132, 133, 136, 139, 141, 144, 147, 150, 156, 157, 158, 159, 160, 162, 172, 175, 178, 179, 180, 184, 187, 189, 197, 221, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 278, 308, 314, 322, 326, 339, 341, 344, 348, 349, 351, 353, 354, 356, 357, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 426, 440, 441, 443, 444, 445, 446, 454, 456, 457, 458, 465, 466, 467, 468], "typeerror": [157, 162, 354, 363], "typic": [6, 7, 74, 80, 81, 103, 113, 167, 169, 171, 175, 178, 180, 182, 184, 189, 190, 191, 196, 291, 306, 307, 310, 316, 365, 366, 377, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 440, 441, 442, 449, 454, 494], "typo": [131, 152, 162], "typograph": [159, 162], "tyszka": [118, 228, 257], "tz": 66, "tziona": [118, 226], "tzourio": [118, 198, 248], "u": [3, 4, 13, 16, 17, 25, 26, 39, 41, 43, 58, 61, 66, 68, 79, 81, 91, 96, 118, 163, 170, 171, 173, 178, 208, 231, 264, 266, 305, 310, 318, 319, 495], "u4": 3, "u5mzi": 202, "u96": 46, "ub": 65, "ubuntu": 177, "uc": 0, "ucc": 228, "uchida": [43, 44, 118, 223, 280], "ucl": [0, 6, 72, 233, 234, 287], "ucla": [268, 286], "ucsd": 231, "uddin": 118, "ugli": 171, "ugurbil": [118, 197], "ui": 163, "uint8": [47, 59, 93, 159, 162, 357], "uk": [0, 2, 6, 22, 72, 216, 219, 232, 233, 234, 259, 287], "ultim": [178, 317, 427, 433, 435, 436, 440, 441, 442], "umask": 51, "unabl": [3, 38, 52, 55, 56, 61, 65, 71, 77, 79, 150, 162], "unavail": [178, 270], "unbalanc": 52, "unbias": [118, 170, 201, 218], "unc": [65, 81, 82, 104], "uncach": 189, "uncertainti": [69, 78, 81, 177, 179, 180, 184], "unchang": [18, 68, 175, 238, 239, 240, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "unclear": 101, "uncom": [10, 17, 23, 39, 55, 57, 61], "uncompress": [65, 142, 146, 162], "unconstrain": [118, 232], "uncontrol": 68, "uncorrect": [6, 65, 78, 81, 82, 83, 104], "under": [41, 106, 134, 159, 160, 162, 170, 171, 175, 176, 177, 178, 179, 180, 184, 187, 197, 201, 225, 227, 233, 304, 305, 306, 307, 308, 311, 312, 348, 359, 360, 365, 373, 376, 383, 386, 390, 454], "underflow": 314, "underlai": [26, 193, 237, 489], "underli": [0, 26, 91, 132, 162, 180, 184, 186, 191, 404, 443, 445, 446, 452], "underneath": [443, 445, 446, 452], "underscor": [130, 162, 178], "undershoot": 68, "understand": [3, 30, 48, 63, 75, 85, 99, 116, 132, 141, 162, 171, 173, 178, 186, 188, 224, 267, 270, 272, 274, 275, 277, 280, 304, 326, 350, 351, 356, 360, 367, 370, 376, 384, 430, 431, 433, 441, 442, 447, 464, 496, 497], "understood": [68, 281], "undirect": [395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 429], "unexpectedli": 73, "unfilt": [159, 162], "unfortun": [173, 177], "uniform": [13, 91, 134, 162], "uniform_averag": [305, 310], "uniformli": [139, 162, 171, 437, 443, 445, 446, 450, 452], "unintention": 187, "uninterrupt": 180, "union": [86, 385, 387, 388], "uniqu": [2, 16, 19, 21, 22, 31, 32, 33, 34, 35, 37, 38, 41, 43, 45, 46, 51, 52, 53, 54, 61, 67, 88, 89, 90, 96, 103, 106, 110, 132, 142, 162, 163, 164, 172, 189, 198, 248, 254, 255, 333, 371, 374, 378, 456, 457, 458], "unique_condit": 37, "unique_run": 35, "unit": [0, 6, 7, 16, 41, 58, 60, 118, 168, 170, 176, 177, 178, 191, 308, 318, 319, 341, 344, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 468], "uniti": [147, 162], "univ": [118, 318, 319], "univari": [31, 35, 36, 41, 64, 70, 73, 100, 104, 113, 115, 116, 118, 172, 174, 176, 270, 275, 276, 304, 305, 306, 307, 309, 310, 349, 351, 356, 370, 376, 390, 418, 435, 442, 447, 479, 483, 496], "univers": [0, 184, 227], "universitair": 0, "universiteit": 0, "universit\u00e4t": 0, "universit\u00e9": [0, 178], "unix": [189, 303], "unknown": [10, 23, 24, 59, 93, 105, 114, 132, 162, 170, 198, 200, 201, 205, 209, 210, 211, 212, 213, 214, 217, 218, 221, 222, 223, 226, 229, 231, 232, 234, 235, 248, 249, 262, 378, 480], "unlabel": 184, "unless": [121, 177, 178, 286, 341, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 437, 442, 468], "unlik": [15, 21, 175, 180, 189, 368], "unlink": 111, "unmask": [34, 47, 119, 128, 142, 145, 162, 188, 190, 311, 312, 370, 373, 376, 497], "unmodifi": 163, "unmodul": [66, 74], "unnecessari": [3, 129, 132, 162, 319], "unoptim": 111, "unpair": [76, 84, 116, 132, 162, 183, 276, 339, 431, 435, 447, 496], "unpaired_design_matrix": 82, "unpen": 177, "unrealist": 177, "unrel": [178, 191], "unrestrict": [196, 199, 203, 206, 207, 224], "unscrub": 201, "unsign": [341, 390], "unstructur": 42, "unsuit": [150, 162], "unsupervis": [108, 184, 308, 311, 312, 453, 455], "unsurprisingli": 82, "unthreshold": [24, 83, 118, 121, 184, 200, 225, 249, 281, 283], "until": [178, 281, 390], "unus": [131, 132, 162, 238, 239, 240, 311, 312, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "unusu": 170, "unwant": [68, 118, 201], "unwarp": 184, "unzip": 187, "up": [0, 3, 6, 10, 23, 24, 35, 38, 50, 86, 88, 91, 96, 101, 107, 114, 118, 127, 129, 130, 132, 134, 147, 148, 150, 155, 157, 162, 163, 167, 173, 174, 176, 177, 179, 180, 181, 184, 187, 191, 201, 233, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 286, 313, 340, 371, 374, 378, 390, 428, 441, 445, 453, 478, 497], "updat": [43, 95, 103, 105, 127, 128, 129, 130, 131, 132, 133, 134, 137, 141, 142, 147, 150, 156, 157, 159, 162, 163, 187, 238, 239, 240, 258, 281, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456], "update_20190916_readm": 258, "update_yeo2011_schaefer2018_labelnam": [230, 258], "upgrad": [37, 38, 43, 44, 45, 50, 54, 55, 56, 57, 58, 59, 61, 64, 71, 91, 93, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 120, 127, 132, 142, 144, 150, 155, 157, 162], "upload": [121, 163], "upon": [0, 105, 197, 199, 282, 427, 440, 441, 442, 449, 456, 458, 466], "upper": [15, 43, 177, 316, 318, 319, 384, 387, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 428, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 450, 452], "upper_cutoff": [91, 132, 162, 384, 387], "upstream": [178, 187], "urgent": 187, "url": [0, 47, 51, 65, 118, 132, 151, 159, 162, 163, 164, 168, 169, 171, 176, 207, 209, 218, 239, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 262, 268, 270, 271, 279, 280, 285, 286, 290, 300, 303, 311, 313, 317, 456], "urls_path": 268, "ursina": [118, 200, 249], "us": [0, 1, 2, 4, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 32, 33, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 52, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 118, 119, 120, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 190, 191, 193, 197, 198, 201, 202, 203, 204, 205, 206, 208, 216, 217, 218, 223, 224, 225, 227, 228, 233, 237, 239, 241, 242, 243, 244, 245, 246, 248, 251, 257, 258, 261, 263, 266, 284, 289, 290, 296, 299, 302, 309, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 327, 330, 331, 332, 334, 335, 336, 337, 338, 343, 347, 348, 353, 358, 362, 364, 365, 379, 382, 383, 385, 386, 387, 388, 391, 392, 393, 394, 419, 420, 421, 425, 426, 451, 453, 455, 459, 460, 461, 462, 463, 466, 467, 468, 469, 476, 477, 479, 480, 481, 489, 491, 495, 496, 497], "usa": 0, "usabl": [145, 162, 175, 177, 199, 280, 308], "usag": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 141, 150, 154, 159, 162, 164, 178, 179, 183, 186, 187, 188, 196, 199, 203, 206, 207, 224, 289, 292, 293, 300, 368, 450, 483, 497], "usecas": [101, 167, 171, 173, 178], "useless": 68, "user": [13, 19, 31, 36, 42, 61, 68, 69, 103, 110, 111, 121, 127, 128, 129, 130, 131, 132, 133, 134, 144, 147, 148, 150, 151, 155, 157, 158, 159, 162, 177, 178, 179, 180, 182, 184, 185, 187, 188, 191, 193, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 483, 485, 486, 495], "userguid": 171, "userwarn": [3, 10, 11, 16, 17, 19, 21, 22, 23, 24, 26, 31, 34, 38, 42, 43, 44, 46, 50, 51, 53, 55, 60, 64, 65, 66, 70, 72, 73, 74, 77, 79, 80, 81, 89, 90, 93, 103, 104, 113, 114], "usr": [254, 255], "usual": [35, 51, 79, 81, 96, 157, 162, 163, 169, 171, 172, 173, 178, 180, 184, 186, 187, 190, 198, 248, 306, 307, 313, 384, 438, 454], "utc": [178, 495], "util": [28, 46, 47, 53, 55, 70, 89, 90, 104, 109, 110, 113, 130, 132, 135, 142, 146, 153, 157, 162, 168, 178, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 364, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456, 483, 488], "u\u011furbil": [118, 197], "v": [3, 25, 26, 30, 34, 35, 37, 40, 41, 48, 54, 67, 68, 78, 81, 82, 91, 100, 101, 115, 116, 118, 121, 128, 130, 162, 170, 171, 175, 177, 178, 185, 187, 198, 199, 209, 216, 217, 218, 225, 231, 235, 261, 266, 270, 274, 276, 281, 283, 284, 301, 304, 305, 306, 308, 310, 349, 351, 354, 356, 357, 367, 370, 376, 390, 418, 436, 439, 442, 447, 449, 469, 496], "v0": [147, 150, 155, 157, 162, 230, 258], "v1": [127, 130, 147, 155, 157, 162], "v2": [150, 155, 162, 163], "v3": [127, 162], "v4": [65, 130, 162], "v_i": [392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442], "va": 13, "val_scor": 36, "valentina": [118, 197], "valid": [6, 30, 34, 35, 38, 39, 43, 45, 47, 48, 54, 102, 109, 110, 112, 116, 118, 128, 129, 134, 137, 140, 153, 157, 158, 162, 163, 164, 166, 171, 174, 178, 191, 201, 231, 240, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 270, 278, 304, 305, 306, 307, 308, 309, 310, 326, 327, 328, 333, 344, 348, 351, 356, 361, 362, 367, 368, 371, 374, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 452, 459, 465, 476, 477, 478, 496, 497], "valid_method": 454, "validationerror": 178, "valu": [4, 6, 10, 11, 13, 15, 16, 17, 18, 24, 25, 26, 32, 35, 41, 43, 45, 47, 50, 55, 57, 58, 61, 64, 68, 70, 71, 72, 73, 74, 77, 79, 81, 90, 91, 92, 93, 94, 96, 98, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 121, 125, 127, 128, 130, 131, 132, 133, 134, 135, 139, 142, 143, 147, 150, 154, 155, 157, 162, 164, 167, 168, 171, 172, 174, 175, 176, 178, 180, 183, 184, 186, 189, 191, 198, 227, 230, 235, 238, 239, 240, 242, 244, 246, 248, 250, 251, 252, 254, 255, 257, 258, 259, 261, 262, 272, 276, 281, 289, 292, 293, 294, 295, 298, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 322, 326, 327, 329, 335, 339, 341, 342, 343, 344, 345, 348, 350, 355, 359, 360, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 424, 425, 426, 427, 428, 429, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 478, 479, 480, 494], "valuabl": [68, 178], "value_count": [72, 104], "valueerror": [127, 130, 162, 354, 358, 363, 371, 372, 374, 375, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 435, 436, 440, 441, 442, 472, 478], "vamsi": [118, 216], "van": [118, 121, 197, 205, 225, 252, 281, 283, 367, 368], "vanass": [0, 155, 162], "vanessa": [118, 121, 225, 281, 283], "var": 367, "vari": [15, 36, 68, 73, 96, 97, 105, 156, 162, 167, 173, 177, 186, 230, 239, 240, 242, 345], "variabl": [4, 6, 15, 42, 45, 46, 47, 59, 77, 79, 96, 103, 104, 111, 118, 129, 139, 157, 159, 162, 163, 165, 170, 171, 172, 174, 175, 177, 178, 180, 184, 189, 191, 199, 219, 247, 291, 304, 305, 306, 307, 308, 309, 310, 313, 317, 326, 339, 355, 367], "varianc": [6, 35, 41, 43, 45, 51, 58, 59, 60, 61, 68, 71, 82, 150, 153, 154, 162, 170, 175, 177, 184, 191, 238, 242, 304, 305, 306, 307, 311, 312, 314, 316, 318, 319, 322, 323, 326, 335, 339, 344, 350, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 428, 454, 456, 459, 468, 469], "variance_": [311, 312], "variance_img": [73, 323], "variance_statmap": [65, 77, 366], "variance_threshold": 45, "variancethreshold": 45, "variant": [171, 195, 197, 224], "variat": [47, 56, 79, 104, 109, 110, 118, 128, 162, 175, 176, 184, 227, 325, 341, 390], "varieti": [66, 103, 169, 170, 171, 172, 173, 178, 184], "variou": [3, 16, 21, 32, 33, 42, 51, 109, 110, 150, 153, 157, 162, 170, 172, 173, 178, 180, 184, 190, 250, 306, 307, 368, 454, 478], "varoquaux": [0, 47, 51, 52, 54, 59, 102, 118, 121, 122, 123, 125, 126, 135, 137, 140, 144, 147, 148, 149, 150, 152, 162, 164, 165, 167, 168, 169, 170, 172, 176, 186, 207, 224, 225, 238, 239, 253, 256, 281, 283, 306, 307, 311, 312, 455, 456, 461], "vasco": [0, 159, 162], "vastli": 103, "vaudois": 0, "vbm": [170, 184, 186], "vc": 187, "vcov": [316, 318, 319], "vec": 245, "vec_to_sym_matrix": [143, 162], "vector": [31, 34, 35, 36, 37, 41, 43, 47, 54, 73, 86, 101, 102, 109, 110, 120, 143, 162, 170, 171, 173, 184, 238, 304, 305, 306, 307, 313, 316, 317, 318, 319, 322, 324, 438, 478], "vectorize_word": [121, 281, 283], "vega10": 13, "vega20": 13, "vega20b": 13, "vega20c": 13, "vellor": 0, "ventral": [3, 17, 23, 33, 34, 35, 39, 40, 41, 96, 101, 118, 120, 170, 185, 191, 217, 270, 443, 445, 446, 480], "ventralattent": 266, "ventricl": 201, "venv": [178, 495], "verbos": [26, 33, 35, 37, 38, 39, 42, 45, 47, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 65, 77, 91, 93, 94, 101, 102, 103, 106, 109, 147, 162, 168, 191, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 326, 329, 335, 339, 341, 345, 356, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 453, 454, 455, 456, 461, 480], "veri": [4, 13, 32, 33, 34, 37, 38, 42, 43, 45, 47, 52, 57, 68, 77, 78, 79, 81, 88, 96, 107, 120, 150, 162, 164, 165, 167, 170, 171, 172, 173, 176, 177, 178, 180, 184, 187, 191, 306, 307, 372, 375, 377, 421, 440, 445, 467], "verifi": [68, 104, 178, 191], "vern": [118, 205, 216, 252], "verric": 344, "versatil": [173, 185, 495], "version": [2, 10, 16, 19, 20, 21, 22, 23, 32, 35, 37, 38, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 64, 70, 71, 72, 73, 89, 90, 91, 93, 94, 96, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 120, 125, 127, 130, 131, 132, 134, 135, 137, 140, 141, 142, 143, 144, 145, 147, 149, 150, 153, 155, 156, 157, 158, 159, 162, 163, 176, 177, 178, 187, 189, 196, 198, 201, 206, 217, 227, 230, 236, 238, 239, 240, 244, 245, 246, 248, 250, 251, 253, 254, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 272, 273, 281, 283, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 322, 323, 326, 329, 330, 331, 332, 335, 336, 337, 338, 339, 341, 343, 344, 348, 353, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 386, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 428, 432, 435, 436, 439, 440, 442, 443, 444, 445, 446, 452, 453, 454, 455, 456, 458, 459, 460, 462, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 478, 479, 480, 494, 498], "versionad": [178, 187, 374, 375, 376, 377, 480], "versionchang": [178, 187], "versu": [6, 68, 70, 81, 82, 96, 101, 170, 171, 184, 217], "vertex": [7, 10, 25, 134, 162, 184, 260, 378, 379, 380, 381, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 435, 436, 442, 443, 444, 445, 446, 470, 475, 478], "vertic": [7, 10, 23, 24, 39, 44, 68, 70, 74, 82, 113, 129, 142, 162, 164, 184, 276, 311, 312, 345, 350, 378, 380, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 443, 444, 445, 446, 452, 470, 471, 473, 475, 480], "vertical_checkerboard": [67, 68, 70, 221], "vetor": 238, "vfonov": 218, "vhtf6": 276, "vi": 54, "via": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 120, 123, 132, 133, 134, 162, 165, 166, 170, 173, 176, 178, 179, 182, 189, 204, 231, 251, 309, 310, 311, 312, 326, 335, 371, 372, 373, 374, 375, 376, 377, 382, 383, 384, 385, 386, 387, 427, 433, 435, 436, 440, 441, 442, 480], "victoria": [0, 132, 162], "vidaurr": [118, 197], "video": [67, 178, 184], "vienna": 0, "viergev": [118, 164, 238], "view": [0, 6, 14, 15, 17, 26, 35, 39, 45, 55, 57, 61, 64, 65, 68, 70, 73, 86, 98, 104, 106, 113, 114, 128, 129, 131, 132, 134, 144, 153, 155, 159, 162, 170, 175, 177, 186, 187, 191, 234, 304, 305, 306, 307, 311, 312, 359, 373, 376, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 454, 494, 497], "view_connectom": [23, 55, 57, 61, 147, 148, 150, 155, 162, 449, 451, 494], "view_img": [3, 31, 131, 132, 134, 147, 148, 156, 159, 162, 170, 494], "view_img_on_surf": [10, 147, 148, 150, 155, 162, 448, 449, 451, 452], "view_init": 25, "view_mark": [147, 148, 150, 155, 162, 448, 449, 494], "view_radio": 17, "view_stat_map": [147, 162], "view_surf": [7, 10, 23, 132, 147, 150, 162, 448, 449, 450, 451], "view_typ": [11, 53, 89, 90, 153, 162, 168, 440, 441], "viewabl": [150, 162], "viewer": [31, 147, 162, 170, 190, 449, 494], "viginia": 0, "vijayan": [0, 129, 162], "vinc": [26, 118, 200, 249], "vincent": [0, 47, 52, 118, 122, 162, 176, 186, 200, 203, 224, 226, 249, 256, 276, 368], "vine": [118, 318, 319], "virgil": [0, 122, 162], "virginia": 0, "viridi": [155, 162], "virtual": [178, 187, 495], "visibl": [26, 54, 81, 156, 162, 169, 359, 437, 443, 445, 446, 450, 452, 494], "vision": 233, "visual": [1, 6, 8, 15, 16, 26, 29, 30, 34, 35, 41, 48, 50, 51, 53, 59, 68, 70, 72, 73, 74, 81, 82, 85, 88, 89, 90, 91, 93, 94, 96, 99, 104, 108, 109, 110, 113, 118, 119, 128, 129, 142, 144, 147, 153, 155, 162, 164, 165, 166, 174, 178, 179, 183, 186, 187, 188, 190, 199, 203, 217, 220, 223, 236, 247, 249, 250, 256, 259, 266, 270, 271, 275, 276, 278, 280, 301, 345, 346, 349, 351, 352, 354, 356, 357, 359, 363, 370, 373, 376, 381, 384, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 428, 431, 433, 434, 439, 440, 441, 442, 445, 446, 447, 480, 496, 497], "visual_comput": [67, 68, 70, 221], "visual_left_hand_button_press": [67, 68, 70, 221], "visual_right_hand_button_press": [67, 68, 70, 221], "vittorio": [118, 201], "vivo": [118, 228, 257], "vladimir": [118, 201, 218], "vmax": [15, 26, 43, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 73, 78, 81, 82, 86, 89, 92, 95, 103, 104, 106, 109, 112, 114, 125, 127, 134, 150, 162, 168, 427, 428, 433, 435, 436, 437, 440, 441, 442, 443, 445, 446, 448, 449, 450, 452, 494], "vmhc": 246, "vmin": [15, 26, 33, 38, 43, 47, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 71, 72, 79, 81, 82, 86, 104, 106, 109, 110, 112, 114, 125, 129, 130, 134, 148, 150, 162, 168, 427, 428, 433, 435, 436, 437, 440, 441, 442, 443, 445, 446, 449, 450, 452], "vocabulari": [107, 121, 184, 186, 225, 281, 283], "vogel": [0, 61, 118, 150, 162, 208, 229, 264, 265], "voic": 68, "vol": 308, "vol_img": 474, "vol_to_surf": [10, 134, 144, 153, 155, 162, 179, 437, 443, 444, 445, 446, 450, 474, 494], "vol_to_surf_kwarg": [10, 155, 162, 450, 474], "volum": [9, 17, 29, 33, 35, 38, 41, 42, 46, 51, 57, 59, 64, 70, 81, 89, 93, 103, 111, 114, 118, 120, 127, 129, 130, 132, 134, 144, 147, 155, 162, 169, 175, 176, 184, 185, 186, 189, 193, 198, 201, 216, 223, 237, 248, 250, 253, 270, 280, 304, 305, 306, 307, 309, 310, 311, 312, 326, 348, 355, 356, 359, 360, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 391, 393, 394, 428, 433, 437, 441, 446, 447, 449, 456, 457, 458, 462, 468, 474, 478, 480, 488, 491, 494, 495, 496, 497], "volume_img": [10, 39, 70, 113, 474], "volumetr": [7, 10, 24, 132, 162, 179, 189, 390], "volumn": [59, 367], "volunt": 175, "vote": 171, "vox_offset": [59, 105], "voxel": [3, 7, 16, 26, 27, 30, 35, 38, 39, 41, 42, 43, 44, 47, 48, 49, 52, 53, 61, 62, 64, 68, 70, 71, 72, 73, 76, 81, 83, 84, 86, 89, 91, 92, 94, 101, 103, 104, 105, 106, 109, 113, 116, 118, 120, 128, 134, 137, 140, 141, 142, 148, 157, 159, 162, 167, 168, 170, 172, 173, 174, 176, 179, 180, 181, 184, 185, 186, 189, 191, 198, 201, 219, 220, 223, 230, 233, 236, 246, 254, 255, 262, 267, 271, 272, 285, 305, 308, 309, 310, 311, 312, 314, 321, 322, 326, 335, 339, 341, 342, 343, 344, 346, 348, 349, 350, 359, 360, 363, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 379, 381, 382, 385, 387, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 426, 428, 431, 435, 436, 442, 447, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 466, 478, 479, 480, 494, 496, 497], "voxel_ratio": 52, "voxel_wis": 17, "voxelwis": [326, 339], "vrije": 0, "vscode": [150, 162], "vstack": [13, 43, 44, 61, 77, 82, 107], "vt": [3, 19, 96], "vu": 0, "vulner": [118, 156, 162, 216], "vxxx": 223, "w": [26, 39, 47, 61, 110, 118, 164, 197, 208, 230, 235, 236, 238, 240, 258, 261, 262, 264, 268, 286, 304, 305, 309, 310], "w_": [309, 310], "wa": [0, 3, 26, 35, 43, 57, 64, 66, 70, 72, 73, 74, 77, 91, 93, 94, 98, 104, 109, 110, 113, 120, 121, 127, 129, 134, 147, 154, 155, 156, 157, 158, 162, 170, 172, 175, 177, 180, 187, 199, 201, 233, 309, 310, 311, 312, 326, 333, 339, 341, 366, 371, 372, 374, 375, 377, 378, 379, 425, 428, 437, 443, 445, 446, 450, 452, 459, 466, 479, 480], "wager": [118, 121, 225, 281, 283, 344, 468], "wagstyl": [0, 129, 162], "wai": [3, 6, 7, 16, 41, 64, 68, 73, 74, 78, 86, 101, 111, 118, 120, 121, 154, 155, 157, 162, 164, 166, 169, 170, 171, 173, 176, 177, 178, 179, 180, 184, 189, 191, 283, 306, 307, 316, 318, 319, 364, 428, 453, 494, 495], "wait": [121, 163, 177], "wald": [316, 318, 319], "walk": 186, "walker": [168, 456, 458], "wall": [24, 177], "wang": [0, 118, 127, 128, 129, 130, 132, 154, 155, 157, 159, 162, 227], "want": [0, 2, 6, 10, 13, 15, 16, 26, 39, 45, 52, 57, 68, 72, 73, 74, 80, 88, 96, 101, 103, 116, 120, 121, 163, 164, 171, 173, 177, 178, 180, 190, 191, 193, 237, 283, 309, 310, 329, 359, 368, 432, 489, 494, 495], "ward": [93, 167, 184, 185, 201, 374, 454, 480], "ward_labels_img": 52, "ward_parcel": 52, "ward_tre": 52, "warn": [2, 3, 11, 16, 17, 19, 21, 22, 31, 32, 34, 36, 38, 42, 43, 45, 46, 51, 53, 72, 89, 90, 94, 106, 107, 108, 109, 110, 114, 127, 128, 129, 130, 131, 132, 147, 148, 150, 155, 157, 159, 162, 170, 178, 187, 248, 250, 251, 257, 259, 323, 329, 333, 404, 444, 447, 452, 479, 480], "warrington": [0, 129, 162], "washington": [0, 227], "waskom": [0, 122, 162], "wasn": 177, "wassermann": [0, 118, 125, 147, 162, 207, 253], "wast": [26, 118, 177], "watch": [51, 52, 53, 55, 57, 58, 87, 91, 94, 108, 150, 162, 166, 185, 186, 191, 206, 267, 497], "watkin": [118, 232, 259], "wdesign": [159, 162], "we": [0, 2, 3, 4, 6, 7, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 127, 129, 132, 140, 148, 149, 150, 155, 157, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 179, 184, 186, 187, 188, 189, 190, 191, 207, 228, 231, 245, 254, 255, 272, 281, 283, 309, 310, 311, 316, 318, 319, 339, 341, 343, 351, 355, 363, 364, 365, 366, 382, 384, 385, 387, 394, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 431, 456, 458, 465, 466, 480, 494, 495], "weaker": [54, 68, 81], "weakli": 177, "web": [17, 118, 121, 147, 150, 162, 178, 187, 225, 281, 283, 448, 450, 451, 452, 466, 494, 498], "webpag": 121, "websit": [3, 45, 77, 135, 147, 162, 163, 178, 197, 246, 259, 280], "webster": [106, 118, 164, 390], "wednesdai": [178, 495], "weeda": [78, 118, 321], "week": [163, 178, 187], "weekli": [178, 186], "wegrzyn": [0, 154, 162], "weigh": 178, "weight": [6, 31, 45, 46, 47, 120, 121, 150, 162, 164, 171, 173, 174, 177, 178, 180, 191, 216, 218, 225, 246, 271, 281, 283, 304, 305, 306, 307, 309, 310, 323, 366, 448, 460], "weight_img": [31, 45, 101, 170, 191], "weighted_connectivity_graph": [127, 162], "weird": 121, "welcom": [178, 187, 495], "well": [3, 6, 16, 41, 47, 51, 54, 61, 68, 69, 71, 81, 91, 103, 133, 140, 147, 154, 156, 162, 163, 164, 165, 167, 168, 170, 171, 173, 176, 178, 180, 184, 186, 191, 201, 204, 207, 218, 231, 232, 234, 238, 239, 240, 253, 259, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 345, 359, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 453, 454, 455, 456, 480], "wellcom": [0, 184, 233], "went": 121, "were": [0, 6, 11, 16, 19, 22, 26, 35, 41, 43, 46, 51, 52, 53, 61, 64, 65, 68, 70, 73, 81, 89, 90, 93, 96, 101, 104, 112, 113, 120, 125, 127, 134, 150, 153, 157, 158, 159, 162, 170, 177, 178, 180, 197, 201, 208, 216, 218, 220, 223, 232, 233, 234, 281, 283, 344, 374, 377, 425, 468, 479, 480], "weren": 177, "western": 0, "wget": 187, "wgreen": [118, 313, 317], "what": [16, 59, 68, 73, 158, 171, 177, 181, 187, 189, 191, 239, 313, 317, 350, 364, 469, 494, 497], "whatev": [13, 154, 162], "whats_new": 187, "whatsnew": [127, 162], "whatsoev": 177, "wheel": [163, 187], "when": [2, 3, 4, 9, 10, 17, 25, 26, 29, 57, 61, 66, 68, 69, 70, 74, 77, 91, 93, 94, 96, 103, 105, 109, 110, 111, 113, 116, 120, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 145, 148, 150, 153, 154, 157, 158, 159, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 183, 184, 187, 190, 198, 203, 204, 238, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 274, 276, 281, 283, 304, 305, 306, 307, 308, 309, 310, 314, 315, 319, 320, 323, 326, 339, 341, 359, 361, 363, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 381, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 454, 459, 466, 467, 468, 478, 480, 494, 496], "whenev": [69, 171, 342], "where": [2, 6, 10, 16, 17, 25, 26, 41, 43, 47, 53, 71, 79, 86, 89, 96, 103, 109, 116, 129, 134, 140, 154, 162, 164, 168, 170, 175, 176, 178, 180, 184, 187, 190, 191, 220, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 313, 316, 317, 318, 319, 322, 326, 339, 341, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 401, 403, 406, 408, 410, 412, 414, 416, 418, 422, 426, 427, 430, 433, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 456, 458, 465, 466, 478, 494], "wherea": [16, 52, 156, 162, 167, 171, 190, 385, 387, 388, 454], "wherein": 66, "whether": [6, 10, 71, 91, 96, 106, 131, 148, 162, 170, 178, 180, 187, 191, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 267, 270, 271, 272, 276, 278, 279, 280, 281, 283, 285, 290, 300, 311, 312, 323, 341, 342, 343, 348, 356, 358, 359, 360, 363, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 391, 393, 394, 435, 437, 442, 443, 444, 446, 454, 456, 465, 466, 468, 469], "which": [0, 3, 6, 7, 10, 11, 15, 16, 22, 24, 27, 31, 32, 34, 35, 36, 38, 39, 41, 43, 45, 47, 50, 52, 54, 61, 64, 68, 69, 70, 71, 77, 78, 81, 86, 91, 93, 96, 98, 101, 103, 113, 118, 120, 121, 126, 127, 128, 130, 132, 134, 135, 140, 141, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 189, 190, 191, 197, 198, 201, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 281, 282, 283, 284, 287, 289, 291, 292, 293, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 325, 326, 333, 334, 339, 341, 343, 348, 354, 359, 363, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 454, 456, 457, 458, 466, 472, 473, 478, 494, 495], "whichev": 178, "while": [3, 4, 6, 7, 26, 41, 46, 51, 58, 59, 68, 77, 86, 96, 101, 103, 104, 107, 111, 113, 120, 127, 129, 135, 145, 147, 162, 169, 170, 175, 177, 178, 179, 186, 190, 191, 201, 250, 304, 305, 306, 307, 333, 390], "white": [12, 25, 26, 41, 43, 45, 59, 68, 77, 91, 138, 153, 155, 156, 162, 177, 190, 191, 201, 210, 211, 212, 213, 214, 215, 218, 227, 267, 271, 285, 289, 292, 296, 297, 298, 299, 304, 305, 306, 307, 311, 312, 329, 367, 373, 376, 383, 386, 443, 444, 445, 446, 449, 450, 452, 454, 477, 478], "white_left": [210, 211, 212, 213, 214, 215, 289, 478], "white_matt": [59, 292, 293, 300, 474], "white_matter_imag": 26, "white_matter_map": [45, 77, 227, 285], "white_matter_mask": 26, "white_right": [210, 211, 212, 213, 214, 215, 289], "whiten": [313, 317, 318, 319], "whitened_design": 317, "whitened_i": 318, "whitened_residu": 318, "whitened_x": [313, 317], "whitening_": 238, "whitespac": [146, 162], "whl": 187, "who": [0, 121, 191, 197, 206, 368], "whole": [4, 15, 34, 45, 51, 53, 71, 91, 96, 111, 118, 121, 129, 156, 162, 175, 176, 178, 179, 185, 190, 191, 204, 218, 219, 233, 251, 271, 281, 283, 294, 297, 304, 305, 306, 307, 311, 312, 373, 376, 383, 386, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 440, 454, 456, 494], "whose": [10, 70, 134, 162, 177, 184, 239, 240, 242, 317, 351, 432, 472, 473, 478], "why": [3, 7, 96, 177, 191], "wide": [58, 72, 109, 118, 170, 171, 173, 177, 178, 217, 268, 286, 308], "width": [10, 15, 34, 35, 54, 68, 70, 73, 77, 96, 104, 113, 132, 162, 184, 191, 304, 305, 306, 307, 311, 312, 326, 339, 341, 361, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 428, 429, 433, 435, 436, 438, 439, 440, 441, 442, 448, 449, 454, 456, 458, 464, 466, 479], "width_ratio": [82, 103], "width_tf": 44, "width_tf_i": 44, "width_view": [132, 162, 449], "wiesner": [0, 150, 162], "wig": [61, 118, 208, 229, 264, 265], "wiki": 180, "wikipedia": 180, "wildcard": [4, 189, 190, 303, 354], "wilei": [118, 318, 319], "william": [118, 197, 200, 226, 249, 313, 317], "williamson": [0, 127, 128, 162], "wim": [118, 218], "window": [64, 70, 73, 104, 113, 178, 466, 495], "winkler": [106, 118, 197, 390], "winner": 231, "wip": 178, "wisconsin": 0, "wise": [6, 16, 43, 50, 58, 83, 96, 103, 106, 127, 132, 159, 162, 163, 175, 179, 184, 191, 304, 305, 306, 307, 341, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 435, 436, 442], "wish": [68, 81, 109, 157, 162, 178, 184, 187, 218, 233, 271, 272, 294, 295, 296, 297, 298, 299, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 433, 435, 436, 438, 440, 441, 442], "within": [7, 11, 16, 19, 22, 26, 33, 39, 50, 51, 53, 58, 68, 69, 81, 89, 90, 103, 106, 111, 150, 153, 159, 162, 163, 167, 169, 175, 179, 182, 183, 201, 304, 305, 308, 323, 326, 328, 329, 333, 343, 344, 363, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 388, 395, 396, 397, 398, 399, 400, 402, 405, 407, 409, 411, 413, 415, 417, 428, 429, 454, 457, 466, 468], "without": [3, 6, 15, 24, 26, 51, 53, 68, 80, 83, 86, 96, 105, 111, 121, 128, 129, 134, 141, 150, 159, 162, 163, 165, 168, 174, 176, 177, 180, 184, 187, 189, 191, 251, 342, 348, 368, 370, 373, 376, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 428, 436, 440, 494, 497], "wjtyq": [206, 267], "wjvd5": [207, 253], "wlsmodel": 317, "wm": [12, 22, 59, 91, 156, 162, 191, 218, 271, 304, 305, 306, 307, 311, 312, 368, 373, 376, 383, 386, 454], "wm_csf": [59, 329, 367, 368], "wm_mask_img": 298, "wm_mni152_templ": 299, "wn": [159, 162], "woldorff": [118, 235, 261], "wolf": [59, 61, 118, 177, 367, 368], "wolfgang": [118, 228, 257], "women": 0, "wood": [118, 226], "woolrich": [118, 164, 197], "wor": 178, "word": [15, 79, 96, 107, 109, 121, 163, 170, 171, 178, 220, 225, 233, 281, 283, 474], "word_frequ": [107, 121, 225, 281, 283], "work": [0, 1, 2, 3, 4, 6, 8, 10, 11, 15, 16, 17, 19, 21, 22, 23, 24, 26, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 50, 51, 52, 53, 55, 58, 60, 61, 64, 65, 66, 70, 72, 73, 74, 77, 79, 80, 81, 86, 88, 89, 90, 91, 93, 94, 96, 100, 101, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 129, 132, 133, 134, 142, 143, 150, 157, 158, 162, 163, 164, 169, 170, 171, 173, 177, 178, 179, 180, 187, 189, 190, 191, 197, 201, 238, 239, 240, 247, 250, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 339, 345, 354, 357, 360, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 421, 429, 435, 452, 453, 454, 455, 456, 465, 471, 473, 474, 475, 478, 480, 482, 484, 496], "workaround": [143, 162], "workbench": 13, "worker": [33, 35, 37, 38, 39, 42, 45, 46, 47, 51, 53, 56, 60, 61, 101, 106, 109, 390], "workflow": [64, 178, 182, 187], "workshop": [118, 176, 201, 250], "workspac": 187, "world": [43, 189, 191, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 429, 438], "worri": [6, 25, 120], "wors": [68, 305, 310], "worslei": [118, 344, 468], "worst": 170, "worth": 79, "would": [6, 10, 15, 45, 53, 61, 68, 77, 80, 107, 111, 113, 121, 129, 131, 132, 155, 159, 162, 163, 170, 177, 178, 179, 180, 187, 303, 304, 305, 306, 307, 309, 310, 312, 326, 328, 329, 333, 339, 341, 364, 366, 381, 386, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 428, 435, 436, 442, 466], "wouter": [78, 118, 321], "wrap": [12, 50, 51, 52, 53, 55, 56, 57, 59, 61, 65, 107, 111, 170, 464], "wrapper": [6, 71, 72, 304, 305, 341, 472, 473], "wresid": [159, 162], "write": [6, 44, 73, 116, 121, 127, 157, 159, 162, 177, 178, 187, 366, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 464, 470, 471, 475], "write_imgs_to_path": [130, 162], "write_tmp_img": [130, 162], "written": [177, 233, 464], "wrong": [140, 158, 162, 180], "wrt": 246, "wspace": [43, 47, 109], "wustl": [227, 231, 285], "www": [0, 2, 3, 6, 10, 11, 22, 28, 42, 72, 105, 111, 121, 198, 199, 200, 204, 217, 218, 225, 232, 233, 234, 247, 248, 251, 259, 270, 287], "wy": [159, 162], "x": [3, 6, 10, 14, 15, 16, 25, 33, 35, 37, 39, 41, 43, 44, 47, 50, 55, 57, 59, 61, 64, 65, 68, 71, 73, 77, 86, 93, 94, 96, 104, 107, 118, 129, 130, 133, 134, 137, 142, 144, 150, 155, 157, 159, 162, 170, 175, 178, 184, 187, 190, 191, 197, 201, 209, 233, 238, 250, 256, 279, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 326, 335, 339, 346, 367, 370, 373, 376, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 427, 429, 433, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 449, 452, 453, 455, 456, 457, 461, 465, 466, 467, 470, 479, 480, 492, 494], "x1": [66, 96, 478], "x1_post": 348, "x1_pre": 348, "x2": [66, 96], "x20": 478, "x27": [3, 52], "x2_post": 348, "x2_pre": 348, "x3": 66, "x4": 66, "x_figure_filenam": 44, "x_inv": [453, 455], "x_new": [308, 311, 312, 453, 455], "x_random_filenam": 44, "x_red": [453, 455], "x_test": [33, 41, 44, 47, 304, 305, 306, 307, 308], "x_train": [33, 41, 44, 47], "xavier": 118, "xaxi": [51, 52], "xerr": [54, 102], "xi": [47, 118, 230, 258], "xiaop": [118, 204, 251], "xlabel": [6, 27, 32, 34, 36, 45, 51, 52, 54, 58, 61, 69, 102, 190], "xlim": [27, 32, 190], "xmean_": [309, 310], "xmin": [32, 427, 428, 429, 433, 435, 436, 438, 440, 441, 442], "xn_post": 348, "xn_pre": 348, "xor": 121, "xprojector": [15, 411, 417, 419], "xslicer": [10, 412, 418, 420], "xstd_": [309, 310], "xtick": [34, 36, 37, 47, 96], "xu": [118, 197], "xx": 47, "xxxx": 178, "xy_indices_of_special_voxel": 43, "xyz": [16, 358, 401, 406, 408, 412, 418], "xyzt_unit": [59, 105], "xz": [14, 15, 16, 52, 409, 410, 419, 420, 427, 429, 433, 435, 436, 438, 440, 441, 442, 466, 494], "xzprojector": [14, 15, 413, 415, 419], "xzslicer": [414, 416, 420], "y": [6, 15, 16, 24, 25, 33, 35, 36, 37, 38, 39, 41, 43, 44, 47, 50, 55, 57, 61, 64, 65, 71, 73, 86, 94, 96, 104, 109, 110, 114, 118, 142, 144, 147, 159, 162, 170, 171, 175, 178, 184, 187, 190, 191, 222, 238, 239, 240, 256, 279, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 326, 334, 335, 339, 341, 346, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 427, 429, 433, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 449, 452, 453, 454, 455, 456, 457, 465, 466, 470, 479, 494], "y_binari": 41, "y_binary_": 41, "y_col": 44, "y_figure_filenam": 44, "y_multi": 41, "y_pred": [31, 33, 36, 44, 46, 170, 304, 305, 306, 307, 309, 310], "y_pred_big": 44, "y_pred_larg": 44, "y_pred_ova": 37, "y_pred_ovo": 37, "y_pred_tal": 44, "y_random_filenam": 44, "y_row": 44, "y_shape": 44, "y_test": [33, 36, 41, 44, 47, 304, 305, 306, 307, 308], "y_train": [33, 36, 41, 44, 47], "y_true": [305, 310], "yamashita": [43, 44, 118, 223, 280], "yan": [118, 226], "yannick": [118, 121, 122, 162, 170, 172, 203, 225, 276, 281, 283, 306, 307], "yarkoni": [118, 121, 225, 281, 283], "yaroslav": [0, 144, 147, 162], "yashar": [118, 367, 368, 469], "yasmin": [0, 127, 128, 129, 130, 132, 159, 162, 186], "yaxi": 52, "ye": [163, 187, 304, 305, 306, 307], "year": [45, 46, 118, 177, 187, 206, 227, 267], "yellow": 16, "yeo": [11, 118, 132, 134, 162, 193, 230, 237, 258, 262, 422], "yeo2011_17networks_mni152_freesurferconformed1mm_liberalmask": [50, 480], "yeo_2011": [11, 50, 88, 480], "yeo_jneurophysiol11_mni152": [50, 480], "yeo_network": 258, "yet": [67, 82, 108, 118, 134, 157, 162, 170, 178, 186, 378, 379, 380, 381, 440, 479], "yh": 44, "yi": [39, 118], "yichun": [0, 132, 162], "yield": [24, 33, 42, 52, 79, 81, 86, 121, 150, 153, 157, 162, 169, 170, 171, 172, 175, 176, 179, 180, 196, 281, 308, 312, 322, 326, 328, 333, 342, 363, 453, 456], "ylabel": [27, 32, 34, 45, 51, 52, 58, 60, 61, 67, 68, 111, 190], "ylim": 34, "ylorrd": 61, "ymean_": [309, 310], "ymin": [427, 428, 429, 433, 435, 436, 438, 440, 441, 442], "yml": 187, "yoichi": [43, 44, 118, 223, 280], "york": [0, 118, 318, 319], "you": [0, 2, 4, 6, 7, 10, 11, 13, 15, 16, 23, 24, 25, 26, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 68, 71, 72, 73, 77, 81, 88, 91, 93, 94, 96, 98, 101, 102, 103, 106, 107, 108, 109, 110, 111, 113, 116, 118, 120, 121, 132, 142, 143, 147, 150, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 182, 183, 184, 186, 187, 189, 190, 191, 193, 197, 198, 203, 218, 225, 237, 238, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 260, 262, 267, 270, 271, 272, 276, 278, 279, 280, 281, 285, 286, 290, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 326, 328, 329, 333, 339, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 427, 429, 432, 433, 435, 436, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 455, 456, 478, 479, 489, 494, 495, 497], "young": [51, 118, 185, 197, 201, 206, 227, 250], "your": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 121, 163, 165, 169, 170, 171, 173, 175, 187, 189, 191, 197, 254, 255, 267, 272, 304, 305, 306, 307, 311, 312, 317, 373, 376, 454, 479, 494, 497], "your_branch": 178, "your_fork": 178, "your_usernam": 178, "yourself": 163, "yprojector": [15, 407, 417, 419], "yslicer": [94, 408, 418, 420], "yt_big": 44, "yt_larg": 44, "yt_tall": 44, "ytick": [32, 47, 51, 54, 102], "yukiyasu": [43, 44, 118, 223, 280], "yuko": [118, 200, 249], "yusuk": [43, 44, 118, 223, 280], "yvett": [0, 178], "yw": 44, "yx": [15, 16, 120, 413, 414, 419, 420, 427, 429, 433, 435, 436, 438, 440, 441, 442, 466, 494], "yxprojector": [15, 409, 415, 419], "yxslicer": [410, 416], "yz": [15, 16, 33, 42, 415, 416, 419, 420, 427, 429, 433, 435, 436, 438, 440, 441, 442, 466, 494], "yzprojector": [15, 409, 413, 419], "yzslicer": [410, 414, 420], "y\u00fccel": [59, 118, 368], "z": [2, 14, 15, 16, 19, 25, 26, 32, 35, 38, 41, 43, 45, 46, 50, 51, 53, 55, 57, 61, 64, 65, 67, 68, 70, 71, 72, 73, 77, 78, 81, 82, 83, 86, 89, 90, 96, 104, 106, 109, 110, 113, 118, 131, 142, 144, 148, 159, 162, 178, 180, 184, 187, 190, 191, 201, 256, 281, 314, 321, 323, 325, 342, 346, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 391, 393, 394, 398, 399, 400, 401, 402, 409, 410, 415, 416, 417, 418, 419, 420, 421, 424, 427, 428, 429, 433, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 449, 452, 456, 457, 465, 466, 468, 470, 479, 494], "z_image_path": 73, "z_img": 112, "z_map": [6, 35, 64, 65, 67, 68, 71, 73, 77, 78, 79, 81, 83, 104, 326, 339], "z_map_ftest": 71, "z_score": [6, 26, 64, 67, 68, 70, 71, 72, 73, 77, 78, 79, 81, 82, 83, 113, 314, 326, 339], "z_scores_left": 113, "z_scores_right": 113, "z_slice": [19, 45], "z_statmap": [65, 77], "z_val": 325, "z_valu": 112, "zack": [118, 175], "zaleski": [118, 165], "zarrar": 118, "zavitz": [118, 226], "zealand": [106, 118, 390], "zenodo": 0, "zero": [6, 10, 15, 21, 23, 24, 26, 38, 39, 41, 42, 47, 50, 56, 57, 70, 72, 73, 77, 79, 81, 96, 104, 113, 125, 130, 134, 150, 154, 158, 162, 164, 168, 170, 171, 175, 176, 177, 180, 184, 190, 191, 227, 238, 239, 240, 242, 304, 305, 306, 307, 309, 310, 311, 312, 313, 318, 319, 326, 339, 341, 344, 345, 348, 361, 363, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 387, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 427, 441, 442, 444, 445, 454, 455, 456, 459, 460, 462, 463, 468, 480], "zero_divis": 44, "zeros_lik": [43, 69, 86, 106], "zielinski": [118, 196, 246], "zijdenbo": [118, 198, 218], "zill": 118, "zip": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 168, 187, 218, 224, 256], "zmap": [42, 104, 222, 279], "zmap_filenam": 42, "zmax": [51, 53], "zmin": [51, 53], "zone": [118, 197], "zoom": [155, 162], "zprojector": [15, 407, 411, 419], "zrji8542": [26, 118], "zscore": [6, 128, 129, 150, 162, 238, 311, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 428, 468], "zscore_sampl": [3, 12, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 93, 94, 101, 102, 103, 108, 114, 128, 162, 168, 170, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 468, 480], "zslicer": [38, 71, 408, 412, 420], "zstat12": 65, "zuckerberg": 0, "zuo": [118, 230, 258], "zurich": 0, "zvi": [0, 152, 162], "zwalli": [0, 130, 162], "z\u00f6llei": [118, 230, 236, 258, 262], "\u00e1": [118, 218], "\u00e2": [118, 197], "\u00e9": [74, 118, 170, 203, 216, 218, 276], "\u00eb": [47, 118, 170, 176, 186], "\u00eele": 0, "\u00f3scar": [0, 122, 125, 135, 137, 162], "\u00fc": [118, 176], "\u0161": [118, 218], "\u03b1": [35, 64, 73, 104, 479], "\u03b54": [118, 197]}, "titles": ["Team", "Basic tutorials", "3D and 4D niimgs: handling and visualizing", "A introduction tutorial to fMRI decoding", "Basic nilearn example: manipulating and looking at data", "Basic numerics and plotting with Python", "Intro to GLM Analysis: a single-run, single-subject fMRI dataset", "Working with Surface images", "Computation times", "Visualization of brain images", "Making a surface plot of a 3D statistical map", "Basic Atlas plotting", "Visualizing global patterns with a carpet plot", "Colormaps in Nilearn", "Glass brain plotting in nilearn", "Glass brain plotting in nilearn (all options)", "More plotting tools from nilearn", "Plotting tools in nilearn", "Controlling the contrast of the background when plotting", "Plot Haxby masks", "Visualizing multiscale functional brain parcellations", "Visualizing a probabilistic atlas: the default mode in the MSDL atlas", "Visualizing 4D probabilistic atlas maps", "Loading and plotting of a cortical surface atlas", "Seed-based connectivity on the surface", "Technical point: Illustration of the volume to surface sampling schemes", "Plotting images with transparent thresholding", "NeuroImaging volumes visualization", "Visualizing Megatrawls Network Matrices from Human Connectome Project", "Computation times", "Decoding and predicting from brain images", "Decoding with ANOVA + SVM: face vs house in the Haxby dataset", "Different classifiers in decoding the Haxby dataset", "Decoding with FREM: face vs house vs chair object recognition", "ROI-based decoding analysis in Haxby et al. dataset", "Decoding of a dataset after GLM fit for signal extraction", "Setting a parameter by cross-validation", "The haxby dataset: different multi-class strategies", "Searchlight analysis of face vs house recognition", "Cortical surface-based searchlight decoding", "Show stimuli of Haxby et al. dataset", "Understanding <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Decoder</span></code>", "FREM on Jimura et al \u201cmixed gambles\u201d dataset", "Encoding models for visual stimuli from Miyawaki et al. 2008", "Reconstruction of visual stimuli from Miyawaki et al. 2008", "Voxel-Based Morphometry on Oasis dataset", "Voxel-Based Morphometry on Oasis dataset with Space-Net prior", "Example of pattern recognition on simulated data", "Computation times", "Functional connectivity", "Comparing connectomes on different reference atlases", "Deriving spatial maps from group fMRI data using ICA and Dictionary Learning", "Clustering methods to learn a brain parcellation from fMRI", "Regions extraction using dictionary learning and functional connectomes", "Classification of age groups using functional connectivity", "Computing a connectome with sparse inverse covariance", "Group Sparse inverse covariance for multi-subject connectome", "Extracting signals of a probabilistic atlas of functional regions", "Producing single subject maps of seed-to-voxel correlation", "Extracting signals from a brain parcellation", "Connectivity structure estimation on simulated data", "Extract signals on spheres and plot a connectome", "Computation times", "GLM: First level analysis", "Default Mode Network extraction of ADHD dataset", "First level analysis of a complete BIDS dataset from openneuro", "Examples of design matrices", "Analysis of an fMRI dataset with a Finite Impule Response (FIR) model", "Understanding parameters of the first-level model", "Example of MRI response functions", "Example of surface-based first-level analysis", "Predicted time series and residuals", "Single-subject data (two runs) in native space", "Simple example of two-runs fMRI model fitting", "Generate an events.tsv file for the NeuroSpin localizer task", "Computation times", "GLM: Second level analysis", "Voxel-Based Morphometry on OASIS dataset", "Second-level fMRI model: true positive proportion in clusters", "Example of generic design in second-level models", "Example of second level design matrix", "Second-level fMRI model: one sample test", "Second-level fMRI model: two-sample test, unpaired and paired", "Statistical testing of a second-level analysis", "Computation times", "Manipulating brain image volumes", "Visualization of affine resamplings", "Comparing the means of 2 images", "Breaking an atlas of labels in separated regions", "Regions Extraction of Default Mode Networks using Smith Atlas", "Region Extraction using a t-statistical map (3D)", "Understanding NiftiMasker and mask computation", "Negating an image with math_img", "Extracting signals from brain regions using the NiftiLabelsMasker", "Simple example of NiftiMasker use", "Resample an image to a template", "Computing a Region of Interest (ROI) mask manually", "Smoothing an image", "Image thresholding", "Computation times", "Advanced statistical analysis of brain images", "Advanced decoding using scikit learn", "Functional connectivity predicts age group", "Beta-Series Modeling for Task-Based Functional Connectivity and Decoding", "BIDS dataset first and second level analysis", "Copying headers from input images with <code class=\"docutils literal notranslate\"><span class=\"pre\">math_img</span></code>", "Massively univariate analysis of face vs house recognition", "NeuroVault cross-study ICA maps", "Multivariate decompositions: Independent component analysis of fMRI", "Massively univariate analysis of a motor task from the Localizer dataset", "Massively univariate analysis of a calculation task from the Localizer dataset", "Working with long time series fMRI images", "NeuroVault meta-analysis of stop-go paradigm studies", "Surface-based dataset first and second level analysis of a dataset", "A short demo of the surface images &amp; maskers", "Computation times", "Examples", "Computation times", "General bibliography", "<span class=\"section-number\">10. </span>Advanced usage: manual pipelines and scaling up", "<span class=\"section-number\">10.1. </span>Building your own neuroimaging machine-learning pipeline", "<span class=\"section-number\">10.2. </span>Downloading statistical maps from the Neurovault repository", "0.1.0", "0.1.1", "0.1.2", "0.1.3", "0.1.4", "0.10.0", "0.10.1", "0.10.2", "0.10.3", "0.10.4", "0.11.0", "0.11.1", "0.12.0", "0.2.0", "0.2.1", "0.2.2", "0.2.3", "0.2.4", "0.2.5.1", "0.2.6", "0.3.0", "0.3.1", "0.4.0", "0.4.1", "0.4.2", "0.5.0", "0.5.1", "0.5.2", "0.6.0", "0.6.1", "0.6.2", "0.7.0", "0.7.1", "0.8.0", "0.8.1", "0.9.0", "0.9.1", "0.9.2", "0.12.1.dev", "&lt;no title&gt;", "What\u2019s new", "Continuous integration", "<span class=\"section-number\">6.2. </span>Connectome extraction: inverse covariance for direct connections", "<span class=\"section-number\">6.1. </span>Extracting times series to build a functional connectome", "<span class=\"section-number\">6. </span>Functional connectivity and resting state", "<span class=\"section-number\">6.5. </span>Clustering to parcellate the brain in regions", "<span class=\"section-number\">6.4. </span>Region Extraction for better brain parcellations", "<span class=\"section-number\">6.3. </span>Extracting functional brain networks: ICA and related", "<span class=\"section-number\">5.1. </span>An introduction to decoding", "<span class=\"section-number\">5.2. </span>Choosing the right predictive model for neuroimaging", "<span class=\"section-number\">5.3. </span>FREM: fast ensembling of regularized models for robust decoding", "<span class=\"section-number\">5.6. </span>Running scikit-learn functions for more control on the analysis", "<span class=\"section-number\">5. </span>Decoding and MVPA: predicting from brain images", "<span class=\"section-number\">5.5. </span>Searchlight : finding voxels containing information", "<span class=\"section-number\">5.4. </span>SpaceNet: decoding with spatial structure for better maps", "<span class=\"section-number\">6.2.3.1. </span>Group-sparse covariance estimation", "Contributing", "<span class=\"section-number\">8.2. </span>First level models", "<span class=\"section-number\">8.1. </span>An introduction to GLMs in fMRI statistical analysis", "<span class=\"section-number\">8. </span>Analyzing fMRI using GLMs", "<span class=\"section-number\">8.4. </span>Difference in meanings between different toolboxes", "<span class=\"section-number\">8.3. </span>Second level models", "Glossary", "Nilearn", "<span class=\"section-number\">1. </span>Introduction", "Maintenance", "<span class=\"section-number\">9. </span>Manipulation brain volumes with nilearn", "<span class=\"section-number\">9.1. </span>Input and output: neuroimaging data representation", "<span class=\"section-number\">9.2. </span>Manipulating images: resampling, smoothing, masking, ROIs\u2026", "<span class=\"section-number\">9.3. </span>From neuroimaging volumes to data matrices: the masker objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.connectome</span></code>: Functional Connectivity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.datasets</span></code>: Automatic Dataset Fetching", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.decoding</span></code>: Decoding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.decomposition</span></code>: Multivariate Decompositions", "ABIDE PCP dataset", "MegaTrawls Network Matrices HCP", "AAL atlas", "ADHD dataset", "Allen 2011 atlas", "BASC multiscale atlas", "BIDS language localizer", "Brainomics Localizer", "Craddock 2012 atlas", "Destrieux atlas", "development fMRI dataset", "DiFuMo atlas", "Dosenbach 2010 atlas", "fiac first level dataset", "fsaverage template", "fsaverage3 template", "fsaverage4 template", "fsaverage5 template", "fsaverage6 template", "Content", "Harvard Oxford atlas", "Haxby dataset", "ICBM 152 template", "Juelich atlas", "language localizer demo dataset", "localizer first level dataset", "Mixed gambles statistical maps", "Miyawaki 2008 dataset", "MSDL atlas", "Neurovault statistical maps", "NKI enhanced surface dataset", "OASIS volume based morphometry maps", "Pauli 2007 atlas", "Power 2011 atlas", "Schaefer 2018 atlas", "Seitzman 2018 atlas", "Smith 2009 atlas", "SPM auditory dataset", "SPM multimodal dataset", "Talairach atlas", "Yeo 2011 atlas", "&lt;no title&gt;", "nilearn.connectome.ConnectivityMeasure", "nilearn.connectome.GroupSparseCovariance", "nilearn.connectome.GroupSparseCovarianceCV", "nilearn.connectome.cov_to_corr", "nilearn.connectome.group_sparse_covariance", "nilearn.connectome.prec_to_partial", "nilearn.connectome.sym_matrix_to_vec", "nilearn.connectome.vec_to_sym_matrix", "nilearn.datasets.fetch_abide_pcp", "nilearn.datasets.fetch_adhd", "nilearn.datasets.fetch_atlas_aal", "nilearn.datasets.fetch_atlas_allen_2011", "nilearn.datasets.fetch_atlas_basc_multiscale_2015", "nilearn.datasets.fetch_atlas_craddock_2012", "nilearn.datasets.fetch_atlas_destrieux_2009", "nilearn.datasets.fetch_atlas_difumo", "nilearn.datasets.fetch_atlas_harvard_oxford", "nilearn.datasets.fetch_atlas_juelich", "nilearn.datasets.fetch_atlas_msdl", "nilearn.datasets.fetch_atlas_pauli_2017", "nilearn.datasets.fetch_atlas_schaefer_2018", "nilearn.datasets.fetch_atlas_smith_2009", "nilearn.datasets.fetch_atlas_surf_destrieux", "nilearn.datasets.fetch_atlas_talairach", "nilearn.datasets.fetch_atlas_yeo_2011", "nilearn.datasets.fetch_bids_langloc_dataset", "nilearn.datasets.fetch_coords_dosenbach_2010", "nilearn.datasets.fetch_coords_power_2011", "nilearn.datasets.fetch_coords_seitzman_2018", "nilearn.datasets.fetch_development_fmri", "nilearn.datasets.fetch_ds000030_urls", "nilearn.datasets.fetch_fiac_first_level", "nilearn.datasets.fetch_haxby", "nilearn.datasets.fetch_icbm152_2009", "nilearn.datasets.fetch_icbm152_brain_gm_mask", "nilearn.datasets.fetch_language_localizer_demo_dataset", "nilearn.datasets.fetch_localizer_button_task", "nilearn.datasets.fetch_localizer_calculation_task", "nilearn.datasets.fetch_localizer_contrasts", "nilearn.datasets.fetch_localizer_first_level", "nilearn.datasets.fetch_megatrawls_netmats", "nilearn.datasets.fetch_mixed_gambles", "nilearn.datasets.fetch_miyawaki2008", "nilearn.datasets.fetch_neurovault", "nilearn.datasets.fetch_neurovault_auditory_computation_task", "nilearn.datasets.fetch_neurovault_ids", "nilearn.datasets.fetch_neurovault_motor_task", "nilearn.datasets.fetch_oasis_vbm", "nilearn.datasets.fetch_openneuro_dataset", "nilearn.datasets.fetch_spm_auditory", "nilearn.datasets.fetch_spm_multimodal_fmri", "nilearn.datasets.fetch_surf_fsaverage", "nilearn.datasets.fetch_surf_nki_enhanced", "nilearn.datasets.get_data_dirs", "nilearn.datasets.load_fsaverage", "nilearn.datasets.load_fsaverage_data", "nilearn.datasets.load_mni152_brain_mask", "nilearn.datasets.load_mni152_gm_mask", "nilearn.datasets.load_mni152_gm_template", "nilearn.datasets.load_mni152_template", "nilearn.datasets.load_mni152_wm_mask", "nilearn.datasets.load_mni152_wm_template", "nilearn.datasets.load_nki", "nilearn.datasets.load_sample_motor_activation_image", "nilearn.datasets.patch_openneuro_dataset", "nilearn.datasets.select_from_index", "nilearn.decoding.Decoder", "nilearn.decoding.DecoderRegressor", "nilearn.decoding.FREMClassifier", "nilearn.decoding.FREMRegressor", "nilearn.decoding.SearchLight", "nilearn.decoding.SpaceNetClassifier", "nilearn.decoding.SpaceNetRegressor", "nilearn.decomposition.CanICA", "nilearn.decomposition.DictLearning", "nilearn.glm.ARModel", "nilearn.glm.Contrast", "nilearn.glm.FContrastResults", "nilearn.glm.LikelihoodModelResults", "nilearn.glm.OLSModel", "nilearn.glm.RegressionResults", "nilearn.glm.SimpleRegressionResults", "nilearn.glm.TContrastResults", "nilearn.glm.cluster_level_inference", "nilearn.glm.compute_contrast", "nilearn.glm.compute_fixed_effects", "nilearn.glm.expression_to_contrast_vector", "nilearn.glm.fdr_threshold", "nilearn.glm.first_level.FirstLevelModel", "nilearn.glm.first_level.check_design_matrix", "nilearn.glm.first_level.compute_regressor", "nilearn.glm.first_level.first_level_from_bids", "nilearn.glm.first_level.glover_dispersion_derivative", "nilearn.glm.first_level.glover_hrf", "nilearn.glm.first_level.glover_time_derivative", "nilearn.glm.first_level.make_first_level_design_matrix", "nilearn.glm.first_level.mean_scaling", "nilearn.glm.first_level.run_glm", "nilearn.glm.first_level.spm_dispersion_derivative", "nilearn.glm.first_level.spm_hrf", "nilearn.glm.first_level.spm_time_derivative", "nilearn.glm.second_level.SecondLevelModel", "nilearn.glm.second_level.make_second_level_design_matrix", "nilearn.glm.second_level.non_parametric_inference", "nilearn.glm.threshold_stats_img", "nilearn.image.binarize_img", "nilearn.image.clean_img", "nilearn.image.concat_imgs", "nilearn.image.coord_transform", "nilearn.image.copy_img", "nilearn.image.crop_img", "nilearn.image.get_data", "nilearn.image.high_variance_confounds", "nilearn.image.index_img", "nilearn.image.iter_img", "nilearn.image.largest_connected_component_img", "nilearn.image.load_img", "nilearn.image.math_img", "nilearn.image.mean_img", "nilearn.image.new_img_like", "nilearn.image.reorder_img", "nilearn.image.resample_img", "nilearn.image.resample_to_img", "nilearn.image.smooth_img", "nilearn.image.swap_img_hemispheres", "nilearn.image.threshold_img", "nilearn.interfaces.bids.get_bids_files", "nilearn.interfaces.bids.parse_bids_filename", "nilearn.interfaces.bids.save_glm_to_bids", "nilearn.interfaces.fmriprep.load_confounds", "nilearn.interfaces.fmriprep.load_confounds_strategy", "nilearn.interfaces.fsl.get_design_from_fslmat", "nilearn.maskers.BaseMasker", "nilearn.maskers.MultiNiftiLabelsMasker", "nilearn.maskers.MultiNiftiMapsMasker", "nilearn.maskers.MultiNiftiMasker", "nilearn.maskers.NiftiLabelsMasker", "nilearn.maskers.NiftiMapsMasker", "nilearn.maskers.NiftiMasker", "nilearn.maskers.NiftiSpheresMasker", "nilearn.maskers.SurfaceLabelsMasker", "nilearn.maskers.SurfaceMapsMasker", "nilearn.maskers.SurfaceMasker", "nilearn.masking.apply_mask", "nilearn.masking.compute_background_mask", "nilearn.masking.compute_brain_mask", "nilearn.masking.compute_epi_mask", "nilearn.masking.compute_multi_background_mask", "nilearn.masking.compute_multi_brain_mask", "nilearn.masking.compute_multi_epi_mask", "nilearn.masking.intersect_masks", "nilearn.masking.unmask", "nilearn.mass_univariate.permuted_ols", "nilearn.plotting.displays.BaseAxes", "nilearn.plotting.displays.BaseSlicer", "nilearn.plotting.displays.CutAxes", "nilearn.plotting.displays.GlassBrainAxes", "nilearn.plotting.displays.LProjector", "nilearn.plotting.displays.LRProjector", "nilearn.plotting.displays.LYRProjector", "nilearn.plotting.displays.LYRZProjector", "nilearn.plotting.displays.LZRProjector", "nilearn.plotting.displays.LZRYProjector", "nilearn.plotting.displays.MosaicSlicer", "nilearn.plotting.displays.OrthoProjector", "nilearn.plotting.displays.OrthoSlicer", "nilearn.plotting.displays.PlotlySurfaceFigure", "nilearn.plotting.displays.RProjector", "nilearn.plotting.displays.TiledSlicer", "nilearn.plotting.displays.XProjector", "nilearn.plotting.displays.XSlicer", "nilearn.plotting.displays.XZProjector", "nilearn.plotting.displays.XZSlicer", "nilearn.plotting.displays.YProjector", "nilearn.plotting.displays.YSlicer", "nilearn.plotting.displays.YXProjector", "nilearn.plotting.displays.YXSlicer", "nilearn.plotting.displays.YZProjector", "nilearn.plotting.displays.YZSlicer", "nilearn.plotting.displays.ZProjector", "nilearn.plotting.displays.ZSlicer", "nilearn.plotting.displays.get_projector", "nilearn.plotting.displays.get_slicer", "nilearn.plotting.find_cut_slices", "nilearn.plotting.find_parcellation_cut_coords", "nilearn.plotting.find_probabilistic_atlas_cut_coords", "nilearn.plotting.find_xyz_cut_coords", "nilearn.plotting.img_comparison.plot_bland_altman", "nilearn.plotting.img_comparison.plot_img_comparison", "nilearn.plotting.plot_anat", "nilearn.plotting.plot_carpet", "nilearn.plotting.plot_connectome", "nilearn.plotting.plot_contrast_matrix", "nilearn.plotting.plot_design_matrix", "nilearn.plotting.plot_design_matrix_correlation", "nilearn.plotting.plot_epi", "nilearn.plotting.plot_event", "nilearn.plotting.plot_glass_brain", "nilearn.plotting.plot_img", "nilearn.plotting.plot_img_on_surf", "nilearn.plotting.plot_markers", "nilearn.plotting.plot_matrix", "nilearn.plotting.plot_prob_atlas", "nilearn.plotting.plot_roi", "nilearn.plotting.plot_stat_map", "nilearn.plotting.plot_surf", "nilearn.plotting.plot_surf_contours", "nilearn.plotting.plot_surf_roi", "nilearn.plotting.plot_surf_stat_map", "nilearn.plotting.show", "nilearn.plotting.view_connectome", "nilearn.plotting.view_img", "nilearn.plotting.view_img_on_surf", "nilearn.plotting.view_markers", "nilearn.plotting.view_surf", "nilearn.regions.HierarchicalKMeans", "nilearn.regions.Parcellations", "nilearn.regions.ReNA", "nilearn.regions.RegionExtractor", "nilearn.regions.connected_label_regions", "nilearn.regions.connected_regions", "nilearn.regions.img_to_signals_labels", "nilearn.regions.img_to_signals_maps", "nilearn.regions.recursive_neighbor_agglomeration", "nilearn.regions.signals_to_img_labels", "nilearn.regions.signals_to_img_maps", "nilearn.reporting.HTMLReport", "nilearn.reporting.get_clusters_table", "nilearn.reporting.make_glm_report", "nilearn.signal.butterworth", "nilearn.signal.clean", "nilearn.signal.high_variance_confounds", "nilearn.surface.FileMesh", "nilearn.surface.InMemoryMesh", "nilearn.surface.PolyData", "nilearn.surface.PolyMesh", "nilearn.surface.SurfaceImage", "nilearn.surface.SurfaceMesh", "nilearn.surface.load_surf_data", "nilearn.surface.load_surf_mesh", "nilearn.surface.vol_to_surf", "Examples of GLM reports", "Examples nifti masker reports", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.glm</span></code>: Generalized Linear Models", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.image</span></code>: Image Processing and Resampling Utilities", "API References", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.interfaces</span></code>: Loading components from interfaces", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.maskers</span></code>: Extracting Signals from Brain Images", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.masking</span></code>: Data Masking Utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.mass_univariate</span></code>: Mass-Univariate Analysis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.plotting</span></code>: Plotting Brain Data", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.regions</span></code>: Operating on Regions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.reporting</span></code>: Reporting Functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.signal</span></code>: Preprocessing Time Series", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nilearn.surface</span></code>: Manipulating Surface Data", "<span class=\"section-number\">7. </span>Plotting brain images", "Quickstart", "Computation times", "User guide", "Available documentation for Nilearn"], "titleterms": {"": [16, 61, 64, 101, 162, 170], "0": [17, 18, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 290], "0a0": [150, 162], "0b0": [150, 162], "0rc": [150, 162], "1": [17, 18, 68, 122, 123, 124, 125, 126, 128, 133, 136, 140, 143, 145, 148, 151, 154, 156, 158, 160, 162], "10": [127, 128, 129, 130, 131, 162], "100": 191, "11": [132, 133, 162], "12": [134, 160, 162], "14": 290, "152": 218, "1rc1": [128, 162], "2": [87, 98, 124, 129, 135, 136, 137, 138, 139, 140, 141, 146, 149, 152, 159, 162], "2001": 170, "2007": 228, "2008": [43, 44, 223], "2009": 232, "2010": 208, "2011": [200, 229, 236], "2012": 204, "2018": [230, 231], "2d": [120, 190], "2x2": 16, "3": [125, 130, 138, 142, 143, 162], "3d": [2, 4, 10, 23, 55, 57, 61, 90, 189, 494], "4": [126, 131, 139, 144, 145, 146, 162], "4d": [2, 22, 120, 189, 190], "5": [16, 18, 140, 147, 148, 149, 162], "6": [71, 141, 150, 151, 152, 162], "7": [153, 154, 162], "8": [155, 156, 162], "9": [157, 158, 159, 162], "A": [3, 4, 47, 68, 114, 165, 170, 180], "And": [55, 57], "The": [37, 59, 68, 88, 170, 176, 191], "Then": 44, "aal": 198, "abid": 196, "access": [22, 190, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "accuraci": [3, 170], "across": 73, "action": 163, "actual": 71, "ad": [68, 178, 494], "add_contour": 16, "add_edg": 16, "add_mark": 16, "add_overlai": 21, "addit": 178, "adhd": [12, 64, 199, 479], "adjust": 25, "advanc": [100, 101, 116, 119, 191], "affin": [86, 189, 190], "after": [35, 91], "ag": [45, 54, 77, 102], "aggreg": 103, "agreement": [227, 285], "al": [34, 40, 42, 43, 44], "algorithm": 177, "all": [2, 15, 170], "allen": 200, "along": 16, "alpha": [147, 162, 177], "also": [210, 211, 212, 213, 214, 215, 218], "altern": 169, "an": [6, 10, 11, 41, 47, 61, 67, 74, 88, 92, 95, 97, 169, 170, 178, 180, 494], "analys": 182, "analysi": [3, 6, 34, 38, 45, 58, 63, 64, 65, 67, 70, 76, 77, 83, 100, 103, 104, 106, 108, 109, 110, 112, 113, 116, 170, 173, 175, 179, 180, 201, 487], "analyz": [77, 181, 189], "anatom": [16, 17], "angl": 23, "ani": 173, "annot": [16, 121], "anoth": 190, "anova": [31, 36, 101, 170, 173], "answer": 178, "api": [132, 135, 162, 178, 186, 483], "appli": [27, 51, 120, 167, 190, 191], "applic": [103, 186], "apply_mask": 381, "approach": [103, 164], "ar": 68, "argument": [65, 104, 191], "armodel": 313, "around": [10, 54, 61], "arrai": [120, 190], "assign": 163, "asymmetr": 50, "atla": [10, 11, 21, 22, 23, 50, 54, 55, 57, 59, 61, 88, 89, 102, 114, 165, 178, 198, 200, 201, 204, 205, 207, 208, 216, 219, 224, 228, 229, 230, 231, 232, 235, 236], "atlas": [22, 50, 165, 178, 193, 494], "attribut": 178, "auditori": 233, "auto": 163, "automat": [65, 104, 120, 193], "avail": [494, 498], "averag": 61, "ax": 488, "axial": 16, "background": [14, 18, 91], "bag": 171, "bar": [34, 494], "barplot": 37, "basc": 201, "base": [12, 24, 34, 39, 45, 46, 59, 70, 77, 103, 113, 168, 179, 183, 227], "baseax": 391, "baselin": 187, "basemask": 370, "baseslic": 392, "basic": [1, 4, 5, 11, 68, 116], "behavior": [3, 31, 35, 189], "benchmark": 163, "benefit": 26, "beta": [103, 142, 147, 162, 170], "better": [168, 176, 191], "between": [66, 182], "bibliographi": 118, "bid": [65, 104, 113, 202, 364, 365, 366, 479, 484], "binari": [41, 111], "binarize_img": 343, "bio": 45, "black": 14, "bold": [39, 180], "bootstrap": 201, "both": [15, 73], "bound": 177, "brain": [9, 14, 15, 17, 20, 27, 30, 43, 45, 50, 51, 52, 53, 54, 59, 61, 85, 93, 100, 102, 116, 165, 167, 168, 169, 174, 188, 190, 485, 488, 494], "brainom": 203, "break": 88, "browser": [10, 23, 55, 57, 61], "bug": [135, 138, 145, 162, 178], "build": [25, 35, 37, 43, 57, 96, 120, 163, 165, 178, 187], "butterworth": 467, "cach": 163, "calcul": [24, 71, 110], "canica": [51, 169, 311], "carpet": 12, "case": [178, 190], "cat": 3, "censor": 68, "chair": 33, "chanc": [3, 101, 170, 173], "chang": [18, 68, 101, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 159, 160, 162, 191], "changelog": [122, 123, 124, 125, 135, 136, 138, 162, 178], "check": [104, 495], "check_design_matrix": 327, "check_gha_workflow": 163, "children": 54, "choic": 170, "choos": [10, 13, 103, 170, 171], "ci": 163, "circl": 163, "circle_artifact": 163, "circle_ci_token": 163, "cite": 0, "class": [37, 41, 171, 192, 194, 195, 481, 485, 488, 490, 491, 493], "classif": [54, 102, 171], "classifi": [32, 175], "clean": 468, "clean_arg": [371, 372, 373, 374, 375, 376, 377], "clean_img": 344, "close": 187, "cluster": [52, 71, 78, 167, 201], "cluster_level_infer": 321, "code": [132, 162, 167, 170, 172, 175, 178, 187, 190, 494], "coeffici": 53, "collect": 121, "color": 13, "colorbar": 17, "colormap": [11, 13, 494], "column": 16, "combin": 112, "comment": 163, "commit": [163, 178], "common": 191, "compar": [26, 41, 50, 51, 52, 73, 87, 103, 164, 175, 488], "comparison": [10, 172, 180, 183], "compat": 290, "complet": 65, "compon": [107, 108, 169, 484], "compress": [52, 167], "comput": [8, 29, 36, 37, 38, 39, 48, 53, 55, 56, 59, 61, 62, 73, 75, 84, 91, 96, 99, 112, 115, 117, 120, 164, 165, 168, 179, 190, 191, 496], "compute_background_mask": 382, "compute_brain_mask": 383, "compute_contrast": 322, "compute_epi_mask": 384, "compute_fixed_effect": 323, "compute_multi_background_mask": 385, "compute_multi_brain_mask": 386, "compute_multi_epi_mask": 387, "compute_regressor": 328, "concat_img": 345, "concept": 191, "conclus": [68, 111], "condit": [103, 197, 278], "conduct": 178, "confound": [59, 68, 191], "confus": [33, 37], "connect": [24, 49, 50, 54, 59, 60, 88, 102, 103, 114, 116, 164, 166, 168, 192], "connected_label_region": 457, "connected_region": 458, "connectivitymeasur": 238, "connectom": [23, 28, 50, 53, 55, 56, 61, 164, 165, 192, 238, 239, 240, 241, 242, 243, 244, 245, 494], "contain": 175, "content": [196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 497], "continu": [163, 178], "contour": [11, 15, 26, 494], "contrast": [18, 64, 65, 68, 70, 71, 73, 179, 314], "contribut": 178, "contributor": [0, 135, 137, 140, 144, 147, 148, 149, 150, 151, 152, 162], "control": [18, 163, 173, 191], "convert": 41, "coord_transform": 346, "coordin": [16, 50, 61, 165], "copi": 105, "copy_img": 347, "core": 0, "coron": 16, "correct": 183, "correl": [53, 54, 57, 58, 59, 61, 66, 164, 165], "correspond": [27, 55, 57], "cortic": [23, 39, 494], "cours": 64, "cov_to_corr": 241, "covari": [55, 56, 164, 177], "craddock": 204, "creat": [7, 47, 66, 80, 111, 190], "criteria": 177, "criterion": 177, "crop_img": 348, "cross": [3, 31, 36, 37, 41, 101, 107, 170, 173, 175, 177], "css": 178, "csv": 189, "custom": [23, 191], "cut": [14, 16], "cutax": 393, "cutoff": 191, "cylind": 25, "data": [3, 4, 6, 7, 10, 11, 12, 14, 15, 18, 23, 24, 26, 27, 31, 32, 34, 35, 37, 42, 43, 44, 45, 47, 50, 51, 52, 55, 57, 58, 59, 60, 64, 68, 70, 72, 73, 77, 91, 96, 101, 103, 106, 107, 112, 120, 164, 167, 169, 170, 173, 175, 180, 189, 190, 191, 227, 285, 486, 488, 493], "dataset": [2, 6, 12, 18, 19, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 51, 52, 53, 54, 56, 61, 64, 65, 67, 77, 78, 81, 82, 102, 104, 106, 109, 110, 113, 163, 168, 172, 177, 178, 189, 193, 196, 199, 206, 209, 217, 220, 221, 223, 226, 233, 234, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "decid": 178, "decis": 178, "decod": [3, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 44, 46, 101, 103, 114, 116, 170, 172, 173, 174, 176, 194, 304, 305, 306, 307, 308, 309, 310], "decoderregressor": 305, "decomposit": [108, 195, 311, 312], "decreas": [18, 189], "default": [21, 61, 64, 89], "defin": [44, 59, 66, 69, 103], "definit": [170, 191], "demo": [15, 114, 220], "depend": 495, "deploi": [163, 187], "deriv": [12, 51, 68, 193], "descript": [120, 177, 193], "design": [66, 68, 79, 80, 103, 179, 191], "destrieux": [23, 205], "detail": [197, 278], "detect": 6, "determinist": 193, "dev": [160, 162], "develop": [0, 51, 52, 53, 54, 61, 102, 206, 495], "dictionari": [51, 53, 168, 169], "dictlearn": 312, "differ": [15, 23, 32, 34, 36, 37, 47, 50, 88, 164, 171, 182, 191, 494], "difumo": 207, "dim": 18, "dimens": [105, 170], "direct": [50, 164], "disclaim": 197, "discrimin": 101, "discuss": 178, "disk": [65, 77], "displai": [10, 16, 23, 24, 55, 56, 57, 59, 61, 81, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 494], "distribut": [71, 187], "dmn": 61, "do": [178, 180], "doc": [163, 187], "document": [163, 178, 187, 498], "dosenbach": [61, 208], "download": [2, 3, 52, 101, 120, 121, 189], "draw": 25, "drift": 68, "drop": 495, "dtype": 191, "dualiti": 177, "dummi": 101, "each": [10, 35], "easi": 170, "edg": [16, 494], "effect": [6, 73, 182], "empir": 172, "encod": 43, "engin": 101, "enhanc": [18, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 178, 226], "ensembl": 172, "environ": 178, "epi": [17, 91], "error": 44, "estim": [43, 47, 60, 61, 64, 65, 68, 70, 78, 79, 81, 82, 101, 104, 170, 171, 173, 177, 178], "et": [34, 40, 42, 43, 44], "event": [35, 74, 179], "exampl": [4, 35, 42, 47, 66, 69, 70, 73, 79, 80, 94, 104, 113, 116, 121, 132, 162, 164, 165, 167, 169, 170, 175, 176, 185, 186, 190, 191, 238, 240, 247, 249, 250, 252, 253, 254, 255, 256, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 321, 323, 326, 328, 329, 333, 339, 340, 341, 342, 344, 345, 346, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 384, 389, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 464, 465, 470, 471, 472, 473, 474, 475, 478, 479, 480, 494], "execut": 177, "exercis": [47, 164, 165, 191], "expans": 189, "experi": [42, 120, 170], "experiment": [6, 80], "explicitli": 23, "expression_to_contrast_vector": 324, "extra": 191, "extract": [3, 24, 27, 35, 50, 53, 54, 55, 56, 57, 58, 59, 61, 64, 71, 89, 90, 91, 93, 164, 165, 168, 169, 179, 190, 191, 485], "f": [6, 38, 71], "f_score": 175, "face": [3, 31, 32, 33, 38, 39, 106], "fals": 98, "fashion": 16, "fast": 172, "fcontrastresult": 315, "fdr_threshold": 325, "featur": [3, 16, 41, 101, 135, 138, 162, 170, 185, 479], "fetch": [12, 21, 27, 28, 35, 50, 53, 56, 65, 72, 78, 81, 82, 104, 112, 113, 168, 189, 193], "fetch_abide_pcp": 246, "fetch_adhd": 247, "fetch_atlas_a": 248, "fetch_atlas_allen_2011": 249, "fetch_atlas_basc_multiscale_2015": 250, "fetch_atlas_craddock_2012": 251, "fetch_atlas_destrieux_2009": 252, "fetch_atlas_difumo": 253, "fetch_atlas_harvard_oxford": 254, "fetch_atlas_juelich": 255, "fetch_atlas_msdl": 256, "fetch_atlas_pauli_2017": 257, "fetch_atlas_schaefer_2018": 258, "fetch_atlas_smith_2009": 259, "fetch_atlas_surf_destrieux": 260, "fetch_atlas_talairach": 261, "fetch_atlas_yeo_2011": 262, "fetch_bids_langloc_dataset": 263, "fetch_coords_dosenbach_2010": 264, "fetch_coords_power_2011": 265, "fetch_coords_seitzman_2018": 266, "fetch_development_fmri": 267, "fetch_ds000030_url": 268, "fetch_fiac_first_level": 269, "fetch_haxbi": 270, "fetch_icbm152_2009": 271, "fetch_icbm152_brain_gm_mask": 272, "fetch_language_localizer_demo_dataset": 273, "fetch_localizer_button_task": 274, "fetch_localizer_calculation_task": 275, "fetch_localizer_contrast": 276, "fetch_localizer_first_level": 277, "fetch_megatrawls_netmat": 278, "fetch_mixed_gambl": 279, "fetch_miyawaki2008": 280, "fetch_neurovault": 281, "fetch_neurovault_auditory_computation_task": 282, "fetch_neurovault_id": 283, "fetch_neurovault_motor_task": 284, "fetch_oasis_vbm": 285, "fetch_openneuro_dataset": 286, "fetch_spm_auditori": 287, "fetch_spm_multimodal_fmri": 288, "fetch_surf_fsaverag": 289, "fetch_surf_nki_enhanc": 290, "fetcher": [23, 178], "few": [103, 170], "fiac": [209, 479], "field": 43, "figur": [107, 187, 488], "file": [2, 4, 16, 31, 59, 74, 189, 494], "filemesh": 470, "fill": [15, 494], "filter": [121, 191], "final": 170, "find": [96, 175, 186], "find_cut_slic": 421, "find_parcellation_cut_coord": 422, "find_probabilistic_atlas_cut_coord": 423, "find_xyz_cut_coord": 424, "finit": 67, "fir": 67, "first": [3, 4, 44, 63, 64, 65, 68, 70, 101, 103, 104, 113, 116, 170, 179, 186, 191, 209, 221, 479], "first_level": [326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 481], "first_level_from_bid": 329, "firstlevelmodel": [35, 65, 104, 326], "fisher": 58, "fit": [31, 33, 35, 36, 42, 46, 65, 71, 72, 73, 104, 169, 179, 183], "fix": [73, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 182], "fixtur": 178, "flexibl": 59, "fmri": [3, 6, 37, 51, 52, 54, 61, 67, 70, 73, 78, 81, 82, 101, 102, 108, 111, 164, 165, 170, 180, 181, 206], "fmrib": 182, "fmriprep": [59, 367, 368, 484], "format": [7, 11, 189], "formula": 105, "frem": [33, 42, 172], "fremclassifi": 306, "fremregressor": 307, "from": [2, 3, 12, 16, 23, 25, 28, 30, 35, 42, 43, 44, 51, 52, 53, 59, 61, 65, 91, 93, 96, 101, 103, 105, 109, 110, 116, 120, 121, 165, 174, 189, 190, 191, 484, 485], "fsaverag": 210, "fsaverage3": 211, "fsaverage4": 212, "fsaverage5": 213, "fsaverage6": 214, "fsl": [182, 369, 484], "full": [164, 165, 170], "function": [16, 17, 20, 24, 26, 44, 47, 49, 50, 53, 54, 57, 69, 102, 103, 116, 164, 165, 166, 168, 169, 173, 175, 178, 190, 192, 193, 481, 482, 484, 486, 487, 488, 490, 491, 492, 493, 494], "fund": 0, "further": [7, 47, 101, 120, 173, 175], "gambl": [42, 172, 222], "gap": 177, "gener": [35, 47, 64, 73, 74, 79, 107, 118, 187, 193, 481], "get": [25, 58, 71, 107, 178], "get_bids_fil": 364, "get_clusters_t": 465, "get_data": 349, "get_data_dir": 291, "get_design_from_fslmat": 369, "get_projector": 419, "get_slic": 420, "github": [163, 187], "given": [16, 190], "glass": [14, 15, 17], "glassbrainax": 394, "glm": [6, 26, 35, 63, 73, 76, 116, 180, 181, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 479, 481], "glob": [4, 189], "global": [12, 59], "glossari": 184, "glover_dispersion_deriv": 330, "glover_hrf": 331, "glover_time_deriv": 332, "go": [47, 101, 112, 120, 173], "goe": 178, "good": 170, "graph": [55, 57, 61, 165], "grid": 177, "group": [20, 51, 54, 56, 102, 113, 164, 177], "group_sparse_covari": 242, "groupsparsecovari": 239, "groupsparsecovariancecv": 240, "guid": 497, "guidelin": 178, "handl": 2, "harvard": [11, 216], "haxbi": [3, 19, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 101, 106, 170, 172, 217], "hcp": 197, "header": 105, "help": [178, 186], "hemispher": [14, 15], "hemodynam": 68, "here": [17, 44], "hierarch": 52, "hierarchicalkmean": 453, "high_variance_confound": [350, 469], "higher": [10, 68], "highlight": [126, 127, 129, 130, 131, 132, 133, 134, 142, 143, 144, 147, 150, 153, 154, 155, 156, 157, 159, 162], "hour": 495, "hous": [31, 32, 33, 38, 39, 106], "how": [178, 187, 191], "hrf": 179, "html": 178, "htmlreport": 464, "human": 28, "hyperparamet": 41, "i": [3, 7, 54, 102, 180, 186, 189, 191], "ica": [51, 107, 169], "icbm": 218, "idea": 178, "illustr": 25, "imag": [3, 4, 7, 9, 10, 16, 17, 18, 26, 30, 70, 83, 85, 87, 92, 95, 97, 98, 100, 105, 107, 111, 112, 114, 116, 120, 121, 174, 189, 190, 191, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 482, 485, 488, 494], "img_comparison": [425, 426], "img_to_signals_label": 459, "img_to_signals_map": 460, "impact": [10, 59], "implement": 3, "import": [71, 495], "improv": 96, "impul": 67, "increas": 172, "independ": 108, "index": 111, "index_img": 351, "individu": 190, "infer": 45, "inflat": 23, "inform": 175, "initi": [73, 177], "inmemorymesh": 471, "input": [105, 189], "inspect": [3, 6, 72], "instal": [178, 495], "instanti": 35, "instead": [371, 372, 373, 374, 375, 376, 377], "integr": [163, 178], "interact": [17, 164, 165, 488, 494], "interest": [10, 96], "interfac": [59, 364, 365, 366, 367, 368, 369, 484], "internet": [2, 189], "interpret": 169, "intersect_mask": 388, "intro": 6, "introduct": [3, 170, 180, 186], "invers": [55, 56, 164, 191], "inverse_transform": 120, "issu": [148, 162, 187], "iter": [50, 177], "iter_img": 352, "its": [11, 25], "itself": 44, "jimura": 42, "juelich": [11, 219], "kfold": 3, "kind": [54, 102], "kmean": 52, "known": [148, 162], "l1": 42, "label": [3, 12, 41, 59, 88, 187, 480], "languag": [202, 220], "larg": 111, "largest": 71, "largest_connected_component_img": 353, "latest": 495, "lean": 101, "learn": [0, 37, 41, 51, 52, 53, 101, 114, 120, 168, 169, 173, 186, 191], "leav": 3, "left": 15, "let": 44, "level": [3, 63, 64, 65, 68, 70, 76, 78, 79, 80, 81, 82, 83, 101, 104, 113, 116, 164, 170, 173, 179, 183, 209, 221, 479], "librari": 182, "licens": [196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "like": [112, 189], "likelihoodmodelresult": 316, "linear": [171, 481], "link": [164, 495], "linkcheck": 163, "load": [3, 7, 14, 15, 19, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 54, 59, 77, 96, 101, 102, 106, 120, 167, 170, 189, 191, 484], "load_confound": 367, "load_confounds_strategi": 368, "load_fsaverag": 292, "load_fsaverage_data": 293, "load_img": 354, "load_mni152_brain_mask": 294, "load_mni152_gm_mask": 295, "load_mni152_gm_templ": 296, "load_mni152_templ": 297, "load_mni152_wm_mask": 298, "load_mni152_wm_templ": 299, "load_nki": 300, "load_sample_motor_activation_imag": 301, "load_surf_data": 476, "load_surf_mesh": 477, "local": [18, 74, 109, 110, 202, 203, 220, 221], "locat": 25, "long": 111, "look": [4, 11], "loop": [2, 3], "lprojector": 395, "lrprojector": 396, "lsa": 103, "lss": 103, "lyrprojector": 397, "lyrzprojector": 398, "lzrprojector": 399, "lzryprojector": 400, "machin": [3, 120, 186], "made": 170, "mainten": [178, 187], "make": [10, 17, 34, 178, 187], "make_first_level_design_matrix": 333, "make_glm_report": 466, "make_second_level_design_matrix": 340, "manipul": [4, 85, 116, 188, 190, 493], "manual": [3, 96, 119, 187, 190], "map": [6, 10, 13, 17, 18, 22, 32, 43, 45, 46, 50, 51, 58, 90, 96, 103, 107, 112, 121, 168, 170, 172, 176, 182, 183, 193, 222, 225, 227, 480, 494], "marker": [45, 494], "mask": [12, 16, 17, 19, 26, 27, 34, 38, 44, 68, 91, 96, 101, 106, 107, 111, 114, 120, 170, 173, 175, 190, 191, 381, 382, 383, 384, 385, 386, 387, 388, 389, 486], "masker": [24, 114, 191, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 480, 485], "mass": [45, 487], "mass_univari": [390, 487], "massiv": [45, 106, 109, 110, 175], "match": [189, 190], "math_img": [92, 105, 355], "matplotlib": [13, 36], "matric": [28, 56, 66, 103, 168, 191, 197], "matrix": [3, 33, 37, 52, 55, 57, 59, 61, 80, 114, 164, 165, 179], "maximum": 177, "maxprob": 165, "mean": [87, 180, 182], "mean_img": 356, "mean_scal": 334, "measur": [3, 50, 101, 170, 173], "megatrawl": [28, 197], "memori": [111, 189], "mesh": [7, 10, 25, 494], "messag": 163, "meta": 112, "method": [52, 120], "min_siz": 88, "minu": 112, "mix": [42, 172, 222], "miyawaki": [43, 44, 223], "mni": [91, 218, 271, 272, 294, 295, 296, 297, 298, 299], "mode": [21, 61, 64, 88, 89, 494], "model": [3, 43, 45, 65, 67, 68, 69, 71, 72, 73, 77, 78, 79, 81, 82, 103, 104, 113, 169, 171, 172, 173, 179, 180, 183, 481], "modifi": [105, 177], "modul": [66, 71, 74], "monitor": 178, "more": [16, 18, 173], "morphometri": [45, 46, 77, 183, 227], "mosaicslic": [16, 401], "most": [54, 71, 102], "motion": 59, "motor": 109, "movi": [167, 168], "mri": 69, "msdl": [21, 54, 102, 224], "multi": [37, 41, 56, 169, 171], "multimod": 234, "multiniftilabelsmask": [191, 371], "multiniftimapsmask": [191, 372], "multiniftimask": [191, 373], "multipl": [4, 10, 16, 164, 180, 183, 191], "multiscal": [20, 201], "multivari": [108, 195], "mvpa": 174, "name": 189, "nativ": 72, "negat": 92, "nest": 36, "net": 46, "network": [28, 53, 61, 64, 89, 169, 197], "neuroimag": [27, 120, 171, 186, 189, 191], "neurospin": 74, "neurosynth": 121, "neurovault": [107, 112, 121, 225], "new": [127, 128, 129, 130, 135, 137, 138, 139, 140, 147, 148, 149, 150, 153, 154, 155, 156, 157, 159, 160, 162, 187], "new_img_lik": 357, "nifti": [3, 58, 189, 190, 480], "niftilabelsmask": [93, 191, 374], "niftimapsmask": [191, 375], "niftimask": [91, 94, 111, 191, 376], "niftispheresmask": [191, 377], "nightly_depend": 163, "niimg": [2, 189], "nilearn": [0, 4, 13, 14, 15, 16, 17, 22, 169, 170, 178, 185, 186, 188, 192, 193, 194, 195, 218, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 498], "nilearn_data": 189, "nki": 226, "node": 10, "nois": 68, "non": 120, "non_parametric_infer": 341, "norm": 177, "note": [196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "now": [37, 55, 57], "number": [16, 177], "numer": [5, 177], "numpi": 111, "oasi": [45, 46, 77, 227], "object": [16, 21, 31, 33, 36, 65, 104, 169, 178, 189, 191], "obtain": [31, 65, 104], "ol": [68, 106], "olsmodel": 317, "one": [2, 53, 65, 81, 190], "onli": [16, 53, 191], "opaqu": 26, "open": [189, 191], "openneuro": 65, "oper": [190, 490], "optim": 41, "option": 15, "order": 68, "organ": 187, "origin": 88, "orthoprojector": 402, "orthoslic": [16, 403], "other": [0, 22, 26, 173], "our": [4, 44], "out": 3, "outlin": [10, 16], "output": [65, 77, 121, 189], "over": [4, 12, 50], "overlai": [16, 494], "own": [11, 120], "oxford": [11, 216], "page": [164, 165, 168, 169, 179, 182, 183], "pair": 82, "panda": 189, "paradigm": [6, 80, 112], "parallel": 111, "paramet": [10, 36, 64, 66, 68, 69, 70, 88, 101, 103, 164, 171, 173, 191], "parametr": [66, 74, 182], "parcel": [20, 23, 50, 52, 59, 165, 167, 168, 454], "parse_bids_filenam": 365, "part": 26, "partial": [54, 61], "patch_openneuro_dataset": 302, "path": 189, "pattern": [12, 47], "pauli": 228, "pcp": 196, "percentil": 36, "perform": [6, 58, 64, 70, 83, 101, 106, 170, 172, 173, 178], "permut": [101, 106], "permuted_ol": 390, "phenotyp": 189, "philosophi": 191, "pial": 23, "pipelin": [31, 35, 36, 41, 114, 119, 120, 172, 173, 191], "plot": [3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 25, 26, 33, 34, 36, 37, 47, 50, 53, 58, 61, 68, 69, 71, 82, 112, 114, 187, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 488, 494], "plot_anat": [17, 427], "plot_bland_altman": 425, "plot_carpet": 428, "plot_connectom": 429, "plot_contrast_matrix": 430, "plot_design_matrix": 431, "plot_design_matrix_correl": 432, "plot_epi": [17, 433], "plot_ev": 434, "plot_glass_brain": [17, 435], "plot_img": 436, "plot_img_comparison": 426, "plot_img_on_surf": 437, "plot_mark": 438, "plot_matrix": 439, "plot_prob_atla": [21, 440], "plot_roi": [17, 441], "plot_stat_map": [17, 21, 442], "plot_surf": 443, "plot_surf_contour": 444, "plot_surf_roi": 445, "plot_surf_stat_map": [446, 494], "plotlysurfacefigur": 404, "point": [25, 191], "polici": 187, "polydata": 472, "polymesh": 473, "posit": 78, "post": 187, "power": [54, 102, 229], "pr": 178, "pre": 178, "prec_to_parti": 243, "precis": 56, "predefin": 59, "predict": [3, 30, 31, 36, 37, 44, 45, 46, 71, 101, 102, 116, 170, 171, 174, 179], "prepar": [34, 37, 38, 44, 64, 70, 83, 103, 170, 175, 187, 190, 191], "preprocess": [41, 45, 73, 120, 193, 201, 492], "primer": 180, "principl": [175, 177], "prior": 46, "privat": 178, "probabilist": [21, 22, 50, 57, 165, 193], "process": 482, "produc": 58, "project": [15, 28, 70, 178, 187], "projector": 488, "proper": 35, "proport": 78, "protocol": 112, "pull": [178, 187], "put": 170, "pypi": 187, "python": [5, 189], "qualiti": [45, 46, 96], "quantifi": 44, "question": 178, "quick": 104, "quickstart": 495, "r": 71, "radiu": 175, "rang": 73, "raw": 91, "rc": [147, 162], "read": [7, 175, 189], "recept": 43, "recognit": [33, 38, 47, 106], "recommend": 178, "reconstruct": 44, "recursive_neighbor_agglomer": 461, "reduct": 170, "refer": [3, 23, 24, 26, 33, 34, 39, 40, 43, 44, 47, 50, 51, 52, 54, 59, 61, 74, 78, 101, 102, 103, 106, 121, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 177, 184, 186, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 483], "region": [10, 53, 54, 56, 57, 64, 88, 89, 90, 93, 96, 165, 167, 168, 191, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 490], "regionextractor": 456, "regress": 171, "regressionresult": 318, "regressor": 66, "regular": 172, "relabel": 88, "relat": [169, 176], "releas": [187, 495], "remov": [59, 68, 191], "rena": [52, 455], "reorder_img": 358, "report": [35, 61, 64, 65, 73, 178, 464, 465, 466, 479, 480, 491], "repositori": 121, "represent": [52, 167, 189], "request": [178, 187], "resampl": [86, 91, 95, 190, 191, 482], "resample_img": 359, "resample_to_img": 360, "reshap": 107, "residu": [71, 179], "resiz": 191, "resolut": [10, 190, 191], "respons": [36, 39, 67, 68, 69], "rest": [164, 165, 166], "restart": 177, "restrict": [3, 38, 39, 106], "result": [4, 24, 26, 31, 34, 41, 53, 56, 65, 72, 77, 82, 83, 120, 167, 168, 169, 170], "retriev": [3, 6, 11, 18, 20, 24, 31, 55, 57, 59, 61, 68, 101], "return": 16, "review": 178, "right": [15, 17, 103, 171], "robust": 172, "roi": [17, 24, 34, 54, 96, 190], "row": 16, "rprojector": 405, "run": [6, 35, 44, 47, 68, 72, 73, 107, 173, 180], "run_glm": 335, "sagitt": [14, 16], "sampl": [10, 25, 69, 81, 82], "saniti": 104, "save": [4, 7, 16, 58, 65, 77, 494], "save_glm_to_bid": 366, "savefig": 16, "scale": [119, 494], "schaefer": 230, "scheme": 25, "scikit": [0, 37, 41, 101, 114, 120, 173, 191], "scipi": 290, "scope": 178, "score": [3, 6, 31, 36, 37, 38, 43, 175], "screen": 36, "script": 170, "scrub": 59, "search": 177, "searchlight": [38, 39, 175, 308], "second": [76, 78, 79, 80, 81, 82, 83, 104, 113, 116, 183, 479], "second_level": [339, 340, 341, 481], "secondlevelmodel": 339, "see": [210, 211, 212, 213, 214, 215, 218], "seed": [16, 24, 58, 61, 64, 178, 191], "seitzman": 231, "select": [2, 41, 101, 121, 164, 170], "select_from_index": 303, "separ": [12, 88], "seri": [24, 27, 55, 57, 58, 61, 71, 91, 103, 111, 165, 179, 191, 492], "set": [17, 23, 36, 73, 111, 171, 173, 175, 178], "sever": 171, "shape": [189, 190], "share": 111, "short": 114, "show": [40, 103, 447], "side": 17, "signal": [35, 54, 56, 57, 59, 61, 93, 165, 191, 467, 468, 469, 485, 492], "signals_to_img_label": 462, "signals_to_img_map": 463, "signific": [6, 71], "simpl": [4, 34, 47, 65, 73, 80, 83, 94, 170], "simpleregressionresult": 319, "simul": [47, 60, 164, 173], "singl": [6, 16, 58, 72], "size": 190, "slice": [16, 47, 494], "slicer": 488, "smith": [89, 232], "smooth": [4, 68, 97, 190, 191], "smooth_img": 361, "softwar": 182, "some": 83, "sourceri": 163, "space": [46, 72, 164], "spacenet": [42, 46, 176], "spacenetclassifi": 309, "spacenetregressor": 310, "spars": [55, 56, 164, 177], "spatial": [51, 172, 176, 190], "special": 190, "specif": [53, 73, 121, 163, 190], "specifi": 6, "sphere": [61, 175, 480], "spm": [175, 182, 233, 234], "spm_dispersion_deriv": 336, "spm_hrf": 337, "spm_time_deriv": 338, "squar": 71, "stabil": 177, "stabl": [187, 201], "standard": 103, "state": 166, "statist": [6, 10, 17, 65, 73, 83, 90, 96, 100, 112, 116, 121, 180, 182, 183, 193, 222, 225, 494], "step": [4, 186, 191], "stimuli": [40, 43, 44], "stimulu": 69, "stop": [112, 177], "store": 189, "strategi": [37, 59, 170, 191], "strength": 61, "structur": [35, 60, 176, 178], "studi": [3, 54, 101, 107, 112, 172], "style": 178, "subject": [6, 54, 56, 58, 65, 72, 81, 113, 164, 169, 191], "success": 112, "summar": 34, "summari": [61, 135, 162, 164, 165, 168, 169, 179, 182, 183], "support": 3, "surfac": [7, 10, 23, 24, 25, 39, 70, 113, 114, 132, 162, 179, 191, 226, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 493, 494], "surfaceimag": 474, "surfacelabelsmask": [114, 191, 378], "surfacemapsmask": [191, 379], "surfacemask": [191, 380], "surfacemesh": 475, "svc": 101, "svm": [3, 31, 101, 170, 173], "swap_img_hemispher": 362, "sym_matrix_to_vec": 244, "synthet": 177, "t": [83, 90], "t_map": 81, "tabl": [11, 497], "talairach": 235, "tangent": 164, "target": 190, "task": [74, 103, 109, 110], "tcontrastresult": 320, "team": 0, "technic": [25, 197, 278], "templat": [91, 95, 193, 210, 211, 212, 213, 214, 218, 271, 272, 294, 295, 296, 297, 298, 299], "tempor": 191, "term": [107, 197, 278], "test": [6, 71, 81, 82, 83, 96, 101, 178, 187], "test_atlas": 163, "test_with_free_threaded_python": 163, "test_with_tox": 163, "testing_instal": 163, "testing_minimum": 163, "text": 189, "them": 187, "thi": 96, "those": 52, "three": [16, 103], "threshold": [6, 17, 26, 65, 98, 183], "threshold_img": 363, "threshold_stats_img": 342, "through": 2, "tiledslic": [16, 406], "time": [8, 12, 24, 27, 29, 48, 55, 57, 58, 61, 62, 64, 68, 71, 75, 84, 91, 99, 111, 115, 117, 165, 177, 179, 186, 191, 492, 496], "tissu": 12, "togeth": 170, "tool": [16, 17], "toolbox": 182, "top": 10, "total": 164, "tox": 187, "train": [32, 41], "transform": [58, 190, 191], "transpar": 26, "trial": 103, "trigger_hosting_on_pr": 163, "true": [78, 98], "tsv": 74, "tune": 101, "turn": [3, 52], "tutori": [1, 2, 3, 116], "tv": 42, "two": [16, 72, 73, 82, 171], "two_sid": 98, "type": 12, "u": 44, "understand": [41, 68, 91, 189, 191], "univari": [45, 106, 109, 110, 175, 487], "unmask": [120, 191, 389], "unpair": 82, "up": [11, 73, 119, 175, 178], "update_author": 163, "upload": 187, "us": [3, 10, 36, 37, 42, 51, 53, 54, 59, 73, 89, 90, 93, 94, 101, 111, 114, 121, 167, 168, 170, 173, 181, 186, 187, 189, 238, 240, 247, 249, 250, 252, 253, 254, 255, 256, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 321, 323, 326, 328, 329, 333, 339, 340, 341, 342, 344, 345, 346, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 384, 389, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 464, 465, 470, 471, 472, 473, 474, 475, 478, 494], "usag": [119, 191, 227, 285], "user": [189, 497], "util": [482, 486], "v": [31, 32, 33, 38, 106], "valid": [3, 31, 36, 37, 41, 101, 168, 170, 173, 175, 177], "valu": [36, 177], "variabl": 54, "variat": 177, "vbm": [45, 46, 77], "vec_to_sym_matrix": 245, "vector": 3, "version": 495, "via": [31, 41, 163], "view": [10, 16, 23, 24, 72, 77], "view_connectom": 448, "view_img": [17, 449], "view_img_on_surf": [450, 494], "view_mark": 451, "view_surf": [452, 494], "visual": [2, 3, 9, 10, 11, 12, 17, 20, 21, 22, 23, 27, 28, 31, 32, 33, 38, 39, 42, 43, 44, 45, 46, 52, 55, 57, 61, 65, 83, 86, 101, 106, 112, 116, 120, 167, 168, 169, 170, 175, 191, 494], "vmax": 17, "vmin": 17, "vol_to_surf": [25, 478], "volum": [2, 3, 4, 10, 25, 27, 68, 85, 116, 188, 190, 191, 227, 479], "voxel": [6, 45, 46, 58, 77, 96, 175, 183, 190], "ward": 52, "warm": 177, "watch": [167, 168], "we": [34, 37, 44, 178, 180], "web": [10, 23, 55, 57, 61], "weight": [3, 33, 42, 101, 170], "what": [3, 7, 54, 102, 162, 178, 180, 186], "when": [18, 98, 189], "where": 189, "which": [25, 167], "who": 178, "whole": 14, "within": 61, "without": [17, 59, 98, 101, 170, 173], "work": [7, 111], "workflow": 163, "would": 25, "xprojector": 407, "xslicer": [16, 408], "xzprojector": 409, "xzslicer": [16, 410], "yeo": [50, 88, 236], "yml": 163, "your": [103, 120, 178], "yprojector": 411, "yslicer": [16, 412], "yxprojector": 413, "yxslicer": [16, 414], "yzprojector": 415, "yzslicer": [16, 416], "z": [6, 58, 112], "zprojector": 417, "zslicer": [16, 418]}})