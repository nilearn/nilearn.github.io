
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/03_connectivity/plot_multi_subject_connectome.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_03_connectivity_plot_multi_subject_connectome.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_03_connectivity_plot_multi_subject_connectome.py:


Group Sparse inverse covariance for multi-subject connectome
============================================================

This example shows how to estimate a connectome on a group of subjects
using the group sparse inverse covariance estimate.

.. include:: ../../../examples/masker_note.rst

.. GENERATED FROM PYTHON SOURCE LINES 13-47

.. code-block:: Python

    import numpy as np

    from nilearn import plotting

    n_subjects = 4  # subjects to consider for group-sparse covariance (max: 40)


    def plot_matrices(cov, prec, title, labels):
        """Plot covariance and precision matrices, for a given processing."""
        prec = prec.copy()  # avoid side effects

        # Put zeros on the diagonal, for graph clarity.
        size = prec.shape[0]
        prec[list(range(size)), list(range(size))] = 0
        span = max(abs(prec.min()), abs(prec.max()))

        # Display covariance matrix
        plotting.plot_matrix(
            cov,
            vmin=-1,
            vmax=1,
            title=f"{title} / covariance",
            labels=labels,
        )
        # Display precision matrix
        plotting.plot_matrix(
            prec,
            vmin=-span,
            vmax=span,
            title=f"{title} / precision",
            labels=labels,
        )









.. GENERATED FROM PYTHON SOURCE LINES 48-50

Fetching datasets
------------------

.. GENERATED FROM PYTHON SOURCE LINES 50-61

.. code-block:: Python

    from nilearn.datasets import fetch_atlas_msdl, fetch_development_fmri

    msdl_atlas_dataset = fetch_atlas_msdl()
    rest_dataset = fetch_development_fmri(n_subjects=n_subjects)

    # print basic information on the dataset
    print(
        f"First subject functional nifti image (4D) is at: {rest_dataset.func[0]}"
    )






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [fetch_atlas_msdl] Dataset found in /home/runner/nilearn_data/msdl_atlas
    [fetch_development_fmri] Dataset found in 
    /home/runner/nilearn_data/development_fmri
    [fetch_development_fmri] Dataset found in 
    /home/runner/nilearn_data/development_fmri/development_fmri
    [fetch_development_fmri] Dataset found in 
    /home/runner/nilearn_data/development_fmri/development_fmri
    First subject functional nifti image (4D) is at: /home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar123_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 62-64

Extracting region signals
-------------------------

.. GENERATED FROM PYTHON SOURCE LINES 64-95

.. code-block:: Python

    from nilearn.maskers import NiftiMapsMasker

    masker = NiftiMapsMasker(
        msdl_atlas_dataset.maps,
        resampling_target="maps",
        detrend=True,
        high_variance_confounds=True,
        low_pass=None,
        high_pass=0.01,
        t_r=2,
        standardize="zscore_sample",
        standardize_confounds=True,
        memory="nilearn_cache",
        memory_level=1,
        verbose=1,
    )

    subject_time_series = []
    func_filenames = rest_dataset.func
    confound_filenames = rest_dataset.confounds
    for func_filename, confound_filename in zip(
        func_filenames, confound_filenames, strict=False
    ):
        print(f"Processing file {func_filename}")

        region_ts = masker.fit_transform(
            func_filename, confounds=confound_filename
        )
        subject_time_series.append(region_ts)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Processing file /home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar123_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz
    [NiftiMapsMasker.wrapped] Loading regions from 
    '/home/runner/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii'
    [NiftiMapsMasker.wrapped] Finished fit
    ________________________________________________________________________________
    [Memory] Calling nilearn.image.image.high_variance_confounds...
    high_variance_confounds('/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar123_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz')
    __________________________________________high_variance_confounds - 0.5s, 0.0min
    ________________________________________________________________________________
    [Memory] Calling nilearn.maskers.base_masker.filter_and_extract...
    filter_and_extract('/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar123_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz', 
    <nilearn.maskers.nifti_maps_masker._ExtractionFunctor object at 0x7f5bf34c14b0>, { 'allow_overlap': True,
      'clean_args': None,
      'clean_kwargs': {},
      'cmap': 'CMRmap_r',
      'detrend': True,
      'dtype': None,
      'high_pass': 0.01,
      'high_variance_confounds': True,
      'keep_masked_maps': False,
      'low_pass': None,
      'maps_img': '/home/runner/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii',
      'mask_img': None,
      'reports': True,
      'smoothing_fwhm': None,
      'standardize': 'zscore_sample',
      'standardize_confounds': True,
      't_r': 2,
      'target_affine': array([[   4.,    0.,    0.,  -78.],
           [   0.,    4.,    0., -111.],
           [   0.,    0.,    4.,  -51.],
           [   0.,    0.,    0.,    1.]]),
      'target_shape': (40, 48, 35)}, confounds=[ array([[-0.174325, ..., -0.048779],
           ...,
           [-0.044073, ...,  0.155444]]),
      '/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar123_task-pixar_desc-reducedConfounds_regressors.tsv'], sample_mask=None, dtype=None, memory=Memory(location=nilearn_cache/joblib), memory_level=1, verbose=1, sklearn_output_config=None)
    [NiftiMapsMasker.wrapped] Loading data from 
    '/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar123_task-p
    ixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz'
    [NiftiMapsMasker.wrapped] Resampling images
    [NiftiMapsMasker.wrapped] Extracting region signals
    [NiftiMapsMasker.wrapped] Cleaning extracted signals
    /home/runner/work/nilearn/nilearn/examples/03_connectivity/plot_multi_subject_connectome.py:89: DeprecationWarning: From release 0.14.0, confounds will be standardized using the sample std instead of the population std.
      region_ts = masker.fit_transform(
    _______________________________________________filter_and_extract - 5.0s, 0.1min
    Processing file /home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar001_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz
    [NiftiMapsMasker.wrapped] Loading regions from 
    '/home/runner/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii'
    [NiftiMapsMasker.wrapped] Finished fit
    ________________________________________________________________________________
    [Memory] Calling nilearn.image.image.high_variance_confounds...
    high_variance_confounds('/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar001_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz')
    __________________________________________high_variance_confounds - 0.4s, 0.0min
    ________________________________________________________________________________
    [Memory] Calling nilearn.maskers.base_masker.filter_and_extract...
    filter_and_extract('/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar001_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz', 
    <nilearn.maskers.nifti_maps_masker._ExtractionFunctor object at 0x7f5c0efaec80>, { 'allow_overlap': True,
      'clean_args': None,
      'clean_kwargs': {},
      'cmap': 'CMRmap_r',
      'detrend': True,
      'dtype': None,
      'high_pass': 0.01,
      'high_variance_confounds': True,
      'keep_masked_maps': False,
      'low_pass': None,
      'maps_img': '/home/runner/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii',
      'mask_img': None,
      'reports': True,
      'smoothing_fwhm': None,
      'standardize': 'zscore_sample',
      'standardize_confounds': True,
      't_r': 2,
      'target_affine': array([[   4.,    0.,    0.,  -78.],
           [   0.,    4.,    0., -111.],
           [   0.,    0.,    4.,  -51.],
           [   0.,    0.,    0.,    1.]]),
      'target_shape': (40, 48, 35)}, confounds=[ array([[-0.151677, ..., -0.057023],
           ...,
           [-0.206928, ...,  0.102714]]),
      '/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar001_task-pixar_desc-reducedConfounds_regressors.tsv'], sample_mask=None, dtype=None, memory=Memory(location=nilearn_cache/joblib), memory_level=1, verbose=1, sklearn_output_config=None)
    [NiftiMapsMasker.wrapped] Loading data from 
    '/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar001_task-p
    ixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz'
    [NiftiMapsMasker.wrapped] Resampling images
    [NiftiMapsMasker.wrapped] Extracting region signals
    [NiftiMapsMasker.wrapped] Cleaning extracted signals
    /home/runner/work/nilearn/nilearn/examples/03_connectivity/plot_multi_subject_connectome.py:89: DeprecationWarning: From release 0.14.0, confounds will be standardized using the sample std instead of the population std.
      region_ts = masker.fit_transform(
    _______________________________________________filter_and_extract - 5.0s, 0.1min
    Processing file /home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar002_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz
    [NiftiMapsMasker.wrapped] Loading regions from 
    '/home/runner/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii'
    [NiftiMapsMasker.wrapped] Finished fit
    ________________________________________________________________________________
    [Memory] Calling nilearn.image.image.high_variance_confounds...
    high_variance_confounds('/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar002_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz')
    __________________________________________high_variance_confounds - 0.4s, 0.0min
    ________________________________________________________________________________
    [Memory] Calling nilearn.maskers.base_masker.filter_and_extract...
    filter_and_extract('/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar002_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz', 
    <nilearn.maskers.nifti_maps_masker._ExtractionFunctor object at 0x7f5c0efaeda0>, { 'allow_overlap': True,
      'clean_args': None,
      'clean_kwargs': {},
      'cmap': 'CMRmap_r',
      'detrend': True,
      'dtype': None,
      'high_pass': 0.01,
      'high_variance_confounds': True,
      'keep_masked_maps': False,
      'low_pass': None,
      'maps_img': '/home/runner/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii',
      'mask_img': None,
      'reports': True,
      'smoothing_fwhm': None,
      'standardize': 'zscore_sample',
      'standardize_confounds': True,
      't_r': 2,
      'target_affine': array([[   4.,    0.,    0.,  -78.],
           [   0.,    4.,    0., -111.],
           [   0.,    0.,    4.,  -51.],
           [   0.,    0.,    0.,    1.]]),
      'target_shape': (40, 48, 35)}, confounds=[ array([[ 0.127944, ..., -0.087084],
           ...,
           [-0.015679, ..., -0.02587 ]]),
      '/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar002_task-pixar_desc-reducedConfounds_regressors.tsv'], sample_mask=None, dtype=None, memory=Memory(location=nilearn_cache/joblib), memory_level=1, verbose=1, sklearn_output_config=None)
    [NiftiMapsMasker.wrapped] Loading data from 
    '/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar002_task-p
    ixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz'
    [NiftiMapsMasker.wrapped] Resampling images
    [NiftiMapsMasker.wrapped] Extracting region signals
    [NiftiMapsMasker.wrapped] Cleaning extracted signals
    /home/runner/work/nilearn/nilearn/examples/03_connectivity/plot_multi_subject_connectome.py:89: DeprecationWarning: From release 0.14.0, confounds will be standardized using the sample std instead of the population std.
      region_ts = masker.fit_transform(
    _______________________________________________filter_and_extract - 5.0s, 0.1min
    Processing file /home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar003_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz
    [NiftiMapsMasker.wrapped] Loading regions from 
    '/home/runner/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii'
    [NiftiMapsMasker.wrapped] Finished fit
    ________________________________________________________________________________
    [Memory] Calling nilearn.image.image.high_variance_confounds...
    high_variance_confounds('/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar003_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz')
    __________________________________________high_variance_confounds - 0.4s, 0.0min
    ________________________________________________________________________________
    [Memory] Calling nilearn.maskers.base_masker.filter_and_extract...
    filter_and_extract('/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar003_task-pixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz', 
    <nilearn.maskers.nifti_maps_masker._ExtractionFunctor object at 0x7f5c0efadff0>, { 'allow_overlap': True,
      'clean_args': None,
      'clean_kwargs': {},
      'cmap': 'CMRmap_r',
      'detrend': True,
      'dtype': None,
      'high_pass': 0.01,
      'high_variance_confounds': True,
      'keep_masked_maps': False,
      'low_pass': None,
      'maps_img': '/home/runner/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii',
      'mask_img': None,
      'reports': True,
      'smoothing_fwhm': None,
      'standardize': 'zscore_sample',
      'standardize_confounds': True,
      't_r': 2,
      'target_affine': array([[   4.,    0.,    0.,  -78.],
           [   0.,    4.,    0., -111.],
           [   0.,    0.,    4.,  -51.],
           [   0.,    0.,    0.,    1.]]),
      'target_shape': (40, 48, 35)}, confounds=[ array([[-0.089762, ..., -0.062316],
           ...,
           [-0.065223, ..., -0.022868]]),
      '/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar003_task-pixar_desc-reducedConfounds_regressors.tsv'], sample_mask=None, dtype=None, memory=Memory(location=nilearn_cache/joblib), memory_level=1, verbose=1, sklearn_output_config=None)
    [NiftiMapsMasker.wrapped] Loading data from 
    '/home/runner/nilearn_data/development_fmri/development_fmri/sub-pixar003_task-p
    ixar_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz'
    [NiftiMapsMasker.wrapped] Resampling images
    [NiftiMapsMasker.wrapped] Extracting region signals
    [NiftiMapsMasker.wrapped] Cleaning extracted signals
    /home/runner/work/nilearn/nilearn/examples/03_connectivity/plot_multi_subject_connectome.py:89: DeprecationWarning: From release 0.14.0, confounds will be standardized using the sample std instead of the population std.
      region_ts = masker.fit_transform(
    _______________________________________________filter_and_extract - 5.0s, 0.1min




.. GENERATED FROM PYTHON SOURCE LINES 96-98

Computing group-sparse precision matrices
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 98-110

.. code-block:: Python

    from nilearn.connectome import GroupSparseCovarianceCV

    gsc = GroupSparseCovarianceCV(verbose=2)
    gsc.fit(subject_time_series)


    from sklearn.covariance import GraphicalLassoCV

    gl = GraphicalLassoCV(verbose=2)
    gl.fit(np.concatenate(subject_time_series))






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 2
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 7
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    1.6s remaining:    0.0s
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 2
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 2
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 1
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 1
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 2
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 6
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [Parallel(n_jobs=1)]: Done   5 out of   5 | elapsed:    8.3s finished
    [GroupSparseCovarianceCV.fit] [GroupSparseCovarianceCV] Done refinement  0 out 
    of 4
    [Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 3
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 6
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 1
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    1.7s remaining:    0.0s
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 4
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 3
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 3
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 6
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [Parallel(n_jobs=1)]: Done   5 out of   5 | elapsed:   14.0s finished
    [GroupSparseCovarianceCV.fit] [GroupSparseCovarianceCV] Done refinement  1 out 
    of 4
    [Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 5
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 1
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 1
    [Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    2.2s remaining:    0.0s
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 9
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 10
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 5
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [Parallel(n_jobs=1)]: Done   5 out of   5 | elapsed:   16.3s finished
    [GroupSparseCovarianceCV.fit] [GroupSparseCovarianceCV] Done refinement  2 out 
    of 4
    [Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 6
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 1
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 1
    [Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    2.1s remaining:    0.0s
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 11
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 11
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 5
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping
    at iteration 0
    [Parallel(n_jobs=1)]: Done   5 out of   5 | elapsed:   13.1s finished
    [GroupSparseCovarianceCV.fit] [GroupSparseCovarianceCV] Done refinement  3 out 
    of 4
    [GroupSparseCovarianceCV.fit] Final optimization
    [GroupSparseCovarianceCV.fit] * iteration 0 (0 %) ...
    [GroupSparseCovarianceCV.fit] * iteration 1 (1 %) variation (max norm): 
    2.881e+00  ...
    [GroupSparseCovarianceCV.fit] * iteration 2 (2 %) variation (max norm): 
    1.308e+00  ...
    [GroupSparseCovarianceCV.fit] * iteration 3 (3 %) variation (max norm): 
    4.648e-01  ...
    [GroupSparseCovarianceCV.fit] * iteration 4 (4 %) variation (max norm): 
    2.228e-01  ...
    [GroupSparseCovarianceCV.fit] * iteration 5 (5 %) variation (max norm): 
    1.772e-01  ...
    [GroupSparseCovarianceCV.fit] * iteration 6 (6 %) variation (max norm): 
    9.645e-02  ...
    [GroupSparseCovarianceCV.fit] * iteration 7 (7 %) variation (max norm): 
    3.293e-02  ...
    [GroupSparseCovarianceCV.fit] * iteration 8 (8 %) variation (max norm): 
    2.297e-02  ...
    [GroupSparseCovarianceCV.fit] * iteration 9 (9 %) variation (max norm): 
    2.263e-02  ...
    [GroupSparseCovarianceCV.fit] * iteration 10 (10 %) variation (max norm): 
    2.251e-02  ...
    [GroupSparseCovarianceCV.fit] * iteration 11 (11 %) variation (max norm): 
    1.646e-02  ...
    [GroupSparseCovarianceCV.fit] * iteration 12 (12 %) variation (max norm): 
    9.507e-03  ...
    [GroupSparseCovarianceCV.fit] * iteration 13 (13 %) variation (max norm): 
    3.895e-03  ...
    [GroupSparseCovarianceCV.fit] * iteration 14 (14 %) variation (max norm): 
    2.817e-03  ...
    [GroupSparseCovarianceCV.fit] * iteration 15 (15 %) variation (max norm): 
    2.163e-03  ...
    [GroupSparseCovarianceCV.fit] * iteration 16 (16 %) variation (max norm): 
    2.347e-03  ...
    [GroupSparseCovarianceCV.fit] * iteration 17 (17 %) variation (max norm): 
    2.141e-03  ...
    [GroupSparseCovarianceCV.fit] * iteration 18 (18 %) variation (max norm): 
    1.548e-03  ...
    [GroupSparseCovarianceCV.fit] tolerance reached at iteration number 19: 
    8.841e-04
    [Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.
    ....[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.1s remaining:    0.0s
    ................[Parallel(n_jobs=1)]: Done   5 out of   5 | elapsed:    0.4s finished
    [GraphicalLassoCV] Done refinement  1 out of 4:   0s
    [Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.
    ....[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.1s remaining:    0.0s
    ................[Parallel(n_jobs=1)]: Done   5 out of   5 | elapsed:    0.5s finished
    [GraphicalLassoCV] Done refinement  2 out of 4:   0s
    [Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.
    ....[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.2s remaining:    0.0s
    ................[Parallel(n_jobs=1)]: Done   5 out of   5 | elapsed:    0.6s finished
    [GraphicalLassoCV] Done refinement  3 out of 4:   1s
    [Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.
    ....[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.1s remaining:    0.0s
    ................[Parallel(n_jobs=1)]: Done   5 out of   5 | elapsed:    0.6s finished
    [GraphicalLassoCV] Done refinement  4 out of 4:   2s
    [Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.
    [Parallel(n_jobs=1)]: Done   5 out of   5 | elapsed:    0.0s finished
    [graphical_lasso] Iteration   0, cost  1.68e+02, dual gap 1.123e+00
    [graphical_lasso] Iteration   1, cost  1.68e+02, dual gap -1.664e-03
    [graphical_lasso] Iteration   2, cost  1.68e+02, dual gap 1.158e-04
    [graphical_lasso] Iteration   3, cost  1.68e+02, dual gap 1.389e-04
    [graphical_lasso] Iteration   4, cost  1.68e+02, dual gap 1.530e-04
    [graphical_lasso] Iteration   5, cost  1.68e+02, dual gap 1.318e-04
    [graphical_lasso] Iteration   6, cost  1.68e+02, dual gap 6.844e-05


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-container-id-7 {
      /* Definition of color scheme common for light and dark mode */
      --sklearn-color-text: black;
      --sklearn-color-line: gray;
      /* Definition of color scheme for unfitted estimators */
      --sklearn-color-unfitted-level-0: #fff5e6;
      --sklearn-color-unfitted-level-1: #f6e4d2;
      --sklearn-color-unfitted-level-2: #ffe0b3;
      --sklearn-color-unfitted-level-3: chocolate;
      /* Definition of color scheme for fitted estimators */
      --sklearn-color-fitted-level-0: #f0f8ff;
      --sklearn-color-fitted-level-1: #d4ebff;
      --sklearn-color-fitted-level-2: #b3dbfd;
      --sklearn-color-fitted-level-3: cornflowerblue;

      /* Specific color for light theme */
      --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
      --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));
      --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
      --sklearn-color-icon: #696969;

      @media (prefers-color-scheme: dark) {
        /* Redefinition of color scheme for dark theme */
        --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
        --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));
        --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
        --sklearn-color-icon: #878787;
      }
    }

    #sk-container-id-7 {
      color: var(--sklearn-color-text);
    }

    #sk-container-id-7 pre {
      padding: 0;
    }

    #sk-container-id-7 input.sk-hidden--visually {
      border: 0;
      clip: rect(1px 1px 1px 1px);
      clip: rect(1px, 1px, 1px, 1px);
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px;
    }

    #sk-container-id-7 div.sk-dashed-wrapped {
      border: 1px dashed var(--sklearn-color-line);
      margin: 0 0.4em 0.5em 0.4em;
      box-sizing: border-box;
      padding-bottom: 0.4em;
      background-color: var(--sklearn-color-background);
    }

    #sk-container-id-7 div.sk-container {
      /* jupyter's `normalize.less` sets `[hidden] { display: none; }`
         but bootstrap.min.css set `[hidden] { display: none !important; }`
         so we also need the `!important` here to be able to override the
         default hidden behavior on the sphinx rendered scikit-learn.org.
         See: https://github.com/scikit-learn/scikit-learn/issues/21755 */
      display: inline-block !important;
      position: relative;
    }

    #sk-container-id-7 div.sk-text-repr-fallback {
      display: none;
    }

    div.sk-parallel-item,
    div.sk-serial,
    div.sk-item {
      /* draw centered vertical line to link estimators */
      background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));
      background-size: 2px 100%;
      background-repeat: no-repeat;
      background-position: center center;
    }

    /* Parallel-specific style estimator block */

    #sk-container-id-7 div.sk-parallel-item::after {
      content: "";
      width: 100%;
      border-bottom: 2px solid var(--sklearn-color-text-on-default-background);
      flex-grow: 1;
    }

    #sk-container-id-7 div.sk-parallel {
      display: flex;
      align-items: stretch;
      justify-content: center;
      background-color: var(--sklearn-color-background);
      position: relative;
    }

    #sk-container-id-7 div.sk-parallel-item {
      display: flex;
      flex-direction: column;
    }

    #sk-container-id-7 div.sk-parallel-item:first-child::after {
      align-self: flex-end;
      width: 50%;
    }

    #sk-container-id-7 div.sk-parallel-item:last-child::after {
      align-self: flex-start;
      width: 50%;
    }

    #sk-container-id-7 div.sk-parallel-item:only-child::after {
      width: 0;
    }

    /* Serial-specific style estimator block */

    #sk-container-id-7 div.sk-serial {
      display: flex;
      flex-direction: column;
      align-items: center;
      background-color: var(--sklearn-color-background);
      padding-right: 1em;
      padding-left: 1em;
    }


    /* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is
    clickable and can be expanded/collapsed.
    - Pipeline and ColumnTransformer use this feature and define the default style
    - Estimators will overwrite some part of the style using the `sk-estimator` class
    */

    /* Pipeline and ColumnTransformer style (default) */

    #sk-container-id-7 div.sk-toggleable {
      /* Default theme specific background. It is overwritten whether we have a
      specific estimator or a Pipeline/ColumnTransformer */
      background-color: var(--sklearn-color-background);
    }

    /* Toggleable label */
    #sk-container-id-7 label.sk-toggleable__label {
      cursor: pointer;
      display: block;
      width: 100%;
      margin-bottom: 0;
      padding: 0.5em;
      box-sizing: border-box;
      text-align: center;
    }

    #sk-container-id-7 label.sk-toggleable__label-arrow:before {
      /* Arrow on the left of the label */
      content: "▸";
      float: left;
      margin-right: 0.25em;
      color: var(--sklearn-color-icon);
    }

    #sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {
      color: var(--sklearn-color-text);
    }

    /* Toggleable content - dropdown */

    #sk-container-id-7 div.sk-toggleable__content {
      max-height: 0;
      max-width: 0;
      overflow: hidden;
      text-align: left;
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-0);
    }

    #sk-container-id-7 div.sk-toggleable__content.fitted {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-0);
    }

    #sk-container-id-7 div.sk-toggleable__content pre {
      margin: 0.2em;
      border-radius: 0.25em;
      color: var(--sklearn-color-text);
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-0);
    }

    #sk-container-id-7 div.sk-toggleable__content.fitted pre {
      /* unfitted */
      background-color: var(--sklearn-color-fitted-level-0);
    }

    #sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {
      /* Expand drop-down */
      max-height: 200px;
      max-width: 100%;
      overflow: auto;
    }

    #sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {
      content: "▾";
    }

    /* Pipeline/ColumnTransformer-specific style */

    #sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {
      color: var(--sklearn-color-text);
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    #sk-container-id-7 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
      background-color: var(--sklearn-color-fitted-level-2);
    }

    /* Estimator-specific style */

    /* Colorize estimator box */
    #sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    #sk-container-id-7 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-2);
    }

    #sk-container-id-7 div.sk-label label.sk-toggleable__label,
    #sk-container-id-7 div.sk-label label {
      /* The background is the default theme color */
      color: var(--sklearn-color-text-on-default-background);
    }

    /* On hover, darken the color of the background */
    #sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {
      color: var(--sklearn-color-text);
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    /* Label box, darken color on hover, fitted */
    #sk-container-id-7 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {
      color: var(--sklearn-color-text);
      background-color: var(--sklearn-color-fitted-level-2);
    }

    /* Estimator label */

    #sk-container-id-7 div.sk-label label {
      font-family: monospace;
      font-weight: bold;
      display: inline-block;
      line-height: 1.2em;
    }

    #sk-container-id-7 div.sk-label-container {
      text-align: center;
    }

    /* Estimator-specific */
    #sk-container-id-7 div.sk-estimator {
      font-family: monospace;
      border: 1px dotted var(--sklearn-color-border-box);
      border-radius: 0.25em;
      box-sizing: border-box;
      margin-bottom: 0.5em;
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-0);
    }

    #sk-container-id-7 div.sk-estimator.fitted {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-0);
    }

    /* on hover */
    #sk-container-id-7 div.sk-estimator:hover {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    #sk-container-id-7 div.sk-estimator.fitted:hover {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-2);
    }

    /* Specification for estimator info (e.g. "i" and "?") */

    /* Common style for "i" and "?" */

    .sk-estimator-doc-link,
    a:link.sk-estimator-doc-link,
    a:visited.sk-estimator-doc-link {
      float: right;
      font-size: smaller;
      line-height: 1em;
      font-family: monospace;
      background-color: var(--sklearn-color-background);
      border-radius: 1em;
      height: 1em;
      width: 1em;
      text-decoration: none !important;
      margin-left: 1ex;
      /* unfitted */
      border: var(--sklearn-color-unfitted-level-1) 1pt solid;
      color: var(--sklearn-color-unfitted-level-1);
    }

    .sk-estimator-doc-link.fitted,
    a:link.sk-estimator-doc-link.fitted,
    a:visited.sk-estimator-doc-link.fitted {
      /* fitted */
      border: var(--sklearn-color-fitted-level-1) 1pt solid;
      color: var(--sklearn-color-fitted-level-1);
    }

    /* On hover */
    div.sk-estimator:hover .sk-estimator-doc-link:hover,
    .sk-estimator-doc-link:hover,
    div.sk-label-container:hover .sk-estimator-doc-link:hover,
    .sk-estimator-doc-link:hover {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-3);
      color: var(--sklearn-color-background);
      text-decoration: none;
    }

    div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,
    .sk-estimator-doc-link.fitted:hover,
    div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,
    .sk-estimator-doc-link.fitted:hover {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-3);
      color: var(--sklearn-color-background);
      text-decoration: none;
    }

    /* Span, style for the box shown on hovering the info icon */
    .sk-estimator-doc-link span {
      display: none;
      z-index: 9999;
      position: relative;
      font-weight: normal;
      right: .2ex;
      padding: .5ex;
      margin: .5ex;
      width: min-content;
      min-width: 20ex;
      max-width: 50ex;
      color: var(--sklearn-color-text);
      box-shadow: 2pt 2pt 4pt #999;
      /* unfitted */
      background: var(--sklearn-color-unfitted-level-0);
      border: .5pt solid var(--sklearn-color-unfitted-level-3);
    }

    .sk-estimator-doc-link.fitted span {
      /* fitted */
      background: var(--sklearn-color-fitted-level-0);
      border: var(--sklearn-color-fitted-level-3);
    }

    .sk-estimator-doc-link:hover span {
      display: block;
    }

    /* "?"-specific style due to the `<a>` HTML tag */

    #sk-container-id-7 a.estimator_doc_link {
      float: right;
      font-size: 1rem;
      line-height: 1em;
      font-family: monospace;
      background-color: var(--sklearn-color-background);
      border-radius: 1rem;
      height: 1rem;
      width: 1rem;
      text-decoration: none;
      /* unfitted */
      color: var(--sklearn-color-unfitted-level-1);
      border: var(--sklearn-color-unfitted-level-1) 1pt solid;
    }

    #sk-container-id-7 a.estimator_doc_link.fitted {
      /* fitted */
      border: var(--sklearn-color-fitted-level-1) 1pt solid;
      color: var(--sklearn-color-fitted-level-1);
    }

    /* On hover */
    #sk-container-id-7 a.estimator_doc_link:hover {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-3);
      color: var(--sklearn-color-background);
      text-decoration: none;
    }

    #sk-container-id-7 a.estimator_doc_link.fitted:hover {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-3);
    }
    </style><div id="sk-container-id-7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GraphicalLassoCV(verbose=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item"><div class="sk-estimator fitted sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-7" type="checkbox" checked><label for="sk-estimator-id-7" class="sk-toggleable__label fitted sk-toggleable__label-arrow fitted">&nbsp;&nbsp;GraphicalLassoCV<a class="sk-estimator-doc-link fitted" rel="noreferrer" target="_blank" href="https://scikit-learn.org/1.4/modules/generated/sklearn.covariance.GraphicalLassoCV.html">?<span>Documentation for GraphicalLassoCV</span></a><span class="sk-estimator-doc-link fitted">i<span>Fitted</span></span></label><div class="sk-toggleable__content fitted"><pre>GraphicalLassoCV(verbose=2)</pre></div> </div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 111-113

Displaying results
------------------

.. GENERATED FROM PYTHON SOURCE LINES 113-148

.. code-block:: Python

    atlas_img = msdl_atlas_dataset.maps
    atlas_region_coords = plotting.find_probabilistic_atlas_cut_coords(atlas_img)
    labels = msdl_atlas_dataset.labels

    plotting.plot_connectome(
        gl.covariance_,
        atlas_region_coords,
        edge_threshold="90%",
        title="Covariance",
        display_mode="lzr",
    )
    plotting.plot_connectome(
        -gl.precision_,
        atlas_region_coords,
        edge_threshold="90%",
        title="Sparse inverse covariance (GraphicalLasso)",
        display_mode="lzr",
        edge_vmax=0.5,
        edge_vmin=-0.5,
    )
    plot_matrices(gl.covariance_, gl.precision_, "GraphicalLasso", labels)

    title = "GroupSparseCovariance"
    plotting.plot_connectome(
        -gsc.precisions_[..., 0],
        atlas_region_coords,
        edge_threshold="90%",
        title=title,
        display_mode="lzr",
        edge_vmax=0.5,
        edge_vmin=-0.5,
    )
    plot_matrices(gsc.covariances_[..., 0], gsc.precisions_[..., 0], title, labels)

    plotting.show()



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_001.png
         :alt: plot multi subject connectome
         :srcset: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_002.png
         :alt: plot multi subject connectome
         :srcset: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_003.png
         :alt: GraphicalLasso / covariance
         :srcset: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_004.png
         :alt: GraphicalLasso / precision
         :srcset: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_005.png
         :alt: plot multi subject connectome
         :srcset: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_006.png
         :alt: GroupSparseCovariance / covariance
         :srcset: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_006.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_007.png
         :alt: GroupSparseCovariance / precision
         :srcset: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_007.png
         :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 28.533 seconds)

**Estimated memory usage:**  1183 MB


.. _sphx_glr_download_auto_examples_03_connectivity_plot_multi_subject_connectome.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/03_connectivity/plot_multi_subject_connectome.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_multi_subject_connectome.ipynb <plot_multi_subject_connectome.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_multi_subject_connectome.py <plot_multi_subject_connectome.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_multi_subject_connectome.zip <plot_multi_subject_connectome.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
